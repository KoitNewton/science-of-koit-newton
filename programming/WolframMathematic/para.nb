(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1900794,      36137]
NotebookOptionsPosition[   1848044,      35250]
NotebookOutlinePosition[   1848433,      35267]
CellTagsIndexPosition[   1848390,      35264]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData["\"\<Hello World\>\""], "Input",
 CellChangeTimes->{{3.860057625331617*^9, 3.8600576526924195`*^9}, {
  3.860057956073646*^9, 3.8600579567936344`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"752a49b9-e8d5-4391-a21c-25f8e025aa7e"],

Cell[BoxData["\<\"Hello World\"\>"], "Output",
 CellChangeTimes->{3.860057957548003*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"74fd93e0-5393-4ff2-89d7-e3c8ce5e65a6"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8600576565848503`*^9, 3.8600576578434362`*^9}, {
  3.860057754849388*^9, 
  3.8600577562903585`*^9}},ExpressionUUID->"56db7a6d-b462-4a3f-ae0f-\
e57fa187f64b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"11", "*", "17"}], ")"}], "+", 
  RowBox[{"(", 
   RowBox[{"4", "/", "2"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.860058296159403*^9, 3.860058324057719*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a282ba32-09e5-4fde-8063-44a45e79b34c"],

Cell[BoxData["189"], "Output",
 CellChangeTimes->{3.860058324966247*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"d62f63e8-7023-4bf9-b09a-3684bd59b7f5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"189", ",", "2"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[3]:=",ExpressionUUID->"1b058403-9a0d-491b-81dc-453555e79d2e"],

Cell[CellGroupData[{

Cell[BoxData[{
 TagBox[
  InterpretationBox[
   SubscriptBox["\"\<10111101\>\"", "\"\<2\>\""],
   189,
   Editable->False],
  BaseForm[#, 2]& ], "\[IndentingNewLine]", 
 RowBox[{"2", "+", 
  SqrtBox["2"]}]}], "Input",
 CellChangeTimes->{{3.860061782146659*^9, 3.8600617876307945`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"a70ebc52-ac14-4c43-b874-dd9077d7838e"],

Cell[BoxData["189"], "Output",
 CellChangeTimes->{3.8600617884902267`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"39160335-061c-4b2f-aa74-ba0c07ab5d95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"2", "+", 
  SqrtBox["2"]}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"0.5", "+", 
   SqrtBox["2"]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8600618144662304`*^9, 3.8600618609639683`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e48adcf4-407b-494d-aa51-3d3271461fb8"],

Cell[BoxData[
 RowBox[{"2", "+", 
  SqrtBox["2"]}]], "Output",
 CellChangeTimes->{{3.86006184694849*^9, 3.860061862042165*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"40474aa1-3491-405c-aad9-bbeba38d3d1e"],

Cell[BoxData["1.9142135623730951`"], "Output",
 CellChangeTimes->{{3.86006184694849*^9, 3.8600618620577908`*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"5c7287a8-cdc0-45e3-9fe4-4d6b94b9f0ef"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8600612295718727`*^9, 
  3.860061248297573*^9}},ExpressionUUID->"b625bb98-70c8-408e-b83c-\
378f88925efc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   SqrtBox["6"], ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.86006189742544*^9, 3.8600619280246134`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"9584e3cc-7442-423f-bf60-0baae13b294f"],

Cell[BoxData["2.\
449489742783178098197284074705891391965947480656670128432692567250960377457315\
0265398594331046402348185946012266142`100."], "Output",
 CellChangeTimes->{{3.860061912348302*^9, 3.8600619308529243`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"8025145e-4a7b-4dcf-b160-5e2b9fb77415"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"3", "*", "4"}], ";", 
  RowBox[{"100", "*", "100"}], ";", 
  RowBox[{"Sqrt", "[", "4", "]"}], ";", 
  RowBox[{"Power", "[", 
   RowBox[{"2", ",", "2"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.860062187115733*^9, 3.8600622103052945`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"8c573f5e-190f-4cb3-8e88-8a56ae433858"],

Cell[CellGroupData[{

Cell[BoxData["4"], "Input",
 NumberMarks->False,
 CellLabel->"In[15]:=",ExpressionUUID->"f31f5f83-b451-4353-b2d6-932e8e87dd92"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.860062217304632*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"1060609b-a15b-4910-ace2-cae182c0be2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "Power", "]"}]], "Input",
 CellChangeTimes->{{3.860067120227327*^9, 3.860067132232751*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"f5535a2e-ebda-4f30-8d27-24e6d3f1a1be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Listable", ",", "NumericFunction", ",", "OneIdentity", ",", "Protected"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.860067133026332*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"ce456d44-52e3-4ee7-952f-16b0ed0d4296"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"l", "=", "1"}], ",", 
     RowBox[{"k", "=", "2"}], ",", 
     RowBox[{"h", "=", "3"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"h", 
     SqrtBox[
      RowBox[{"k", "+", "l"}]]}], "+", "k", "+", "l"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8600671716624045`*^9, 3.860067221914005*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"bff56526-bb42-4231-acb8-f7055c9013bb"],

Cell[BoxData[{
 RowBox[{"3", "+", 
  RowBox[{"3", " ", 
   SqrtBox["3"]}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "x", ",", "y"}], "]"}]}], "Input",
 CellChangeTimes->{{3.860067378842804*^9, 3.860067380537584*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"9b1021da-5556-49a1-afcb-6a70ad462235"],

Cell[BoxData[
 RowBox[{
  RowBox[{"3", "+", 
   RowBox[{"3", " ", 
    SqrtBox["3"]}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.860067399841037*^9, 
  3.8600674115119925`*^9}},ExpressionUUID->"fb177f80-bf5a-4614-93d9-\
f568732f810b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.8600675789750443`*^9, 3.8600675850737658`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"6811dc72-c22f-495c-9674-d254d7c198e8"],

Cell[BoxData["Symbol"], "Output",
 CellChangeTimes->{3.860067585716859*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"b99b27ad-31d5-47da-858a-4ba87b070d41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"Head", "[", "a", "]"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[22]:=",ExpressionUUID->"38a26267-0cf8-49d8-9830-f2f516ba6790"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Symbol",
              ButtonNote->"paclet:ref/Symbol"],
             "\"paclet:ref/Symbol\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"name\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) refers \
to a symbol with the specified name. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Symbol", 
                    "paclet:ref/Symbol", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Symbol.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Symbol.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Locked", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Symbol\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{21., {6., 15.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{21., {6., 15.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Symbol",
              ButtonNote->"paclet:ref/Symbol"],
             "\"paclet:ref/Symbol\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Symbol\\\", \\\"[\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"name\\\\\\\",\\\\\\\"TI\\\
\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) refers \
to a symbol with the specified name. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{16., {3., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{16., {3., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Symbol\", \"[\", \
StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"name\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True], \"]\"}]\) refers to a symbol with the specified \
name. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Symbol", "Web" -> 
      "http://reference.wolfram.com/language/ref/Symbol.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Locked, Protected}, "FullName" -> 
    "System`Symbol"], True]]], "Output",
 CellChangeTimes->{3.8600676339598255`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"130e7c16-def9-45cf-9a19-65318586e8b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", "]"}]], "Input",
 CellChangeTimes->{{3.86006765689147*^9, 3.8600676686524916`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"54322028-9bf0-46d3-8a20-0ff7bd5a2baf"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.860067670647545*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"60267099-1acf-415e-9fce-dd3562ec1a49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.860067679157238*^9, 3.8600676840968237`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"33cdb961-fa03-43ec-a5e9-dcb35b45551e"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.860067685410735*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"95040c33-a28d-4865-aea7-09768d54777e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", "1000", "]"}]], "Input",
 CellChangeTimes->{{3.860067689161658*^9, 3.860067699014343*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"5b020a08-eaf0-46be-be9e-68e166769562"],

Cell[BoxData["45"], "Output",
 CellChangeTimes->{3.8600677006408124`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"8c7edddb-4a7f-43d5-8751-404c81188fce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", 
   RowBox[{"90", " ", "Degree"}], "]"}], " ", "+", " ", 
  RowBox[{"Cos", "[", 
   RowBox[{"0", " ", "Degree"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.860067737551057*^9, 3.8600677790318556`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"1f82e860-51df-4feb-a353-dea698893b53"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8600677817785006`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"a2a444e9-0c1f-4e15-88fc-c806ccfee377"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Power", "[", 
  RowBox[{"2", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8600677856013837`*^9, 3.8600677899429903`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"5065ad4b-ecb8-4183-9e94-19948f6cd450"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.8600677915617857`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"830a1766-52aa-45ba-9035-636c94e007fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d", "=", 
  RowBox[{"Power", "[", 
   RowBox[{"2", ",", "19"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.860067799358959*^9, 3.8600678099740295`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"14caaa5e-2e84-4bcb-a35d-1d5382a19ed6"],

Cell[BoxData["524288"], "Output",
 CellChangeTimes->{3.860067814294656*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"d45fa7c6-648d-4448-be87-2a1f5a1fc51a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"F", "=", 
  RowBox[{
   RowBox[{"Sin", "[", "Pi", "]"}], "+", " ", 
   RowBox[{"Cos", "[", "Pi", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8600678191412287`*^9, 3.8600678416604967`*^9}, {
  3.8600678982472825`*^9, 3.8600679226671777`*^9}, {3.8600679937037463`*^9, 
  3.860068002849904*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"66fc9ffc-b9a5-4ad8-8ea6-70d3cc066687"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.860068008996971*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"2b5f9472-7188-4bc1-afc0-d4cabc23dcab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"d", ",", "f"}], "]"}]], "Input",
 CellChangeTimes->{{3.860068022690971*^9, 3.860068030312685*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"191a189d-bf4c-42ea-a992-3f2e7e9ce099"],

Cell[BoxData[
 RowBox[{"Options", "[", "RandomWord", "]"}]], "Input",
 CellChangeTimes->{{3.8600680817547684`*^9, 3.860068090432779*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"83f9ba57-5520-49a3-abb8-e148fe47baf7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"IncludeInflections", "->", "False"}], ",", 
   RowBox[{"Language", "\[RuleDelayed]", "$Language"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.860421477406433*^9, 
  3.860421477427412*^9}},ExpressionUUID->"9e373dfa-b2c4-4e11-99c3-\
283eca391e70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$MachinePrecision", "\n", " ", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.860144434956504*^9, 3.8601444378473225`*^9}, {
   3.8601444756007414`*^9, 3.8601444890872307`*^9}, {3.8601445871277747`*^9, 
   3.8601446108901033`*^9}, 3.860145173704892*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"72029d45-3f29-40f7-a945-f7c9242e1779"],

Cell[BoxData["15.954589770191003`"], "Output",
 CellChangeTimes->{
  3.8601444386598787`*^9, {3.8601444780368705`*^9, 3.860144491259137*^9}, 
   3.8601446117180743`*^9, {3.8601451757206717`*^9, 3.8601452051840606`*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"6a3b6370-9449-46d7-aa00-9315a7ce6bbf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Information", "[", "$MachinePrecision", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[10]:=",ExpressionUUID->"ba164cf7-833d-49d3-a53c-f2d5365b99ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "MachinePrecision", "]"}]], "Input",
 CellChangeTimes->{{3.860145215651049*^9, 3.8601452320122027`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"addadf9f-404b-413e-ba52-45f26f4853b0"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/MachinePrecision",
              ButtonNote->"paclet:ref/MachinePrecision"],
             "\"paclet:ref/MachinePrecision\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"MachinePrecision is a symbol used to indicate \
machine\[Hyphen]number precision. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/MachinePrecision", 
                    "paclet:ref/MachinePrecision", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
MachinePrecision.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
MachinePrecision.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Constant", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`MachinePrecision\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {3., 12.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {3., 12.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/MachinePrecision",
              ButtonNote->"paclet:ref/MachinePrecision"],
             "\"paclet:ref/MachinePrecision\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"MachinePrecision is a symbol used to indicate \
machine\[Hyphen]number precision. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "MachinePrecision is a symbol used to indicate machine\[Hyphen]number \
precision. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/MachinePrecision", "Web" -> 
      "http://reference.wolfram.com/language/ref/MachinePrecision.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Constant, Protected}, "FullName" -> 
    "System`MachinePrecision"], True]]], "Output",
 CellChangeTimes->{3.8601452337448215`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"b085d098-2b99-4b9b-a85a-b63121d1986f"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8601452946436777`*^9, 
  3.860145299417967*^9}},ExpressionUUID->"f9e9c9bd-0fd8-4d6b-a259-\
59f4cf33cfd2"],

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{"15.954589770191003`", ",", "16"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[8]:=",ExpressionUUID->"fd0d4016-709d-4541-a5d1-b60609b135d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"DateObject", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.860146929593396*^9, 3.860146946809349*^9}, {
  3.860147616135443*^9, 3.860147626381794*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"ba1e883e-a22f-402d-8ff7-dc7c81202293"],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Thu 28 Apr 2022 23:13:47\"", 
     StyleBox[
      RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
        StyleBox["8.`", NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "4", ",", "28", ",", "23", ",", "13", ",", 
           "47.5064675`9.429327599187962"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", "8.`"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.860146930898289*^9, 3.86014695082158*^9}, {
  3.8601476204274073`*^9, 3.8601476275271597`*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"831d2d98-0a19-4218-874b-3cd64a975058"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Tomorrow"], "Input",
 CellChangeTimes->{{3.8601476407260303`*^9, 3.8601476490516148`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"ac83d929-2448-4e18-a786-56e0a03bdf9e"],

Cell[BoxData[
 TemplateBox[{RowBox[{
     StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
     "\"Fri 29 Apr 2022\""}],RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "4", ",", "29"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", "8.`"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8601476498185525`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"27e5a6e2-d118-4bd5-bec5-7dea7c4e3fbe"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DateObject", "[", 
  RowBox[{"{", 
   RowBox[{"2022", ",", "5", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8601476587957926`*^9, 3.860147675330001*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"8a959609-1da5-454b-88fa-544b35750c53"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  TemplateBox[{RowBox[{
      StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain],
       "\"Sun 1 May 2022\""}],RowBox[{"DateObject", "[", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{"2022", ",", "5", ",", "1"}], "}"}], ",", "\"Day\"", ",", 
        "\"Gregorian\"", ",", "8.`"}], "]"}]},
   "DateObject",
   Editable->False], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"DateObject", "[", 
  RowBox[{"Today", ",", 
   RowBox[{"CalendarType", " ", "->", "\"\<Julian\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.860147702790004*^9, 3.8601477043694572`*^9}, {
  3.860147740060789*^9, 3.8601477609549923`*^9}, {3.860148615945464*^9, 
  3.860148620568655*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"5398e5ce-5433-424c-a1b0-6bf77876ba32"],

Cell[BoxData[
 TemplateBox[{RowBox[{
     StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
     "\"Sun 1 May 2022\""}],RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "5", ",", "1"}], "}"}], ",", "\"Day\"", ",", 
       "\"Gregorian\"", ",", "8.`"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{
  3.8601477054160385`*^9, {3.860147757153324*^9, 3.860147767119273*^9}, 
   3.860148627264068*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"62f35b1d-c936-4cac-890d-c257564ef15d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 TemplateBox[{RowBox[{
     StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
     "\"Thu 15 Apr 2022\"", 
     StyleBox[
      RowBox[{
       "\[ThinSpace]", "(", "\[InvisibleSpace]", "\"Julian\"", "\"calendar\"",
         "\[InvisibleSpace]", ")"}], FontColor -> GrayLevel[0.5]]}],
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "4", ",", "15"}], "}"}], ",", "\"Day\"", ",", 
       "\"Julian\"", ",", "8.`"}], "]"}]},
  "DateObject",
  Editable->False], "\[IndentingNewLine]", 
 RowBox[{"RandomReal", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"WorkingPrecision", " ", "->", "MachinePrecision"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8601486583958097`*^9, 3.8601486689799004`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"93d02f34-1de4-44d5-b88d-6e9af8a21c75"],

Cell[BoxData[
 TemplateBox[{RowBox[{
     StyleBox["\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
     "\"Thu 15 Apr 2022\"", 
     StyleBox[
      RowBox[{
       "\[ThinSpace]", "(", "\[InvisibleSpace]", "\"Julian\"", "\"calendar\"",
         "\[InvisibleSpace]", ")"}], FontColor -> GrayLevel[0.5]]}],
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{"2022", ",", "4", ",", "15"}], "}"}], ",", "\"Day\"", ",", 
       "\"Julian\"", ",", "8.`"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8601486732145395`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"f7afef8e-c965-4e71-9677-7a78e241f4c0"],

Cell[BoxData["0.9034571969065586`"], "Output",
 CellChangeTimes->{3.8601486732215405`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"1bae644e-864e-4915-a465-41498f3bd059"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{"0.9034571969065586`", ",", "16"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[35]:=",ExpressionUUID->"a2c06701-03a0-4b5c-9849-a18dc6b79550"],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"0.903457196906559\"\>",
   0.9034571969065586,
   AutoDelete->True],
  NumberForm[#, 16]& ]], "Output",
 CellChangeTimes->{3.8601486773079967`*^9},
 CellLabel->
  "Out[35]//NumberForm=",ExpressionUUID->"548d5d17-dfcd-4283-9266-\
f5081950df6d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"TimeZoneConvert", "[", 
  RowBox[{"TimeObject", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"17", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"TimeZone", "->", "\"\<America/New_York\>\""}]}], "]"}], "]"}]], \
"Input",
 CellChangeTimes->{{3.860147720533551*^9, 3.8601477284857845`*^9}, {
   3.8601488117493086`*^9, 3.8601488171133585`*^9}, 3.8601489767527514`*^9, {
   3.860149072784189*^9, 3.8601491275750065`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"657f5f79-3771-4b29-8e0c-8164e7f3fbfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Text", "Input",
 CellChangeTimes->{{3.860149275428618*^9, 3.8601493564421415`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"5dbcd8a4-1e01-47c8-a9b4-d19f4328bc79"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
TkMNo/+2q3G4xOTDxY/mN9HQvJA3bSZMEu/uFVmyR2lo8MH/nuoGkkg0rFjs
M0Hp0xVcq7iFJCLFq6s5UzTcrvMtYA5J4lbg350fBegowu3Q9DQiCaPwSU0z
STrqVd7Nc7EiCTDn78ll0PGFbPDwh/MksVZR5IWqLB3/GgZe6rQjCdnn0rKD
SnTcYOwOM/+RRGvC6jn/FdT++I2f5fxIovbCpuwhTTpeXhbelvCAJMpW6F0+
tpaOwlLFm1iPSCI1fW+XmjYdH/W/PFn+hCTcsqy/5++ko+ym1UfEUkjC1t3e
V8OQjsoSrKet6SRhucVl28N9dJQMqx6PfUsS2wjPLIvDdFxf/Lm7OYckFpU+
jR4/TceEu99stpWRBL/vi2OW56jnNT9UOFNBEiOGyYxiGzqePrS+yraSJBoq
s3yCHemoUmevu7mGJL4GftbnOdMxIKyKM1VHEp9NiqdO/kdHoX+ZEYkNJBFX
V+246jodo+7sb8htJomw8IZlIbfo+F/O0QtL/pGEn3lL2+Qd6r6b/Ppd2kjC
sZlzpMyPjjcWFBT/6CIJq+cjNK0HdHQNjlnc1EMSh62mKkKD6PiyxPzojz6S
0OkUwTPhdFwtUxR+mSSJVYkSk+VP6CjdVP1YZZAk2BdlMldH03FjvJtHzhBJ
0FcqOYTF0tHc68HuLSMkIcRV1ZiNp+MinOXFjZLERPry1rNJdLQ+VPBwfIwk
ei+teVqRQsdcbofIugmS+LNus9naDDqem/A6e4RHEj9G9SQj3tLxwMKvMWcn
SaIwa8eXufd0fO45QZhPkcR7dyMv6xw66p8++ll7mvLXlkN63z7R8biT4VP+
GZJ4MnNsYl0+HatX6B17Q/ED4tSbyCI6JpW/Hdk7S/nN87wdfxkdLbV1HSop
vrzNQc2mgo5bl7gXa8+RhLWQa0tlJR3jOIqTARTLs8p/TVXR8XcTvi+luHKz
0neNWjrmeSzdxaH4tsmlEtN6Otaz3qbMUrzRrvjT7UY6Sn1v7pyiuPeu3Lv0
Zjo27Ukebac4Kto+pekfHUWFlzRkU2ySnf9CtIOOHVrng65SLPxT+snGbspf
yU+Y6hTn9F8IPtNHR8eFY7cIql4H4c++gVw6CiZlfdhGsQqb7vlpkI5lnpol
b6n71mlbu/WO0NHD5F2SBMV+h3IcZSfo6OD/9swRSi89+0Xnt09ReTF5NuJH
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

       "]]},
     Annotation[#, "Charting`Private`Tag$20778#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-0.9999993680039507, 0.9999995755730018}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.860149292638135*^9, 3.860149313368045*^9}, {
  3.8601493447633934`*^9, 3.86014935892113*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"187f8113-f2d4-4183-bc85-76f4392daa9d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.860149331688738*^9},
 NumberMarks->False,ExpressionUUID->"3c5467e4-63f1-4b27-a508-e0bf48aa8162"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8601494388256955`*^9, 
  3.8601494388336973`*^9}},ExpressionUUID->"2cad8878-7722-4dd3-b181-\
5b0a862c74cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Tan", "[", "x", "]"}], ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8601491210631332`*^9, 3.8601491386931653`*^9}, 
   3.860149450138115*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"6f93b94e-181e-41db-b002-104ed48ddbcd"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
hah5E/IP+85hdQ==
        "]], LineBox[CompressedData["
1:eJwVlWk8lPsbxmcMnbHOPI81JFtCWbK0cOp3oxTSItlCkUSKtlOojk4LkV2k
slVa7FGyJM+jJJWKLIeOsg/GkqxjZpi//4vrc3+uN9f9fXPfl5p3kMMRIQqF
wl7S/+d3mp+XWzgXNU4PXf01qUV2VCZfzr7JRVszZ0dv39YiwzucNdekchGR
GVQw07KKNOYsry/O5qLC8sYElsoqsluuM2BjMRcJ++y8a35Wk4wxzWAQr7nI
8WLcI3azBmnmeOj5to9cREuPFNA3a5CDp9WdG9q4SDKF3VVXqE5aPHuc0fGL
izQqNtY55KiR41/8LA/xuShBUEYdNlQj743pslh0Htpodd0+t1qVnNEt0ptW
4yGZkQ3TVa0ryQc2p5pC9XlInln6lxi2ktztZ/wX1ZyHLCUCTgTvVyFzHpVV
STny0EfVmOGtc8qkU23IoeRDPFRZ4cWM2adM0vrMhZVP8JBZ7n6xupdKpIcq
aacTzkOmlpi+U7wiid2r/25VzkMX1srt+HpdgayuiPr7Yy0PFVhtszJhKJAB
7TvV9zbx0EGTg8zeNHnynWyTvyebh/org4sMa+XI0yZJkgOzPCRbFlh/1EOO
XLlvf3EAjY/O9jgnSXNlyZD4Dk6wMh/x3YxbFDfLklpF99IE2nzUeahFVatP
hmz+7AHhpnzkqiZwFYmWIfXEeyOSdvFRLEXnUcWANNlznS1XeJmPprUVRF+X
4mRsdn6lSQwfhSo13lMMwknzt4Ger+7w0S6a7/tAXZxMpkw9qi/ho0GN72pP
H2OkzQWeSV8/H5WNGL12fs4kZ++8bvf/zUdte0YmXUOZ5MPysIsTC3wktX6Z
wXtLJrkwQ6tdkFtABVs2FbsWMcjikxL7FGwWUFBQ/YMMVSmy4a50SIHTAro+
Mv68vlKSZNUqZlr6LKCzr6pDTzhLkorLdUaOhy0gp/9uRn28LUFeq9l2taZ0
Afk13woONxInM0Z25ji9XUADQYH6636KkeWyjl9HGhdQ6du+kLKbYuSYv7eS
3OgCyo10jJUfFSWd8LDnx9QX0b+lDP94kk6e/DO8Q2CwiFrP/ZC/FEIno3xj
BLc2LyJhkW70rzGdJCrv2REuiyjlTfPuJ/l/kNqHy/uk4xaRwUTLupSCZST3
+W/p17xFlMWJe8zqFyZlfnI2OYgKkEnzXz6bnwmT+nTKoUE5AaLbYYdDLgqT
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
4t9selTW0v7HYzLh3HXwP7O75gg=
        "]], LineBox[CompressedData["
1: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
RgP+BwLdxJA=
        "]], LineBox[CompressedData["
1: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
AYjK47Q=
        "]]},
      Annotation[#, "Charting`Private`Tag$22723#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxFxXss1AEcAPDToXZOc5QId7+TuZxH/NGWlke0Ja8lLttZjzvcKa+Y24RK
Im5GV908d7sd0cyctNOmxyVEXte4Usu1zLkZsdF1cSjVH77fPz77MPnZ51J3
kUikmH/+L7vJtw5IqQzeeUBLRCcSV0J23h5U3yGI67Cst4phRYjhjCBR5hqj
HtZupklXGG3w7ulZ1jKjB1aMyHO+M4ZhZad4OsPvCywMmahfytXDWQYvvUq5
AFOYpaxvx1bgartRtuKyEeZPJ7wmj/2Cc96W8rNZG3DXNWq805nfsKIwfdE/
kRS6c4l8K+7nkgVM0s6Eviwgw555gvwEthU8Z6o9b/PKGo40XL3xIGcPHDsn
8abTKfBiP7/4XYcN7Eebcgu/ZAtTQkw8nXEvfHqZu+bOsYM/96VYcH1ocHfF
wEXChAusRDMajT2cnFvYTW1wgI8IvTXRvH3we3sfG1HgfviFsqTRh+wIF1qw
z459xSm6gogs1QHY0MqUyoucYOlhZ8sejjMsaRAM8YiDMFd6QUOdx9dPtZjl
ahdYbwjL7yt3hZuCAlzGeW5wR5mIJvSlw+Wc5CiyCT+qU7SVjzPgOq/GjvEo
Ar7VW1UX1YPHuHBaRjyY8MmsoSSaGJe78j3GTLhH/+Oa2CR3WOLbx55U4wKj
5cQw+xDM7/pBiO/hGSXxW5H3cVG86hP1IV5hElVLanBloHmzVoab32xPtbbj
kklq1cAQ3tCcmXZ3GG/O04RHjOLPHCUboxpcx3VI037EWXrn8Fk97q8qoD8y
4MfLps2p83g0S/ZkYRHPTSfoq6t40Ynb5qdGvMx29kOeCa/rbK5cX8ebii2F
zzfw9rjUsKItXOU+6Bb8B1cbPc3b2/hfxrMqyQ==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$22723#2"]& ], {}}, {{}, {}, {}, {}, {}}, {{}, \
{}, {}, {}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-11.474483606516884`, 17.978608425159923`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8601495295390177`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"9fa8c0f9-dac4-4652-82f3-48c68d0a77e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Exp", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotStyle", " ", "->", 
     RowBox[{"{", "Blue", "}"}]}], ",", 
    RowBox[{
    "PlotLabel", " ", "->", "\"\<\!\(\*SuperscriptBox[\(e\), \(x\)]\)\>\""}], 
    ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x-axis\>\"", ",", "\"\<y-axis\>\""}], "}"}]}]}], "]"}]}]], \
"Input",
 CellChangeTimes->{{3.8601494972591453`*^9, 3.8601495799341536`*^9}, {
  3.860149634593226*^9, 3.860149740910452*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"aad602e0-7859-46ff-921b-696a8d3d12f0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
Lhcb8T9Vd9Vw
       "]]},
     Annotation[#, "Charting`Private`Tag$27801#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x-axis\"", TraditionalForm], 
    FormBox["\"y-axis\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"\\!\\(\\*SuperscriptBox[\\(e\\), \\(x\\)]\\)\"", TraditionalForm],
  PlotRange->{{0, 10}, {0., 9472.784642037905}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8601496725659356`*^9, 3.8601497138096747`*^9, 
  3.860149744339016*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"aec69e4f-b34f-4b0f-886a-c2107af3342b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8601495931827316`*^9, 
  3.860149594262781*^9}},ExpressionUUID->"3e82c79f-a9d3-46a8-99f1-\
045c6deb3238"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", "3"}], "\[GreaterEqual]", 
  RowBox[{"1", "/", "2"}]}]], "Input",
 CellChangeTimes->{{3.860149987840677*^9, 3.8601500059045486`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"a8b54b3f-aa2f-4fdc-bed4-a571d5049566"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.860150029566775*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"a9a44db4-8873-406f-abb8-e9beff5a2b85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"\[Pi]", "\[NotEqual]", 
   RowBox[{"-", "1"}]}]}]], "Input",
 CellChangeTimes->{{3.860150021774883*^9, 3.8601500456314573`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"de1c35f3-c464-4316-a754-14acc0f377bf"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8601500477965565`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"6774364e-bac4-41ff-a1f5-fe7b7e58f17f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Not]", " ", 
  RowBox[{"2", "\[Equal]", "1"}]}]], "Input",
 CellChangeTimes->{{3.8601495574380207`*^9, 3.8601495574380207`*^9}, {
  3.8601502352077255`*^9, 3.860150282978235*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"ea057ef9-c68d-40c1-8b25-8db6e170e85f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8601502841345625`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"e8db7868-5e17-4fbe-beed-0148e7b995b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "^", "2"}], ")"}], "+", 
     RowBox[{"y", "^", "2"}]}], ")"}], "*", 
   RowBox[{"(", 
    RowBox[{"x", "+", "y"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8601497197236853`*^9, 3.860149719739311*^9}, 
   3.860150556311297*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"4977de80-d5e9-4f21-ab81-45133f12d395"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "3"], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", "y"}], "+", 
  RowBox[{"x", " ", 
   SuperscriptBox["y", "2"]}], "+", 
  SuperscriptBox["y", "3"]}]], "Output",
 CellChangeTimes->{3.8601505588270903`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"10759147-db85-4cd2-bb5c-d510f87e1178"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8601494415297127`*^9, 
  3.860149441537715*^9}},ExpressionUUID->"022475fe-e21c-474e-b6de-\
0472c2e4b7b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"x", "^", "3"}], "+", 
   RowBox[{
    RowBox[{"x", "^", "2"}], " ", "y"}], "+", 
   RowBox[{"x", " ", 
    RowBox[{"y", "^", "2"}]}], "+", 
   RowBox[{"y", "^", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8601505953554034`*^9, 3.8601505953554034`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"5756b0df-2ae0-414b-8ddf-f4d7c0751829"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "3"], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", "y"}], "+", 
  RowBox[{"x", " ", 
   SuperscriptBox["y", "2"]}], "+", 
  SuperscriptBox["y", "3"]}]], "Output",
 CellChangeTimes->{3.8601506293926353`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"5bc8034e-0cde-4368-b4cf-8f84db41e262"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"x", "^", "3"}], "+", 
   RowBox[{
    RowBox[{"x", "^", "2"}], " ", "y"}], "+", 
   RowBox[{"x", " ", 
    RowBox[{"y", "^", "2"}]}], "+", 
   RowBox[{"y", "^", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8601506216431055`*^9, 3.860150633603298*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"d1b8313c-7948-472e-bfb1-d2e66040ae99"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"x", "+", "y"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8601506358921127`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"5b4d1090-e256-4100-92cf-bf570d62b3ce"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Together", "[", 
  RowBox[{
   FractionBox["1", "z"], "+", 
   FractionBox["1", 
    RowBox[{"z", "+", "1"}]], "-", 
   FractionBox["1", 
    RowBox[{"z", "+", "2"}]]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8601490336924667`*^9, {3.8601507374782324`*^9, 3.8601507789169683`*^9}},
 NumberMarks->False,
 CellLabel->"In[69]:=",ExpressionUUID->"dc3938c5-0849-426b-9d7b-2611713d9d54"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", "+", 
    RowBox[{"4", " ", "z"}], "+", 
    SuperscriptBox["z", "2"]}], 
   RowBox[{"z", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "z"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "z"}], ")"}]}]], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.860150827169935*^9, 
  3.860150827169935*^9}},ExpressionUUID->"9550b0af-bfbf-4c93-8e98-\
5644953ec566"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apart", "[", 
  FractionBox[
   RowBox[{"2", "+", 
    RowBox[{"4", " ", "z"}], "+", 
    SuperscriptBox["z", "2"]}], 
   RowBox[{"z", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "z"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "z"}], ")"}]}]], "]"}]], "Input",
 CellChangeTimes->{{3.860150855754318*^9, 3.8601508658610764`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"e62bf9c9-1ae4-4509-946a-3cdc4ac64156"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "z"], "+", 
  FractionBox["1", 
   RowBox[{"1", "+", "z"}]], "-", 
  FractionBox["1", 
   RowBox[{"2", "+", "z"}]]}]], "Output",
 CellChangeTimes->{3.8601508677049494`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"1a092261-1ee8-4c17-892b-a89ca994629d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"z", "^", "2"}], "+", "1"}], "\[Equal]", "2"}], ",", "z"}], "]"}]
  ], "Input",
 CellChangeTimes->{{3.8601494450487137`*^9, 3.8601494450577173`*^9}, 
   3.860150881548297*^9},
 CellLabel->"In[71]:=",ExpressionUUID->"25d41bbc-6cf9-44a4-867c-16ef8f4c7dc1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"z", "->", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", "->", "1"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8604214774334135`*^9, 
  3.8604214774434156`*^9}},ExpressionUUID->"cbe00c50-88a9-48fa-b9f3-\
1e18790c4156"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"z", "^", "2"}], "+", "1"}], "/.", 
  RowBox[{"Rule", "[", 
   RowBox[{"z", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8601510761447783`*^9, 3.8601510761447783`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"e524635e-be2c-44b6-9df4-611058ce2afe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8601510788107333`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"828b7879-dbe1-4bc9-9006-43ac488ede2c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Information", "[", "Rule", "]"}]], "Input",
 CellChangeTimes->{{3.8601510939289246`*^9, 3.8601511027420673`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"cecb42d9-1ee8-427d-b121-ddb2acc3c565"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "2"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"6", "x"}], "-", 
       RowBox[{"4", "y"}], "+", 
       RowBox[{"5", "z"}]}], "\[Equal]", "3"}], ",", 
     RowBox[{
      RowBox[{"x", "+", 
       RowBox[{"2", "y"}], "+", 
       RowBox[{"2", "z"}]}], "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.86015129188791*^9, 3.86015129188791*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"a1c6a5dc-7957-402d-8ead-290e0d028589"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "->", "3"}], ",", 
    RowBox[{"y", "->", 
     FractionBox["10", "9"]}], ",", 
    RowBox[{"z", "->", 
     RowBox[{"-", 
      FractionBox["19", "9"]}]}]}], "}"}], "}"}]], "Input",
 CellChangeTimes->{{3.8604214774484167`*^9, 
  3.860421477460419*^9}},ExpressionUUID->"219f35d3-eaee-465c-816f-\
be2fb4515042"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EQ1", "=", 
   RowBox[{
    RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "2"}]}], ";", 
  RowBox[{"EQ2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"6", " ", "x"}], "-", 
     RowBox[{"4", " ", "y"}], "+", 
     RowBox[{"5", " ", "z"}]}], "\[Equal]", "3"}]}], ";", 
  RowBox[{"EQ3", "=", 
   RowBox[{
    RowBox[{"x", "+", 
     RowBox[{"2", " ", "y"}], "+", 
     RowBox[{"2", " ", "z"}]}], "\[Equal]", "1"}]}], ";"}], "\n", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"EQ1", ",", "EQ2", ",", "EQ3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.860151336649991*^9, 3.860151336649991*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"a6679450-2064-4961-9ecb-2c9a98d5234d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "->", "3"}], ",", 
    RowBox[{"y", "->", 
     FractionBox["10", "9"]}], ",", 
    RowBox[{"z", "->", 
     RowBox[{"-", 
      FractionBox["19", "9"]}]}]}], "}"}], "}"}]], "Input",
 CellChangeTimes->{{3.8604214774664207`*^9, 
  3.8604214774774227`*^9}},ExpressionUUID->"2675709c-9e60-4a83-b987-\
6b01d8a0f8a8"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "a"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"6", "x"}], "-", 
       RowBox[{"4", "y"}], "+", 
       RowBox[{"5", "z"}]}], "\[Equal]", "b"}], ",", 
     RowBox[{
      RowBox[{"x", "+", 
       RowBox[{"2", "y"}], "+", 
       RowBox[{"2", "z"}]}], "\[Equal]", "c"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860151396966297*^9, 3.860151396966297*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"26e66b04-ff91-494a-8ccd-40dd9e8a7654"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "->", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", "c"}]}], ",", 
    RowBox[{"y", "->", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"7", " ", "a"}], "-", "b", "-", "c"}], ")"}]}]}], ",", 
    RowBox[{"z", "->", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "16"}], " ", "a"}], "+", "b", "+", 
        RowBox[{"10", " ", "c"}]}], ")"}]}]}]}], "}"}], "}"}]], "Input",
 CellChangeTimes->{{3.8604214774836526`*^9, 
  3.8604214774942293`*^9}},ExpressionUUID->"7a722afb-3718-4342-84df-\
45e33b272462"],

Cell[BoxData[
 TemplateBox[{
  "DateObject","form",
   "\"Argument \\!\\(\\*RowBox[{\\\"TimeObject\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"6\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}], \\\",\\\", \\\"\\\\\\\"Instant\\\\\\\"\
\\\", \\\",\\\", \\\"8.`\\\"}], \\\"]\\\"}]\\) in DateObject cannot be \
interpreted as a date string format\"",2,39,16,34033971016695928775,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.8601477205569334`*^9, 3.860148794412678*^9, 
  3.860148824712617*^9, 3.8601490043939176`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[39]:=",ExpressionUUID->"667072ba-bdc0-4af7-ab19-\
05e82a6f0d46"],

Cell[BoxData[
 TemplateBox[{
  "TimeZoneConvert","notz",
   "\"Argument \\!\\(\\*RowBox[{\\\"\\\\\\\"America/Los Angeles\\\\\\\"\\\"}]\
\\) in TimeZoneConvert is not a valid TimeZone specification.\"",2,36,15,
   34033971016695928775,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.8601477205569334`*^9, 3.860148794412678*^9, 
  3.860148824712617*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[36]:=",ExpressionUUID->"09dc8869-008b-45b9-a92a-\
814becccefa2"],

Cell[BoxData[
 TemplateBox[{
  "DateObject","notgran",
   "\"\\!\\(\\*RowBox[{\\\"CalendarType\\\", \\\"\[RightArrow]\\\", \
\\\"\\\\\\\"Julian\\\\\\\"\\\"}]\\) is not a valid granularity specification \
for calendar \\!\\(\\*RowBox[{\\\"Automatic\\\"}]\\).\"",2,24,11,
   34033971016695928775,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.8601477205569334`*^9, 3.860148794412678*^9, 
  3.860151406559521*^9},ExpressionUUID->"4aae6db7-5d8f-48e9-af2e-\
51e6a2d938af"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"EQ1", "&&", "EQ2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8601491435206194`*^9, 3.8601491435206194`*^9}, 
   3.860151472941371*^9},
 CellLabel->"In[80]:=",ExpressionUUID->"8e261140-19de-40d1-99db-049ac5d03306"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "->", 
     RowBox[{
      FractionBox["1", "10"], " ", 
      RowBox[{"(", 
       RowBox[{"11", "-", 
        RowBox[{"9", " ", "z"}]}], ")"}]}]}], ",", 
    RowBox[{"y", "->", 
     FractionBox[
      RowBox[{"9", "-", "z"}], "10"]}]}], "}"}], "}"}]], "Input",
 CellChangeTimes->{{3.8604214774999084`*^9, 
  3.8604214775101695`*^9}},ExpressionUUID->"7cb6f09a-5048-4981-b4ff-\
d6182385dd27"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", 
      RowBox[{"y", "^", "2"}]}], "\[Equal]", "0"}], "||", 
    RowBox[{
     RowBox[{"x", "-", 
      RowBox[{"2", "y"}]}], "\[Equal]", "1"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8601515821759405`*^9, 3.8601515821759405`*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"ee2e731e-162a-4eea-b477-d926adc4ccbe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "->", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "y"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "->", 
     RowBox[{"\[ImaginaryI]", " ", "y"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "->", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "y"}]}]}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.860421477515372*^9, 
  3.8604214775257187`*^9}},ExpressionUUID->"1790ee16-6724-4bac-9b52-\
667dc7b543ae"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"z", "^", 
       RowBox[{"-", "2"}]}], "+", "1"}], "\[Equal]", "2"}], "&&", 
    RowBox[{"z", "\[NotEqual]", "1"}]}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.8601516665161*^9, 3.8601516665161*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"951dd206-7904-4cab-abf7-161d2677f37f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"z", "->", 
    RowBox[{"-", "1"}]}], "}"}], "}"}]], "Input",
 CellChangeTimes->{{3.860421477530616*^9, 
  3.8604214775374975`*^9}},ExpressionUUID->"5a731fe7-87d8-4a51-ae97-\
73b4d7644c18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", 
    RowBox[{"-", "1"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.860151689381015*^9, 3.860151689381015*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"17386bfe-00aa-457c-943f-5c17dc19d7eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[{"1"},
    "C"], "\[Element]", 
   TemplateBox[{},
    "Integers"]}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "+", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       TemplateBox[{"1"},
        "C"]}]}]}], "||", 
    RowBox[{"x", "\[Equal]", 
     RowBox[{"\[Pi]", "+", 
      RowBox[{"2", " ", "\[Pi]", " ", 
       TemplateBox[{"1"},
        "C"]}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.860151689880934*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"2c72a4b6-763b-4040-aa25-10769d5ddb07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Alpha]", "+", 
     RowBox[{"\[Beta]", "*", 
      RowBox[{"\[Alpha]", "^", "2"}]}]}], "==", "E"}], ",", "\[Alpha]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8601518202365446`*^9, 3.8601518355616655`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"e6fbf733-836d-4f03-b012-8cbd3c813890"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Beta]", "\[Equal]", "0"}], "&&", 
    RowBox[{"\[Alpha]", "\[Equal]", "\[ExponentialE]"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Beta]", "\[NotEqual]", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Equal]", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"4", " ", "\[ExponentialE]", " ", "\[Beta]"}]}]]}], 
        RowBox[{"2", " ", "\[Beta]"}]]}], "||", 
      RowBox[{"\[Alpha]", "\[Equal]", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"4", " ", "\[ExponentialE]", " ", "\[Beta]"}]}]]}], 
        RowBox[{"2", " ", "\[Beta]"}]]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.860151838866937*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"40cfd0ed-2ecf-4b49-b0ba-9893511cb3df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  NamespaceBox["LinguisticAssistant",
   DynamicModuleBox[{Typeset`query$$ = 
    "Slove y^2 + x^2 \[Equal] 1 && y + 2x \[Equal] 0, for {x,y}", 
    Typeset`boxes$$ = "None", Typeset`allassumptions$$ = {}, 
    Typeset`assumptions$$ = {}, Typeset`open$$ = {1}, Typeset`querystate$$ = {
    "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
     3.0966018`7.94243035539736, "$TimedOut" -> 9.9205028`8.448078677518271, 
     "Messages" -> {}}}, 
    DynamicBox[ToBoxes[
      AlphaIntegration`LinguisticAssistantBoxes["", 4, Automatic, 
       Dynamic[Typeset`query$$], 
       Dynamic[Typeset`boxes$$], 
       Dynamic[Typeset`allassumptions$$], 
       Dynamic[Typeset`assumptions$$], 
       Dynamic[Typeset`open$$], 
       Dynamic[Typeset`querystate$$]], StandardForm],
     ImageSizeCache->{424., {11., 23.}},
     TrackedSymbols:>{
      Typeset`query$$, Typeset`boxes$$, Typeset`allassumptions$$, 
       Typeset`assumptions$$, Typeset`open$$, Typeset`querystate$$}],
    DynamicModuleValues:>{},
    UndoTrackedVariables:>{Typeset`open$$}],
   BaseStyle->{"Deploy"},
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True], "   ", 
  RowBox[{"(*", 
   RowBox[{
   "\:5047\:88c5\:81ea\:5df1\:7f51\:4e0d\:597d\:624d\:4e0d\:51fa\:7ed3\:679c\
\:7684", "\:ff0c", "\:61c2\:7684\:90fd\:61c2"}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.8601521562385364`*^9, {3.8601522613033304`*^9, 
   3.8601523108066597`*^9}},ExpressionUUID->"193e6703-f1a9-4a70-b4e9-\
beb9f3e22458"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"\:7f51\:7edc\:64cd\:4f5c\:8d85\:65f6. \
\:8bf7\:7a0d\:540e\:518d\:8bd5.\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"TimedOut\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Query: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Slove y^2 + x^2 \[Equal] 1 && y + 2x \[Equal] 0, for \
{x,y}\"", "SummaryItem"]}}, GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"\:7f51\:7edc\:64cd\:4f5c\:8d85\:65f6. \
\:8bf7\:7a0d\:540e\:518d\:8bd5.\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"TimedOut\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Query: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Slove y^2 + x^2 \[Equal] 1 && y + 2x \[Equal] 0, for \
{x,y}\"", "SummaryItem"]}}, GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure["TimedOut", 
   Association[
   "MessageTemplate" -> 
    "\:7f51\:7edc\:64cd\:4f5c\:8d85\:65f6. \:8bf7\:7a0d\:540e\:518d\:8bd5.", 
    "MessageParameters" -> Association[], "Query" -> 
    "Slove y^2 + x^2 \[Equal] 1 && y + 2x \[Equal] 0, for {x,y}"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.860152204663123*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"26827e00-0392-487c-9599-b6b4cfe8536b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "W", "]"}], ";", 
   RowBox[{"W", ":=", 
    RowBox[{"RandomReal", "[", "]"}]}], ";", "W"}]}]], "Input",
 CellChangeTimes->{
  3.860152204788132*^9, {3.8601523480853853`*^9, 3.860152365376116*^9}, 
   3.8601529174435663`*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"c2035459-fb39-40bc-b5ef-8eb46dd2f47a"],

Cell[BoxData["0.8299211349887881`"], "Output",
 CellChangeTimes->{3.8601529180684214`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"68f23170-4a84-4b2e-8449-ea63e1ad3905"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"W", "\[Equal]", "W"}]], "Input",
 CellChangeTimes->{{3.860152370309007*^9, 3.860152370324633*^9}, 
   3.8601529250414405`*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"de9bc9f9-0707-478e-822b-ce049219d379"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8601529255728407`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"187bbad6-8d81-4bf4-8a86-102e67b98b4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "W", "]"}], ";", 
  RowBox[{"W", "=", 
   RowBox[{"RandomReal", "[", "]"}]}], ";", "W"}]], "Input",
 CellChangeTimes->{3.860152942936495*^9},
 CellLabel->"In[90]:=",ExpressionUUID->"e009b156-1f26-4894-88e9-e2113dce7e97"],

Cell[BoxData["0.9523284029307946`"], "Output",
 CellChangeTimes->{3.860152944580234*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"3d5a9659-b81d-4576-b3c7-f82aba514e1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"W", "\[Equal]", "W"}]], "Input",
 CellChangeTimes->{{3.8601529478015184`*^9, 3.860152949370327*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"ac3f7ebf-104c-471e-9b46-5453ec7dfd95"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.860152950182767*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"bfd2682a-8ecf-4a92-a51e-40e5ffd4ec14"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "  ", 
  RowBox[{"\:8fd9\:91cc\:5e94\:8be5\:6709", ":=", " ", 
   RowBox[{
   "\:548c", " ", "=", " ", "\:662f\:4e0d\:4e00\:6837\:7684\:7ed3\:679c"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.860152961558717*^9, 
  3.8601529904814987`*^9}},ExpressionUUID->"0eec145b-23f7-4317-bf39-\
0107a594cf94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"Power", "[", 
    RowBox[{"10", ",", "100000000"}], "]"}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.860153008854298*^9, 3.860153008854298*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"0e254f16-5429-4453-8e2d-012a639a4c36"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.765625`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.8601530107918577`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"a8e88e41-b3ae-4cb4-9468-ab01468de500"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"10", "^", "100000000"}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.8601530658374386`*^9, 3.8601530658374386`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"97e9df96-b4d0-42c5-95bf-c755173d5fdd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8125`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.8601530676811996`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"8e833c51-e94a-4b07-babc-6ce63a76d40a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"10", "^", "100000000"}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.860153200238547*^9, 3.860153200238547*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"6d93541e-0507-4a07-8cb1-0951cda56997"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8699412`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.860153201910536*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"55ddf4cc-8e2c-4ba2-9fd9-8c7c094c1493"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeConstrained", "[", 
  RowBox[{
   RowBox[{"10", "^", "100000000"}], ",", "0.1"}], "]"}]], "Input",
 CellChangeTimes->{{3.860153240080227*^9, 
  3.860153259966019*^9}},ExpressionUUID->"ccbc3f70-90a7-4f41-ad77-\
2d709b6f67b6"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.860153260084018*^9, 3.860153260334035*^9}},
 CellLabel->"Out[96]=",ExpressionUUID->"3953cc95-dd3e-4817-922c-d98151569b36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<Hello World\>\"", " ", 
  RowBox[{"(*", 
   RowBox[{"This", " ", "is", " ", "a", " ", "comment"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.860153304559558*^9, 3.860153304559558*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"2c2c5ea0-3535-4c40-95dc-8d898cc29ca0"],

Cell[BoxData["\<\"Hello World\"\>"], "Output",
 CellChangeTimes->{3.8601533059971547`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"c801ecf4-6439-4f96-ac40-46cb62b2fc8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToString", "[", "23.423563", "]"}]], "Input",
 CellChangeTimes->{{3.8601533400039434`*^9, 3.8601533400039434`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"477e74fd-24e2-4741-b59b-7c634bba5f8d"],

Cell[BoxData["\<\"23.4236\"\>"], "Output",
 CellChangeTimes->{3.860153340566367*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"b55ac80c-ca76-486c-8ea6-4010e4f44aaa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Head", 
  RowBox[{"(*", 
   RowBox[{
   "We", " ", "use", " ", "Head", " ", "to", " ", "knwo", " ", "what", " ", 
    "type", " ", "of", " ", "objetc", " ", "is"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8601533472066545`*^9, 3.8601533472066545`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"e06caa5f-8d0d-4f1e-bdbf-ec306eb464be"],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{3.860153348362869*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"75c8e632-1b56-4af5-8ebd-2f9cce72c3d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\"\<Welcome to Mathematica\>\""], "Input",
 CellChangeTimes->{{3.860153365878935*^9, 3.860153365878935*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"0560ed31-7e50-41ca-bff1-e2f871fef41f"],

Cell[BoxData["\<\"Welcome to Mathematica\"\>"], "Output",
 CellChangeTimes->{3.8601533669883842`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"c979038e-69e6-4c1a-839a-a3721dd4692b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AtomQ", "[", 
  "\"\<The sky is blue and tomorrow is expected to rain\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8601533887004776`*^9, 3.8601533887004776`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"94971fef-e649-4abd-bcaa-fa3787814f34"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8601533903413153`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"bb11f1ff-151a-4cf5-8a63-bb3e9e9d5118"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AtomQ", "[", "\"\<Li is g\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8601533937633185`*^9, 3.8601534141129446`*^9}, {
  3.8601534722388678`*^9, 3.8601534818383493`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"e2de2e67-ba85-4604-859c-bfb169d62042"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.860153417133355*^9, {3.860153477373993*^9, 3.860153484117502*^9}},
 CellLabel->
  "Out[106]=",ExpressionUUID->"4560da00-0c6c-4b2f-a753-4913354db88d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AtomQ", "[", "\"\<I am cool\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8601534250641193`*^9, 3.8601534462447166`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"269aab5c-5064-44c0-b7e2-fe95b402365f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8601534482292156`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"7b706de2-7fb3-4fb8-be5e-c40e0d337f6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Characters", "[", "\"\<Hello World\>\"", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "that", " ", "breaks", " ", "the", " ", "string", " ", 
    "into", " ", "its", " ", "characters"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.860153466384817*^9, 3.860153466384817*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"d82b1877-d898-4095-baed-03c5e231233d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"H\"\>", ",", "\<\"e\"\>", ",", "\<\"l\"\>", ",", "\<\"l\"\>", 
   ",", "\<\"o\"\>", ",", "\<\" \"\>", ",", "\<\"W\"\>", ",", "\<\"o\"\>", 
   ",", "\<\"r\"\>", ",", "\<\"l\"\>", ",", "\<\"d\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8601534677440724`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"1a07ab37-5ea3-4867-a2ec-efbe18187443"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"StringReplace", "[", 
  RowBox[{"\"\<Hello this is a string \>\"", ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<h\>\"", ",", "\"\<H\>\""}], "}"}], "->", 
    "\"\<YourHero\>\""}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "repalce", " ", "the", " ", "string", " ", 
     "each", " ", "time", " ", "it", " ", "appears", " ", "for", " ", "rule", 
     " ", "of", " ", "the", " ", "pattern"}], ",", 
    RowBox[{"that", " ", "is", " ", "4"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8601535086489058`*^9, 3.860153521560588*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"0d397122-ff54-450b-b264-959104e7effa"],

Cell[BoxData["\<\"YourHeroello tYourHerois is a string \"\>"], "Output",
 CellChangeTimes->{3.8601535250841675`*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"4521bfeb-b9d0-4cf1-a0e6-a6f25a62c32c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "[", 
  RowBox[{
  "\"\<Nice\>\"", ",", "\"\<to\>\"", ",", "\"\<have\>\"", ",", "\"\<you\>\"", 
   ",", "\"\<back\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.860153555795066*^9, 3.860153555795066*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"2b9b843d-b291-437a-94a6-04ee77814768"],

Cell[BoxData["\<\"Nicetohaveyouback\"\>"], "Output",
 CellChangeTimes->{3.8601535568263855`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"08c8de41-27d7-4600-bac9-bd2eebe0ed71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<Nice\>\"", "<>", "\"\<to\>\"", "<>", "\"\<have\>\"", "<>", 
  "\"\<you\>\"", "<>", "\"\<back\>\""}]], "Input",
 CellChangeTimes->{{3.8601535636636252`*^9, 3.8601535636636252`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"2a4e3bb0-de52-4a01-85aa-0ca39e1a5010"],

Cell[BoxData["\<\"Nicetohaveyouback\"\>"], "Output",
 CellChangeTimes->{3.8601535647574463`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"02b6421d-3875-45cc-8136-398b3f50b8d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardForm", "[", 
  RowBox[{
   RowBox[{"1", "/", "x"}], "+", 
   RowBox[{"x", "^", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8601536049048195`*^9, 3.8601536049048195`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"bfb112ab-ac04-452a-b24f-9c9bcddc1884"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "x"], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.860153606029896*^9},
 CellLabel->
  "Out[110]//StandardForm=",ExpressionUUID->"618072be-a900-4923-bc45-\
4e3c61d279d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "x"], "+", 
    SuperscriptBox["x", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[111]:=",ExpressionUUID->"35732628-fe57-4591-80cf-4bac2e7ffd77"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
Eg==
        "]], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$75533#1"]& ], {}}, {{}, {}}, {{}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-8, 8}, {-57.55443391812804, 103.13283717105614`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.860153609187405*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"31746bb5-84da-4760-b879-32a22d803335"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subscript", "[", 
  RowBox[{"a", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.8601537685138135`*^9, 3.86015376931048*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"f65636b3-7bbc-4084-905e-2746687b14a5"],

Cell[BoxData[
 SubscriptBox["a", "x"]], "Output",
 CellChangeTimes->{3.8601537697479997`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"e8088e7a-ce06-4c40-a8f1-2817ac4fbd54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Trace", "[", 
  RowBox[{"Plus", "[", 
   RowBox[{"4", ",", 
    RowBox[{"Times", "[", 
     RowBox[{
      RowBox[{"Rational", "[", 
       RowBox[{"1", ",", "2"}], "]"}], ",", "t"}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.860154025001582*^9, 3.8601540591256437`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"2036b965-eac5-4bc5-b89b-a2b99eb7763d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       TagBox[
        RowBox[{"Rational", "[", 
         RowBox[{"1", ",", "2"}], "]"}],
        HoldForm], ",", 
       TagBox[
        FractionBox["1", "2"],
        HoldForm]}], "}"}], ",", 
     TagBox[
      FractionBox["t", "2"],
      HoldForm]}], "}"}], ",", 
   TagBox[
    RowBox[{"4", "+", 
     FractionBox["t", "2"]}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.8601540597663116`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"1f3ab7ef-ffbd-46d6-8e19-c2a162d1aba1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "Trace", "]"}]], "Input",
 CellChangeTimes->{{3.86023190199336*^9, 3.8602319143488135`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"98d3a757-a59d-4fe3-ac29-0c52d8aaa7cc"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Trace",
              ButtonNote->"paclet:ref/Trace"],
             "\"paclet:ref/Trace\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Trace\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) generates a list of all \
expressions used in the evaluation of \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Trace\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) includes only those expressions that match \
\\!\\(\\*StyleBox[\\\"form\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Trace\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"s\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) includes all evaluations \
that use transformation rules associated with the symbol \\!\\(\\*StyleBox[\\\
\"s\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Trace", 
                    "paclet:ref/Trace", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Trace.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Trace.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"MatchLocalNames", "\[Rule]", "True"}]},
                    {
                    RowBox[{"TraceAbove", "\[Rule]", "False"}]},
                    {
                    RowBox[{"TraceBackward", "\[Rule]", "False"}]},
                    {
                    RowBox[{"TraceDepth", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"TraceForward", "\[Rule]", "False"}]},
                    {
                    RowBox[{"TraceInternal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TraceOff", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TraceOn", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TraceOriginal", "\[Rule]", "False"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","9","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"MatchLocalNames", "\[Rule]", "True"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","9","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldAll", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Trace\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {3., 12.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {3., 12.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Trace",
              ButtonNote->"paclet:ref/Trace"],
             "\"paclet:ref/Trace\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Trace\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) generates a list of all \
expressions used in the evaluation of \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Trace\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"form\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) includes only those expressions that match \
\\!\\(\\*StyleBox[\\\"form\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Trace\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"s\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) includes all evaluations \
that use transformation rules associated with the symbol \\!\\(\\*StyleBox[\\\
\"s\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Trace\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
generates a list of all expressions used in the evaluation of \!\(\*StyleBox[\
\"expr\", \"TI\"]\). \n\!\(\*RowBox[{\"Trace\", \"[\", \
RowBox[{StyleBox[\"expr\", \"TI\"], \",\", StyleBox[\"form\", \"TI\"]}], \
\"]\"}]\) includes only those expressions that match \!\(\*StyleBox[\"form\", \
\"TI\"]\). \n\!\(\*RowBox[{\"Trace\", \"[\", RowBox[{StyleBox[\"expr\", \
\"TI\"], \",\", StyleBox[\"s\", \"TI\"]}], \"]\"}]\) includes all evaluations \
that use transformation rules associated with the symbol \
\!\(\*StyleBox[\"s\", \"TI\"]\). ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Trace", "Web" -> 
      "http://reference.wolfram.com/language/ref/Trace.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     MatchLocalNames -> True, TraceAbove -> False, TraceBackward -> False, 
      TraceDepth -> DirectedInfinity[1], TraceForward -> False, TraceInternal -> 
      Automatic, TraceOff -> None, TraceOn -> None, TraceOriginal -> False}, 
    "Attributes" -> {HoldAll, Protected}, "FullName" -> "System`Trace"], 
   True]]], "Output",
 CellChangeTimes->{3.860231916421277*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"3ba61536-44c6-4c17-a035-975a8869fa94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"Trace", "[", 
   RowBox[{"Plus", "[", 
    RowBox[{"4", ",", 
     RowBox[{"Times", "[", 
      RowBox[{
       RowBox[{"Rational", "[", 
        RowBox[{"1", ",", "2"}], "]"}], ",", "t"}], "]"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.860232104332748*^9, 3.860232104333748*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"28e1cd43-afe9-43aa-930d-53954c4e1362"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"List", "[", 
      RowBox[{
       RowBox[{"List", "[", 
        RowBox[{
         RowBox[{"HoldForm", "[", 
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"HoldForm", "[", 
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"HoldForm", "[", 
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], ",", "t"}], "]"}], "]"}]}], "]"}], 
     ",", 
     RowBox[{"HoldForm", "[", 
      RowBox[{"Plus", "[", 
       RowBox[{"4", ",", 
        RowBox[{"Times", "[", 
         RowBox[{
          RowBox[{"Rational", "[", 
           RowBox[{"1", ",", "2"}], "]"}], ",", "t"}], "]"}]}], "]"}], 
      "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.860232105483076*^9},
 CellLabel->
  "Out[2]//FullForm=",ExpressionUUID->"d4d5ba83-300e-4de6-af80-60135329c30c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomPolygon", "[", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8602328759768834`*^9, 3.8602329038826885`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"1d56ebb2-a0da-48cf-8d6e-9d10622bfb6f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Polygon",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready", 
    Typeset`spolygon$$ = 
    Polygon[{{0.2759822713048483, 0.6956734971837708}, {0.01419407728186095, 
     0.8610543138109097}, {0.7095575205484366, 0.2669760197317339}, {
     0.6227724135863102, 0.7287836637600518}, {0.5442385498784652, 
     0.9586912972975807}}, {1, 2, 3, 4, 5}]}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Directive[
               Hue[0.6, 0.3, 0.85], 
               EdgeForm[
                Hue[0.6, 0.3, 0.85]]], 
              
              PolygonBox[{{0.2759822713048483, 0.6956734971837708}, {
               0.01419407728186095, 0.8610543138109097}, {0.7095575205484366, 
               0.2669760197317339}, {0.6227724135863102, 
               0.7287836637600518}, {0.5442385498784652, 
               0.9586912972975807}}, {1, 2, 3, 4, 5}]}, ImageSize -> 
             Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification])]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Embedding dimension: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Directive[
               Hue[0.6, 0.3, 0.85], 
               EdgeForm[
                Hue[0.6, 0.3, 0.85]]], 
              
              PolygonBox[{{0.2759822713048483, 0.6956734971837708}, {
               0.01419407728186095, 0.8610543138109097}, {0.7095575205484366, 
               0.2669760197317339}, {0.6227724135863102, 
               0.7287836637600518}, {0.5442385498784652, 
               0.9586912972975807}}, {1, 2, 3, 4, 5}]}, ImageSize -> 
             Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification])]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Embedding dimension: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Quiet[
                    Apply[Region`PolygonDump`polygonType, 
                    Region`PolygonDump`computeType[Typeset`spolygon$$]]], 
                    StandardForm], SynchronousUpdating -> False, 
                   TrackedSymbols :> {}, CachedValue :> 
                   AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Region`PolygonDump`iRegionBounds[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                   TrackedSymbols :> {}, CachedValue :> 
                   AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Area: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Region`PolygonDump`iArea[Typeset`spolygon$$], 
                    StandardForm], SynchronousUpdating -> False, 
                   TrackedSymbols :> {}, CachedValue :> 
                   AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Polygon[{{0.2759822713048483, 0.6956734971837708}, {0.01419407728186095, 
   0.8610543138109097}, {0.7095575205484366, 0.2669760197317339}, {
   0.6227724135863102, 0.7287836637600518}, {0.5442385498784652, 
   0.9586912972975807}}, {1, 2, 3, 4, 5}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.860232907820449*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"cd2a2bd1-e372-47fb-8207-7c87e9e3f53b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "RandomPolygon", "]"}]], "Input",
 CellChangeTimes->{{3.860232919372348*^9, 3.860232936279038*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"a850215a-5229-44e4-bcf0-174ce1ef9518"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/RandomPolygon",
              ButtonNote->"paclet:ref/RandomPolygon"],
             "\"paclet:ref/RandomPolygon\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom simple \
polygon with \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) vertex points.\\n\\!\
\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", StyleBox[\\\"spec\\\", \\\"TI\
\\\"], \\\"]\\\"}]\\) gives a pseudorandom polygon with the specified \
specification \\!\\(\\*StyleBox[\\\"spec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\) pseudorandom \
polygons.\\n\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"], \\\"\[Rule]\\\", StyleBox[\\\
\"spec\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"]\\\"}]\\) gives a pseudorandom polygon in dimension \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/RandomPolygon",
                     "paclet:ref/RandomPolygon", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/RandomPolygon.\
html"], None}, "http://reference.wolfram.com/language/ref/RandomPolygon.html",
                     "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    
                    TemplateBox[{
                    "\[ThickSpace]","\"\[ThickSpace]\"",StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False],DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 9] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"DataRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DefaultBaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"VertexColors", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexNormals", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"VertexTextureCoordinates", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "WorkingPrecision", "\[Rule]", "MachinePrecision"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","7","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"","\"\[InvisibleSpace]\"","7","\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 9]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`RandomPolygon\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {3., 12.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {3., 12.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/RandomPolygon",
              ButtonNote->"paclet:ref/RandomPolygon"],
             "\"paclet:ref/RandomPolygon\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives a pseudorandom simple \
polygon with \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) vertex points.\\n\\!\
\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", StyleBox[\\\"spec\\\", \\\"TI\
\\\"], \\\"]\\\"}]\\) gives a pseudorandom polygon with the specified \
specification \\!\\(\\*StyleBox[\\\"spec\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"spec\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"k\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) gives a list of \\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\) pseudorandom \
polygons.\\n\\!\\(\\*RowBox[{\\\"RandomPolygon\\\", \\\"[\\\", \
RowBox[{RowBox[{StyleBox[\\\"d\\\", \\\"TI\\\"], \\\"\[Rule]\\\", StyleBox[\\\
\"spec\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"]\\\"}]\\) gives a pseudorandom polygon in dimension \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\).\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"RandomPolygon\", \"[\", StyleBox[\"n\", \"TI\"], \"]\"}]\
\) gives a pseudorandom simple polygon with \!\(\*StyleBox[\"n\", \"TI\"]\) \
vertex points.\n\!\(\*RowBox[{\"RandomPolygon\", \"[\", StyleBox[\"spec\", \
\"TI\"], \"]\"}]\) gives a pseudorandom polygon with the specified \
specification \!\(\*StyleBox[\"spec\", \"TI\"]\).\n\
\!\(\*RowBox[{\"RandomPolygon\", \"[\", RowBox[{StyleBox[\"spec\", \"TI\"], \
\",\", StyleBox[\"k\", \"TI\"]}], \"]\"}]\) gives a list of \
\!\(\*StyleBox[\"k\", \"TI\"]\) pseudorandom polygons.\n\
\!\(\*RowBox[{\"RandomPolygon\", \"[\", RowBox[{RowBox[{StyleBox[\"d\", \
\"TI\"], \"\[Rule]\", StyleBox[\"spec\", \"TI\"]}], \",\", StyleBox[\"\
\[Ellipsis]\", \"TR\"]}], \"]\"}]\) gives a pseudorandom polygon in dimension \
\!\(\*StyleBox[\"d\", \"TI\"]\).", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/RandomPolygon", "Web" -> 
      "http://reference.wolfram.com/language/ref/RandomPolygon.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     BaseStyle -> {}, DataRange -> Automatic, DefaultBaseStyle -> {}, 
      VertexColors -> Automatic, VertexNormals -> Automatic, 
      VertexTextureCoordinates -> None, WorkingPrecision -> MachinePrecision},
     "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`RandomPolygon"], True]]], "Output",
 CellChangeTimes->{3.860232938711954*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"d4a558c2-5440-49ff-9db0-92811abb5541"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Head"}]], "Input",
 CellChangeTimes->{{3.860232973986601*^9, 3.860232979256634*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"fc2f4406-8418-4e2e-990a-4e5520d25358"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Head",
              ButtonNote->"paclet:ref/Head"],
             "\"paclet:ref/Head\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Head\\\", \\\"[\\\", StyleBox[\
\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the head of \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Head", 
                    "paclet:ref/Head", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Head.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Head.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Head\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {3., 12.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {3., 12.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Head",
              ButtonNote->"paclet:ref/Head"],
             "\"paclet:ref/Head\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Head\\\", \\\"[\\\", StyleBox[\
\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the head of \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Head\", \"[\", StyleBox[\"expr\", \"TI\"], \"]\"}]\) \
gives the head of \!\(\*StyleBox[\"expr\", \"TI\"]\). ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Head", "Web" -> 
      "http://reference.wolfram.com/language/ref/Head.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "System`Head"], False]]], "Output",
 CellChangeTimes->{3.8602329799910574`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"7a6fb627-53a0-4336-a7b8-feaffc3e98e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"?", "Rad*"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.860233017909731*^9, 3.8602330242134247`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"e7bfbde0-cb1b-4088-9f6b-2e0a0815e8ce"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["System`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {3., 12.}}], " ", 
              StyleBox["System`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["RadialGradientImage", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8203d67b-de45-4686-9968-7da3c7d404e9", {
                   "RadialGradientImage", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RadicalBox", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8203d67b-de45-4686-9968-7da3c7d404e9", {
                   "RadicalBox", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RadioButton", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8203d67b-de45-4686-9968-7da3c7d404e9", {
                   "RadioButton", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RadioButtonBox", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8203d67b-de45-4686-9968-7da3c7d404e9", {
                   "RadioButtonBox", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Radon", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8203d67b-de45-4686-9968-7da3c7d404e9", {
                   "Radon", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["RadialityCentrality", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8203d67b-de45-4686-9968-7da3c7d404e9", {
                   "RadialityCentrality", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RadicalBoxOptions", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8203d67b-de45-4686-9968-7da3c7d404e9", {
                   "RadicalBoxOptions", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RadioButtonBar", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8203d67b-de45-4686-9968-7da3c7d404e9", {
                   "RadioButtonBar", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RadioButtonBoxOptions", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8203d67b-de45-4686-9968-7da3c7d404e9", {
                   "RadioButtonBoxOptions", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RadonTransform", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8203d67b-de45-4686-9968-7da3c7d404e9", {
                   "RadonTransform", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.19]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.860233027494688*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"3a2cc8fc-cdc6-4644-9607-7096b755865c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "[", 
  RowBox[{"\"\<hello\>\"", ",", "\"\<I am \>\"", ",", "Jeff"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.86023306021595*^9, 3.86023306021595*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"863999d5-c7c6-451e-b415-95009c632196"],

Cell[BoxData[
 TemplateBox[{
  "StringJoin","string",
   "\"String expected at position \\!\\(\\*RowBox[{\\\"2\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"\\\\\\\"helloI am \\\\\\\"\\\", \\\"<>\\\", \
\\\"Jeff\\\"}]\\).\"",2,7,1,34034543800439162459,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8602330615440483`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[7]:=",ExpressionUUID->"b4d56e2e-cf15-416e-bddb-\
9446708bdb36"],

Cell[BoxData[
 RowBox[{"\<\"helloI am \"\>", "<>", "Jeff"}]], "Output",
 CellChangeTimes->{3.8602330615596747`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"d4ddfe75-c617-4105-bbce-a9e909a80c09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Power", "[", 
  RowBox[{
   RowBox[{"x", "/", "0"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.860233243367851*^9, 3.8602332524484797`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"bf58f57e-2f7f-4e85-b8bf-3ddf4c579175"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,8,2,34034543800439162459,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.860233254104643*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[8]:=",ExpressionUUID->"8ebd9e62-3874-409f-9344-\
0c31f7804aaf"],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{3.8602332541202693`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"26df0d52-0abe-40ec-ab09-1696c7337bfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$BaseDirectory"], "Input",
 CellChangeTimes->{{3.860234119258665*^9, 3.860234119258665*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"bff723f5-2ed7-45cb-b286-eb64b65f6823"],

Cell[BoxData["\<\"C:\\\\ProgramData\\\\Mathematica\"\>"], "Output",
 CellChangeTimes->{3.860234120290162*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"cba2436f-6648-459d-ada3-8fb7f0de0256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$UserBaseDirectory"], "Input",
 CellChangeTimes->{{3.8602341312571583`*^9, 3.8602341312571583`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"70581cd9-e339-471f-b0ca-4890d059984a"],

Cell[BoxData["\<\"C:\\\\Users\\\\Administrator\\\\AppData\\\\Roaming\\\\\
Mathematica\"\>"], "Output",
 CellChangeTimes->{3.860234131741565*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"5014ee22-f50e-4dec-97f4-2cd553278232"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$InitialDirectory"], "Input",
 CellChangeTimes->{{3.860234142056224*^9, 3.860234142056224*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"5dc00e41-9c5a-4b32-a3f5-729d1c7cdc82"],

Cell[BoxData["\<\"C:\\\\Users\\\\Administrator\\\\Documents\"\>"], "Output",
 CellChangeTimes->{3.8602341428219233`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"0e401c7c-47c3-4dc9-b557-f936655b8a20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Directory*"}]], "Input",
 CellChangeTimes->{{3.8602343268358417`*^9, 3.8602343378560953`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"c7925af0-d36d-4a2f-a862-f758efd44965"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["System`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{16., {3., 13.}}], " ", 
              StyleBox["System`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["Directory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fa56b2bf-324f-47d3-8a7b-92e2facdb2bd", {
                   "Directory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DirectoryName", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fa56b2bf-324f-47d3-8a7b-92e2facdb2bd", {
                   "DirectoryName", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DirectoryQ", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fa56b2bf-324f-47d3-8a7b-92e2facdb2bd", {
                   "DirectoryQ", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DirectoryStack", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fa56b2bf-324f-47d3-8a7b-92e2facdb2bd", {
                   "DirectoryStack", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.8602343386211476`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"386f10ac-088f-4094-884d-9e6c327f0cda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "*Directory"}]], "Input",
 CellChangeTimes->{{3.860234345809124*^9, 3.860234356895483*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"351b6bcd-8be1-4123-b26d-1cb592f1ddc8"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["System`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{16., {3., 13.}}], " ", 
              StyleBox["System`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["CloudDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "CloudDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ProcessDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "ProcessDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$CloudRootDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$CloudRootDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$TemporaryDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$TemporaryDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CopyDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "CopyDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RenameDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "RenameDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["$CloudSystemRootDirectory", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$CloudSystemRootDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$TopDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$TopDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CreateDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "CreateDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ResetDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "ResetDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$HomeDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$HomeDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$UserAddOnsDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$UserAddOnsDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DeleteDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "DeleteDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SetCloudDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "SetCloudDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$InitialDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$InitialDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$UserBaseDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$UserBaseDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Directory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "Directory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SetDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "SetDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$InstallationDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$InstallationDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$UserDocumentsDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$UserDocumentsDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HomeDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "HomeDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$AddOnsDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$AddOnsDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$LaunchDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$LaunchDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["NotebookDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "NotebookDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$BaseDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$BaseDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$PreferencesDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$PreferencesDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["ParentDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "ParentDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$CacheBaseDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$CacheBaseDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$RootDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$RootDirectory", "System`"}, False},
                 ButtonNote->"System`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]},
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["DocumentationSearch`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{16., {3., 13.}}], " ", 
              StyleBox["DocumentationSearch`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 
                 StyleBox["AddDocumentationDirectory", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "AddDocumentationDirectory", "DocumentationSearch`"}, 
                   False},
                 ButtonNote->"DocumentationSearch`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.95]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]},
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["PacletManager`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{16., {3., 13.}}], " ", 
              StyleBox["PacletManager`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["$BasePacletsDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$BasePacletsDirectory", "PacletManager`"}, False},
                 ButtonNote->"PacletManager`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["$UserBasePacletsDirectory", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "$UserBasePacletsDirectory", "PacletManager`"}, False},
                 ButtonNote->"PacletManager`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.475]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]},
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["ResourceLocator`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{16., {3., 13.}}], " ", 
              StyleBox["ResourceLocator`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["ApplicationDataDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "ApplicationDataDirectory", "ResourceLocator`"}, False},
                 ButtonNote->"ResourceLocator`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["ApplicationDataUserDirectory", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "ApplicationDataUserDirectory", "ResourceLocator`"}, False},
                 ButtonNote->"ResourceLocator`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateDataDirectory", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-55af2cc1-8c34-410b-8365-abbfc0085b7c", {
                   "CreateDataDirectory", "ResourceLocator`"}, False},
                 ButtonNote->"ResourceLocator`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.31666666666666665`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {{False}}, 
      "RowsIndexed" -> {
       2 -> GrayLevel[0.85], 3 -> GrayLevel[0.85], 4 -> GrayLevel[0.85]}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.8602343610380073`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"48c71eda-b23a-4172-9871-944058890f9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "List"}]], "Input",
 CellChangeTimes->{{3.860234658136248*^9, 3.8602346581372485`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"307e09a0-4cec-4c9d-bd92-a1e3d7f6018d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/List",
              ButtonNote->"paclet:ref/List"],
             "\"paclet:ref/List\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]\\) is a list of elements. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/List", 
                    "paclet:ref/List", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/List.html"], 
                    None}, "http://reference.wolfram.com/language/ref/List.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Locked", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`List\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {3., 12.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {3., 12.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/List",
              ButtonNote->"paclet:ref/List"],
             "\"paclet:ref/List\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"e\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]\\) is a list of elements. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"e\", \"TI\"], \
StyleBox[\"2\", \"TR\"]], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]\
\) is a list of elements. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/List", "Web" -> 
      "http://reference.wolfram.com/language/ref/List.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Locked, Protected}, "FullName" -> 
    "System`List"], True]]], "Output",
 CellChangeTimes->{3.8602346594129252`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"43af613d-0d99-4b4a-a105-a975230d5bed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", 
   RowBox[{"InputForm", "[", "10", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8602347024627714`*^9, 3.8602347024627714`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"21794c5b-242b-4aaf-8385-1f2fa674c8d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", 
   InterpretationBox[
    StyleBox["10",
     ShowStringCharacters->True,
     NumberMarks->True],
    InputForm[10],
    AutoDelete->True,
    Editable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.860234704103327*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"a6b90e0e-10d7-44b0-b565-3dcc1c136c53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"10", "//", "Accuracy"}], ",", 
   RowBox[{
    RowBox[{"InputForm", "[", "10", "]"}], "//", "Precision"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.8602347307560406`*^9, 3.8602347307560406`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"091effe7-2403-4cbc-a2e5-0c7683ef2714"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Infinity]", ",", "\[Infinity]"}], "}"}]], "Output",
 CellChangeTimes->{3.8602347314590225`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"231cc3dc-32e7-42c1-8aec-114cc977c6a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2.72", "//", "Precision"}], ",", 
   RowBox[{"InputForm", "[", "2.72", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.86023520744936*^9, 3.8602352074648714`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"4d789fd9-64f7-46a0-bbf2-a22c7a976909"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"MachinePrecision", ",", 
   InterpretationBox[
    StyleBox["2.72",
     ShowStringCharacters->True,
     NumberMarks->True],
    InputForm[2.72],
    AutoDelete->True,
    Editable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.860235208199295*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"e722689c-728d-4d2a-99aa-dcda452fc2b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2.72123124123124123214325354376343241", "//", "Precision"}], ",", 
   RowBox[{"InputForm", "[", "2.72213124124", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8602352263544264`*^9, 3.8602352347205024`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"af0ef815-a923-4925-9105-6e072f658ee9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"35.43476544825665`", ",", 
   InterpretationBox[
    StyleBox["2.72213124124",
     ShowStringCharacters->True,
     NumberMarks->True],
    InputForm[2.72213124124],
    AutoDelete->True,
    Editable->True]}], "}"}]], "Output",
 CellChangeTimes->{3.8602352370922155`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"fdc4095f-a889-489b-a77d-cf6c8f37250c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", "MachinePrecision"}]], "Input",
 CellChangeTimes->{{3.8602353330553703`*^9, 3.860235341878272*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"e6f0f084-080c-417d-be33-8af034c74c68"],

Cell[BoxData["MachinePrecision"], "Output",
 CellChangeTimes->{{3.8602353375937138`*^9, 3.8602353513219366`*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"7e0e1dc7-bf7b-4389-8635-567a71d82f3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "a", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[22]:=",ExpressionUUID->"c953088e-9b29-4093-9492-f14fe477a109"],

Cell[BoxData["15.954589770191003`"], "Output",
 CellChangeTimes->{3.860235356170216*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"abe2787f-d8ac-47b7-a357-a74966538184"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8602354730421405`*^9, 
  3.8602354824115767`*^9}},ExpressionUUID->"2a1cf2ef-1ee7-4183-98ec-\
ffbd85b5acbd"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8602354859787936`*^9, 
  3.86023548599442*^9}},ExpressionUUID->"589b1802-9c74-4a17-86e7-\
28dab17c8d1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "Accuracy", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[24]:=",ExpressionUUID->"784a9b76-298c-4c0c-bf51-ba403712af18"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Accuracy",
              ButtonNote->"paclet:ref/Accuracy"],
             "\"paclet:ref/Accuracy\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Accuracy\\\", \\\"[\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the effective number of \
digits to the right of the decimal point in the number \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Accuracy", 
                    "paclet:ref/Accuracy", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Accuracy.html"]\
, None}, "http://reference.wolfram.com/language/ref/Accuracy.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Accuracy\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{15., {3., 12.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{15., {3., 12.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Accuracy",
              ButtonNote->"paclet:ref/Accuracy"],
             "\"paclet:ref/Accuracy\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Accuracy\\\", \\\"[\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the effective number of \
digits to the right of the decimal point in the number \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Accuracy\", \"[\", StyleBox[\"x\", \"TI\"], \"]\"}]\) \
gives the effective number of digits to the right of the decimal point in the \
number \!\(\*StyleBox[\"x\", \"TI\"]\). ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Accuracy", "Web" -> 
      "http://reference.wolfram.com/language/ref/Accuracy.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "System`Accuracy"], True]]], "Output",
 CellChangeTimes->{3.8602354782331486`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"2daf21c1-7926-4f3b-86d5-9fe502c9ae13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"NumberQ", "[", 
    RowBox[{"1", "/", "2"}], "]"}], ",", 
   RowBox[{"NumberQ", "[", "1", "]"}], ",", 
   RowBox[{"NumberQ", "[", "E", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8602355936872168`*^9, 3.8602355936872168`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"135d756c-2688-4340-b90f-84d6f272bb3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.8602355951560555`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"96d88ba4-4212-4cb7-a88b-ee6471ebe0ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", "+", "0.2", "+", 
   RowBox[{"1", "/", "2"}], "+", "1", "+", "11", "+", 
   RowBox[{"1", "I"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.86023563489255*^9, 3.86023563489255*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"127ffcf5-3e55-4ec6-a16f-137c8b60d83a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"13.7`", "\[VeryThinSpace]", "+", 
   RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.860235636408276*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"26861819-07e3-4a36-961d-21d46bb23354"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", "2.72", "]"}]], "Input",
 CellChangeTimes->{{3.860235667240093*^9, 3.860235667240093*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"78708d01-bd1f-47c8-97fb-0994320f9e3a"],

Cell[BoxData[
 FractionBox["68", "25"]], "Output",
 CellChangeTimes->{3.8602356679118156`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"d0d109a8-e6cf-429c-af8c-ca3ccc06f0bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"345", "/", " ", "\[Pi]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8602357014470453`*^9, 3.860235719095111*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"2ea2ea7b-e0f0-495d-a82c-df585d056b57"],

Cell[BoxData["109.8169107334078`"], "Output",
 CellChangeTimes->{3.8602357212983923`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"47c71b9f-d9e7-4424-bfc2-71597530b735"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", "~", "N", "~", "4"}]], "Input",
 CellChangeTimes->{{3.8602358865555367`*^9, 3.8602359347015915`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"9c025bfc-4930-4fb9-9b2c-c3caefdd49ea"],

Cell[BoxData["3.`4."], "Output",
 CellChangeTimes->{{3.860235887118075*^9, 3.8602359354205036`*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"cc2c04de-1be3-47a3-9706-7a852b4b85ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", "~", "N", "~", "5"}]], "Input",
 CellChangeTimes->{{3.860235945258445*^9, 3.86023594530503*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"590e3ebe-aeb5-4b68-95a1-3d3a0c082a67"],

Cell[BoxData["3.`5."], "Output",
 CellChangeTimes->{3.860235945758195*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"53154485-abcd-4e43-ab22-baca0623f459"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e", "//", "N", "         ", 
  RowBox[{"(*", 
   RowBox[{
   "\:4f7f\:7528E", "\:ff0c", " ", 
    "E\:624d\:662f\:81ea\:7136\:6307\:6570\:6211\:89c9\:5f97"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.860235954595907*^9, 3.860235957248126*^9}, {
  3.8602361998530903`*^9, 
  3.8602362242892923`*^9}},ExpressionUUID->"113aa206-4222-4d63-bcf2-\
d7ae2a6115c8"],

Cell[BoxData["e"], "Output",
 CellChangeTimes->{3.8602359580431337`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"4f868276-91b1-487c-9f8c-766de517b2d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"E", "~", "N", "~", "E"}]], "Input",
 CellChangeTimes->{{3.8602364339991183`*^9, 3.860236443615976*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"a76e4154-ccd1-41a9-98a2-d86016c46ad7"],

Cell[BoxData["2.7182818284590452353`2.718281828459045"], "Output",
 CellChangeTimes->{3.8602364446472945`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"8e3438f1-eacc-410e-b459-10af4860abe0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"213123.223523423", "//", "N"}]], "Input",
 CellChangeTimes->{{3.8602359629429636`*^9, 3.8602359704911284`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"ce438a7e-e24d-4595-96b2-087f2149b04b"],

Cell[BoxData["213123.223523423`"], "Output",
 CellChangeTimes->{3.8602359711630383`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"f92497cc-ab25-4d4c-8137-0e59ad3480cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", "E"}]], "Input",
 CellChangeTimes->{{3.8602360753684235`*^9, 3.860236078272895*^9}, {
  3.860236148738553*^9, 3.8602361908070793`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"86c5bc1a-e427-4bba-afc5-6db933cf051d"],

Cell[BoxData["2.718281828459045`"], "Output",
 CellChangeTimes->{3.8602361922456646`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"60862a8a-a803-43ce-ba52-b18d055882a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", "2397990123.12481024712"}]], "Input",
 CellChangeTimes->{{3.8602360836054373`*^9, 3.8602360900626497`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"8bc3f5f6-9ebc-4a45-99d2-3196338971fe"],

Cell[BoxData["2.39799012312481`*^9"], "Output",
 CellChangeTimes->{3.8602360909062767`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"aa35ecbf-7e8f-4ae4-8442-68a59c7b15b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$MachinePrecision", "               ", 
  RowBox[{"(*", 
   RowBox[{
   "\:8fd4\:56de\:7684\:503c\:4f3c\:4e4e\:53ea\:662f\:4e00\:4e2a\:4f8b\:5b50",
     "\:ff0c", 
    "\:7528\:6765\:8868\:793a\:7cfb\:7edf\:7684\:673a\:68b0\:7cbe\:5ea6\:662f\
\:5565"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.860236106784477*^9, 3.860236106784477*^9}, {
  3.860236366586625*^9, 
  3.860236395211055*^9}},ExpressionUUID->"3119a145-7c3f-448d-8c01-\
cce1939355b8"],

Cell[BoxData["15.954589770191003`"], "Output",
 CellChangeTimes->{3.860236107252358*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"38ca569a-b051-433b-a98c-d5b05d3282b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetPrecision", "[", 
  RowBox[{"\[Pi]", ",", "17"}], "]"}]], "Input",
 CellChangeTimes->{{3.860236117973754*^9, 3.8602361303254538`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"1f445fa9-198a-486f-abb8-19f2d5933f77"],

Cell[BoxData["3.14159265358979323846264338327950419984`17."], "Output",
 CellChangeTimes->{{3.860236118848812*^9, 3.86023613303546*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"419a5762-c734-4c24-890b-90ccf745d557"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetPrecision", "[", 
  RowBox[{"E", ",", "MachinePrecision"}], "]"}]], "Input",
 CellChangeTimes->{{3.860236345500926*^9, 3.8602363589999094`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"5118ffd3-5987-462b-bfef-2d8c1a635743"],

Cell[BoxData["2.718281828459045`"], "Output",
 CellChangeTimes->{{3.86023634617266*^9, 3.8602363630272293`*^9}},
 CellLabel->"Out[44]=",ExpressionUUID->"399cc04a-1661-41ce-b116-ede6fca0f515"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"77", "/", "3`12"}]], "Input",
 CellChangeTimes->{{3.860237316291541*^9, 3.860237325604843*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"baf06674-7751-4e3b-b518-14b2886c6ffb"],

Cell[BoxData["25.66666666666666666666666666666666666659`12."], "Output",
 CellChangeTimes->{3.8602373261203165`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"35958cbb-d9f4-45e6-81c7-fb255259f096"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerDigits", "[", "234544553", "]"}]], "Input",
 CellChangeTimes->{{3.8602373923693085`*^9, 3.8602373923693085`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"da94fae2-9430-454f-a61c-b2c535ff2abc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "4", ",", "5", ",", "4", ",", "4", ",", "5", ",", "5", 
   ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.860237392947472*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"4b4872a1-b41f-4242-b9eb-7e41e56b5de7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{"{", 
   RowBox[{
   "2", ",", "3", ",", "4", ",", "5", ",", "4", ",", "4", ",", "5", ",", "5", 
    ",", "3"}], "}"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[48]:=",ExpressionUUID->"4e4ff942-b99a-400a-8ef3-17eadbfd940d"],

Cell[BoxData["234544553"], "Output",
 CellChangeTimes->{3.860237401229935*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"30df5ab7-d2b7-4608-a014-95ff50f4fba1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FactorInteger", "[", "234544553", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[49]:=",ExpressionUUID->"1c665bfd-4a23-4cdb-8e4d-75413e3ee750"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3253", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"72101", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.860237405417611*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"ac9b23b7-e2e5-4fea-9b10-4749cfc6ce31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"RealDigits", "[", "321.4546554", "]"}], ",", 
   RowBox[{"RealDigits", "[", 
    RowBox[{"N", "@", "E"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8602374798248515`*^9, 3.860237492616011*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"b916cb0b-6ac1-41b2-a407-6b311c9918f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "3", ",", "2", ",", "1", ",", "4", ",", "5", ",", "4", ",", "6", ",", 
       "5", ",", "5", ",", "4", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0"}], "}"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "2", ",", "7", ",", "1", ",", "8", ",", "2", ",", "8", ",", "1", ",", 
       "8", ",", "2", ",", "8", ",", "4", ",", "5", ",", "9", ",", "0", ",", 
       "4", ",", "5"}], "}"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8602374961474953`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"57c8810c-c52f-4e41-a37f-c3a9ea299688"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RealDigits", "[", 
  RowBox[{"ReIm", "[", 
   RowBox[{"113", "+", 
    RowBox[{"2.7213", "I"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.860237553792857*^9, 3.860237553792857*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"15cbc721-0e04-45ea-bb2c-10e1d5f7dcf8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1", ",", "3", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0"}], "}"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "2", ",", "7", ",", "2", ",", "1", ",", "3", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0"}], "}"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.860237554308516*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"9f38bcd8-5916-44c9-afb8-0a2b63bd967b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RealDigits", "[", 
   RowBox[{"321.4546", ",", "2"}], "]"}], "  ", 
  RowBox[{
  "(*", "\:4e8c\:8fdb\:5236\:7684321\:662f\:67099\:4e2a\:6570\:7684", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.860237911360656*^9, 
  3.8602379536964283`*^9}},ExpressionUUID->"5ed35261-60bc-47aa-9d68-\
5ca017a8baee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
     ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "0", ",", "0", ",", "0"}], "}"}], ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.8602379119385085`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"b7565886-245b-46af-8cc2-3cc442afed03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RealDigits", "[", 
  RowBox[{
   RowBox[{"N", "@", "E"}], ",", "10", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8602381378791513`*^9, 3.8602381423716974`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"2f734f06-6582-4548-9cb6-11026deccbaa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "7", ",", "1"}], "}"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.860238144681055*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"761b6724-892c-4c9e-b9d7-a3ed365e8dc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"FromDigits", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "7", ",", "1", ",", "1"}], "}"}], ",", "1"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.860238335210271*^9, 3.860238335210271*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"acaff844-854d-4867-a71a-8ab81e7b35c9"],

Cell[BoxData["2.711`"], "Output",
 CellChangeTimes->{3.860238335928954*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"0850224d-4a5e-4a4d-b5d9-b3397d978216"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"FromDigits", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "7", ",", "1", ",", "1"}], "}"}], ",", "3"}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8602383528280563`*^9, 3.8602383530468893`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"eb645a27-76c4-4bc6-b4ab-8c8cccbe9476"],

Cell[BoxData["271.1`"], "Output",
 CellChangeTimes->{3.8602383558065557`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"3a499f2c-412c-4ea3-af4e-98af34bdd419"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cos", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.860238405930114*^9, 3.860238405930114*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"3b88afbf-961d-48d6-8a7e-0eee7cfbb202"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.8602384063989115`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"95fcafdc-088c-492f-a8b6-1113a45a8245"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", 
   RowBox[{"90", " ", "Degree"}], "]"}], "\[Equal]", 
  RowBox[{"Sin", "[", 
   RowBox[{"90", "\[Degree]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.860238427318722*^9, 3.860238427318722*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"f38bd71f-5070-4e9b-a697-40d86ecc551b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.860238428225192*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"ed611274-9c65-4aba-801f-263e72d516c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Cosh", "[", "Pi", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8602384686723194`*^9, 3.8602384686723194`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"e49f9621-7606-4b03-9216-7398f05dac2e"],

Cell[BoxData["11.591953275521519`"], "Output",
 CellChangeTimes->{3.860238469359866*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"d3863e38-28b0-48af-97e3-a8c5b61b7f8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"ArcTan", "[", "Pi", "]"}], "]"}], "   ", 
  RowBox[{"N", "[", 
   RowBox[{"ArcSinh", "[", 
    RowBox[{"45", " ", "Degree"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.860238487212813*^9, 3.860238494425673*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"1e09e072-b97e-446a-b2c3-49febe941dc5"],

Cell[BoxData["0.9106389595567758`"], "Output",
 CellChangeTimes->{3.8602384957226343`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"8daf4bd2-b6f8-476d-ba9f-fcc0a9cda122"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", "E", "]"}]], "Input",
 CellChangeTimes->{{3.8602385476442614`*^9, 3.8602385517900515`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"faabf98b-af34-4a24-aa2c-cbbeaadbeda2"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.860238554321745*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"0522ce34-7498-4408-aa6a-44e80610a1be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factorial", "[", "12", "]"}]], "Input",
 CellChangeTimes->{{3.8602386574909253`*^9, 3.8602386574909253`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"1652f140-4bbc-4acf-80ed-38f7483f86e8"],

Cell[BoxData["479001600"], "Output",
 CellChangeTimes->{3.8602386579597054`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"6618580c-7d46-456d-85d9-65f58700a5c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Round", "[", 
   RowBox[{"8.9", ",", "2"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Rounds", " ", "to", " ", "8", " ", "because", " ", "it", " ", "is", " ", 
     "the", " ", "closest", " ", "multiple", " ", "of", " ", "2"}], ",", 
    RowBox[{"2", "^", "3"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.860238783034423*^9, 3.860238788159278*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"cbec3df4-db8b-40a6-8d49-5189a54a7e71"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.860238790304083*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"69631fb1-6fae-4ead-a24e-278ca17b9e58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Floor", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.8602388047648635`*^9, 3.8602388047648635`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"df3fbca0-65bf-44d4-853d-4e43c699c059"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8602388057493024`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"e47f12eb-04bf-4468-ac0c-cd985b06e151"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ceiling", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.860238913764612*^9, 3.860238913764612*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"b49cbdcd-751d-41a4-934f-2a200118271b"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.8602389148896875`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"e3692d4a-7c9c-428e-8b11-032b649a6fa6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftFloor]", "Pi", "\[RightFloor]"}]], "Input",
 CellChangeTimes->{{3.8602389204665756`*^9, 3.8602389204665756`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"91a75c0a-735c-409a-a75d-4beba799763a"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.860238921451002*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"05513d5e-5135-4f40-b5a9-3f7d1a829e6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftCeiling]", "Pi", "\[RightCeiling]"}]], "Input",
 CellChangeTimes->{{3.8602389270196686`*^9, 3.8602389270196686`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"ed54466c-0a6a-4596-9ec0-ac02304be0f9"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.8602389274570837`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"6fb20a63-9639-4a63-a854-94243b999b7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", 
  RowBox[{
   RowBox[{"N", "[", "E", "]"}], ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.860238955085615*^9, 3.860238955085615*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"475b00a0-1109-41ae-971a-55e3c687cec4"],

Cell[BoxData[
 FractionBox["325368125", "119696244"]], "Output",
 CellChangeTimes->{3.8602389562731943`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"77fb20a0-5903-4b94-9eaa-9fcc3a6cea3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"9", ",", "8", ",", "7", ",", "0", ",", "3", ",", "12"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8602389641440487`*^9, 3.8602389641440487`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"5fd0695a-839f-40ec-ab6c-e9c0d0b91ddf"],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.8602389647532845`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"67e0a7a2-1585-419c-84d6-6352669cac6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "1"}], ",", "\"\<Dog\>\"", ",", "\[Pi]"}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"List", "[", 
   RowBox[{"1", ",", "P", ",", 
    RowBox[{"Power", "[", 
     RowBox[{"3", ",", "2"}], "]"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Power", "[", 
     RowBox[{"3", ",", "2"}], "]"}], " ", "represents", " ", "3", " ", 
    "raised", " ", "to", " ", "the", " ", "power", " ", "of", " ", "2"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8602389870476074`*^9, 3.8602390191610575`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"56803d28-e24e-4d07-ad70-63a16b50bd97"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", 
    SuperscriptBox["x", "2"]}], ",", "\<\"Dog\"\>", ",", "\[Pi]"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.860238987860162*^9, 3.860239021473065*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"0385da06-b505-4f17-93aa-8345bf1d084d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "P", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{{3.860238987860162*^9, 3.860239021473065*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"49e848c9-3121-400c-8919-7190234c3c8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "[", 
  RowBox[{
  "\"\<23.22\>\"", ",", "\"\<Dog\>\"", ",", "\[Pi]", ",", "2", ",", "4", ",", 
   "6", ",", "456.", ",", "56", ",", 
   RowBox[{
    RowBox[{"2", "\[Equal]", "3"}], "&&", 
    RowBox[{"3", "\[Equal]", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8602390820147705`*^9, 3.8602390820147705`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"84ae3304-a292-418a-8143-ab1719c4c5df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"23.22\"\>", ",", "\<\"Dog\"\>", ",", "\[Pi]", ",", "2", ",", 
   "4", ",", "6", ",", "456.`", ",", "56", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.860239082702407*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"cd238934-8243-4400-a9a3-2df40030831e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Echo", "[", 
  "\:6211\:611f\:89c9\:8fd9\:4e2aList\:548cPython\:91cc\:9762\:7684\:6570\
\:636e\:5f62\:5f0f\:6709\:70b9\:50cf", "]"}]], "Input",
 CellChangeTimes->{{3.860239090353548*^9, 3.860239138806909*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"61310af2-9a9a-4b06-933f-c4f5b9c711cc"],

Cell[BoxData["\:6211\:611f\:89c9\:8fd9\:4e2aList\:548cPython\:91cc\:9762\:7684\
\:6570\:636e\:5f62\:5f0f\:6709\:70b9\:50cf"], "Echo",
 CellChangeTimes->{
  3.860239141159677*^9},ExpressionUUID->"d70b2e64-4d7b-49f2-ae0b-\
b138412d1808"],

Cell[BoxData["\:6211\:611f\:89c9\:8fd9\:4e2aList\:548cPython\:91cc\:9762\:7684\
\:6570\:636e\:5f62\:5f0f\:6709\:70b9\:50cf"], "Output",
 CellChangeTimes->{3.8602391412378073`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"d87ecbe2-3d5c-4b35-99b0-d0acf657b0a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "I"}], ",", 
   RowBox[{"\[Pi]", "+", "\[Pi]"}], ",", "\"\<number 4\>\"", ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"23", " ", "Degree"}], "]"}], ",", 
   RowBox[{"425", "+", "I", "-", "413", "-", 
    RowBox[{"3", "I"}]}], ",", "24", ",", "4456.", ",", 
   RowBox[{"\"\<dog\>\"", "+", "\"\<cat\>\""}]}], "}"}]], "Input",
 CellChangeTimes->{{3.860239163831952*^9, 3.860239163831952*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"56cbf116-219c-4f80-b727-daba3e16bb07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "\[ImaginaryI]"}], ",", 
   RowBox[{"2", " ", "\[Pi]"}], ",", "\<\"number 4\"\>", ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"23", " ", "\[Degree]"}], "]"}], ",", 
   RowBox[{"12", "-", 
    RowBox[{"2", " ", "\[ImaginaryI]"}]}], ",", "24", ",", "4456.`", ",", 
   RowBox[{"\<\"cat\"\>", "+", "\<\"dog\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8602391688166566`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"db3f77be-5f83-45af-9d79-b76c71530f78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.860239213982854*^9, 3.8602392139984803`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"5d0502af-7bdc-4bfd-adfb-0c28c61d2262"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.860239215529832*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"8e6c52bf-e9e3-4191-a2eb-5cc292d199ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"\"\<Soccer\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "15"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860239491495608*^9, 3.860239491495608*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"0ae68c58-bcf6-490b-822b-def93c45153e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Soccer\"\>", ",", "\<\"Soccer\"\>", ",", "\<\"Soccer\"\>", 
   ",", "\<\"Soccer\"\>", ",", "\<\"Soccer\"\>", ",", "\<\"Soccer\"\>", 
   ",", "\<\"Soccer\"\>", ",", "\<\"Soccer\"\>", ",", "\<\"Soccer\"\>", 
   ",", "\<\"Soccer\"\>", ",", "\<\"Soccer\"\>", ",", "\<\"Soccer\"\>", 
   ",", "\<\"Soccer\"\>", ",", "\<\"Soccer\"\>", ",", "\<\"Soccer\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8602394926206837`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"633f0106-3800-488b-b121-86d46a975ceb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"i", "^", "i"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860239511435421*^9, 3.860239522429061*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"e10fafb0-356c-4110-aea1-885d117bc41b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "27", ",", "256", ",", "3125"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8602395119665923`*^9, 3.860239524307094*^9}},
 CellLabel->"Out[79]=",ExpressionUUID->"6b6c8126-2b93-43d1-b59d-83b1307a58a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Range", "[", "5", "]"}], ",", 
   RowBox[{"Table", "[", 
    RowBox[{"h", ",", 
     RowBox[{"{", 
      RowBox[{"h", ",", 
       RowBox[{"-", "6"}], ",", "2"}], "}"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.860239579421813*^9, 3.860239579421813*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"edb543df-74de-418b-aa93-5d51d874cbf1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.860239580015418*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"c09789e5-ee1a-4ac3-876c-fac43897a86a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"i", "+", "j", "+", "k"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860239593162341*^9, 3.860239593162341*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"73a6216a-4ae4-4487-b6a9-5a329defa2e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7", ",", "8", ",", "9"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9", ",", "10", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "9", ",", "10", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "10", ",", "11", ",", "12"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8602395958343945`*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"164c0af0-eb3d-4f33-b44a-b5bbf52dd815"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "-", "j"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}], "//", 
  "Grid"}]], "Input",
 CellChangeTimes->{{3.860239744167761*^9, 3.8602397635264273`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"252e40a1-2eb9-4c12-9926-44a21fa0976e"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", 
     RowBox[{"-", "1"}]},
    {"1", "0"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.8602397456522336`*^9, 3.8602397641669807`*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"f4cd1db4-020c-44f1-94b1-e24ce002ce4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "+", "j"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "4", ",", "6"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.860239822594666*^9, 3.860239822594666*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"6321ae32-64a5-49ef-afbf-92e0ad8bb018"],

Cell[BoxData[
 TagBox[GridBox[{
    {"5", "6", "7"},
    {"6", "7", "8"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8602398232197084`*^9},
 CellLabel->
  "Out[84]//TableForm=",ExpressionUUID->"7b5ed0d9-4a30-4f35-ba75-\
efbae6fc0f81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "i", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8602398672987933`*^9, 3.8602398672987933`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"3a770e57-09f3-4e56-99d8-8dbe96edce2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8602398682562532`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"d23a2738-1e61-401b-b4c8-1fe77226e460"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", "j"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "i", ",", "3"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.8602398753993707`*^9, 3.8602398753993707`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"d474bc4a-091f-4a0a-99d7-29f258ff41db"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {"1"},
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"1"},
       {"2"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"1"},
       {"3"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"2"},
       {"2"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"2"},
       {"3"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>"},
    {GridBox[{
       {"3"},
       {"3"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{{1, 1}, {1, 2}, {1, 3}}, {{2, 2}, {2, 3}}, {{3, 
    3}}}]]], "Output",
 CellChangeTimes->{3.860239877915162*^9},
 CellLabel->
  "Out[86]//TableForm=",ExpressionUUID->"6adbba34-c37d-4f03-870c-\
dd02cfe421a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i", ",", "j"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", 
     RowBox[{"i", "++"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.86023988832211*^9, 3.860239912797634*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"df3755b2-2f79-4511-9d24-d9524345a410"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.860239914172726*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"005ffc0e-3215-48fa-9f74-9ad6aa829496"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "=", "0"}], ";", 
  RowBox[{"x", "++"}], ";", "x", " ", 
  RowBox[{"(*", 
   RowBox[{
   "applied", " ", "on", " ", "the", " ", "current", " ", "value", " ", "and",
     " ", "shown", " ", "next", " ", "time", " ", "x", " ", "is", " ", 
    "called"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.860240062430669*^9, 3.860240062430669*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"5e61e155-de60-48ff-b3fa-f738421f1ab5"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.8602400635401173`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"c778fcab-0635-4fb8-a394-35147ea7cadc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "x", "]"}], ";", 
  RowBox[{"x", "=", "0"}], ";", 
  RowBox[{"--", "x", " ", 
   RowBox[{"(*", 
    RowBox[{
    "applied", " ", "on", " ", "the", " ", "current", " ", "value", " ", 
     "and", " ", "shown", " ", "when", " ", "x", " ", "is", " ", "called"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8602400768836927`*^9, 3.8602400768836927`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"28af21e4-0cc7-479e-a417-d24d1fdb334b"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.860240078602442*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"af7be722-df69-4903-8595-7fee9fc9a151"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "=", "0"}], ";", 
  RowBox[{"--", "x", " ", 
   RowBox[{"(*", 
    RowBox[{
    "applied", " ", "on", " ", "the", " ", "current", " ", "value", " ", 
     "and", " ", "shown", " ", "when", " ", "x", " ", "is", " ", "called"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8602400843461523`*^9, 3.8602400893473854`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"b50ba649-6740-4e8b-b5a4-0bc5853a0a3f"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.860240093319998*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"e3516a5a-cb0a-440f-a2f7-a885ade2ddbd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomInteger", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], "/", ".1"}], "->", 
  "2"}]], "Input",
 CellChangeTimes->{{3.8602401119884014`*^9, 3.860240115719922*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"57f12e49-c28f-465e-afe0-f324820d9189"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "10.`", ",", "0.`", ",", "10.`", ",", "0.`", ",", "10.`", ",", "10.`", ",",
     "10.`", ",", "0.`", ",", "10.`", ",", "10.`"}], "}"}], "->", "2"}]], \
"Input",
 CellChangeTimes->{{3.860421477584199*^9, 
  3.860421477588597*^9}},ExpressionUUID->"ee561616-f3e3-4965-9aef-\
0083df037de7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"90", " ", "Degree"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], "]"}], "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.8602403224824395`*^9, 3.8602403224824395`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"50d9eb17-5596-4953-9cd5-ab0a2a3bbf46"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"0", "[", 
      RowBox[{"1", ",", "1"}], "]"}], 
     RowBox[{"0", "[", 
      RowBox[{"1", ",", "2"}], "]"}], 
     RowBox[{"0", "[", 
      RowBox[{"1", ",", "3"}], "]"}]},
    {
     RowBox[{"0", "[", 
      RowBox[{"2", ",", "1"}], "]"}], 
     RowBox[{"0", "[", 
      RowBox[{"2", ",", "2"}], "]"}], 
     RowBox[{"0", "[", 
      RowBox[{"2", ",", "3"}], "]"}]},
    {
     RowBox[{"0", "[", 
      RowBox[{"3", ",", "1"}], "]"}], 
     RowBox[{"0", "[", 
      RowBox[{"3", ",", "2"}], "]"}], 
     RowBox[{"0", "[", 
      RowBox[{"3", ",", "3"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.860240323029351*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"69ab3a2a-ad19-4476-a0ca-05ccd7de5227"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Array", "[", 
   RowBox[{"F", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], "]"}], "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.8602404093687963`*^9, 3.8602404093687963`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"645cb522-9483-49c3-8fd0-8b21be93c790"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"F", "[", 
      RowBox[{"1", ",", "1"}], "]"}], 
     RowBox[{"F", "[", 
      RowBox[{"1", ",", "2"}], "]"}]},
    {
     RowBox[{"F", "[", 
      RowBox[{"2", ",", "1"}], "]"}], 
     RowBox[{"F", "[", 
      RowBox[{"2", ",", "2"}], "]"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8602404104938707`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"15e31f83-d940-400b-a734-5dac9585941d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConstantArray", "[", 
  RowBox[{"\[Pi]", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.860240447806119*^9, 3.860240447806119*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"c14ba3eb-a807-4f65-be91-379646fdfef6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8602404484624243`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"86e917c0-7807-43a6-953a-c72d4acca901"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConstantArray", "[", 
  RowBox[{"\[Pi]", ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8602404677358723`*^9, 3.8602404677358723`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"afed55df-8b0d-4e71-911d-347f006cb5be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Pi]", ",", "\[Pi]", ",", "\[Pi]", ",", "\[Pi]"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8602404683454676`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"edd4e00b-e409-4e78-8339-90152f42e501"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ConstantArray", "[", 
   RowBox[{"\[Pi]", ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8602404773172607`*^9, 3.8602404773172607`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"48c784a7-e430-422a-8999-e7ce78de4ee0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\[Pi]", "\[Pi]", "\[Pi]", "\[Pi]"},
     {"\[Pi]", "\[Pi]", "\[Pi]", "\[Pi]"},
     {"\[Pi]", "\[Pi]", "\[Pi]", "\[Pi]"},
     {"\[Pi]", "\[Pi]", "\[Pi]", "\[Pi]"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8602404792080116`*^9},
 CellLabel->
  "Out[96]//MatrixForm=",ExpressionUUID->"62451cc1-00e0-488e-a35b-\
fe535eab0eb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SparseArray", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], "}"}], "->", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8602405226727533`*^9, 3.8602405226727533`*^9}, {
  3.8602405848797283`*^9, 3.8602405870987406`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"76d7cf3d-496c-4afe-a59b-eff433377666"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             
             RasterBox[{{{0.235431, 0.32765, 0.833291}, {0.772061, 0.92462, 
              0.998703}}, {{0.282325, 0.661868, 0.973082}, {0.235431, 0.32765,
               0.833291}}}, {{0, 0}, {2, 2}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             
             RasterBox[{{{0.235431, 0.32765, 0.833291}, {0.772061, 0.92462, 
              0.998703}}, {{0.282325, 0.661868, 0.973082}, {0.235431, 0.32765,
               0.833291}}}, {{0, 0}, {2, 2}}, {0, 1}], AspectRatio -> 1, Axes -> 
             False, Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.5`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "2", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, 2}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8602405237820883`*^9, 3.8602405899113116`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"1503b56c-a8f4-4c9f-a942-26cc216cc267"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.860240649235338*^9, 3.860240649235338*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"906c2b85-c64e-48e5-afff-110b1c727c76"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "2"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, 2}}]]]]], "Output",
 CellChangeTimes->{3.860240649797885*^9},
 CellLabel->
  "Out[99]//MatrixForm=",ExpressionUUID->"7e5c86bf-11ee-41b7-b172-\
ce5568467e1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpArray", "=", 
  RowBox[{"SparseArray", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "->", "\"\<A\>\""}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], "->", "\"\<A\>\""}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}], "->", "\"\<A\>\""}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}], "->", "\"\<A\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8602406610061088`*^9, 3.8602406830894213`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"6a79d44e-351e-4ac9-8c14-205471537d4a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmTKs4A
Bg+gNAKMmoNfHAAiwJ5E
              "], {{0, 0}, {4, 4}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
             Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQ26p8d9wspXP2c4wXbTH/ccX+xSLFx4GrXtmTKs4A
Bg+gNAKMmoNfHAAiwJ5E
              "], {{0, 0}, {4, 4}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
             Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
               Automatic, 
               "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
               Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.25`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "\"A\"", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "\"A\"", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "\"A\"", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "\"A\"", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {4, 4}, 0, {
   1, {{0, 1, 2, 3, 4}, {{1}, {2}, {3}, {4}}}, {"A", "A", "A", "A"}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.860240686095818*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"84e72bfa-4263-4b22-b61d-c238752446f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.860240705475477*^9, 3.860240705475477*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"e87dd7db-28ed-4c2e-86ee-e8db9287dabc"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"A\"\>", "0", "0", "0"},
     {"0", "\<\"A\"\>", "0", "0"},
     {"0", "0", "\<\"A\"\>", "0"},
     {"0", "0", "0", "\<\"A\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0, {
     1, {{0, 1, 2, 3, 4}, {{1}, {2}, {3}, {4}}}, {
      "A", "A", "A", "A"}}]]]]], "Output",
 CellChangeTimes->{3.8602407059913225`*^9},
 CellLabel->
  "Out[101]//MatrixForm=",ExpressionUUID->"c188a319-1b1c-4f3b-88b5-\
668c8b61e4cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "SpArray", "]"}]], "Input",
 CellChangeTimes->{{3.8602407211293135`*^9, 3.8602407211293135`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"2ef74f46-d624-4283-a601-c9ffef667802"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"A\"\>", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\<\"A\"\>", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "\<\"A\"\>", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "\<\"A\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.860240721613606*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"179d9cea-3f50-493e-97d3-2c1fba277f8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.8602407340775166`*^9, 3.8602407340775166`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"32fe38aa-4952-4459-bf2f-612145f491a5"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{3.8602407354057302`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"2efa6c74-587f-4c46-a98d-5c7626402c35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<This\>\"", ",", "\"\<is\>\"", ",", "\"\<A\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Nested\>\"", ",", "\"\<List\>\"", ",", "\"\<.\>\""}], 
    "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8602407679232903`*^9, 3.8602407679232903`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"9668ab08-39c3-4728-ab00-04073c1aaa01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"This\"\>", ",", "\<\"is\"\>", ",", "\<\"A\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Nested\"\>", ",", "\<\"List\"\>", ",", "\<\".\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8602407684076977`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"58674de5-e40b-40e7-9063-35c91cecb428"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Prime", "[", "i", "]"}], "+", 
    RowBox[{"Prime", "[", "j", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "2", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8602407764127927`*^9, 3.8602407764127927`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"5f59d14b-6460-4318-94ce-1fc3c53c8818"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "10", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.860240777037835*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"97cd9e5b-638c-488e-9b08-94af7c07d118"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"NestL", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Prime", "[", "i", "]"}], "+", 
      RowBox[{"RandomReal", "[", "j", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8602407891052656`*^9, 3.8602407891052656`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"893dddbe-e27a-4ce4-a4b0-dde8603594a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "NestL", "]"}]], "Input",
 CellChangeTimes->{{3.860240914275215*^9, 3.860240914275215*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"e374cc27-1722-4048-b36a-048610027c7e"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.860240914915882*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"c7a013f3-7b8b-464a-b186-5335b73612e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "NestL", "]"}]], "Input",
 CellChangeTimes->{{3.860240926677695*^9, 3.860240926677695*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"2a57e0cc-50b6-4694-abdd-e1473b44e0ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.860240928740217*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"16f25dcf-2a7a-418c-9dd6-9ca8aa5bc08e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V", "=", 
  RowBox[{"{", 
   RowBox[{"6", ",", "3", ",", "2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.860396593391494*^9, 3.8603965933924932`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"2cd279b3-272d-4e50-9f09-4c0f6f04d4c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "3", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8603965952727995`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"ec06a113-7063-4b59-a90a-6ac762d3e729"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Cross product: \>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"Cross", "[", 
     RowBox[{"V", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8603966253553777`*^9, 3.8603966253563776`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"1827379f-4e43-45dd-ac58-17a591656f8e"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Cross product: Cross[V, {1, 3, 2}]\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.860396627359129*^9, 3.8603969618345127`*^9, {3.8603970601627827`*^9, 
   3.8603970722167196`*^9}},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[4]:=",ExpressionUUID->"8509e96c-8e70-4924-b046-\
35e3eb7a05dc"],

Cell[BoxData["\[IndentingNewLine]"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.860396627359129*^9, 3.8603969618345127`*^9, {3.8603970601627827`*^9, 
   3.8603970676772738`*^9}},ExpressionUUID->"86e92db2-80aa-4bc7-8ae6-\
cd264551dca4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V", "=", 
  RowBox[{"{", 
   RowBox[{"6", ",", "3", ",", "2"}], "}"}]}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"eb3c69bd-48f0-4be3-8391-386206e7eb78"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "3", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8603970818528605`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a4409327-8222-4d94-9ec0-cb3e9de23172"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "V", "]"}]], "Input",
 CellChangeTimes->{{3.860396975967828*^9, 3.860396975968828*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"760af5ba-fb8c-4598-94fd-6e364705c0f2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"6"},
      {"3"},
      {"2"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.860397137603424*^9},
 CellLabel->
  "Out[8]//MatrixForm=",ExpressionUUID->"af495c23-f6c9-41a6-80f7-\
0dd5923e53d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Cross product: \>\"", "<>", 
   RowBox[{"ToString", "[", 
    RowBox[{"Cross", "[", 
     RowBox[{"V", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"cd074b0c-52ad-47ef-8728-c44161d78271"],

Cell[BoxData["\<\"Cross product: {0, -10, 15}\"\>"], "Print",
 CellChangeTimes->{3.860397133480424*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[7]:=",ExpressionUUID->"cca1d426-48e1-445b-aa86-\
dc5e4a9600a9"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8603970513946953`*^9, 
  3.8603970517465634`*^9}},ExpressionUUID->"e6dbfd10-4c5e-4fee-90d2-\
529350867eaf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "3", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "8", ",", "7"}], "}"}]}], "}"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8603971559653006`*^9, 3.8603971559653006`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b51f9d86-a7cb-4f40-9e12-3f94c5e7c41f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", "3", "1"},
     {"7", "8", "7"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.860397156537233*^9},
 CellLabel->
  "Out[9]//MatrixForm=",ExpressionUUID->"1439c1bb-e995-4b93-9af0-\
71241d646d62"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8603970462460184`*^9, 3.860397049051757*^9}},
 NumberMarks->False,ExpressionUUID->"c13b75a4-0d5a-45f4-8990-c2fe6a692e5c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.860397183105868*^9, 3.860397183106868*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"4cce0e20-b6ff-4197-8de6-329210bef2b6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"},
     {"1", "1", "1"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.860397183617411*^9},
 CellLabel->
  "Out[10]//MatrixForm=",ExpressionUUID->"5e18f7e5-337b-4956-a88c-\
1c94f6b5d1d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "Inverse", "]"}]], "Input",
 CellChangeTimes->{{3.860397042589222*^9, 3.8603970431409564`*^9}, {
  3.860398111992202*^9, 3.8603981197455664`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d2545b2c-d272-4714-9be2-51d0b233c9f1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{21., {6., 15.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{21., {6., 15.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Inverse",
              ButtonNote->"paclet:ref/Inverse"],
             "\"paclet:ref/Inverse\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Inverse\\\", \\\"[\\\", \
StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the inverse of a square \
matrix \\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\). \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Inverse", 
                    "paclet:ref/Inverse", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Inverse.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/Inverse.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"Modulus", "\[Rule]", "0"}], ",", 
                    RowBox[{"ZeroTest", "\[Rule]", "Automatic"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Inverse\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{16., {3., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{16., {3., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Inverse",
              ButtonNote->"paclet:ref/Inverse"],
             "\"paclet:ref/Inverse\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Inverse\\\", \\\"[\\\", \
StyleBox[\\\"m\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the inverse of a square \
matrix \\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\). \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Inverse\", \"[\", StyleBox[\"m\", \"TI\"], \"]\"}]\) \
gives the inverse of a square matrix \!\(\*StyleBox[\"m\", \"TI\"]\). ", 
    "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Inverse", "Web" -> 
      "http://reference.wolfram.com/language/ref/Inverse.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {Method -> Automatic, Modulus -> 0, ZeroTest -> Automatic}, 
    "Attributes" -> {Protected}, "FullName" -> "System`Inverse"], 
   True]]], "Output",
 CellChangeTimes->{3.8603981238534665`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"aaaf5008-d252-4119-ba1b-8a2d8017222f"]
}, Open  ]],

Cell["\[LineSeparator]", "Text",
 CellChangeTimes->{{3.8603970193818707`*^9, 
  3.860397038540588*^9}},ExpressionUUID->"6ec3e0cf-86d7-471c-94e8-\
3dca60586fb1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"list2", "=", 
   RowBox[{"List", "[", 
    RowBox[{"34", ",", "6", ",", "77", ",", "4", ",", "5", ",", "6"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.86040003688345*^9, 3.860400036884448*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"32638d38-f3d0-478d-af81-2fd99c784a99"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Part", "[", 
   RowBox[{"list2", ",", 
    RowBox[{"1", ";;", "4"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"from", " ", "items", " ", "1", " ", "to", " ", "4"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.8604000487049675`*^9, 3.8604000487049675`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8a6285d2-f38b-4bbe-b519-328749bb4e1b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"34", ",", "6", ",", "77", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.8604000500195827`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"39a08630-8cf1-4b8b-8963-d1c96f863218"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{"list2", ",", 
   RowBox[{"Exp", "[", "x", "]"}], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.860400714315794*^9, 3.860400736707651*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"7b05bc12-9b4f-4c52-a20e-39e8113ed9ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"34", ",", "6", ",", "77", ",", 
   SuperscriptBox["\[ExponentialE]", "x"], ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8604007150718517`*^9, 3.860400739405627*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"b93e3624-1ee0-4c1a-ba05-3616e7cc7f1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "12", ",", "2", ",", "43", ",", "24", ",", "553", ",", "65", ",",
     "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8604023218317137`*^9, 3.8604023310608177`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"a24ddf28-2b04-4007-9650-e8cb01c8284a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "65", ",", "553", ",", "24", ",", "43", ",", "2", ",", "12", ",", 
   "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.8604023235165024`*^9, 3.86040233270123*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"d05d03b7-f6b8-4368-b80f-f603ff2e32ef"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.860402287901455*^9, 
  3.8604023076304326`*^9}},ExpressionUUID->"d1341abd-0c77-4b11-b809-\
97420e76d3d2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "Partition", "]"}]], "Input",
 CellChangeTimes->{{3.860402395060407*^9, 3.8604024102198734`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"5bfa9631-b553-40c0-bf7f-b93c366908c6"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{21., {6., 15.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{21., {6., 15.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Partition",
              ButtonNote->"paclet:ref/Partition"],
             "\"paclet:ref/Partition\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) partitions \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\
\\\"]\\) into nonoverlapping sublists of length \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
generates sublists with offset \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\
\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) partitions a nested list into blocks of size \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis].\\n\\!\\(\\*RowBox[{\\\
\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"d\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) uses offset \\!\\(\\*SubscriptBox[StyleBox[\\\"d\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) at level \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) in \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"L\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) specifies \
that the first element of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) \
should appear at position \\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"L\\\", \\\"TI\\\"]]\\) in the first sublist, and \
the last element of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) should \
appear at or after position \\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"R\\\", \\\"TI\\\"]]\\) in the last sublist. If \
additional elements are needed, Partition fills them in by treating \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) as cyclic. \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"L\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) pads if necessary by \
repeating the element \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"L\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) pads if \
necessary by cyclically repeating the elements \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"L\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"]\\\"}]\\) uses no padding, and so can \
yield sublists of different lengths. \\n\\!\\(\\*RowBox[{\\\"Partition\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"nlist\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"dlist\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"klist\\\", \\\
\"TI\\\"], StyleBox[\\\"L\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"klist\\\", \\\"TI\\\"], StyleBox[\\\"R\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"padlist\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) specifies alignments and padding in a nested \
list. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Partition", 
                    "paclet:ref/Partition", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Partition.\
html"], None}, "http://reference.wolfram.com/language/ref/Partition.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Partition\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{16., {3., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{16., {3., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Partition",
              ButtonNote->"paclet:ref/Partition"],
             "\"paclet:ref/Partition\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) partitions \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\
\\\"]\\) into nonoverlapping sublists of length \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
generates sublists with offset \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\
\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) partitions a nested list into blocks of size \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis].\\n\\!\\(\\*RowBox[{\\\
\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"d\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) uses offset \\!\\(\\*SubscriptBox[StyleBox[\\\"d\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) at level \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) in \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"L\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) specifies \
that the first element of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) \
should appear at position \\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"L\\\", \\\"TI\\\"]]\\) in the first sublist, and \
the last element of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) should \
appear at or after position \\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"R\\\", \\\"TI\\\"]]\\) in the last sublist. If \
additional elements are needed, Partition fills them in by treating \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) as cyclic. \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"L\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) pads if necessary by \
repeating the element \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"L\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) pads if \
necessary by cyclically repeating the elements \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"L\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"]\\\"}]\\) uses no padding, and so can \
yield sublists of different lengths. \\n\\!\\(\\*RowBox[{\\\"Partition\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"nlist\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"dlist\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"klist\\\", \\\
\"TI\\\"], StyleBox[\\\"L\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"klist\\\", \\\"TI\\\"], StyleBox[\\\"R\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"padlist\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) specifies alignments and padding in a nested \
list. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Partition\", \"[\", RowBox[{StyleBox[\"list\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) partitions \
\!\(\*StyleBox[\"list\", \"TI\"]\) into nonoverlapping sublists of length \
\!\(\*StyleBox[\"n\", \"TI\"]\). \n\!\(\*RowBox[{\"Partition\", \"[\", \
RowBox[{StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"], \",\", \
StyleBox[\"d\", \"TI\"]}], \"]\"}]\) generates sublists with offset \
\!\(\*StyleBox[\"d\", \"TI\"]\). \n\!\(\*RowBox[{\"Partition\", \"[\", \
RowBox[{StyleBox[\"list\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) partitions a nested \
list into blocks of size \!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\)\[Times]\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\)\[Times]\[Ellipsis].\n\!\(\*RowBox[{\"Partition\", \
\"[\", RowBox[{StyleBox[\"list\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"d\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"d\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) uses offset \
\!\(\*SubscriptBox[StyleBox[\"d\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) at \
level \!\(\*StyleBox[\"i\", \"TI\"]\) in \!\(\*StyleBox[\"list\", \"TI\"]\). \
\n\!\(\*RowBox[{\"Partition\", \"[\", RowBox[{StyleBox[\"list\", \"TI\"], \",\
\", StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"d\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"L\", \
\"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"R\", \
\"TI\"]]}], \"}\"}]}], \"]\"}]\) specifies that the first element of \
\!\(\*StyleBox[\"list\", \"TI\"]\) should appear at position \
\!\(\*SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"L\", \"TI\"]]\) in the \
first sublist, and the last element of \!\(\*StyleBox[\"list\", \"TI\"]\) \
should appear at or after position \!\(\*SubscriptBox[StyleBox[\"k\", \
\"TI\"], StyleBox[\"R\", \"TI\"]]\) in the last sublist. If additional \
elements are needed, Partition fills them in by treating \
\!\(\*StyleBox[\"list\", \"TI\"]\) as cyclic. \n\!\(\*RowBox[{\"Partition\", \
\"[\", RowBox[{StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"], \
\",\", StyleBox[\"d\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"L\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"R\", \"TI\"]]}], \
\"}\"}], \",\", StyleBox[\"x\", \"TI\"]}], \"]\"}]\) pads if necessary by \
repeating the element \!\(\*StyleBox[\"x\", \"TI\"]\). \n\
\!\(\*RowBox[{\"Partition\", \"[\", RowBox[{StyleBox[\"list\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"d\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"L\", \
\"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"R\", \
\"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) pads if necessary \
by cyclically repeating the elements \!\(\*SubscriptBox[StyleBox[\"x\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]\). \n\!\(\*RowBox[{\"Partition\", \"[\", \
RowBox[{StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"], \",\", \
StyleBox[\"d\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\
\"k\", \"TI\"], StyleBox[\"L\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \
\"TI\"], StyleBox[\"R\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
\"}\"}]}], \"]\"}]\) uses no padding, and so can yield sublists of different \
lengths. \n\!\(\*RowBox[{\"Partition\", \"[\", RowBox[{StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"nlist\", \"TI\"], \",\", StyleBox[\"dlist\", \
\"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"klist\", \
\"TI\"], StyleBox[\"L\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"klist\", \
\"TI\"], StyleBox[\"R\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"padlist\", \
\"TI\"]}], \"]\"}]\) specifies alignments and padding in a nested list. ", 
    "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Partition", "Web" -> 
      "http://reference.wolfram.com/language/ref/Partition.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`Partition"], True]]], "Output",
 CellChangeTimes->{3.860402411845023*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"3f140215-aff9-4dfc-8ab6-2a316fed6950"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "12", ",", "2", ",", "43", ",", "24", ",", "553"}], 
    "}"}], ",", "3", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8604030157085485`*^9, 3.8604030157085485`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"c5cfcf46-1972-4d49-90cd-454179ebbc87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "12", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "2", ",", "43"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "43", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", "24", ",", "553"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.860403016216834*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"766e6bef-0be5-4143-94c3-c11f1d42aa9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tbl", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "j", ",", "k", ",", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<Red\>\"", ",", "\"\<Blue\>\""}], "}"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], "//", 
   "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.86040395854008*^9, 3.86040395854108*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"b4bf0550-fb6c-4a97-9ca6-bcdaa4e15474"],

Cell[BoxData[
 TagBox[GridBox[{
    {GridBox[{
       {"1", "1", "1", "\<\"Blue\"\>"},
       {"1", "1", "2", "\<\"Red\"\>"},
       {"1", "1", "3", "\<\"Red\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {{
           Offset[0.2]}}}], GridBox[{
       {"1", "2", "1", "\<\"Red\"\>"},
       {"1", "2", "2", "\<\"Blue\"\>"},
       {"1", "2", "3", "\<\"Blue\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {{
           Offset[0.2]}}}], GridBox[{
       {"1", "3", "1", "\<\"Red\"\>"},
       {"1", "3", "2", "\<\"Blue\"\>"},
       {"1", "3", "3", "\<\"Red\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {{
           Offset[0.2]}}}]},
    {GridBox[{
       {"2", "1", "1", "\<\"Red\"\>"},
       {"2", "1", "2", "\<\"Blue\"\>"},
       {"2", "1", "3", "\<\"Red\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {{
           Offset[0.2]}}}], GridBox[{
       {"2", "2", "1", "\<\"Blue\"\>"},
       {"2", "2", "2", "\<\"Blue\"\>"},
       {"2", "2", "3", "\<\"Red\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {{
           Offset[0.2]}}}], GridBox[{
       {"2", "3", "1", "\<\"Blue\"\>"},
       {"2", "3", "2", "\<\"Blue\"\>"},
       {"2", "3", "3", "\<\"Blue\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {{
           Offset[0.2]}}}]},
    {GridBox[{
       {"3", "1", "1", "\<\"Red\"\>"},
       {"3", "1", "2", "\<\"Red\"\>"},
       {"3", "1", "3", "\<\"Blue\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {{
           Offset[0.2]}}}], GridBox[{
       {"3", "2", "1", "\<\"Red\"\>"},
       {"3", "2", "2", "\<\"Blue\"\>"},
       {"3", "2", "3", "\<\"Blue\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {{
           Offset[0.2]}}}], GridBox[{
       {"3", "3", "1", "\<\"Blue\"\>"},
       {"3", "3", "2", "\<\"Blue\"\>"},
       {"3", "3", "3", "\<\"Blue\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {{
           Offset[0.2]}}}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.860403959124214*^9},
 CellLabel->
  "Out[20]//TableForm=",ExpressionUUID->"93aa4ed9-4f12-4d54-b1e3-\
b5f068709eb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"Tbl", ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", "_", ",", "_", ",", "\"\<Blue\>\""}], "}"}], ",", "4"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.8604040407479553`*^9, 3.8604040407489567`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"0b6b4ed0-6d81-4fe6-86c8-53c47c2d52da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "3", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "3", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "2", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "3", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "1", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "2", ",", "\<\"Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "\<\"Blue\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8604040412019196`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"21d4cf9a-6fc7-4873-8abf-1ac2e9a4ba8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"list2", ",", 
   RowBox[{"z_", "/;", 
    RowBox[{"z", ">", "5"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860404182455638*^9, 3.860404207170232*^9}, 
   3.8604042732542925`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"4ebb66e0-0ff1-4c0c-9306-14df57b7046c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"34", ",", "6", ",", "77", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.8604041829975653`*^9, 3.860404211933999*^9}, 
   3.860404275513296*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"6dddda7d-ccfb-497a-84b8-b18e22d09c6f"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAIBz/h9o5jDP
    "], {{0, 158}, {277, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{333.66666666666583`, Automatic},
  ImageSizeRaw->{277, 158},
  PlotRange->{{0, 277}, {0, 158}}]], "Input",
 CellChangeTimes->{{3.8604044308118343`*^9, 3.8604044326244516`*^9}, 
   3.8604083084381227`*^9, {3.8604086866312265`*^9, 
   3.8604087091632195`*^9}},ExpressionUUID->"b42b8ca5-5f3c-4a5d-89d8-\
2321be5f5036"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.860408711106393*^9, 
  3.8604087111133947`*^9}},ExpressionUUID->"7c83d2cc-b3a8-49ef-9406-\
cf09ea562ce5"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.860408706370897*^9, 
  3.8604087070498285`*^9}},ExpressionUUID->"2cbf2e65-a3e5-4a8a-b039-\
0155732a27da"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"#", "^", 
       RowBox[{"-", "1"}]}], "]"}], "[", "z", "]"}], "\[Equal]", 
    RowBox[{"#", "^", 
     RowBox[{"-", "1"}]}]}], "&"}], "[", "z", "]"}]], "Input",
 CellChangeTimes->{{3.8604089468007803`*^9, 
  3.8604089468017797`*^9}},ExpressionUUID->"10a2341f-f2fa-49c9-baf8-\
ed521bc7adaa"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8604088768318872`*^9, 
  3.860408891083911*^9}},ExpressionUUID->"158ce869-e5fb-4aa5-bdaa-\
a2d637f5240b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"N", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1", ",", "12", ",", "3", ",", "1"}], "}"}]}]],\
 "Input",
 CellChangeTimes->{{3.8604088954179134`*^9, 3.8604088954229136`*^9}, 
   3.86040927549125*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"67a3d5b1-cd94-4529-95e5-6fbe4218515e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "1.`", ",", "1.`", ",", "12.`", ",", "3.`", ",", "1.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.860409276014426*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"098bcd27-f798-4442-9396-2e8e1baba477"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sqrt", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "2", ",", "4", ",", "16"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8604092823313074`*^9, 3.860409282332307*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"2c38390b-23f7-4db1-a5b0-cd97fdc7f976"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[ImaginaryI]", ",", 
   SqrtBox["2"], ",", "2", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.860409282783245*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"7c8c760b-4fa4-4946-8db9-494fd6578095"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"table1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Dog\>\"", ",", "\"\<Wolf\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Cat\>\"", ",", "\"\<Leopard\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Pigeon\>\"", ",", "\"\<Shark\>\""}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.860409496295498*^9, 3.8604094962964983`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"0d608651-a1b8-4357-a3b7-a50890860f7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "table1", "]"}]], "Input",
 CellChangeTimes->{{3.860409503854115*^9, 3.860409503855115*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"aa6f1a90-cb86-407f-9d60-132560af6041"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Dog\"\>", "\<\"Wolf\"\>"},
    {"\<\"Cat\"\>", "\<\"Leopard\"\>"},
    {"\<\"Pigeon\"\>", "\<\"Shark\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8604095044195504`*^9},
 CellLabel->
  "Out[32]//TableForm=",ExpressionUUID->"51bc3be9-8500-44ff-b73f-\
8d9ebc042917"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"table1", ",", 
   RowBox[{"TableHeadings", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Row 1\>\"", ",", "\"\<Row 2\>\"", ",", "\"\<Row 3\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Column 1\>\"", ",", "\"\<Column 2\>\"", ",", "\"\<Column 3\>\""}],
        "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8604095338681602`*^9, 3.8604095446409245`*^9}, 
   3.860421477650564*^9},ExpressionUUID->"a37af675-5740-4004-be0d-\
dec626fc29e3"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"Column 1\"\>",
       HoldForm], 
      TagBox["\<\"Column 2\"\>",
       HoldForm]},
     {
      TagBox["\<\"Row 1\"\>",
       HoldForm], "\<\"Dog\"\>", "\<\"Wolf\"\>"},
     {
      TagBox["\<\"Row 2\"\>",
       HoldForm], "\<\"Cat\"\>", "\<\"Leopard\"\>"},
     {
      TagBox["\<\"Row 3\"\>",
       HoldForm], "\<\"Pigeon\"\>", "\<\"Shark\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{"Row 1", "Row 2", "Row 3"}, {
      "Column 1", "Column 2", "Column 3"}}]]]], "Output",
 CellChangeTimes->{3.8604095353890724`*^9},
 CellLabel->
  "Out[34]//TableForm=",ExpressionUUID->"3da90ecc-3feb-4f02-b94b-\
750c7ef5b596"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"TabData", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"5", "^", "i"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"TableForm", "[", 
  RowBox[{"TabData", ",", 
   RowBox[{"TableHeadings", "\[RightArrow]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.860409598494745*^9, 3.8604095984957447`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"b2624674-dcf9-4a90-8847-da8d3cf6f22d"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"},
    {"5", "25", "125", "625", "3125", "15625", "78125", "390625", "1953125", 
     "9765625"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, 
    RightArrow[TableHeadings, Automatic]]]]], "Output",
 CellChangeTimes->{3.860409599503954*^9},
 CellLabel->
  "Out[36]//TableForm=",ExpressionUUID->"4baafa59-d055-4a24-aed5-\
3e0bab17499e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "TabData", "]"}], ",", 
   RowBox[{"TableHeadings", "\[RightArrow]", "Automatic"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"Out", "[", "38", "]"}], "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.860409622556714*^9, 3.860409629354701*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"5dca44f4-f619-4ea5-bfbb-8509c2803213"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "5"},
    {"2", "25"},
    {"3", "125"},
    {"4", "625"},
    {"5", "3125"},
    {"6", "15625"},
    {"7", "78125"},
    {"8", "390625"},
    {"9", "1953125"},
    {"10", "9765625"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, 
    RightArrow[TableHeadings, Automatic]]]]], "Output",
 CellChangeTimes->{{3.8604096249230757`*^9, 3.860409630003912*^9}},
 CellLabel->
  "Out[38]//TableForm=",ExpressionUUID->"1190002b-804a-48b6-ab1f-\
bd302eaa2fe1"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.860409635015731*^9, 
  3.860409635034017*^9}},ExpressionUUID->"4cd75308-a8ad-4a6d-bab2-\
e1ae4298d451"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.860409750612438*^9, 
  3.860409787825495*^9}},ExpressionUUID->"aabd2a0a-a6b5-42b9-b01f-\
79baa694e215"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<Jhon\>\"", ",", "23", ",", "\"\<male\>\"", ",", 
      "\"\<Portugal\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Mary\>\"", ",", "30", ",", "\"\<female\>\"", ",", "\"\<USA\>\""}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Peter\>\"", ",", "33", ",", "\"\<male\>\"", ",", "\"\<France\>\""}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Julia\>\"", ",", "53", ",", "\"\<female\>\"", ",", 
      "\"\<Netherlands\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Andrea\>\"", ",", "45", ",", "\"\<female\>\"", ",", 
      "\"\<Brazil\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Jeff\>\"", ",", "24", ",", "\"\<male\>\"", ",", "\"\<Mexico\>\""}], 
     "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8604100151285257`*^9, 3.8604100151285257`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"7d3d23a5-8522-4670-98ec-569f666568b9"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 6, "Length" -> 6, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["female", "male"]], 
            TypeSystem`Atom[String]}], 6], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`RowShape[{
             TypeSystem`PackageScope`AtomShape[57.60000000000001], 
             TypeSystem`PackageScope`AtomShape[34], 
             TypeSystem`PackageScope`AtomShape[54.], 
             TypeSystem`PackageScope`AtomShape[105.60000000000002`]}]], 
          6, {}], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[922546352], "Type" -> 
        TypeSystem`Vector[
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[
             TypeSystem`Enumeration["female", "male"]], 
            TypeSystem`Atom[String]}], 6], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[922546352]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Pane[
                Annotation["Jhon", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[1, 1]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["23"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[1, 2]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["male", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[1, 3]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Portugal", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[1, 4]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Mary", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[2, 1]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["30"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[2, 2]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[2, 3]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["USA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[2, 4]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Peter", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[3, 1]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["33"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[3, 2]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["male", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[3, 3]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["France", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[3, 4]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Julia", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[4, 1]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["53"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[4, 2]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[4, 3]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Netherlands", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[4, 4]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Andrea", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[5, 1]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["45"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[5, 2]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["female", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[5, 3]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Brazil", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[5, 4]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Jeff", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[6, 1]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["24"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[6, 2]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["male", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[6, 3]], "Mouse"], 
                ImageSize -> {{54., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Mexico", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
                  GeneralUtilities`Slice[6, 4]], "Mouse"], 
                ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 995302020][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 995302020]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[995302020][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {331., {117., 126.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.860410474427103*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"04669f4f-8d06-4fc5-84af-221c275845e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"$ImportFormats", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8604174358398952`*^9, 3.8604174358398952`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"305d7b19-4a70-4bf4-956e-0b3607764780"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"\<\"3DS\"\>", ",", "\<\"ACO\"\>", ",", "\<\"Affymetrix\"\>", 
    ",", "\<\"AgilentMicroarray\"\>", ",", "\<\"AIFF\"\>", 
    ",", "\<\"ApacheLog\"\>", ",", "\<\"ArcGRID\"\>", ",", "\<\"AU\"\>", 
    ",", "\<\"AVI\"\>", ",", "\<\"Base64\"\>", ",", 
    RowBox[{"\[LeftSkeleton]", "191", "\[RightSkeleton]"}], 
    ",", "\<\"WXF\"\>", ",", "\<\"XBM\"\>", ",", "\<\"XHTML\"\>", 
    ",", "\<\"XHTMLMathML\"\>", ",", "\<\"XLS\"\>", ",", "\<\"XLSX\"\>", 
    ",", "\<\"XML\"\>", ",", "\<\"XPORT\"\>", ",", "\<\"XYZ\"\>", 
    ",", "\<\"ZIP\"\>"}], "}"}],
  Short[#, 5]& ]], "Output",
 CellChangeTimes->{3.8604174369727163`*^9},
 CellLabel->
  "Out[43]//Short=",ExpressionUUID->"ff660842-a8eb-48d1-889f-db5508463d7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<https://www1.ncdc.noaa.gov/pub/data/igra/igra2-country-\nlist.\ntxt\>\
\"", ",", "\"\<HTML\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.860418496247963*^9, 3.860418496248963*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"860e6c56-63e4-4bc8-93a4-8d16e3265172"],

Cell[BoxData[
 TagBox["$Failed",
  Short]], "Output",
 CellChangeTimes->{3.860418500928439*^9},
 CellLabel->
  "Out[44]//Short=",ExpressionUUID->"1b645a20-1e71-49ca-9663-010326aba66f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", 
  RowBox[{"$ExportFormats", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8604186779127192`*^9, 3.8604186779127192`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"81ee4e67-5e63-494e-ac95-8ec8d763bd3d"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"\<\"3DS\"\>", ",", "\<\"ACO\"\>", ",", "\<\"AIFF\"\>", 
    ",", "\<\"AU\"\>", ",", "\<\"AVI\"\>", ",", "\<\"Base64\"\>", 
    ",", "\<\"Binary\"\>", ",", "\<\"Bit\"\>", ",", "\<\"BMP\"\>", 
    ",", "\<\"BSON\"\>", ",", "\<\"Byte\"\>", ",", "\<\"BYU\"\>", 
    ",", "\<\"BZIP2\"\>", ",", 
    RowBox[{"\[LeftSkeleton]", "153", "\[RightSkeleton]"}], 
    ",", "\<\"WMLF\"\>", ",", "\<\"WXF\"\>", ",", "\<\"X3D\"\>", 
    ",", "\<\"XBM\"\>", ",", "\<\"XHTML\"\>", ",", "\<\"XHTMLMathML\"\>", 
    ",", "\<\"XLS\"\>", ",", "\<\"XLSX\"\>", ",", "\<\"XML\"\>", 
    ",", "\<\"XYZ\"\>", ",", "\<\"ZIP\"\>", ",", "\<\"ZPR\"\>"}], "}"}],
  Short[#, 5]& ]], "Output",
 CellChangeTimes->{3.8604186786116076`*^9},
 CellLabel->
  "Out[45]//Short=",ExpressionUUID->"50bf6e1e-7217-402f-a20c-9b06951b803e"],

Cell[BoxData[
 TemplateBox[{
  "FetchURL","conopen",
   "\"The connection to URL \
\\!\\(\\*RowBox[{\\\"\\\\\\\"https://www1.ncdc.noaa.gov/pub/data/igra/igra2-\
country-\\\\\\\\nlist.\\\\\\\\ntxt\\\\\\\"\\\"}]\\) cannot be opened. If the \
URL is correct, you might need to configure your firewall program, or you \
might need to set a proxy in the Internet connectivity tab of the Preferences \
dialog (or by calling SetInternetProxy).  For HTTPS connections, you might \
need to inspect the authenticity of the server's SSL certificate and choose \
to accept it.\"",2,44,7,34035624239959115710,"Local",
   "Utilities`URLTools`FetchURL"},
  "MessageTemplate2"]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.8604097519105024`*^9, 3.860409802529061*^9}, 
   3.8604104741156015`*^9, 3.860418500917436*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[44]:=",ExpressionUUID->"778505ac-77ad-4d8e-8667-\
a52501d0b9a9"],

Cell[BoxData[
 TemplateBox[{
  "PacletManager`PacletInstall","instl",
   "\"An error occurred installing paclet from file \\!\\(\\*RowBox[{\\\"\\\\\
\\\"C:\\\\\\\\\\\\\\\\Users\\\\\\\\\\\\\\\\Administrator\\\\\\\\\\\\\\\\\
AppData\\\\\\\\\\\\\\\\Roaming\\\\\\\\\\\\\\\\Mathematica\\\\\\\\\\\\\\\\\
Paclets\\\\\\\\\\\\\\\\Temporary\\\\\\\\\\\\\\\\UnitTable-13.0.32908168.\
paclet\\\\\\\"\\\"}]\\): \\!\\(\\*RowBox[{\\\"\\\\\\\"Not a valid \
paclet\\\\\\\"\\\"}]\\). \\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\"\\\"}]\\)\"",2,
   42,6,34035624239959115710,"Local","PacletManager`PacletInstall"},
  "MessageTemplate2"]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.8604097519105024`*^9, 3.860409802529061*^9}, 
   3.8604104741156015`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[42]:=",ExpressionUUID->"70b11de0-3e79-4248-a8da-\
2dc56c15979b"],

Cell[BoxData[
 TemplateBox[{
  "PacletManager`CreatePaclet","badppi",
   "\"The paclet \\!\\(\\*RowBox[{\\\"\\\\\\\"C:\\\\\\\\\\\\\\\\Users\\\\\\\\\
\\\\\\\\Administrator\\\\\\\\\\\\\\\\AppData\\\\\\\\\\\\\\\\Roaming\\\\\\\\\\\
\\\\\\Mathematica\\\\\\\\\\\\\\\\Paclets\\\\\\\\\\\\\\\\Temporary\\\\\\\\\\\\\
\\\\UnitTable-13.0.32908168.paclet\\\\\\\"\\\"}]\\) does not have a properly \
formatted PacletInfo.m or PacletInfo.wl file. You can use the VerifyPaclet \
function to get more detailed information about the error.\"",2,42,5,
   34035624239959115710,"Local","PacletManager`CreatePaclet"},
  "MessageTemplate2"]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.8604097519105024`*^9, 3.860409802529061*^9}, 
   3.860410474094597*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[42]:=",ExpressionUUID->"9b1f0680-8095-49f7-b3bb-\
fb6ec90c725f"],

Cell[BoxData[
 TemplateBox[{
  "Insert","ins",
   "\:f3b5Cannot insert at position \!\({1}\) in TabData2\:f3b5",2,41,4,
   34035624239959115710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.8604097519105024`*^9, 
  3.860409802529061*^9}},ExpressionUUID->"0194d155-2248-4e18-add1-\
3741c5a8f22e"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.860409781532799*^9, 
  3.8604097815484247`*^9}},ExpressionUUID->"2bd892a0-0911-4988-8e17-\
813cd4811d7a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", "x", "]"}], "/", "x"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<New Log plot\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8604191911228623`*^9, 3.8604192035920563`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"056805eb-a88a-4ceb-b1cd-37cc490c73c9"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Rv8HaVYEWA==
       "]]},
     Annotation[#, "Charting`Private`Tag$29080#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., -2.7572351553927934`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Quiet[
      Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"New Log plot\"", TraditionalForm],
  PlotRange->{{1, 20}, {-2.7572351553927934`, -1.000000079325681}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, Quiet[
      Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, {
    Automatic, {{-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.1\"", 0.1, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.3\"", 0.3, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.120263536200091, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.9661128563728327`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.8325814637483102`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.7147984280919266`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.5141277326297755`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.4271163556401458`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.3470736479666092`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2729656758128873`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.1394342831883648`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.0788096613719298`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.0216512475319814`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.9675840262617056, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.8675005677047231, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.8209805520698302, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.7765287894989963, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.7339691750802004, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.8604191916803513`*^9, 3.8604192077034426`*^9}},
 CellLabel->"Out[47]=",ExpressionUUID->"6e71ea1f-216d-400d-834b-3aee816c3468"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"x", "+", 
    RowBox[{"(", 
     RowBox[{"6", "/", "x"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<New Log\nplot\>\""}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", "14"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860419244904254*^9, 3.860419271065413*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"dfab2be9-2e46-4e0e-8122-6f655be36901"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$29757#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.5890269194248596`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Quiet[
      Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"New Log\\nplot\"", TraditionalForm],
  PlotRange->NCache[{{0., 19.9999996122449}, {1.5890269194248596`, 
      Log[14]}}, {{0., 19.9999996122449}, {1.5890269194248596`, 
    2.6390573296152584`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 0}},
  Ticks->FrontEndValueCache[{Automatic, Quiet[
      Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, {
    Automatic, {{1.791759469228055, 
       FormBox["6", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox["8", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.4849066497880004`, 
       FormBox["12", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.6390573296152584`, 
       FormBox["14", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.5040773967762742`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.7047480922384253`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.8718021769015913`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0149030205422647`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1400661634962708`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.2512917986064953`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.3513752571634776`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.3978952727983707`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.4423470353692043`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.5257286443082556`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.5649493574615367`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.6026896854443837`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.860419266545559*^9, 3.8604192735672193`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"e7cbcf1e-f6d1-4265-9c92-4509e9f6bc66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"AxesOrigin", "->", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.86041932787208*^9, 3.8604193340601435`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"b65e1fd1-7285-41bb-99d8-9e0db5feb61d"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF1f831XccwHFf5jAknNFMV77EuEmocTDn1ZoshTAdOiZfdkYHjTmE6UhS
6CgdZFaKnUtjddxENevyKtzj28x3ypc63DHVfP/SdVfutnNevT8/PM/jT3ia
hMf6faOkoKCQ8l//awP6L+VyOZIQu26WvS6TIwl3au0sllflSIK9pVf49Cs5
kuCokzny+7AcSdgrWez4UShHEvyyum7tDpEjCUndmSciGzeQhIEBjZePw94i
CbxHsR84bn2DJNyLblHZPC5DEkJz7RaeZqwjCdL81GwEKZIg0HpmUDyxhiSU
HLSL789ZRRIyYsKSrTxWkIRU5V+S4meXkISw9O7tQ5WLSMKVhqnikqgFJOG3
55aat03nkAQz7b37/G+8QhLu8rOjJiUzSMJzcY2xg8M0kjBlfcUe70uQBJ20
KgcbxQkkwdph3rpieQxJOOs221OfPIwk6PlXXz66pQ9JuLsm3ty2vQNJqBid
uvgisxFJGDmlX3p9dyOSoGX0xR3fyQYk4WRoZV89NCAJ7lNRWy7IHiIJM3Pz
Zfy4eiSBrySrjQ6qQxKOCfjibep1SEK+W9BQ/6+1SILsvEjqol+LJHRqnHbV
7K1BEp7w1S4dvViNJAT7bq0b/bocSfh7edUpsUWAJJwq6kYtcwGSUDKa0fnZ
9E9IQl1nn/hw7w0kQbgSYzYzUogk/OFkvMuwpABJmEvrd/YOzkcSAnUTyo9j
HpLwpYuWkmL7OSQhX5xgEHnoLJLQc3jUtqsrHUm41uaD9hVJSMKH47y5jap4
JGGHZNCpKDgaSbDQjPvBJjIMSUgfsBwwbPZCEqw3j0ep7NzDHFrMKNWWBjIX
Dn+8FBsfwUwtcO+I3hPH3EhLuVa6K5GZHnU7pp//PbPZOCfrunYGM7PINM7x
UibTXVMU2KuRxWx7PWeloprLjIzkR9zfyGfWq6cONiUKmGU79fqFpuXM8z7C
npJuTv8iSedJq5vMBRPPJv54JdPCiSfMd6tmtteGuNXk1DE/mVQ0OhOITLOF
h+vOTe1MD8HTLu/APuZ+L13l1XvDzLyQ4XTbB2PMVm/eJh/dCeasiV5a31UJ
MzFhR1ie/jRzeEzbL6Jthhma8ulfqp6vmM07HC80q8wxLd4XzZQfWGDyRNH7
VbIXmQoypar4ySXma9+GY2LzFebonhBD88xVZlyAto7p2BrToPDPwPd4UmZ1
UNnPy8nrzADX0wfaGmTMmmMnTJ3f/MOUqn+uXH/kLdOv18WBV7zBVHfReCy6
zvm4fOTQVwJO2+SUsGvVnFrbHuQaiDnbY+wlekuce9WsLmt5ypnS76QfVfty
CkdbK7wCOI2EEQ9zwznfHCmfVk/hfCDY5qp6k/PbTfOtN29xWiQ1+rnXcBYe
DD5+TsQZv3i1QLmfkx8UZSR4wjnR4lS17xmnT/GTxjMvONWUKj1M5jkxOmng
0QrnyUH3kFAZ57vvvvNfK8TqcA==
       "]]},
     Annotation[#, "Charting`Private`Tag$30315#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 2.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {0., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.860419328567259*^9, 3.86041933668126*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"1e089cb1-f55b-4d94-80a2-9c4d0a3e878c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"ImageSize", "->", "Small"}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"AspectRatio", "->", "0.5"}]}], "]"}]}], "}"}], "]"}], " ", 
  RowBox[{
  "(*", "\:5bbd\:9ad8\:6bd4\:6307\:7684\:662f\:5750\:6807\:7684\:5206\:5ea6\
\:503c\:7684\:76f8\:5bf9\:5bbd\:5ea6\:5427", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8604193602861586`*^9, 3.860419370305088*^9}, {
  3.8604194180051346`*^9, 
  3.860419441959151*^9}},ExpressionUUID->"0890c72e-fec9-4933-a5a1-\
e60f3365b7d9"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
yJirVKPmZxSgNkv5H+OU3bOLFeH//1/4PyOjd/A=
           "]]},
         Annotation[#, "Charting`Private`Tag$31615#1"]& ]}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{20.84693877551021, 1.5000000000000284`}, {
       2.628257613382033, 1.6282524866402213`}},
      ImageSize->Small,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->
       NCache[{{0, 2 Pi}, {-0.9999998830731719, 0.9999999999999918}}, {{
         0, 6.283185307179586}, {-0.9999998830731719, 0.9999999999999918}}],
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {96., -58.40421193686506}, 
     ImageScaled[{0.5, 0.5}], {180, 111.24611797498106}], InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJw12Xk41N37B3C7GVsIM8gSKUnqydJCnTvtKtFCWVr0WJIUlXqkRdlKiz2p
0GItZN/SQZSELEPZihFZZubYsyS/z/eP3/wz1+u65rrOOfd53+fzOdcsdji7
31GAj48vkJ+P73/fglisrsfQd1Pe/P8+BGkNvDNWDT+GhIzElP9Qnnmz6t/W
sLMoP/+M2zDlzEnULJN+CT21WzneQblXzmUqL+w6Kujem1VG+a5ilWR68S2k
P9CcGEs5Udsuji89ELnO1Dacp1y6dnj1gfhg1OUL+pspt233K08Ie4A2N6z/
LPK/8XQkdHzKQ9ExtapHFX8JClzT4plQHI5WBM3GelOW2xBfXJcTiXIl+tq0
KT/b7Co0lfYQLQ1/vPfLHEF6uwz2Lk56hIr6/vl9hnKxxd9Is/jHCOeXfhWi
3HwsbNnTsDjkLrF6k/Ifaj36eut6KuNRxaldFTGzBF1aG95xqfwZav5d4ytL
WQjZaz0rfoF6Vz16MThNULVp+SfDgpdoum05bTfl0O3L3KtzElBXQc7LF1ME
qZqP5I2lJaGtP+0DNv4m6KellW1QajJadqTp87VJgl4dKp5flJSCIvaN7CqY
IGidvf/O7fGvEH/PwPDCcYL2uym2RYdloLwH98iZYYIk1iEcteMNelk8PX+O
EDRc6CHTXfkGWXRXmrnxCMoracm9WJ6JDKuuhuzmELSlMv5vbHE2WpXW1PP6
F0FLdzRZDKzPQXKyMXUefQSJfRJ+oV+Qg6Imhif0egmqr3HdUZWTi+6evDsb
yibInmUQMpKWj2zqgoZmOggCK2e2sW4B6utivfdtJ2jJt0cGAakFyLvbpp2v
jaDB9r/flJIKkevme59+tVD166lavDW+GAXrbk47XE/VZ9QuOyoMo00B5dwP
ZQTdk48xKZUsRTZXpl2TMEGNmf5qhvtLkZmVR9O1EoJsB+16VdtL0brQWBfZ
QoLcbcU9RjllyGJbR25NBkERG12CHklXoO+v68/ff0xQa+uB01KHKlDZu9bx
zmiq/l7I/NajCqTHMnZbEkVQUrqC3BmNShSavmJzVAhBRWqVcWDwAfXtXRUj
6U/QD36N/F/WVUhN5VfFbjdqfbGSMXZPqtCTN6+kxE8R5LJh2qehqwqZK1+y
K3MkaNSz3rT41Cf0ULRfdOExKh8/r9Xdv1KNrP5qF5pZEqTzob3XMK4Ghdjt
cJQwIMi40kzM9Hw9UunUP901ykPSrMQva8PrUbHd+0c1PB76yRaIXJldj7a/
DZHJHOSh+3zFaopj9SiWzHc5sHmIbbzCcNizAV0Mt17k2sBDQVnix2M9G9Gt
eM9x0XQeaomryZ3xYCHbNxyx2yd46FW69pXhUBYyuXLy5g07HrpR4gd9mSzE
qwl3PmfNQ8vbTT43jLDQqQ+rbqzfy0M+CmldyR7NaHJCS8pjHQ9p3rsnbu3R
gpxm35V5SfLQOW/zE9nnviGlwNgFfZlcZOZukkwL+YYieae7xV9zkaaDDrHP
+IaOrrgTpZPIRS27RK7SeN/QXsmjb/bHcNFGxXfR9qdbkYDqtuq9N7lIrGBl
vahTG5rpzWgftuCihAkJZGfbgdY9eD463s9BZwoc7wtodiFV9iYbcyEO1c+W
6vwGXehuZNFBuT9DaLjVJGt+axeKYiW4No4NoQuzC1v+OHUhexHVUaOeIeS9
qVzld2oXAinrzGdlQyigQjVtaE03cp0yEeG7OoTi679+ZpmykaNVxrIR7iBi
9e+iJzn8ROzqBRaGhQPozqpJvrwj/ShT0OyBj+4v5LGiKrI0gYOOzuZJlgv8
RDMnT6d3ug8j/awtGjP3upBDiZVFiNMoOh/e99+CJW3o5AirtDRoHBkN3HSx
WdKI7q7OP5sYMInMfxuNSL+vQAKl+Wv9vKfQtYgZR0fuSySjs7vuR/QMarc1
iOl3zMc740xfDIf9QbJs9/QLlp8xg9Rsv57/Fw1siOvLYDfjmI9F/IKn+OBT
3SALR3RiE5XN8+r/8sMJ657R80vZeEWX9M+rFwTgssndM3SfXpyWLOuS6ykI
rJ9vvU5u7sd+zXiz4CVBYLz2ro7Z04/tBM4oW14RBLZ1rPxn634sZvexjnNL
EBToWv4K7v3YaYGP4ZJIQYgc5T97OKYfq3v1CoTnC4L/9M4X/iP9OGJLwdNz
fwSBXy0k4WzMAPb5bt+0IkAIhj8uKW9tHsTjOzY+dbwjBEPqeqvFfwxit8xF
znH3hUDqwg9Vw/5BbOvXPiP7UAi6RvgveM4M4g06RzRmkoQA1PXzwlSH8PTF
gx5Vn4TAYmWUi7PjEPaS3L3AUVIY3pUfcLbgDmGel05rrIwwHNHTUrs3MYSd
uugvvskLA5/fAL18bghbZVcZ7VEVButjS87KSXGw4ZHtR/VXCcNy1S/rbPU4
ePzl5jR+S2HIUb7T5H6Ggz1M1u2OjRAGwel2XmwvB/O5R1x/EC0MTSGTd09w
OPh+3HD2jSfCMPBzoZbKGAenCqQsOvlSGG5a1plc5+NidpUib1mOMIR97evg
KXHxwUOzIZlNwqDyztXb25yLjdzftVTIioCJt4XtujdcXBGnJJ6nIAJ3ohev
ZuRx8f4GL5SkJAKVjjO1vGIudjdYlXxbQwTsmMxjQR+5OGkm7j/zNSKQd7Yw
49/vXMwM9F30zVIEatnCLaViPDwTt9VhKEQEor4zyJw9D2/6vTHsn0gReP04
hWV/kod9zdeWX3okAh7WCZK5LjxMm1uuIfRcBDbpV5zfdZ6H5W0WsBdli0Da
yrt99CAeXi3XdsK8WQQGuxtU+jN4+PzpptCIVhFYN+Eb9DaHh/PKa8raOkVg
4O+JVUGFPLzRAy927hOBLaUbdIXf87BZ3cvu679FQKY2+m1kMw87Bp09kako
Cs8rQ2Wlp3k4+YdL6G8VUQi+7f3Meo6HOUYOZRs1RKE/udU6ip9gz96Di6t1
RKEgb4nRNJ3gG6YbutnGokAq4h4eVCI45o/QCbmj1O+XinCOrye4/lzM8UvP
RWF/aY151TmCdUKkZy8kisIV3RSdkvME38oIiPRMFYWLH+fXpHoRbMTzrD6T
JQrN4/of3HwIfnp6t8G/5aJgZ1LPDg8k2NXpj6glWxRmaudtTz0huMLf87l5
nyiwzjq+7oolWCWh32TPoCg07rytavGMGr+H5bFjVBRyJZ85MhIJXnsirX2j
AA0mIiPcd2QQLGR3NENHgwZ4D5OnW0rw0SusXdpLaUA3HJNfWk5wfozZTy0d
GqgGVVoxKqjxW40UF6+hQejlk4vZHwlusFpwi2FKg51jl2qZX6j1efmryG+n
waMfYxmN9QT7Rc7my5rR4OiF0iS/RoLXsX5xJPfTwCruaXN9M8GxlqVWQg40
GHsgpybWQfDUOaMRficanArOiffrJHh/yOvg+VM0SLvuY/D7O8HCX6JLZzxo
EHNePrSim2C3PR46I740yJhskOP7RfCH078qeP40WGktpmrcT7BasP0xzm0a
NG0rNXIfILjx066IX6E02Kd6MfLtEMHrd2j87XxGA5PHmnwzhGCDF9VBHxNo
0DeXFD88TLDevOfCzBQaiJbEPf0xQrBG/nttv0wapPqLvE4cI3jRQrfsM7k0
kCymlVwbJ1jhrNwm60IalL18uXzfBMHiyxwP6JTRYJ3oT7nWSYJFbkl+X1hJ
g16z5eFhvwnm+5HrMldFgy/fdrttnSJ4PErkWn09DW7539ALnSaYN5pOK2LR
4NWCLQzdGYL7za3DX3yjQUfRFhtMuVMkOdmriwaKpy7w6mYJ/uZgoX/8Jw20
/juJdv+h1vtuqmRXPw12VUgNYso1Ss926nNo8OmkDU93jqqX166mRcM0MN2m
uyeMcmnjiL3IOA2ydNwEhykX6cX0k980uJoqKLf9L8E5d0zPt87S4MKq71cj
KGf0Dc6Vz9Pg61Q/tFNONQ0Pei1Ih6NKC+2V5gl+GWu8MEqUDkY+exstKcfO
9Dy9Lk4HqfY78b6Uo63uap9aQAeZKvwxhXJYlkH2/oV0IMnsHdWU70p1bjRh
0KEjf0i9h3KAq3+VljIdwgWb949T9v2w8sACNTocORvTOUfZR6Olc0qDDtNZ
68uo+wP2unbNhb2UDjU2WXPTlM+1LR37rEOHrI/C4RzKrkZfrubq0UFh1Vrf
r5T/DbtEi1tDh6GY3VVFlI/y1MKDjOiQNrDLJYryYbMqFc8NdLCv23DClfKB
xHPJtpvocKNeO9uIsrmAov42Uzqo7lE/OkvVY+fRshK97XQo9ljlUEDZtOjU
TqYZHQ5vd8JnKJsoyDbxm9PB7UXLRWXKRp5F9kOWdPhpFOFfRtV/dZ1DP+sQ
HRi3cnjHKGsFZM8l2dNB+aJPrT+1n+ps26DQE3SI2nZ4iyRlpU1CC6840kF2
ybzsPSoPUpMHtc3P0EHohk7pRSovtP1zWWs96BBfPfL0O5UvgfSEjYsv0uF6
Cb0FUf7tOLl/3IcOzw9WHhqi8jlaFtvZeYMO952LnhpS5qjscPnoR4ep+edw
mcpzV/PDqzF36bC1WDi6j8r/p23rk+EJHVj3L4c5U/1y+eM1vevxdHivJV5+
jOon7V0VOSUv6ZCnunPcnOq3gD37yjak0eF71+QJWS7BWw84thm8o4PlhO7p
lVT/jrNSj58vp8MjA5HCzj6CX1gN92V+oPLEMZLw76Xmb3NlTO8LHU4c1qoo
YFP5PR4qsbyLDpxUD/8c6jw5x24Jc/5Jhwjf1XSVduo8+HeRYmI/HbgvIyN9
Wgm+5pykpTlCh6/6OtXqLdR+uJdsUhEQA3EnbsZcHXX+XRk4J7NEDMxMU7rp
mGCnOb3f+7TFYOS1qW7PW6rfr1+4el9XDGz3CgVlFxF84eb8bXFDMRituHxx
fR7Ba27LvxDeLgaRR+fXt70mOD1qc/O0sxjQEgL4zkVT+WIG2q5zE4Orbb9f
F0USLBlT0+11Tgy2VEVd/BNGnW9PrXljl8XgQo/XUcd71Pn68owo77YYLHg3
+7LGl+CEzEfr2a/EYNvqZXjEhcrzrK3OtwwxCP205nmfI5WfbarKddli8Mtd
qqnJgeC3357/KSwWgxsrjRc/tCO4af4VDv0sBvZrp/3K9hHMb/5u2+YhMThc
kroo0YBg+0G2ZbyOOAQkhPrlTPGwhkGCaZSeOKT25RTnjPNw/1Vn/btrxKGd
7myXNszDF2Q4cpc3iMNp0TPfA/t5OHjdxNd9ZuIQfUKZn/2VhwsDRI/OnxIH
78yxpBW51PNdU9f1aIo4mPqvllvkysMhYcFWKWni4JSftbbsXx4WExgyHc8U
h90T4zH2x3iYrztF+U6RONTODC/1OUg9n2OX1eZ+Foe8rq83LDbxcIWS5mpJ
njgEntVMsJam5iOrNFm8RgK2LZq8PJTGxcT3P7bIWgkYORb74UoSF7uOfKuz
NJaA5df87wg+4+Lj9Q+Tfm2RACWjAJ/pcC7ec1/+yMJDErDgotym6/9xsaaY
zFvXSxKQzrnZO2bKxY38tJuKbyVAwc4h78EXDualPTpqUSoB3lofUgyrOJhu
s8I4sEICNFd4xjeVcjBkmY+P10gAqHyN+53JwekOkU71nRJwo61EvSucg4Pf
a+wOnJcAnyw/fkMrDt7qv1FuwlQSNE21neZYQziXdj6x/pMkfBC3kLhdPIj7
fHy572ol4XV0nnN31iBmjjwwSGuQhFsbRS31UwexT+vr8tutknBSv7r5ffQg
3pra9910QBI0vHvZDy8O4sbdNoxcmhQcNJrul9QbxMP3Nwc92iEF3s8su4F6
f9aVl3Z1qJQCqRVfbDYf78fk/qScfssCMEj9b7W0Sy/WDAxcddZVGqbvywre
MmNjtk17m+kvaTgU7LXrE6cT7+xtms51l4Ho8pivWL8FX/Z0dFHgykBy7Yu6
d7tqsXneYzMFL1mA6bctIV8KMO+Pq4/gpCxUr8lwFA94gp599c1xP78QpBYe
ulSy4j2acdl4/L/ZhfBgk5ENnd2AVOZCbT285eBxSS7D+3Ar6tsRXE0TkoeP
86GBmde60PulNUg1WB6S97k02E70IFdaotBiugKovHnOzu/qQ/nxSza+D1UA
rff2TimJA2jJ/NYrZeEKMG4KaXpvBlCIvWMhjlSAiOO24WnUfcxFKdHw7SMF
GK6t04+uGUBKEcv0cp8pgHStmJ/66ADyCdRRS8pUgDB7BZtZ40Fk6r6aP7hB
AUp+kdFP1YOoztikcr8MA4RMXgxYsIbQnYKLs9sXUmaVzwh1DKEdhhn/GMsz
wKyE7pRF3R9L9TRiNRUZIKJVvGV6dAhlL6ZdGldngHVhRb+RDAdFi7K0o1Yz
YMTGc8e5PRx0sun03dZ9DJAc9Vb+UsJB6hYJ5bWWDNAKaRN8VcFBHTXfp8oO
MIBe1Cl14zMHWX2wdEy1ZkBDn1mAfCsH7Sxcu+nKMQY8579Zyx2j7rtxgsOL
zjLgVibr8H5tLppyfXzg+H0GLDrpHdkVzEUPvF+IXg9hQFu3fM6xMC5aeudV
8dMwBqwONfdrieaiQynFmu1RDPjy2GrNqwQuyvrVPnYojgFvfl8NG37HRW7/
LorY/YYBYd/ffRsgXNRl/5Rl1MiAQlurhDu7eejSmYSgQyxqvH/uxP+x4CGp
q2kmF1oYkCzQwHCy4qGNT0peZrYxQNnB/4LaCR6Kaeu8oNvDgM8pD96u8OKh
g9aq8hrjDDjtgFBKLA9VWcQdklRgQki4sbneAA+5VvS+E2VSzmy9asrlIcl1
utoCSkxg96mr7Bvhof1qhTOTKkzoO5CXaDnNQ+3cxrguLSa8ksmvnqURxLsj
MphtyITyvnHfnqUEhfzdcyB9LRPiVtmuv6ZDkL5n+Nvk9UzIyz9nKaNH0OUj
6g+ebmSC+XLdeHVDggS0NxgEbmNC2u0fcT2mBMlXnrlmc4gJO33+cZ+xI6hg
Xc6vg9bUfDoKPisdJ8jm9YzFviNMiPza6KN/kqDY8EDNrfZMaOcrbNl7iiBt
h2dVKx2Z4MEIObj0IkEm8yxZ/otMyLn58ptjMEHfPZV9Zr2YkI5DmeL3CfLt
O9E7cZkJvkea45NDCPpQy8sf9GHChqDGwJpIgvY9odmz/Jig0bImNj+OIIf1
JklJEUygOa5yVsoi6BS3dqIjignj14fKbuUQdO7Zsa2yj5gw4sF/viePoOv0
W90+T5mQOXu42b+YoCetn5T3JzJh/129QKsKgl7cs3UNTGaCaOoiX88PBKVu
5ha8TWVC4k3uZ78qggpTpK2WZTChsTvb8m4NQS3/WYf8yWeChXqXxDIWQZ0r
B77/U8QETaMOn4lmgn52e690fkvNp4ZvfdFXgsZ2xVY3lDLBPig2fGk7QdJK
vUJJn5hQs+LL+zvdBDHqvA50fGbCgntPA8R7CFK9SXsuU8eE+vMPQ2/+JGjl
4Ark08gERsSOawd+EWRW5PmfZTsT7GyaEm9wCLJ0F6oK6GRCmLNmXDaXoMMa
UQpvfzCBL/hYRwePIOc7hdlLf1L798ZgiewIQe6bdgvY9TGh5/RiPdVRgrxG
OyxC+5nglv7sivoYQX42fLxZDhNWf1/SJTpBULBUmMk/hAksCJ/kUA4r1wx2
GmHCnLzbvqpJgp7p7NBumGDC65SDH09MEZT8/ZuXyBQTzJ7+6lWbJuhNmGul
8QwTys4MbWNRfjdzzyHxLxMqCt0+qc0SVJmultnOpwiXdf05eZRrHDLnpQUV
wcN1q8XWPwSxFLaYbxdWBCe76+MfKbdXs55cEVWEJz2SrZvnCGJfcxp6Q1eE
0dbquUzKg2um1veJK8KQTIQD8y9BI323g5SlFKHAykz0IuWpGOWvFtKKsN2t
Yegj5XnzNK0AWUXYvEBaWmaeIBFBdKFYThHUJsh5C8qS+fXlwwqKsKzGnhFA
We60g8xSRUU4b7xrJpOystr4MVtlRZhhv1zEoqzR5J8eoqIIYbZO16j3e6QT
yJirVKPmZxSgNkv5H+OU3bOLFeH//1/4PyOjd/A=
           "]]},
         Annotation[#, "Charting`Private`Tag$31662#1"]& ]}, {}},
      AspectRatio->0.5,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{20.84693877551021, 1.5000000000000284`}, {
       2.628257613382033, 1.6282524866402213`}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->
       NCache[{{0, 2 Pi}, {-0.9999998830731719, 0.9999999999999918}}, {{
         0, 6.283185307179586}, {-0.9999998830731719, 0.9999999999999918}}],
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {288., -58.40421193686506}, 
     ImageScaled[{0.5, 0.5}], {180., 111.24611797498106}]}, {}},
  ContentSelectable->True,
  ImageSize->{
    UpTo[540], 
    UpTo[360]},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.8604193608311176`*^9, 3.860419373157069*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"3d17b101-3ddd-445c-9fbd-825c2055bcd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Cosh", "[", 
     RowBox[{"i", " ", "Degree"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "20"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8604194671867437`*^9, 3.860419467187744*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"72de6922-4491-4185-9e11-756759acca2a"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7DO6JLbNB9JQAQelBdee1DHB+BwOIXNnbJzL
CuMLOFxeuzLqDyeML+JwYIWb+Wx+GF/CQfneku1VYjC+jAP39V8ps+VgfAWH
WxzdD/+qw/hKDnNrNrxYZATjqzhkZL/167aD8dUcLl/4zbjDG8bXcHj35T6H
VhSMr+Ug+/5P86NMGF/HIUtZe+2jKhhfz0F6z4Xr2r0wvoFDruKfgv0LYHxD
h67Chv/ztsL4Rg7PfwmrnDkN4xs7NO0umOnxGMY3cch4XmYi9ueDPQDw+mH9

      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.9967416291760299},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 20.}, {0.9967416291760299, 1.0615446137803364`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.860419467713317*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"37e2df1a-3d30-41a3-bb9d-ca3f557fd935"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xcoor", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ycoor", "=", 
   RowBox[{"{", 
    RowBox[{"12", ",", "5", ",", "35", ",", "20", ",", "55"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Coordinates", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"xcoor", ",", "ycoor"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", "Coordinates", "]"}]}], "Input",
 CellChangeTimes->{{3.8604195006397057`*^9, 3.860419500640706*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"8a8ac251-9af6-4414-94d4-928741262055"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 12.}, {2., 5.}, {3., 35.}, {4., 20.}, {5., 55.}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 55.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8604195013856354`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"fb59eb2c-7470-4a4e-a5d0-0b937b789a56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Coordinates", ",", 
   RowBox[{"Mesh", "->", "20"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860419545309127*^9, 3.8604195583286304`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"3ea51ee0-898d-4c38-8623-7710f967c2c5"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7CG0hgNUAEqLQGkOCN3gCOULQGkTVHUN3g6H
DXiA6LN9KBioOrQlSgDRN/tVYKDk4DlJBYh+2v8HA3kHHrCGP1B5KYfzn22A
6L99GFi/KFQ9o4MKmKHkAFHH5PAHrF8Xqp/FIe/2ttzb20ygNKvDXRCVa+Vw
AWweu4MaSL+Qg4MRWAOHw0SQgScdHKaADeZyyALrs3P4BlJ+ntthE0j7bWuH
CLA7eB1+ge2zcNgFFudzcAa7y8yBD2y/gMMusLtMHezBHhBwSAfrs3EoAJsr
6MAFDb+FzyvnPa8UckgASV91cbgEdp+ww3aQdi0PB2rHBwCuu56+
    "], {{{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[{1, 6, 7, 8, 9, 10, 2, 11, 12, 13, 14, 15, 3, 16, 17, 18, 19, 
        20, 4, 21, 22, 23, 24, 25, 5}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       PointBox[{6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
        22, 23, 24, 25}]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
       1.6]}, {}}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.916666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.916666666666667, 5.}, {0, 55.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8604195491666517`*^9, 3.8604195608093743`*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"05249ac8-6e22-4305-8a72-b7d1932de9b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}], ",", "0.2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Sin", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}], ",", "0.2"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotMarkers", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<\[CloverLeaf]\>\"", ",", "\"\<\[FilledDownTriangle]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "Black"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860419588841858*^9, 3.860419608109082*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"ee20c4ae-bc6f-4bb7-a20c-44d5f2fc3250"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQEf7FFpBoeqpPKpW2LeQ/kcDj8W3X4eUvkWyhdw
EIn2sFHLfAXlizikzii8l+39DMqXcOhh28qv4fUQypdxuFBpPeWewXUoX8GB
OVx4T/XBo1C+koOxWPzRqmdz90P4Kg5VfKr+X0XOQvlqDqxFweFqi25B+RoO
BWs7vBmuPoLytRw6Lk7YsmvGcyhfx6HgS8O3hdmvoXw9B5+C8PL1au+gfAOH
S09b97Gsew/lGzpsO73zEfsnGN/IgWlf3GGmDzD1xg6ROpe22G16A+WbOLxY
cbtltv9LKN/U4aDKbbZlr55A+WYOsse73uQl3IfyzR1WHUqqCV99Gcq3cOjq
jdRm37YHyrd0qHfwiwhN2wYNDyuHm17ZBa3ql6B8a4d3WeaRun/uQvk2Dj0b
VPPT/Z9A+bYOLVzNHfkXX0D5dg7qRcvZdMPeQPn2Dl+VKji373wH5Ts4nFtZ
6bDm8Xt7AP6ildk=
       "]]}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQEf7BlQgcOeS7bK/3NPQsU5HLLTtV9avbkB5Qs4
RDkuFe8VfATlizic/bf/0JQvz6B8CYd3PJz9IW9fQfkyDkdDpRY5X34L5Ss4
MD90uX+24z2Ur+Rw1OnB8cY/ML6KwwfRvY2HNGF8NQe3LRdffZOA6ddw4Li+
6qbx/ZdQvpbDjIuHv6bMfQrl6zjsbl2w+0/dAyhfz+HA01jlooKrUL6BQ/TV
bbkWAoegfEMHI90XluaP1+6H8I0cSnz+C5yMugDlGzt8vPjB2THoDpRv4rDg
wJv/YVMeQ/mmDuvk7tzdaf4CyjdzuCF04f6nx6+hfHOHDxquhm3F76B8C4dd
b2KFA8+8h/ItHf7b8sya8gDGt3Iwnvnga+N6mHprh+squzY5ub6B8m0cCliN
ptfsgtln67Dl6zTxMOMnUL6dw6n7fce59tyF8u0dDiza0PXx4UUo38FB9uy+
2xGuW/cDACkGoyQ=
       "]]}}, {
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["\[CloverLeaf]", {0., 0.}],
        "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGBQAGJGIGZigIEP9qg0g0NVUvnULTHvoXwOhx+Lbj8PqXwL
5Qs4iER72KhlvoLyRRxSZxTey/Z+BuVLOPSwbeXX8HoI5cs4XKi0nnLP4DqU
r+DAHC68p/rgUShfycFYLP5o1bO5+yF8FYcqPlX/ryJnoXw1B9ai4HC1Rbeg
fA2HgrUd3gxXH0H5Wg4dFyds2TXjOZSv41DwpeHbwuzXUL6eg09BePl6tXdQ
voHDpaet+1jWvYfyDR22nd75iP0TjG/kwLQv7jDTB5h6Y4dInUtb7Da9gfJN
HF6suN0y2/8llG/qcFDlNtuyV0+gfDMH2eNdb/IS7kP55g6rDiXVhK++DOVb
OHT1Rmqzb9sD5Vs61Dv4RYSmbYOGh5XDTa/sglb1S1C+tcO7LPNI3T93oXwb
h54Nqvnp/k+gfFuHFq7mjvyLL6B8Owf1ouVsumFvoHx7h69KFZzbd76D8h0c
zq2sdFjz+L09AAn5lds=
       "]]}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["\[FilledDownTriangle]", {0., 0.}],
        "InsetString"], CompressedData["
1:eJxTTMoPSmVmYGBQAGJGIGZigIEP9gyowGHPJVvl/7knoeIcDtnp2i+t3tyA
8gUcohyXivcKPoLyRRzO/tt/aMqXZ1C+hMM7Hs7+kLevoHwZh6OhUoucL7+F
8hUcmB+63D/b8R7KV3I46vTgeOMfGF/F4YPo3sZDmjC+moPblouvvknA9Gs4
cFxfddP4/ksoX8thxsXDX1PmPoXydRx2ty7Y/afuAZSv53DgaaxyUcFVKN/A
IfrqtlwLgUNQvqGDke4LS/PHa/dD+EYOJT7/BU5GXYDyjR0+Xvzg7Bh0B8o3
cVhw4M3/sCmPoXxTh3Vyd+7uNH8B5Zs53BC6cP/T49dQvrnDBw1Xw7bid1C+
hcOuN7HCgWfeQ/mWDv9teWZNeQDjWzkYz3zwtXE9TL21w3WVXZucXN9A+TYO
BaxG02t2weyzddjydZp4mPETKN/O4dT9vuNce+5C+fYOBxZt6Pr48CKU7+Ag
e3bf7QjXrfsBNE6jJg==
       "]]}}, {
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}, {}, {}}, {
     {RGBColor[0, 1, 0], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6]}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[
      1.6]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 32.}, {-0.9982947757947531, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.860419589876859*^9, 3.8604196106390057`*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"e93c3dff-25a6-467c-99e0-d8fa1efab7c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Tooltip", "[", 
    RowBox[{"x", "^", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"ImageSize", "->", "200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8604201808694277`*^9, 3.8604201887996683`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"5d44abe7-760d-4d3e-b834-4cb9d7f01a3e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     TagBox[
      TooltipBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]},
       SuperscriptBox[
        TagBox["x", HoldForm], "2"]],
      Annotation[#, HoldForm[$CellContext`x]^2, "Tooltip"]& ],
     Annotation[#, "Charting`Private`Tag$34849#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->200,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {0., 3.9999996734693943`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8604201814133806`*^9, 3.860420191482299*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"9a0c9d73-de91-41e9-abf9-485b0d6776b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"i", ",", "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "5"}], "}"}]}], "]"}], ",", 
   RowBox[{"Filling", "->", "Bottom"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8604203992650547`*^9, 3.860420405437456*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"0bc8f8c1-3293-4b53-8e58-e8329fc9a655"],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
    1.}, {6., 0.}, {1., 0.}, {2., 1.}, {3., 0.}, {4., 1.}, {5., 0.}, {6., 
    1.}}, {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[
        PolygonBox[{{1, 3, 2}, {3, 5, 4}, {5, 7, 6}}]]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
       1.6]}, {}}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 6.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.86042040002899*^9, 3.8604204124177465`*^9}},
 CellLabel->"Out[66]=",ExpressionUUID->"d5eac337-9d9a-43e5-a22a-d2997c8a49e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Red"}]}], "]"}]}], ";", 
  RowBox[{"Plot2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Black"}]}], "]"}]}], ";", 
  RowBox[{"Plot3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "i", "]"}], "+", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "->", "Brown"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"Plot1", ",", "Plot2", ",", "Plot3", ",", 
   RowBox[{"PlotRange", "->", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.860420436022075*^9, 3.8604204557049985`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"13d28d35-8bd7-40eb-b45d-98882f8288ed"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJxFxXss1AEcAPDToXZOc5QId7+TuZxH/NGWlke0Ja8lLttZjzvcKa+Y24RK
Im5GV908d7sd0cyctNOmxyVEXte4Usu1zLkZsdF1cSjVH77fPz77MPnZ51J3
kUikmH/+L7vJtw5IqQzeeUBLRCcSV0J23h5U3yGI67Cst4phRYjhjCBR5hqj
HtZupklXGG3w7ulZ1jKjB1aMyHO+M4ZhZad4OsPvCywMmahfytXDWQYvvUq5
AFOYpaxvx1bgartRtuKyEeZPJ7wmj/2Cc96W8rNZG3DXNWq805nfsKIwfdE/
kRS6c4l8K+7nkgVM0s6Eviwgw555gvwEthU8Z6o9b/PKGo40XL3xIGcPHDsn
8abTKfBiP7/4XYcN7Eebcgu/ZAtTQkw8nXEvfHqZu+bOsYM/96VYcH1ocHfF
wEXChAusRDMajT2cnFvYTW1wgI8IvTXRvH3we3sfG1HgfviFsqTRh+wIF1qw
z459xSm6gogs1QHY0MqUyoucYOlhZ8sejjMsaRAM8YiDMFd6QUOdx9dPtZjl
ahdYbwjL7yt3hZuCAlzGeW5wR5mIJvSlw+Wc5CiyCT+qU7SVjzPgOq/GjvEo
Ar7VW1UX1YPHuHBaRjyY8MmsoSSaGJe78j3GTLhH/+Oa2CR3WOLbx55U4wKj
5cQw+xDM7/pBiO/hGSXxW5H3cVG86hP1IV5hElVLanBloHmzVoab32xPtbbj
kklq1cAQ3tCcmXZ3GG/O04RHjOLPHCUboxpcx3VI037EWXrn8Fk97q8qoD8y
4MfLps2p83g0S/ZkYRHPTSfoq6t40Ynb5qdGvMx29kOeCa/rbK5cX8ebii2F
zzfw9rjUsKItXOU+6Bb8B1cbPc3b2/hfxrMqyQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$36509#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
aHD90at2yjCt/JJo/+KiedcdwwfdlMFA3ihHTpiHPB55fC85pwyHVVhe8g48
JNkcuMUnRxnOyl6LvTbFQ6sD0mWi3yrDlXl14kiEj1wUGn6+eKcMNn7CzA5p
PsrbYug0WEidv5W9bHA+H3nkkv9OlitDykSJ5krER0VRh+4G9ihDrNv3v8bn
+Ii7KO7gXbYyWCWM2ny9zEf0kqIFBVxlsFQvk94YyUc+U+ovZ/4qw1Wy8qhA
Eh+pHf79OWRWGVzKs9zv5PHRadPt/Ct0OtywmIqw4PNRWnNw9hNVOqQUDa5/
OsxHlQEZp7+q02GL2GeB0Uk+0smiCUsuoIObUlKmvThBNSqflCNX0OFJlsgq
Yw2C/uUONj9fRQdau6+k8AKC9HZpplasocNgt96vPD2CQq6e1ZffQIdChwgj
jiFBS4fXmMZZ0uFaxZLWI9sI2h/tIZZjTYc7f1+N39lJ0GW9mz9qd9JBcGc9
560tQc0H/9oq7aXDw8To3XkHCLpennkk0Y0OCeuky3/6EtT9WCs+JZgO73JO
jB29SRD3UvuEcAgdljyKufUhkaC/rg8OHA6lw3RKXtD4PYIENLQWr7hOB06b
qLTeY4JUbmsWF9+mQ/Ss91BQLkFa/m26unfpUGy36j/lfIIW7rkfGZ5Mh3Ov
T6knFRBkKKe5z+YRHay6Ds4c/ETQzqsaA92v6eBeOn2toZKgve6ttpZv6MCS
cIUPPwly3pjyPiufDhK7q+eG/yLo6Kz61YBCOnj7l0t0NBLk2/KH2/SJDppG
oQuPthB0+n3ybiiljv8d79jSStCVAHV1iQqq/qKfM8FdBEXa/gn1rqaDTHmG
57MeguINktnVtXTYvM64rbCPoAdkfu6dJmq89VfGnnIJelreojL7hw7KsSfj
AvkEZWXcC3HroIND5Zm1hgMEFXjOt9Jn0yFLry3BfYigT+Ytr2K4dPizaHRX
0zBB31n3lEcIHZb+ipAzHiWoStDp7L4hOjTxnlRdGCOovlWt88MoHRZ8cIh/
PU7Qnw/NW5iTdBiYV76vbIKgrrtJWVdm6HB45wrNykmCOGcc53EEGBBtU9Hz
boryZ69a4A4RBnyJmcyMniZowrC5NVucARtn1XytZyi/5iWZ06UYELrgueEw
xWJ/HTKCZRmQPs9gLPQfQTJVqnPa5zCgwcvizTTF87KaTpkrMuDM9jhf51nK
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
3/34f/DVfrc=
        "]]},
      Annotation[#, "Charting`Private`Tag$36556#1"]& ]}, {}}, {{}, {
     {RGBColor[0.6, 0.4, 0.2], PointSize[0.012833333333333334`], 
      AbsoluteThickness[1.6], 
      PointBox[{{1., 1.8414709848078965`}, {2., 1.9092974268256817`}, {3., 
       1.1411200080598671`}, {4., 0.24319750469207174`}, {5., 
       0.04107572533686153}, {6., 0.7205845018010741}, {7., 
       1.656986598718789}, {8., 1.9893582466233817`}, {9., 
       1.4121184852417565`}, {10., 0.45597888911063017`}}]}, {
      {RGBColor[0.6, 0.4, 0.2], PointSize[0.012833333333333334`], 
       AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.6, 0.4, 0.2], PointSize[0.012833333333333334`], 
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->Automatic,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8604204366763444`*^9, 3.8604204581543026`*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"6f794f64-782e-41cf-81e6-3612344c1170"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Orange"}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", "Purple"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860420538172903*^9, 3.8604205503616467`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"a452c4cd-faae-414d-bddc-551183a421f5"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVmXk8lF8bxu3GLoUZZJkRJa1SkTo3JSVakbIUQirqR1KolBZlDRUlSlpE
WlCUOihpsUbIkn0Zsxyyb3mfd/6Y+Xw/z3Luc13XfZ5ltFyP73YXEhAQ8KK+
/v9775yr2IpD4Rs2zf7/Q9DnGk2rvZpe6OJoBnOU4tkvH0M1Nc+gtBmX8AaK
ZWPfvJRsuIiCdq8yfkLxvcJIDVHNa6jRwXSZK8X65FDUrGc0upaefUSC4hbZ
5H/T9bFo0XARN+kfQdqPJVZPTt1EsvNf5KpRfGy9v/eYRiJSW/q9JGyGoOza
trThjUkobp/P/PZpgiaPWjUPeqaghgmhDwsovi/YfG3M/AEyuDGVZjdF0Kby
GwtG61PR9W/1v/wmCepLsCga9kpDc0+ydp6dICji0Izj0NQjNB12ap7fOEE1
U4fjBzTSkWlc5VnWKEGnStWXk1fPkNtaM+0/wwSpxNX+4G3MRJGPbypfHiLI
VQ+EOZ4v0MK69X23BwgSmgqsHA5+iSa9D5YKE4Jq22znD5u/QsGBs6MOPIJO
Z0rl/61/jXZq1G6rZhNkGdsj9vd+NqpLXevH7yVI7XSRzaBXDlI9EUDGugkq
3BgwQKZyUTDTk1PZTpB4U4cuTyMfjepwFeMbCGoo/ODP7ctHf3Zn0ObVEfTs
ccInzqt3aP66zQ4hNQRt991+oH9jAaqY9tdRryDolsS7W72eGMUGrrjkU0xQ
ToClrx+9EN0V46ftwgQl9a9hDAUXIlPBKAOtAoJ8qhQ8/5oXoWehLqmXcwlS
SPoqNFhfjK7c3i9w6AlBU7Jv0k+YfEI9I+3fnj0kqOvCw50D9z8hh3B7hT8p
BL3xPJdMvD6jj+yziyQTCNpvsMqYP1WCbIRX5Z6+StCD7yn/cTS+IbPuqchX
rgQNJ+TqtUZ8Q7/z12yycyJos+ePzp8T39ADTQnTrr0EcYXHbN/VfEcBsubq
BVYErV2/3fja1TLUKfHot4MhQVUvpoV0SSVi3h6Zf0CIqhdJOMssrULr7rYb
35nio3U68cZXD1Uhkzcruz8O81HUcPpQYHUVyr4+NPK5h49W3fjl7ppRjVx3
0m5//sZH57/rW644UIM641wu3wrno6ev3upk3KxBcQaGA8dC+ehngpnwgrIa
5Dh9Hi0J4iNtT/sCulEt8urwfXj0CB99F760VGDuL/RLYJ5+mwUfKa1vUqj8
UoeUt76peP6Ph7JeXGs6trQRhaSvkZJy5KF+hf4IS5dGdPxt02jnLh7SPWW5
YWF8I9pxdpXTMwseum8i9aBzohFFlXZnz67kodhvER77S5qQQeUslNN46FRn
9KCFYwtyqh78MPGSi1KkfoTOMW9D9PfyH78NcdCG9UGOIc5tyP8T1+1ALwc1
+yw2JAFtqH8iyKuzkYPoP8N7yp61ob37LbPfFHHQjQSrrWHy7WiX6gqt8CgO
Cl1QITvb1I5Ebz+78lebgzxRdSLXtxPRs/l5o5v6kUDq6Lum8E7kuWb961er
+1GCiFrz97ROxDJfV+S4sB99/eahnl7XiW7Wzd8YKtWPFtpMp7obd1G6nytT
qGajvsO6mX8Eu9H3acWSjfvY6Ejs2Y9VMT3oucqZt0uc+5BP96LOnCw2+uW9
ZdDMpAe1Of+mFX1jo4w/ey+VLuxBexrClpZ3sVHokgwzE8UetPZH75lulX7k
ZSN0ZpTXjYRfPZJXutqPWqz07F4kd6OEYK0NAQc4aKAjchOa6UJFcxmJRvI8
pPlJ9sP6F51IUuuSbuvaATTndOYR0f42FCX/Q+/BwSGkv63lMetqHXJtssHC
ZaOoctkv80/Jxei/kkuux3Un0b3DqNLL5iV+dUJ6D33rDBqNuXbwz7Eq/CDo
aP/yvQKgF1F0UVKpBV9Mmd41zBWE8WcFFiF/OvHO5Xn/LR4ShC+Ph7eMDXZi
9SK/G64TgtCw1ghcRbvwu47+qipRIeiLkumYq9+F/y74veO5uhB0zQnN7Drd
hV0zc609dgrB16ZB05Xy3dg032drQ7YQHGbp6y417MGylnpecu+EwH5/bomM
RQ9ubuwO21woBPyzXYOt9j349LTj15wyIaivNPzqENyDX6JtFje6hcCt8ZTp
y+IerPlF19xSWRg4GvMWfrLqxQI1bVAQKAwhtT/Ct9j14Uvsjw8CLwjD3qWp
Dz959mEJgXtCRmHCwHzw123JmT6ssGTf59ybwnCnKTqz7G4fXnC12uLFS2H4
XLNHzKitD1uuK96e2iMMzwa/bP3ozsZxDx86hu0WgfuGlxmL3Pox/d2FD5v3
icABx8h1rr79OKnqgLroQRFgTbyODbvQjx/PqLZd8BaBbaE2uUkp/Thvb7xb
UJgI1F+oftDe2I+bpS4f8fkoArkWkkO11hysc9LjtI2eKPSQRA3VBVy8xLh1
T8pyUfjyZUuQ9AouXiVgv6x/tSgsPyPtwTXhYrOIrT3nN4oCCQ38EWDDxc5p
+jYZjqJw9m+vZMFFLr5V+3eZUDS1v6uv7nATF9+7c1TK+qYoWCg8UPnRw8Vp
B7t6bt8VBWvbk/oxg1z8mvvr3pKnouDaeuxGlxgPV4jkS+0rEgW2TfXT3OU8
LGp4vvfFkCjY+u3xGwrhYempseLJCVFI00jYmn6dhxWKTiSbC4hBi4Pmb6t4
Hta0drVtkhaDxGB9aacnPGzibv5JTEcMZoZF1B+U8fDJm1IpTvZiED92Z/j1
XD7uGrltJ/VBDITSbHvq4/g41dTAr+WTGAzFtcg13OXjA5EV0S++i4HmjMdE
0UM+btQW/banQQx8i8JHdmfzcfUe33VJQ2LgaSk+criajz++stJcoicO4qHH
nQ5KEBw802syu1wcbi3ePD4hR7DR1tB91WvEgbY0+1+wEsE5bfmx/ubioH3t
v3WIRfAzOV3RjwfFgWUsOJy9juDb3oL922+LQ8eTyLj9hwm2yU8S00oWhyqF
7zVh3gQriK5lDaWJQ1DinXX3fQmOSvJxvP1aHKLfG/tdDyb40o+mitZycfiB
eepW0QSbKQdwXtWKw1mL8jWf4giedVWgXWqi6pMMcGQlEBw4ucV0IVscXoyE
FCTfJ/jEojfZJ0Ro8OhR0MULLwle6r+rykyKBi4x5mmQQzCnkMudp0CD54/X
vet7S7CHPUsnX4MGTzer5g19JFg77aNZuA4N5q3ouWNXTHAH2XfAaQkNzKXv
e6aWEOx0NSZBcB21vdMhd/gHwSo1i3NrTGmgHFKyYqqC4Ab10upHW2ggZMOL
6q+m5v9mRtLSjgbf3s12hNYTbNl95GzsfzTQZt56d7+d4M1nWZmbTtNg95MY
v85Oar6KzY2j52hQ4cT6JddDsLG59VqHCBqUtEtELOgneHWLqKdMHA3SFC/8
keUSvNL/402cSIO7W+tr2nkE6z1aNsR6QoPLlXNTNw0SrLO+T6vuOQ3u/Llz
uvYvwcxf93eG5dAg28uMZz1MsLr3vvPG76nxBYVmX45Q8xFVyOIW0aC7qy1z
ZpRgpXvfm5O/0uCk8OiIwTjln2Go1K5KSo9pz997JgiWLV9nLFxHA18Nbzun
SYKl3IcP5zbTINhn27GdUwTTZjJve3ZS9SfZqyyZJljkpvsXRj8N5OQnDwxR
LLBEfeTHAA262tJMHs4QPP25jnVujAbjjS0vTP4RPO4YvXv5PxpcOGuUjyke
Hra40CEiASFTDvb6swQPRAi8jJeSACGTiYiLFHO18/9sVpAAu8Zau2KK+wr+
k5mgS4CRTnEuh+IuGz2TDA0JIKy09H8Ut3E7jjjpSMDBCO+VUxQ3X7qbKLdE
AlTKNXe2U9ygZvO1yEAC9tCqhF5RXJsjPeZnLAHN8+5ZHqG4yqpkgY6pBNDO
5evKUFzWddamwUICwkM97iRS9X4NXh16fbsEWDJGUuUo/jyPvDKxlQDt3hLT
49R8CzOftPEdJODllq0BeZQeBZsOyj1wlQC21exGDqVfXjN9wx4vCWjMDXgq
TnHOyepjoickwHB81yMZSu/MNLPvXmcl4Lbd+JG6MYKfmkyNq16SAP1fuwwT
Kf/SarN1K65LwLJB3bvmlL9JIgsur0yQADOHOesdqDwkJLVkdyVLwL/wZUGf
BwiOX3Wr49YjCVBUb7NXJgRHHhKHqdcSIJv6buwMh+Dr09jneb4E/G499v4a
m+Ar8afvHSiUAAnFYlZoL8HnPrMnP5VLwJi1Qt9KKs+BjqmLTtVKwKl+BQt2
G8GnhvfbL2ySAPy8aOe1PwT7aJflRvRJgMNM25Ervwk+UnCpawORgCPWtec6
66j+tFk/d3BEAmBr0Ca9WoKdL2WdsBWWhH/5N7knqX7b3hWzWF1dEm4ZmbL/
FVH6L+6qddSWhL7jaKST6udtfmvO3dWThCvlFum57wneIvSnir5GEvIDN87R
yKX6TXPxqbk7JUEubI6K5BPKD89zGrvtJKHY3ijF5iHB6EX11xhHSThov7ol
PIVgkw2nVWW9JCG9Yjii8DbBho4lhbSLklC+bOyf2VXKn4f0IxZhkmD6gx05
dJHqT87RuVeiJGGj0zF2zDlqPQpU8BC+KwmDe1rkY/0JXphwQOpftiS4hGse
z3IlWK12wnaoWxJa2oVmdhkRfEfVenYFVxIimdovqgwIZrjdf3rirySEv5Jx
NllK9effzVO8f5KwN/YPbmQSLC8ff79PWQo+z78wYiBFsLDVUk7LVinQUR91
dmjg44txF+LVdkqBQs+vqAxq/Rdoql3vYCcF5sHbxvq+8/G0V1BMg6sUuFw6
e3HxBz4evfrVsCZICpxKmeOV9/m4/5NryNfnUsCYmV195xAfa9xoOBKVIwWs
uUGSio58bOO83dbmvRQEW4yqBO6hri/jRnptX6XA7vdTKWEzPo5dMqd2rFMK
nv8Oa5ZX5+N1t7Guroo0vEvzHNL6ycMRR9QqL1+RBlOP1fWWejxctCY2f1uk
NCgUH/dS0eDhURFa2px4aaDX/VH9NZeHD6YMnb73QBoEv38QlJ6hrv+135m5
BdKQ+/rA25AKLm5Zf+ZU119par3iLYr05uKlc6gb2QMyUKF5YsmJJA7uiey5
eNNdBiZcBN1Sojn4nuRYb+9RGeipjXP9cJGDpUXoryNOy8CF2eHWksMc3D+6
b3PdDRlIaIl4K7GKgx81t/h4fZaB5HiW2qHSfqz2tBtHL5KFJ2K3h1La2VgS
jbg0D8lCTZCL2ZqeXnzadCHtzaQssJQWt47U9OKejQ5Z0YJy8Lr/uPDDol5c
vKVo0kxODvQDDOnfknpx4O7IuHQ9OciKFeCb7+7FHPcFJadc5CB14PR22Xc9
uCzCduGcSjnQOT953eRsN7bg7R9j2srD3XaW4rZfHbih+JDgfv05IHxv0pRI
NuLcsM/OmiNz4EHIzxT6jjLsIerfVlGhAKPXrqtrO1zGbr5BudJ35kKV14HG
El4pWua5uMLKZR5UjDMX6nXXo0oFfSl/I0WIcnb6ItTbjjZ4e7PvmijC1/b8
oM6pdpRVmlVajBTh6pM0sXz5DhQVvOKS/GZFGJP38TIz7kBWPatnMnYrQkDO
3smyiA70Pd+UdBxVhMHntPlvlnWikoN7a3YmU9uV/EJCjnWh91kX7+oLK8H+
4LicHbgHiVnZqtwWUwI19qnB8z970C62bqKgpBLMXrG9ltLdg3pZ5bfq5JXA
v3JzbKZUL5qbqBwboq4EZhoBl6ftetHR0MywWiMlMKcFz3j29yJV+zr/4BNK
8L1TWV9ehI08Rp4O9/gpgd4JRs4cRTZ6FRvktytACSZfag4K6LCRRbnmfzrn
lOBrVo/9Uws28jM7eqwqXAkM1peFMa6z0Q99ATftJ0oQ5m7UEUg9LwUJ6u0s
a1GCl589Zftm+1HPJqkGnXYl+NcupGEuy0E7w7gHLnQpgcvMgF60Ggdpy704
vpqjBA+WP5buX8tBZWqrou+PK8HR7Zfa809wkPraDRUn5yqD/ni7dX4zBxX7
7Laav1UZuk3Du0cecZH+a4PaACtl8OXUDLa+4qJbI/Mcf+5QhvSSoJ+5H7jo
aHD90at2yjCt/JJo/+KiedcdwwfdlMFA3ihHTpiHPB55fC85pwyHVVhe8g48
JNkcuMUnRxnOyl6LvTbFQ6sD0mWi3yrDlXl14kiEj1wUGn6+eKcMNn7CzA5p
PsrbYug0WEidv5W9bHA+H3nkkv9OlitDykSJ5krER0VRh+4G9ihDrNv3v8bn
+Ii7KO7gXbYyWCWM2ny9zEf0kqIFBVxlsFQvk94YyUc+U+ovZ/4qw1Wy8qhA
Eh+pHf79OWRWGVzKs9zv5PHRadPt/Ct0OtywmIqw4PNRWnNw9hNVOqQUDa5/
OsxHlQEZp7+q02GL2GeB0Uk+0smiCUsuoIObUlKmvThBNSqflCNX0OFJlsgq
Yw2C/uUONj9fRQdau6+k8AKC9HZpplasocNgt96vPD2CQq6e1ZffQIdChwgj
jiFBS4fXmMZZ0uFaxZLWI9sI2h/tIZZjTYc7f1+N39lJ0GW9mz9qd9JBcGc9
560tQc0H/9oq7aXDw8To3XkHCLpennkk0Y0OCeuky3/6EtT9WCs+JZgO73JO
jB29SRD3UvuEcAgdljyKufUhkaC/rg8OHA6lw3RKXtD4PYIENLQWr7hOB06b
qLTeY4JUbmsWF9+mQ/Ss91BQLkFa/m26unfpUGy36j/lfIIW7rkfGZ5Mh3Ov
T6knFRBkKKe5z+YRHay6Ds4c/ETQzqsaA92v6eBeOn2toZKgve6ttpZv6MCS
cIUPPwly3pjyPiufDhK7q+eG/yLo6Kz61YBCOnj7l0t0NBLk2/KH2/SJDppG
oQuPthB0+n3ybiiljv8d79jSStCVAHV1iQqq/qKfM8FdBEXa/gn1rqaDTHmG
57MeguINktnVtXTYvM64rbCPoAdkfu6dJmq89VfGnnIJelreojL7hw7KsSfj
AvkEZWXcC3HroIND5Zm1hgMEFXjOt9Jn0yFLry3BfYigT+Ytr2K4dPizaHRX
0zBB31n3lEcIHZb+ipAzHiWoStDp7L4hOjTxnlRdGCOovlWt88MoHRZ8cIh/
PU7Qnw/NW5iTdBiYV76vbIKgrrtJWVdm6HB45wrNykmCOGcc53EEGBBtU9Hz
boryZ69a4A4RBnyJmcyMniZowrC5NVucARtn1XytZyi/5iWZ06UYELrgueEw
xWJ/HTKCZRmQPs9gLPQfQTJVqnPa5zCgwcvizTTF87KaTpkrMuDM9jhf51nK
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
3/34f/DVfrc=
        "]]},
      Annotation[#, "Charting`Private`Tag$37123#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
TkMNo/+2q3G4xOTDxY/mN9HQvJA3bSZMEu/uFVmyR2lo8MH/nuoGkkg0rFjs
M0Hp0xVcq7iFJCLFq6s5UzTcrvMtYA5J4lbg350fBegowu3Q9DQiCaPwSU0z
STrqVd7Nc7EiCTDn78ll0PGFbPDwh/MksVZR5IWqLB3/GgZe6rQjCdnn0rKD
SnTcYOwOM/+RRGvC6jn/FdT++I2f5fxIovbCpuwhTTpeXhbelvCAJMpW6F0+
tpaOwlLFm1iPSCI1fW+XmjYdH/W/PFn+hCTcsqy/5++ko+ym1UfEUkjC1t3e
V8OQjsoSrKet6SRhucVl28N9dJQMqx6PfUsS2wjPLIvDdFxf/Lm7OYckFpU+
jR4/TceEu99stpWRBL/vi2OW56jnNT9UOFNBEiOGyYxiGzqePrS+yraSJBoq
s3yCHemoUmevu7mGJL4GftbnOdMxIKyKM1VHEp9NiqdO/kdHoX+ZEYkNJBFX
V+246jodo+7sb8htJomw8IZlIbfo+F/O0QtL/pGEn3lL2+Qd6r6b/Ppd2kjC
sZlzpMyPjjcWFBT/6CIJq+cjNK0HdHQNjlnc1EMSh62mKkKD6PiyxPzojz6S
0OkUwTPhdFwtUxR+mSSJVYkSk+VP6CjdVP1YZZAk2BdlMldH03FjvJtHzhBJ
0FcqOYTF0tHc68HuLSMkIcRV1ZiNp+MinOXFjZLERPry1rNJdLQ+VPBwfIwk
ei+teVqRQsdcbofIugmS+LNus9naDDqem/A6e4RHEj9G9SQj3tLxwMKvMWcn
SaIwa8eXufd0fO45QZhPkcR7dyMv6xw66p8++ll7mvLXlkN63z7R8biT4VP+
GZJ4MnNsYl0+HatX6B17Q/ED4tSbyCI6JpW/Hdk7S/nN87wdfxkdLbV1HSop
vrzNQc2mgo5bl7gXa8+RhLWQa0tlJR3jOIqTARTLs8p/TVXR8XcTvi+luHKz
0neNWjrmeSzdxaH4tsmlEtN6Otaz3qbMUrzRrvjT7UY6Sn1v7pyiuPeu3Lv0
Zjo27Ukebac4Kto+pekfHUWFlzRkU2ySnf9CtIOOHVrng65SLPxT+snGbspf
yU+Y6hTn9F8IPtNHR8eFY7cIql4H4c++gVw6CiZlfdhGsQqb7vlpkI5lnpol
b6n71mlbu/WO0NHD5F2SBMV+h3IcZSfo6OD/9swRSi89+0Xnt09ReTF5NuJH
6TnkbWV5aZaOtp7DFsmU3vHP35tG8TPQInHbs3dUP47mLNhXMY+ByQs03qdQ
/RKvsdw+MZ+BZPSuxIfjJOEyf/46k0UMlC1kKMhR/dZQPr78Jo2BKnn7nhHD
JNGkk66cIsVAj29/powpv2x3OCIprMDAqKcvjXUof034vJq/jslAVfNqw0AO
SaTEzM2eVGbgWqbOkmrKj1K1CZxsdQY66Wp5yHWTRPuWiS/26xkYYRXY+v4v
SYSbGhVEbmKgi/SSOds/1PxwfJ5dqsPAvFNs4YWNJJEZuztRWZ+B+W+ONdCp
PHmJRtyt3cdA25NF+auoPG5W5XgIGDPw715tSwMqr/26+i5ahxn41Nt+yKCY
yodTj5WvOQPdTdNFRQiSWPJLG7eep+rrjlwR+5ok6gcCNl28yED/i5mfZNJI
4v6CVs0wewb2TYodvZJM5X2rn9LgZQY2zbxIm44liaK435Nxtxio+emG2mJq
/pxxvvZOPJKBramGt0McKf+sbX637BkDw+CRSNtFklgwhO93Pmdgw6NIb6Y1
SWRcEs669ZKB827ecLWwIIlpp6API28YeE3xgPPILpJ47JjwsamCgYGi51+F
KZDEBa0FubxKBqLEEeUsaZLQJe1yZaqp8/ujCgolSKLNYe2ng/UMDFqbFBon
SBKrHT59LmpnIOuRfYdXL5cot/uZnzLDwO97Wh4UZlLzf+XGgnI+KdwllXUn
K5VLOPWHF3QKSqHato7W8JdcQsbOspC9gOJ7jwZVw7mElW1PUYiMFN6TIiqO
X+US0xfmSj20pNA47KCL2RYuoXV+RaXRaSn8da+tMyKdQzRfYDmmnpVCPmmP
Ird4DnHfjiG5yEYKaS3Lbxo84RA9l6aMvztIYU40L/GxN4d44VFRa+whhQvN
ep8ZWHAI2WDbP2ZhUjj7Ny4nXZBDzOW+6j/1TQoDQndvlN3WT6QR0QH5P6Tw
+lWHoVMb+wmLgkeaKjVS6P/KKujxsn4iu/SaU9tvKRRW0XtaLNFPXK7eO3Ku
WwrXtkd2r2vsI7q6+qYuCkpj+ELTmGMOfcR3+koxV21ptE9bE73Iu5fKl33P
E11pFNhtvqrvSi+RVppWWgDSGHPO0yjrQi/xwGONl+ROaSxhKJxm7usljDo3
zrwykUbtu+1NGoxe4ku2PtlqK42sHZpim572EMWnjvw8GCWNgpGyGe6x3cTH
tNtPVgrKYGPno62Fnp2EsJGpfJiwDOqasAb2OXQSxj3qEfwLZPBAw4edZead
RJfqt8d1kjIYGCotd39dJ8GIkA2+xZTBlfUi7cbtHYTtnZR7NdoyuNyltbjV
oINQOFrn6uEkgycWWb3yHGkjrvEvP/j1jwwKj+48L7vqH7Gg6epuh0xZfOt0
rOPUiTqi46VySLTHYqQvvWN5K6SICNGQm5dtKodni30ChZuSIDDSuvQ0Wx5X
8isxTdy/g3nIiUrxLnn8IS3m+8+6ESa2x/OiPyugzeLMfLFLbeDxMfpOUb4C
vty/bXbGqw341kYu7ClSQGHWWs328DaYz3qovLZCARW9GZvu57WBDM9tT9Ev
BfQV//p4j0Q7rEs1iugeUEA51zVjDsnt4CA9snmNqiLSdTIW0n51wJA/t8BU
TRErrLbfuNjTAa4CPUZXlyniPdpKm/dTHeBB/jlVqKWIT/p/XF3K7gT/8tJ7
prqKaJq47fRJm05IvP6k3t1UEfXs9a9vHuuEtg4DtwIfRRwUeCa2fn43GERX
xi73V8TVx2rsVsh1w/Oj5t+CHyii9MssE9qKbrCsuKRyJlQRz56Ndkvc3w2/
M55/FXyhiMs9/YoEQruh+tose8dnReQLLdxmweyBAlpOeemIIu7XeV1ipNoL
yhU7RrQmqHr0/wZOr+2FW15VzPApan9k8LEIg17QG+++bCOghB6X92RHnO6F
nCZZpqikEl5pRLfMqF54k+DqbLhCCen084d3S/dB7NY1Ct9OK2E03yO76OE+
KNi/4M7UWSX88mGpx+RcH7SebOtdZqOEAU35tdvE+0H1dmiOt4MSdnmK7Y5Z
0g9xJbxjeE0JxW4sNPE+3A/xBwrC34Yo4c3e5ReHMvqh5NQTvtYwJaw5YftA
M7cfOi+52Eg+UcKrrUl3j5b2g1qI2mb7GCWMeMH54fqnH17W+/1SS1NC5TOp
srUiHEg8fUgmslQJ/wrNuLAtOFDmvPJG2RclXB4u9mijNQe67wh1jn1TQhFn
/8U6ThzQeJn17lCNEqZ/DkFRLw4k9SqYLvynhKc8zM1KkzmQfLn90a1JJVy4
ZGTvpxEOpN51pZ1fxcQvT7ptba5yoV/3xO27q5lYW/UygOfJhZUj24dfrGNi
1A+2qpsvF5KtpGpbtJlYFycXtjWcC4nwNtx8JxMD8o3VejK5EMcbYO0/ycRi
2RdsopcL7Rn1gXZWTFRqUHBZOsgFVZs8fv9zTPS/nj3uNs6F2LqHbaW2TPQ6
I36rS5CE6LeaCfpuTHz4bfXKVgUSIu3tNDcEMdHKXLXKcDcJv5ccjj4UwsQ+
K3fn2/tIkGvaIukcxsSNeV/FEkxICDcUG0p7xsR9m0blsixICFVPfqeRzMQu
ycgDQ44k1DQHqe1KZWJaSd3xIBcSpB67h53LYGLkR+PdSu4kBM/b4x77nonJ
7nPvpzxJCPzXpatYyMRFua+fVweT8CP8e6pOCRMdfITP1j8mQeJgFvNYORNL
gguGvkSS8OCzN9/j70zUvdtq818sCfefLC2SaGLiDabjlc4MEr6aLNyg+ZeJ
1deOmZpkkiC2YDTeqJWJ248T/clZJPi5Ffn4djNRZUMnqHwmwcf0zF7BUSbG
rA7QX/aFhNgDTRbnJpgoT5b2b/xGQu4eU4fSKSa2Pj1Tv+oHCUNbdwX5C7DQ
LMDE5lctCeKb82I5Qixc3xUu4ldPgvpa7cwDoix8fVrt39JGEizUVvxiSLLQ
SzFjnVwLCVfYcd2uDBY6/VBOdmql9JBXmvwlw8K0B8XGr9tJKF0kofRUiYV/
b+prcrtJaBW5pznLZqHJK9qp3l4SpgX48dQSFm6tEfz0vZ+EteNDVktWsHBR
+uCQ6QAJ+wZtXbw1WSjOb1M+NkiCTV/73e41LLwTPFp8a5iE2x0nwgw3sHDn
w1tdwyMkPPtbl5iymYWBHnMrD46R8KHhQM4iXRZmaruHho6TUP2zrMIJWNjE
J8QumiCB803/T7UBC1+e/1LRyCNBpCyHu34nCwtP8oc3TZKgWrCOL2wPC302
Dd0pmSJBLzeFxjNi4YXI0QcR0yQcfb9U9fhBFl4PcvlgOkPC5Yyo9Z8OsbD1
TvfcJMUPkmV3so6wUHFT41nfWRIS4wKPeJqz0PF7ZyffHAmFUaIX2k6wcOmP
d3dPU9wcfvvqjtMsrFAQ1H9FMS94yj/hLAvPjEQsbqZYKsDlmagNC/2nTMUn
Kdb04aTZ2rIweK2q4hzFezyt8745sPDh5Mz/vrfh7LW/VVrOLDSXGn5YRPEN
16NtQa7U+eesES+KIxyrRobdWGjJeu2iSXHmBUNhMw8WRjh10PKper+fKZT9
cJOFFj8XfNWluPeE7jL5Oyzs6bj5Ioa637yj73Q8vKn64t+Gk5QeLBNNo2Zf
FrrbL01Ro1jHKOEEBrCQMXG2eSel3+GdbMfYQBZ2WNBXH6T0dcSIW/NCWDgt
2RxjQOnvp0MPtg5j4a7Oe+uZVH/i1/u/KItkoaBYe3cr1c88zXnvlkexUEu0
iggcJWFUZewXN46FCbc2NyQMkSCp5NhzMJGFOdWlSjTKL8tluyffvGLhvjS6
7xmShFNiv5WuvGGh5+0P9YV9JFwVOqTV8I6Fb6VeEVU9VP7nKnBLNgsTT9+r
Lusi4cvwpzNzBAtvCnd6OreRsKEpJsnnGwsdXIfXZTZQz9O0mUj/QeWlw4LQ
/kVC/03NXfU/WeiR8PXyqxoS4lQ/tmv8ZmGV3nLLQ9+p/tnWsL50Uvv33rR5
V0jCQG6kw1APCxsOWts+zaPyvuj0J3kOC38PX4x3/ESC1xuOue0wC7+yC0t+
vydh0kNwrzAfGzv3KvAKE0nojrd2juRnY5miECkeT0JdZXmEpiAbNYo3rzKI
IeENO7DbTJiNVqdn/C9FkHCxSNE7QZyNZ72XLW6/R0KD2Mb83XJsTNF+nSt/
loSS9RHdTfJsFOkMtl92kvLDiWmJS4pstLxhGLzEnJpv6QWWESw2to2Vb2s5
QMLuQweme5ay0aQhPMZeh8pbpM0m/7VstH6Yv71NjISXhRWWrPVs7Fj7uyhH
iISQfk3vtxvYeHvH7YEbc1xw0hutadzMxv0aMubfhrig0erpvBKo8yfndd6u
50L4siep3/ay0ZVO8z78nAsjwzvj7+xj45pEvTXm1PvkwOehp9oH2Pj2s7n7
nkAuCB8yvB9vwsYLI6IT7Te54OrBu3j9GBvDn907KmnJBZPvRzRWnWfj+Pyn
S/VkuJAWIchus2Hj64D7Pi3iXBA9my4bcZGNV0Wu9tsJciFvQni+kAMbiW9C
jdsGOKCl8r6jyYWN4gNukn1lHBB3lXpx/zYbl04L6C39jwM2kBdp4MVG5fyU
1ba2HCgUtQueuMvGxm9Xnj45xYGrUYWeZ33ZmPVj6dxHQw70lDqf0g1ko433
1uopJQ6UyFcp9T9jo3yUN+dGXj/czAsI35vNRnZ6jMyP0T7o/ZMXwsth4/IF
Hcszu/vAbGo4MCGXjaeXSAd6NfbByo3mvoJ51H38PJx78/qg/pXa1Y8lbBQy
3xBd4dcHa8OI4ytq2Dj5p0awX74POu0HmWIkG7tdR5h9K3thn4Jp/Jclyuh+
X2EVyHdDeLtm3nE1ZQzLW2mSI9oN7akijf3qysgL8HmvxusCD8yVlFihjDFJ
Ned+/uqClHOqHofWKKO4asv16yFdsCBj0KRpqzLasZ4nKYl1Qen2B3xcM2Vk
LTOzred0gL5D6XGarzKKbXy8MsG/DaIVrZZ8HVVG37Grhfr3GmFJYcLj/cdV
MOX1T70p7e8QuKpgefVnFdSKfe+nl5AM1sPzqsqXq+LZqfm3r28tIqxeD7F9
H6qiCieNE7GrjrC7fWjaMEgVZa/IGe72qCNcD2X+En9EsV2+YUdGHXFv1PVB
4GNVNEs9+bhX7heRps2bCnumigI7+ruV+n4RvPy5upevVPGZsqjOPL8GIrBa
PKCoVBUNZ1/6ffjQRES+sLfxLldFoSPDPzm9TcQLl8ptuytUkRm974u40h/i
vUzgZEWlKtYou6nO9/xDNJkzbH7WqqIu7f7Bnl3NhHqb3LbWNlVccdRJ1qDq
L7E68yozroN6/rEX8nz8LYTO3UbeuS5VjL2bW2ki10IYqT/L6OlVRb4v1o3V
e1oIZ1s2c3BQFYc7N1/bktxCeOh68t4MqyItgkzYUNBC3F3YWuMySulBpLSr
/G4hwtNf+E9MqOKXxVbb60T/EbG35p3PmVRF3n4fg6fK/4hXxucMPKZV8b38
wvmm2v+ITJUSJb1Z6vz5Fzf5jP8Rn4fVeHNzqtT35rzIKJt/xP8BJyPZtg==

        "]]},
      Annotation[#, "Charting`Private`Tag$37170#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
    "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->Automatic,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.86042053890012*^9, 3.860420553936365*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"2dfb812f-ccb8-46bf-a691-e2f04166f53b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NewPlot1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<X\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"NewPlot2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"GridLines", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"GridLinesStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dotted", ",", "Blue"}], "]"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Cos[x]\>\""}], ",", 
     RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"NewPlot3", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "i", "]"}], "+", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<X\>\"", ",", "Bold"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Y\>\"", ",", "Bold"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", "Red"}], ",", 
     RowBox[{"PlotMarkers", "->", "\"\<X\>\""}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<2D\nScatter Plot\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"NewPlot4", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "9"}], "}"}], ",", 
     RowBox[{"Filling", "->", "Axis"}], ",", 
     RowBox[{"ColorFunction", "->", "Yellow"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Log Log Plot\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.86042067057907*^9, 3.8604206750785384`*^9}, {
   3.8604208238851*^9, 3.8604208572464123`*^9}, 3.8604208909293685`*^9, 
   3.8604209280452957`*^9, {3.860421050478357*^9, 3.8604210697255707`*^9}, {
   3.8604212636753035`*^9, 3.860421297380372*^9}, {3.860421366323206*^9, 
   3.860421388767189*^9}, 
   3.8604214776665792`*^9},ExpressionUUID->"99402fad-4f5a-4688-9a4a-\
e1db7b127c26"],

Cell[CellGroupData[{

Cell[BoxData["%100"], "Input",
 NumberMarks->False,
 CellLabel->
  "In[104]:=",ExpressionUUID->"906e9e83-2596-4233-bace-94d34b908d69"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.5, 0, 0.5], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJxFxXss1AEcAPDToXZOc5QId7+TuZxH/NGWlke0Ja8lLttZjzvcKa+Y24RK
Im5GV908d7sd0cyctNOmxyVEXte4Usu1zLkZsdF1cSjVH77fPz77MPnZ51J3
kUikmH/+L7vJtw5IqQzeeUBLRCcSV0J23h5U3yGI67Cst4phRYjhjCBR5hqj
HtZupklXGG3w7ulZ1jKjB1aMyHO+M4ZhZad4OsPvCywMmahfytXDWQYvvUq5
AFOYpaxvx1bgartRtuKyEeZPJ7wmj/2Cc96W8rNZG3DXNWq805nfsKIwfdE/
kRS6c4l8K+7nkgVM0s6Eviwgw555gvwEthU8Z6o9b/PKGo40XL3xIGcPHDsn
8abTKfBiP7/4XYcN7Eebcgu/ZAtTQkw8nXEvfHqZu+bOsYM/96VYcH1ocHfF
wEXChAusRDMajT2cnFvYTW1wgI8IvTXRvH3we3sfG1HgfviFsqTRh+wIF1qw
z459xSm6gogs1QHY0MqUyoucYOlhZ8sejjMsaRAM8YiDMFd6QUOdx9dPtZjl
ahdYbwjL7yt3hZuCAlzGeW5wR5mIJvSlw+Wc5CiyCT+qU7SVjzPgOq/GjvEo
Ar7VW1UX1YPHuHBaRjyY8MmsoSSaGJe78j3GTLhH/+Oa2CR3WOLbx55U4wKj
5cQw+xDM7/pBiO/hGSXxW5H3cVG86hP1IV5hElVLanBloHmzVoab32xPtbbj
kklq1cAQ3tCcmXZ3GG/O04RHjOLPHCUboxpcx3VI037EWXrn8Fk97q8qoD8y
4MfLps2p83g0S/ZkYRHPTSfoq6t40Ynb5qdGvMx29kOeCa/rbK5cX8ebii2F
zzfw9rjUsKItXOU+6Bb8B1cbPc3b2/hfxrMqyQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$41743#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"X\"", TraditionalForm],
  PlotRange->{{0, 10}, {0., 9.999999795918367}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8604213155167937`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"20d742e3-3252-47b9-8634-70952b9d79bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["%95"], "Input",
 NumberMarks->False,
 CellLabel->"In[99]:=",ExpressionUUID->"cf3b44fe-5d08-4cbe-a583-46dd7e78e961"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.5, 0, 0.5], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJxFxXss1AEcAPDToXZOc5QId7+TuZxH/NGWlke0Ja8lLttZjzvcKa+Y24RK
Im5GV908d7sd0cyctNOmxyVEXte4Usu1zLkZsdF1cSjVH77fPz77MPnZ51J3
kUikmH/+L7vJtw5IqQzeeUBLRCcSV0J23h5U3yGI67Cst4phRYjhjCBR5hqj
HtZupklXGG3w7ulZ1jKjB1aMyHO+M4ZhZad4OsPvCywMmahfytXDWQYvvUq5
AFOYpaxvx1bgartRtuKyEeZPJ7wmj/2Cc96W8rNZG3DXNWq805nfsKIwfdE/
kRS6c4l8K+7nkgVM0s6Eviwgw555gvwEthU8Z6o9b/PKGo40XL3xIGcPHDsn
8abTKfBiP7/4XYcN7Eebcgu/ZAtTQkw8nXEvfHqZu+bOsYM/96VYcH1ocHfF
wEXChAusRDMajT2cnFvYTW1wgI8IvTXRvH3we3sfG1HgfviFsqTRh+wIF1qw
z459xSm6gogs1QHY0MqUyoucYOlhZ8sejjMsaRAM8YiDMFd6QUOdx9dPtZjl
ahdYbwjL7yt3hZuCAlzGeW5wR5mIJvSlw+Wc5CiyCT+qU7SVjzPgOq/GjvEo
Ar7VW1UX1YPHuHBaRjyY8MmsoSSaGJe78j3GTLhH/+Oa2CR3WOLbx55U4wKj
5cQw+xDM7/pBiO/hGSXxW5H3cVG86hP1IV5hElVLanBloHmzVoab32xPtbbj
kklq1cAQ3tCcmXZ3GG/O04RHjOLPHCUboxpcx3VI037EWXrn8Fk97q8qoD8y
4MfLps2p83g0S/ZkYRHPTSfoq6t40Ynb5qdGvMx29kOeCa/rbK5cX8ebii2F
zzfw9rjUsKItXOU+6Bb8B1cbPc3b2/hfxrMqyQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$41062#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"X\"", TraditionalForm],
  PlotRange->{{0, 10}, {0., 9.999999795918367}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.86042130472112*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"eafa2a12-c09f-4f33-abf5-07e3d8da2bb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"NewPlot1", ",", "NewPlot2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"NewPlot3", ",", "NewPlot4"}], "}"}]}], "}"}], ",", 
     RowBox[{"Frame", "->", "All"}], ",", 
     RowBox[{"Background", "->", "White"}], ",", 
     RowBox[{"Spacings", "->", "1"}]}], "]"}], ",", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Multiple Plots Box\>\"", ",", "20", ",", "Italic"}], "]"}], 
   ",", "Top", ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"Background", "->", "LightYellow"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860420612222791*^9, 3.8604206387779894`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"7c48ed10-ab33-4a6b-8939-79eb4c0bdc2b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        GrayLevel[1], 
        RectangleBox[{361, -223.49223594996212`}, {
         722, -446.98447189992424`}]}, {
        GrayLevel[1], 
        RectangleBox[{0, -223.49223594996212`}, {
         361, -446.98447189992424`}]}}, {{
        GrayLevel[1], 
        RectangleBox[{361, 0}, {722, -223.49223594996212`}]}, {
        GrayLevel[1], 
        RectangleBox[{0, 0}, {361, -223.49223594996212`}]}}}, {{
       InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0.5, 0, 0.5], 
               Thickness[Large]], 
              LineBox[CompressedData["
1:eJxFxXss1AEcAPDToXZOc5QId7+TuZxH/NGWlke0Ja8lLttZjzvcKa+Y24RK
Im5GV908d7sd0cyctNOmxyVEXte4Usu1zLkZsdF1cSjVH77fPz77MPnZ51J3
kUikmH/+L7vJtw5IqQzeeUBLRCcSV0J23h5U3yGI67Cst4phRYjhjCBR5hqj
HtZupklXGG3w7ulZ1jKjB1aMyHO+M4ZhZad4OsPvCywMmahfytXDWQYvvUq5
AFOYpaxvx1bgartRtuKyEeZPJ7wmj/2Cc96W8rNZG3DXNWq805nfsKIwfdE/
kRS6c4l8K+7nkgVM0s6Eviwgw555gvwEthU8Z6o9b/PKGo40XL3xIGcPHDsn
8abTKfBiP7/4XYcN7Eebcgu/ZAtTQkw8nXEvfHqZu+bOsYM/96VYcH1ocHfF
wEXChAusRDMajT2cnFvYTW1wgI8IvTXRvH3we3sfG1HgfviFsqTRh+wIF1qw
z459xSm6gogs1QHY0MqUyoucYOlhZ8sejjMsaRAM8YiDMFd6QUOdx9dPtZjl
ahdYbwjL7yt3hZuCAlzGeW5wR5mIJvSlw+Wc5CiyCT+qU7SVjzPgOq/GjvEo
Ar7VW1UX1YPHuHBaRjyY8MmsoSSaGJe78j3GTLhH/+Oa2CR3WOLbx55U4wKj
5cQw+xDM7/pBiO/hGSXxW5H3cVG86hP1IV5hElVLanBloHmzVoab32xPtbbj
kklq1cAQ3tCcmXZ3GG/O04RHjOLPHCUboxpcx3VI037EWXrn8Fk97q8qoD8y
4MfLps2p83g0S/ZkYRHPTSfoq6t40Ynb5qdGvMx29kOeCa/rbK5cX8ebii2F
zzfw9rjUsKItXOU+6Bb8B1cbPc3b2/hfxrMqyQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$44976#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, 
          ImagePadding -> {{36., 1.5000000000000568`}, {35., 
           35.84354704608937}}, DisplayFunction -> Identity, 
          Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> 
          FormBox["\"X\"", TraditionalForm], 
          PlotRange -> {{0, 10}, {0., 9.999999795918367}}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        NCache[{
          Rational[361, 2], -111.74611797498106`}, {
         180.5, -111.74611797498106`}], 
        ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], 
       InsetBox[
        GraphicsBox[{
          GraphicsComplexBox[CompressedData["
1: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
smdsPH3MvHnIIxk1TAl8XEz6P+bvh3tCcyiQ7WnMtRglMHpV/S3aQQwO2axr
CUsm/dL+hxFhSTS4kHVGNbGAQIeNH7i4+pHnMShdW0/6o5LOn4ubjjJBi3/P
yCUjAgckFjS/rmSCdYqzXjDJF4kD6+kjQYXIiD9Sl0G+P+8iS7nSJAp3xPwd
WPGkH6rN1qq4SYWVQ1r3TcYIrL1XPaViPQ2GurV/52kTiE8u0YQmToeQxS/1
Rkk/4zKz5cu7RjrQbtLEJAMJNEP7QyQmMqEDjesv+0rgw/MtrzKEyfncdPvU
5XbS350tshzyzEHKJ/2JiW4CdVlqG6arUYFgpab9I/MZp5vUX11Lg20bDdoK
+wjUkXQyVvI5HQIlXCM78glEWFh8zRxgAgevRs4kfzaollY/2U4BAUtu5EA1
gd0tNy0cGqMC7Ajcql1L4OOjCY+cjOiQe/ZimyYZ3zvZrbXnc5lwpi8r5TOb
wI2vvRNeqJP5CArUHX9N4KuSHbWnx1iwecMEmtVl4xappH+z9TFo6WgRJ5Gc
z2v8Pt3GCRS4v6O+pv1/Pjx2pC7vCB0WeA2W+5HzVeWkjcvQNyYYTcfY55Pn
yzldfVz4JBX0Jvc+kZwm6/N+Yua1ORoc2bNavZKcn6I15/S4/0j9/LLVXZn0
S7VtVotGTd6goID5cXsuySOjppc6hKgQPGNvo0PG5+yHpH1QSgPWnziHllYC
xTD6dxKdTFA6NWu1k8xvB2F70HE5BUwkHnqkkHx0ZtTOZkkTFfDLoj03/hJ4
T9A9sXJdOtzwFAsqJu9DSCTdN3nFhBx2YeWyLgKHH55zGJl5gmZDz8j5kvwt
qxcivreSXG/W489+kg/qv6kfOFnHhLwD438a/8/X2jsdd55QQV61zUaRnP9K
4feb02ikvzpbtSyN7JfaHIkJXwMqNMs9MDtKPp+Z/iDYtYMG9pXnNuiRvGwe
8Aa8h5jgq5WjIE7Oj2vHEzYM7qJD0kkbA2Vyf0M7htTbD0z4tVa6WJPkp/S9
bsZBs//PE780pckB/KVG3fyAuie6PJ7OHCf3G43P1W4N/47+5K/fau1IoAHZ
gXAz50Z04l3TeOdeLuJLGX/fFNaJPNZvynqzbgC1Of2hFH3vR+l/D1wpXULO
51V5p5aN8MPXp6PbJ4Y68ZX+T48CLgnCgRUpjz979OHlBq37k1cJw9ev2wMl
VnNwipGub8tnERiJbZFuuM/D286zMraepcC+Z9G+nSQPly3rqnXQEIO+E2is
k+RltVsNRyNzxIG1MFBM3oGHeyJ6Lt92k4QpZ37X5Cg2Pmu0hPJ2WgpYCsta
x2p68WYvr/77hvLwrT0/sHOmHYmYWyndFVEAlf4zQxd/9aCereINmu0K8K9d
QM1Eio3W+adJRr1ThGtydaJIiIc4V9qnBINpsPxJ9J2PCQRycNJ81mlDh0pf
eqf+KIH8z1z2DWIpwfszZitt/vGQSraY8rEBJcjis9sQ18pBQR+SQ74UKcPl
oC53X/t+ZJxckaIdpgIlFki1RrIbDbQUxk29V4dVq5KKgne34viuFYX2mgwI
1e/75qPWjacb+rd9uckA0WMT8R3u/dhAd9kKlwkGbGX2VinzOLhCZzK12YEJ
N+7rMq9KkXy9wZ56uZAJtVeW/gKS151ebK1w0GHBwMPrsgNxZD9f3j9rdosF
9gY4p2iMixsKP/px+vLR333pFLk6Aj1/804z/XYNitXVGzwewkObNwU6BDu1
Ib/PHNeDvWwkZabtKf1eAGzsckskTXsw7f2lj9tsheCgQ8RGF58BLDEzUTw9
JQypavE70m5ysWV+oggjSRSqZH/UhHoR+FvQupCbu6hgRh9LkSb77Z6yxfxq
jhhEMDVeVekSuGh9TP7OCAmQLT7hqaRG+q2x56M9vgqgfZKes0C+H+lk6db6
myuCD7tmqPUNB6U2B2U/U6ZBctHQpufk/P1s0vImmkODv0vH9zaR+bFTLKds
+ESHtwVft/1+SOZvZG68+poSfMDcrAcLeeh4WObrtdbKUBwp4xq/hY1kpY4o
X7RhwBZTM5dVB3ux9qr16YwiBpgdqFTato+Ng0R2ebC0mZCvfybbSIOHhVyE
TyRFMiEjr9E19jmBY+4HNZ8fJz/LVaY1kf3mcGPjmQInFshv121hcHj43mOv
I9e+s+A599x+uXAOPlOquop48wK5bjDW+EueVxZRnSRXVKGN99sN7s3w0IN7
x8QtbguDqewjpZ89HBw012s4v4qcN8u2TU5Jk35hLuOuRycFShJtlJaTPJHz
mHbUNFQMjH72R4xcJjBnaeyh+/2KYB4/bvntKg8dcGu1MntL6h/VBT7+IlDj
+6n6iDA69CddtQuuJf3IWtDTslKCA494zJUxPNSYWPCjWIYJ3xUt2gJiuPhI
6b8bH/2YMNF+NJfiRuBFA+zhi01MCNe6840g9amZDinhJmR95fK/WGdG4Bmp
t2knDT+jnrH27y8eE2iF394qY3EKOEebpEIOgW/OYu+X+VT403r8w41+Al+O
vRSnskccZHt+R6ZX87BdlLtIjgUN7g2/mby3h0ArNZsk65l0aBs6suX//69o
8H2o3zFIh1+GvqK2tqQfO9kqeGULE+q4bx/Kkf4kaVbc8uIzJhxRuOww20DG
y0Lya+ACFjSc8vwsWUngVTkBqqndLJAQjBXuzWXj7Nq21NEtiSjW1ntROznv
NDf1MepeUuDe33tnSf+ACz0uqO2zFoNiG/1ky8cEZvi1aWndp0Gx9dpTiuR8
TZSIxht86BAtf+RPcw85zwICFS08SX8oYU9hGRLY5RbrH18FE1y0xlMGSZ7O
8Tfz8aUVovsivNS9mEDGiv7sN7WicN60fP3nWLKfDWcmla9QQef3Xr0Esp//
5Q41v1xLA0q7j5jgYgJN6TW3ZovSYcu8io8FyRP3StYxIurpsFKB8SPyIoH2
vQptl7pP8m3J3VUrPhPYYnRr9awgi+Tx3rwfpL6axfSIDD/MRnUpG3x5vQTq
KzglOUWjgr5mcS6bzGeE1d8Qr2oaSJane7wg76Pk6TrYkUqH928btml9JONv
nNP7r48JPWVqfZvI+lOqWZZbY0QBxeCS1TOk3z1acKVrM0GFoxa1FzrrCOym
0LhxehMdei1+7xgk48vZEfWVyGaCBZOROE3mv/jJ7/fTqizY6Xv73HOyPoIM
L01ljZD9cknZuNCYjXWIw5HzHlHoRlr2USqZ/3Utwh6SsRRIlb/0V4pDPq9n
rxvpRofTfEq+y3gEEnbDIUalTNhzRquwguSHvGba5v2eVGjM9X8uSvLF34/N
25nTNBiUK7ctmyLQYGmb9aY5JtDOtXRQyPUEZgIqR4Neo2mvQ6WCBIEmHaL2
rfpHgUvn9fMxqV8+LX85TZ9poK4fsuRYC4ECFPZ4oQ4m/CnNGC0jv9dI/WQc
pkkBudU996yLSZ50SFl6ppYKZwZkTfvbyPgnNaYeWUUH4dOuLSv/9/OPLSLe
vWSC55Fdz+Q7CNwXb1o06pmKFp5m7TlPnk/hwY/mpG8UOC04PqY7Sdbjx+tn
C2uZ8NyYa/2UzFd8Ykt2VxIV/oWtDPwySGC5zKYzJvJ0OLcr1sfp/35RsfxW
pEuF/ZQqgTfk88/LW5Tm/9JAMeZ0bAAZL70TNJdPBBMchWQKjcn1gyP//Arb
SYfXgQ9SgNw/ZrBqXus9yRPTj3gvyPVTgoU83k+zoKOU475GlI2lYt6+Fmu4
jAL3rTV4Ru5Xtyvia/tnJkhPvTHN/f+8Gc/aePZUeL19h38eWS9V/I7nbUdo
0MR9VnVpguTj5apjPwcp0NWWaviY7A9zPtXXrX+ZoC3c0xNGnteww+5P8lI6
lBdI3y3530/wN9+YMHmEdG/NpFrPkP3vZXvR4APJD/wC869J/r71zOrDoWom
XEFuQlNkPkSG7dODpOiQJqc7EULyWxun46ijJhUOhXutmSHXF7HtSXXiMKHF
VO63F1kvPr9sRT9vJftr7bEz28j1NZ5S103P3EZSi17lqpDvrw0cgkc/mJDk
Eq0XQd6Hfc5Bjs1HhyjLip735POD4Xyv48SpIGA4FX6ZXD9N57J2cjcTfjRS
R7PI+x2wszu5ej0dcIUsbTO5nlT5RgPBOgr4qHlZO5L782ry9dQbmBDJfRg/
Sb7POGpvLKVC8qf29/Zm8v5V5iWLNY2oQLmQryVJfp/D/Lpo8z8WvBRjKPH6
BvB/f79+tw==
           "], {{{}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1:eJwl1nf8yEUcx/GfkFX2SPbIyt57REYyMgtlFqKMUlTIKCObyiozWlaFCtmy
smVFyg6R2dB4fh798fIed8bd9+788nTq1ez5RAkJCd3vSkgI3emXenhM/kGu
QD+T29O35Bx0qvw4LUbr0vW0ubEk/GA+I6rzX9GN+qL8Qr4qysiXaFfc4T9B
fuOz5LJ4QU4vj+XzYq8sJnzH18dxfgxaIKmB13WZsEkui8t8N/zNf4oXkRi7
dA1wgh+LliiHX3Xd8Q+/CP1iHditewQ/8uPQCuXj78QefUOc5MejdewT7kYy
JEcKpEQq3IO95j+Kn/gJeBwVcUX3LP7lF+Ml3It9ukb4mZ+IJ1AJV3U94kNh
CXkZqbFfboxT/CS0iX+P/Rmiy4zNcmX8xvdEIiyV+yMNDshNcJqfjLaxFr9/
qC4LtshVcI1/DndhmfyAObP5chggZ5DH8fnwEL+G7tOX4j/layGtfJA2xZnY
B2Of81P4nPw0/glaPM4i3UCfpu1ib+kwuSW9j9agX9NO9FvjxeiHcjtaLb4T
3RJnglY1fp2PA99cTkyr0BX0M2MF+Dl8+Tgr/Cb6ij4jP57Pj9r8N3S/vjS/
KNaJdPL3cW9wln8buYxPl0vgyTgT8nA+K7bK1XCD74Uk+Fx+FZnMmyA/gANx
H3CIb4Zz/Dt4CtVxU9cbSfGF/Fp8AxyONeI8/y7ao0asBUf0LXCBn4oOqBl/
LzIjC+5DVtyPbDgae45f+GnoiFrIjmP6VrjIT0cnPIRbuj64G8vlgciBH+TW
uMTPQGfUxm1dXyTDCnlQnAccj/cGl/mZ6BJ3yx69obsf2+Q6+D3eDyTHSrmg
OXP5Chgca5Mn8gVwML4PTsRZw6/8e8htzgy5ZJy5uL/ym3w21ORX0e364vxH
fPW413H26MP6P+iLsb+6FLQqXUk70i+NF6Lz5La0YrwxdDPtGm9Z7D2dFPtD
C9I6dC3tQr83XoYulp+itePO0200t7EfaRtcibdC/wX/Pp+Hn8mXwjPxHskj
+OzYIZeQP467hLryn7QfUuIrubDx+XwlDImzIU/mC+FQ/Pk4GWvCVX4WusY7
Zt5IXQ7slOvhL/4lpMLX8lDkxU9xZ/EbPxvdUB93dC/jHqyShyEffo47hWv8
HHRHA+THqdgfXOfn4lk8Em9V3PE4F/EdYl0ogtPmtscNfh56oCEexBl9B9zk
56MnHsXfuv64F6vl4SiKs/GtcYv/AM+hEf7RDUBqrJHfQDGckzvhNr8AzyO1
fRuly4nv5Mb4N94ipME38ptxP82bIhfG4TiTOM93xu/8wthbc96TS8c7I6eR
R/O5sEtugvgP9lU5LdbGnsgf8JUxIt4A+W2+SJxxfh09oi/LL4kziib8dlpC
fyHOK5rp/pAr0+Wxj/E2x/ej78dZpWVofboxzibtbTxt/KwRbwrNTWvR1bEu
utt4SfpJfH9akzaiW2lTY4n41/h0qBZ3jq6Lb8kv4KtgZLxp8jv8gzgql5OX
xvri7su/xP3Hn/xH6IN05ozR5cEe+bHYOt1AOT3Wy6NQChdjPfiL/xh90QyJ
zR+kz4AN8mhk170rF8Uxuby8LO5irInfkej/n89KG/sPLEMYvw==
                "], VertexColors -> Automatic]}, 
              Annotation[#, "Charting`Private`Tag$45023#1"]& ]}}, 
           VertexColors -> CompressedData["
1:eJwVm3k01G8bxlUqlS0qUiG7oogi5FKJFqkf2rQjRRsKFdmXkhKhtCGSrUKk
MjIz9n3fzZixM0OkJMT7vP9wjvM9z3N/7+W6P5dhvdV1swvzeXh47MiXBeT7
UMUOOffrHLyJUmxeUUJFsY3jXOggFV9vHrZ5dp8D++HlB0Qm8zEzrap14BYN
G6LeNX3o5KBjVXyl050qBOgkzGeY5qNP6XOrkiMX2+rkPt/QakaJzvPotH1F
aLYOeB7A4KKJVvc89DgL9lzRMLeJUuglNqasHuDASXb1T9O6Hohm6geUpVfC
6RxDfkHfALYxb4gu0ezHaMKtrnnytbiTx1wS8Ksb2x74vV1U3o/kdpe9782b
8Dw1eN3y9UywOK7jin19eCk4KKXh3IlK/6XWEV1NKHrMO2LH6IHKlVuN18g9
4u27NOJ+1+IK/yH3rq8s7D0RUfH95wBio/0Xxx+pRsBKLfvq882QH79l/G31
EHj3uSlqn62BqsTe1yUfyyEcHTAVazGAvpBd7i+NGzDfbcCujPc7NkrYRQZI
9OKzskuYuX8bwieMSrzfUsCf5pSYd7ULD/kNWtIZDJQc3H9dezAHp2TShD/P
sjApfq/ufjADf67lnBeezsFEGee1x3o2Fu3PjZbib0Pwij0lilQKDI+c3ZAR
24UmB7cuk3v1KFE2aDGzoYKptv5AVmQvnkS+tdq8pAYHS1hq9/dVglEVUhmW
MICxPQv4Lflq8MNceQevSys2xSaN/pkZhNKTvoyPw3XY/dx2s8wIG849ieea
Ng3gwB3pqt3iLUgW0JNcYd6L8e+b/57r6kaHTtrCCk0Wzqh3KZnt7UfSH+P5
ZpQOlBS+0dj+rwdXeQRcJ4r7Qd3t6JQk3Aih97PaR60H0flYeWTRqn68WXZs
67uvNWCel/6PR5MLhemNMYelezB17qX4J6FKTNQfVLnZyUXYvk+xo286kZG8
1Tg6pBTPZydjFEy4MPtNWfr6aCNOKXh0CzwshEfVk+ithRxs+zvNvxblOCHz
OlbxOx16gd1tKt4cpN1sPToySodRaFu64X4aruTtv6TtyMH6jzFth2epGBiK
vyo4TsXNrd0XdKM4OK4h//w7qxBHfVUPFVTScC1K4+XlnxxovV1WNN+qBi4r
N/3em5WPVVH/Qk6+5OLNws8tny61QoVr/rJTvhi3W+Qp51q5ELljFKvtxsbx
WwLLiuvLoJC8iHPVloP5Nkl+tm96kfjY4Jr9iyo8Ew+1S6rpx/7Nc+ucXPqh
q1ufHClSB7ZJZHCJWjeKDU9mzcvvx62/B6/62zQjN9ZSvPVrB1h23sYNSX0w
Pd9on/OYhXJ5isWa3404iJYF7w17sM390Zux173Q4uEv33OoFqn7D9P2NXWC
d+7XN1mXQRyhGEopulYjdyK1N6+pASmtJhzfL4OIVNWwPnu0FoWVkj5+eiVY
zhUJ2ObRD7+lWSdtNjehWV3X5EFULmbOjZS67OvByDu1F0/T2hHS1HIuy5qC
SHvbIbdhNkQ3/eyTFGIihaV+05KZg5AJ29mAQRZsX9B11GUZWKVVwtguQsHk
qKHJW1M2igJLd07wtSLT50qPzF8Krt0wiSsU7kbb1PnZ/RV1aKhfd1OLNx+C
t5fTa7b3oWd2VG+xC8lnwYo9YeE0GOZstjwqQEPXycQ4k/cceHloPGabl2B0
qv8/Z106XptcoTHXcBFfdOSpRXcdHMxGyiciC8BJNuILrOXCsuPMW581HQgt
uKLSpVmCcae49ywKF++M9ltadHbh8J3Hq2w45SiTfnQLn6uhVPvVUNCsDr2z
HYVK+wahvT/me/eJOijQAuYvf1WA5/rL5Ja/6kPZg5nvAgXN0BfzfB5mkAux
V7Z9i14S/ZKJagxO6MDQdnunWFUKNBZRlJf7sTGoJFS7SImJC8zh56yWHFhZ
Ru1vY7JQ8mZ6LVu1A3+OFHgo76Xg6MGMvaXZbHBDF2750tuEgc2UtpuOubig
R4/9b7ob4qcluls6ahHpWrFy9GQRPKf/swte0g/psPs160Kq0WCVUtTDrkdN
389W7UeD0Iy9/ftTExdxP3evSdzWha1ZFifcrcrx/Kw+X1oaFz7cl41NDm3Y
oq8q6/mwGJpTOqz+fxxUJD7Nv7OyFlcFin4I/8pHkfgRfs5LDho8ijaOmRfB
54WA8xCbhiVqO1OfkLkrF41e5ryEhr+FwybzflORKP1pfoIHB79dH1/+E0sH
75tHP27q0VB34XNidR4Hp4Lprhcjy6Cs8TvibQwdpnF71/7R5aL6U4aTuV8D
ZBb/W/1IpxBNu/RlmWwuLCTzO+MPMyGYnWLXJFiKuNB97QNnuNB4HSWYntON
mgXpXcKZFVj85GgXfVMNUiqXXAs73Ia0E2sDlcZI/784Jjo3Vg05Pc9z6zqr
sahk7GNW5wAmg9SK5mvUY8R19oN0BA2nwr69/cTqRUh9tqvof61w1B7rMR6k
gMcjWJMx1oUd3oN+3J0MLGs4vO7WMgoele25cHsnG//usE2zBJgorS/7lUTm
woLbMbl+iIWW3dPq526145qn7+PlDhQ4jUctDV/YBc6nlMP7HBrh6OFUH5Kf
i0D7WrGzL3qgdOHqRimSz5IcCxm9aSoYBndv+/2kQmCflUkE0THdLfnrv3AK
4Vuv/eVjNQ2rVKPrRWc46L5zQGpwsgblNd5eIkP50JN/yFcXzYX7+t2m6RGt
UGiemx+gVYwLKrVrGlu4cO5d5eEQy8Yvz6NbWaNlCFIrd+AQ3Sj72DQ+WNWA
5BXbHJSzB/FdrOvg7gu1iNa1izu4uARGK5RcDzj248f9Z/o5a5vwpJ8e/fZV
LrR70+DyXw/yn5706cxoR12k/Zwm0Y20Z5PvvLlsKFddTHwmxYQJO2RtTlsO
zO5P7nHtYuG+irt66+8OPJ4VWLllLQWvvhfeXmHFxpcXtXNHwlvwNXDIqFgk
F6tZShO0Xd2QXfcsI/5bHTw476n7d+fjmv6GeOl9feCcejXiW1eN41kjbtvV
a7Fxe5fGHrFB7DEQYL6K5ELOdBlHYHs3or50P1y9owL2S8zetnVz8URsea6h
DgOH8j6uZ8SXYPIF3l6X5iJ3f9/Zd5L1uBCQm6n3oQBeQ3W6fh85iFXyLtsY
VYK4l75dT4zpWHwm4uAdVw6eftKNZ9JoMDr94d2ulTS0VSifNCY6Fn44Wsj2
JQ2c5iWNmYI0JFPfi8wmc6BUJn+1dFkJ0uIrN7duoiPl80L/PBEuXK98c1A6
WYcnUzFOsxfIvbdeKRtVcfG74FzUjrF2LD22edpErgRfw86uzy7mQn/NrMBQ
YRci9MeF0FCOVzX/5vje1+Cc8Q7nVVIMCCasaLcoG4TlTVmxRUTfbAJtwo5b
1IFFF1v2iOhbb1p3ecfBOiT8O3uVv6QALfw3Tb3e9aGQlR0q2NKMW98WZKno
5ULk+13pm0+6cerMgcrw0A7o1e3K2LGFAizIIPuajbG9FL1XG5nY9nEodRXR
t+65R4mHGSz4z3t5Ncm2A79cl994r0uB7KCbwI1oNo7W9L5LPdEM52fTOyaO
5QLyyaOvS7tRfi/WTP3/uvGqP/fLEzrRi+7Vf7bToA5xmbQCDjINTPbUbCrH
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
            "]], {}}, {
         DisplayFunction -> Identity, 
          ImagePadding -> {{36., 1.5000000000000568`}, {35., 
           35.84354704608937}}, DisplayFunction -> Identity, 
          Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
          GridLines -> {{-1, 0, 1}, {-1, 0, 1}}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {{-1, 0, 1}, {-1, 0, 1}}, GridLinesStyle -> Directive[
            Dashing[{0, Small}], 
            RGBColor[0, 0, 1]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> 
          FormBox["\"Cos[x]\"", TraditionalForm], 
          PlotRange -> {{0, 10}, {-0.9999997966795732, 0.9999999999999791}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        NCache[{
          Rational[1083, 2], -111.74611797498106`}, {
         541.5, -111.74611797498106`}], 
        ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}]}, {
       InsetBox[
        GraphicsBox[{{}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              TagBox[
               InsetBox["X", {0., 0.}], "InsetString"], {{{1., 
              1.8414709848078965`}}, {{2., 1.9092974268256817`}}, {{3., 
              1.1411200080598671`}}, {{4., 0.24319750469207174`}}, {{5., 
              0.04107572533686153}}, {{6., 0.7205845018010741}}, {{7., 
              1.656986598718789}}, {{8., 1.9893582466233817`}}, {{9., 
              1.4121184852417565`}}, {{10., 0.45597888911063017`}}}]}}, {{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}, {{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}, {
         DisplayFunction -> Identity, 
          ImagePadding -> {{36., 1.5000000000000568`}, {35., 
           35.84354704608937}}, DisplayFunction -> Identity, DisplayFunction -> 
          Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
          Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
             FormBox[
              StyleBox["\"Y\"", Bold, StripOnInput -> False], 
              TraditionalForm], None}, {
             FormBox[
              StyleBox["\"X\"", Bold, StripOnInput -> False], 
              TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> 
          FormBox["\"2D\\nScatter Plot\"", TraditionalForm], 
          PlotRange -> {{0., 10.}, {0, 1.9893582466233817`}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
        NCache[{
          Rational[361, 2], -335.23835392494317`}, {
         180.5, -335.23835392494317`}], 
        ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], 
       InsetBox[
        GraphicsBox[{
          GraphicsComplexBox[CompressedData["
1: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
f/H4346Vtg3X+fXHrmLmQz2X8rjzqgmch+Ry+FWf6lnk3s9xmrlDfB3u/XM+
7m8/Mlcbpr1SZGD9wjimbG5OhtTA/Y7Wvg8bWxoVB/69ApZIJcpEDgaxjwbf
K24psJFX+FXKbRowb3ektbSGAtt04wg/IXMMSLg8tckdLc+i1bSEJRZOhJdZ
em8PdMiyBfvGS52y0YNPS15da86TYZc+Zv4Q9J0FErpT7LMypFm0pmudqooh
eHl5FuSekGJXLWq/i4cZwySbEMEIN0lm6Tfqfd8WM+g8/ybrmK0E893ilLL8
vBVIGbfNSNURZ+NVG+tsa1bDbNOKkxOHiDGna8Xqw+02QOyQ1Oup9SLs/Fb9
fXf7tsDKMdd02pgwm/35ilyXw3YYd8LtZFCyEJPsX3U6zngPzLUcmuD4nyB7
nyu3OrzsAOzcHXTprKMAk128xD5V+DBkPnqeHba9H+YKGVan1h+HSSoFAoeH
9sFKp887jG6egkJV119qDb9gtU66UtLkMJCpLdihe6YLoudNrk0fewkevipe
/3HdT1gRNyxSsiEGrpwa5Zg2rR2WWDhZ/ApOhGEac773f2qB1ItO5dez0iD8
7kuT7rWNkDDok/A7fgaUOl1vE7xcBwtU+VqmR7LAVNRYVaX3K3jM+vJ8/vIc
MO0XXCJu8hkM9Usz9uS8gOWT4u0Lq97Bkqz2mUH3C8Bh64FbNdPzYOP3Ra0S
I0rhfGj/3S9tN8Gqx+Sa7+lKsGemahb2tzjxNz2KPn21A9/3A+tVfxmf7wfu
vzXlh04x6OOOfXW52y7xAMbYb7izMKSfq93Yfb6tP/uf83F/pfi9xZcWM/GB
57Fil0HMvl1u4PPdat0mXkbooIHreeGryQt+iamD1wpOrWqrAnOKFZnwuX4k
KLhq2w+/Ic+URmjyxzzVAu2HMYIqgXJsv9N5Z89IHQjYGHcrcL0s03/DhPWn
TgfDI1rfRAxlWMD/fH0/KhlA91TPU0M1pNnVvFzXlJgFoKicsnpcrySb717g
5PLIFOznrAH4JsFq3zX9EOYs4I7ZsZ2tT8RZQ96nd6uPrYAdJ4Pnq8eJsYJr
Yrq3/e1g0tptgVU+oqx/5OlrO7scQM/rTbXWChE2fGrOyKmuzhColpHtNkOY
Nd1dZSNbtBNqFm+Vt1IRYj4aJuEpVu4Qn9DrM7ldgMUnhOcNTfSGF9rZpUsi
+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
/UrK2F+njPNrKGM+izLmxyljf4wy9pUp4zwIyjjPhDLmeShj3pgy9osoY5+V
Ms4LoIzzgihjHo4y5vUpY1+PMvbDKeP8Dco4P4Yy5qcoY76bMva5KGN/mDLO
Z6CM85koY/6QMvYjKGM/kjL28SnjvBPKOK+HMubVKGOenjL25yhjX5syzsOg
jPOwKGPekzL2UShjH5Uyzj+gjPNlKON8JMqYD6SM/QXK2FekjP14yjh/hDLO
H6OM+VrK2P+hjP1fyjhvgjLO86GM86goYx6TMvZFKGM/lDLOI6CM814o47w3
yphnpox9K8rYt6aM8z0o4/wkyjj/izLmXyljP4cy9nEp4/wHyjhfhzLO16OM
+XHK2G+jjP12yjhPhTLOq6KM89YoY96YMvahKGP/mTLO26CM84wo4zxDypjX
p4x9Qso4T4Ayzq+hjPPBKON8O8qY76aM/TPK2DenjPNNKOP8KMo4P5Iy9iMo
Y3+TMs5voIzzgijjPDbKmFenjH06ytiXp4zzWSjjPEPKmOenjH1DyjhfgDLO
s6GM88Io47xQytiHoYx9Xco4r4MyzoeijPOfKGOenzL2DSlj/58yzu+jjH0H
ytjHpIzzFSjjPB/KOP+SMvY/KGM/lTLOo6CM848oYx+CMvY1KeO8BMo4v44y
9kUoY5+VMs6foIzzjihjH4My9kUp47wFyjiflzL20ShjX54yzsehjH0Rythn
pYzz3ChjP4cy9ocp4zwPytgPoYz9Vco4z5My9p8oYz+bMvY9KOM8FsrYp6GM
fV/K2NegjPPFKGOfiTL2rSljH4UyzjuhjP0cytgfpox9FMo4b5gy9u0o4zwA
ytj/oYzzgShj/4oy9sMpY3+HMs67o4z9N8rYz6eM/SXKOD+HMva7KGP/nDLO
Q6WM/UPKOB+BMs4zooz9NsrYv6eM8/coYz+QMs4voIzzfyhjH44y9vUp47x5
ytivpozzXyjjvDfK2H+kjPMZKON8UsrYN6WM8zAo43wqyjhfmjL2cSnjvBDK
OP+LMvY3KeN8Cco4r5Iy9mMp4/wOyjgfizLOj6eM/WnKON+FMs5zo4x9Wco4
z4Myzh+ljH1kyjgvhfL/AaMlksk=
           "], {{{
              EdgeForm[], 
              GrayLevel[0.5], 
              GraphicsGroupBox[{
                
                PolygonBox[{{501, 1609, 691}, {204, 1391, 689}, {690, 1392, 
                 208}}], 
                PolygonBox[CompressedData["
1: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
OQv+3yL8H9Dl9U8=
                 "]]}]}}, {{}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1:eJwl01WUVmUYhuEfDCykO4eOSVK6uweYIiVUDDAQTm0MYOhuTFIMuhsGlUaQ
UMFukVMW17s8uL69n/v8TRo1IXN8oUQiscoT3zKFE4lpfoqxxs4imbb6Zq0F
Z+2XkBJlPdO14qy1s0mhnb5Fa8k5+2Xuopyer5VgnZ1DKu31rVorztuvcDfl
9RlaSdbbuaTRQd+mteaC/Sr3UEGfqZVig51HOh317VobvrZf414q6rO00my0
h5BBJ32H1paL9usUoZI+WyvDx/ZQGtFZ36m145L9BvdRWZ+jlWWTPYzGdNF3
ae35xp7C/VTR52rl+MQeThO66ru1Dly23+QBqurztPJ8ao+gKd30PVpHrthv
8SDV9PlaBT6zR9KM7vperRNX7bd5iOr6Aq0in9uP0pwe+j6tM9fsdyhKkr5Q
q8RmexSP0FPfr3XhW3sqD1NDX6RVZos9mhb00g9oXfnOnkYxauqLtSpstcfQ
kt76Qa0b39vTKU4tfYlWlW32WFrRRz+kdee6nU8JautLtWpstx+jNX31w1oP
btgzKEkdfZlWnR3247Shn35E68kP9kxKUVdfriWx034ibov++lGtFz/asyhN
PX2FVoNd9ri4LQbox7Te/GTPjtulvr5Sq8lu+8m4LTL141offrbnxO3SoPD/
t1+LPfZTcVsM1Au0vvxiz43bpaG+WqvNXvvpuC0G6Se0fvxqz4vbJVl/V6vD
PvuZuC0G619o/fnNnh+3S4r+nlaX/fb4uC2y9C+1AfxuL4jbJVV/X6vHAXtC
3BbZ+ldaJn/YC+N2SdM/0Opz0H42bosc/aQ2kD/tRXG7pOsfag04ZD8Xt0Wu
fkobxF/24rhdMvSPtIYctp+P2yJPP60N5m97SdwujfQ1WjJH7Bfithiin9Gy
+MdeGrdLY32tlsJRe2LcFkP1s1o2/9rL4nZpoq/TUjlmvxi3xTD9nJbDTXt5
3C5N9fVaGsftSXFbDNfPa7n8Z6+I26WZvkFLp8CeHDegXbNHcztujRHaBTuP
W/bKuGWa6xu1DE7Ym+w77FW3uQ==
                "], VertexColors -> Automatic], 
               LineBox[CompressedData["
1:eJwVzssqxGEAhvHPKUIWXIEdN8CCqxj2DiHnMcqMMjPUKIeIJAs2lMyGlHEh
WGODBYUFIhS/b/H0vO/7ff9Dc38yMVkWQkjirDyEC57hZ2MaWX1Mv5OHUYGE
bcB2LffgW5/T3+QcjvSU/ihPoQ4F/YdX0OK8Qy/JbViS//jSnpZf5Ay25Xrk
7ON8bzvgEd7gapygUp/nTy5ygXe5Eafo8vwg39j3uZfX4nM4jv/lPMvv9kPO
8w43oOhsmp9sKWzJtfG/5EX+5VXsyU1odb+Tz23tWJYDrijDr7ZZ5PUJ/UEe
xaZcgyp5gb/i+9Ht3pB+K/dhPd6J37Xn+MNW4n8QFDyv
                "], VertexColors -> Automatic]}, 
              Annotation[#, "Charting`Private`Tag$45111#1"]& ]}}, 
           VertexColors -> {
             RGBColor[1, 1, 0][0., 0.9999303963040612], 
             RGBColor[1, 1, 0][0.00014246859560939517`, 0.9999085206583611], 
             RGBColor[1, 1, 0][0.00032047114265961856`, 0.999877013091071], 
             RGBColor[1, 1, 0][0.0005121320924173614, 0.999837901622065], 
             RGBColor[1, 1, 0][0.0007274812082977204, 0.999787540354233], 
             RGBColor[1, 1, 0][0.000996423455026975, 0.9997151122198938], 
             RGBColor[1, 1, 0][0.001285558970346049, 0.9996254352718362], 
             RGBColor[1, 1, 0][0.0016469093473960095`, 0.9994961568749805], 
             RGBColor[1, 1, 0][0.002057746121224414, 0.999325956542991], 
             RGBColor[1, 1, 0][0.0024987511293020083`, 0.9991157675706719], 
             RGBColor[1, 1, 0][0.00304965667257974, 0.998813215288649], 
             RGBColor[1, 1, 0][0.003642487697689092, 0.9984380341364899], 
             RGBColor[1, 1, 0][0.0043082884728474794`, 0.9979553804080091], 
             RGBColor[1, 1, 0][0.005139646749173411, 0.9972616982878169], 
             RGBColor[1, 1, 0][0.006032902430947244, 0.9964037663625122], 
             RGBColor[1, 1, 0][0.00714906776246441, 0.9951678845045383], 
             RGBColor[1, 1, 0][0.008417527422073415, 0.9935425410777818], 
             RGBColor[1, 1, 0][0.009778328935536445, 0.9915378950827083], 
             RGBColor[1, 1, 0][0.011477963287960852`, 0.9886551360285215], 
             RGBColor[1, 1, 0][0.013305874869516732`, 0.9850857582594084], 
             RGBColor[1, 1, 0][0.015590571089221216`, 0.9799423725685147], 
             RGBColor[1, 1, 0][0.018188865015324598`, 0.9731746639045374], 
             RGBColor[1, 1, 0][0.02097896985068027, 0.9648232233557525], 
             RGBColor[1, 1, 0][0.02446474584285437, 0.9528198705974871], 
             RGBColor[1, 1, 0][0.028217153959443495`, 0.9379623778424799], 
             RGBColor[1, 1, 0][0.03243261076180668, 0.918897982494379], 
             RGBColor[1, 1, 0][0.03769681837065959, 0.8916049679092029], 
             RGBColor[1, 1, 0][0.043355016254584586`, 0.8580185102535389], 
             RGBColor[1, 1, 0][0.050425949684588314`, 0.8099862774208242], 
             RGBColor[1, 1, 0][0.05846387502467105, 0.7474422910454206], 
             RGBColor[1, 1, 0][0.06709009281511735, 0.6712786803806092], 
             RGBColor[1, 1, 0][0.07786531236434642, 0.5636794065554604], 
             RGBColor[1, 1, 0][0.08945796725586729, 0.43355051888633256`], 
             RGBColor[1, 1, 0][0.10247528015070288`, 0.2714020369207014], 
             RGBColor[1, 1, 0][0.11872844407418796`, 0.04843201983961502], 
             RGBColor[1, 1, 0][0., 0.9999303963040612], 
             RGBColor[1, 1, 0][2.080280563170916*^-6, 0.9999300982615583], 
             RGBColor[1, 1, 0][0.18149464123305048`, 0.], 
             RGBColor[1, 1, 0][2.080280563170916*^-6, 0.9999300982615583], 
             RGBColor[1, 1, 0][0.6470410123528242, 0.8143749896898111], 
             RGBColor[1, 1, 0][0.7490319761469832, 0.8114952360702252], 
             RGBColor[1, 1, 0][4.164988226356349*^-6, 0.9999297989491778], 
             RGBColor[1, 1, 0][1.0000000000000002`, 0.8390485803649089], 
             RGBColor[1, 1, 0][0.00006881227958668778, 0.9999202013993405], 
             RGBColor[1, 1, 0][0.00022818944253310685`, 0.9998939265886347], 
             RGBColor[1, 1, 0][0.00041300335627327136`, 0.9998588018543111], 
             RGBColor[1, 1, 0][0.0006161733828378156, 0.9998144183399591], 
             RGBColor[1, 1, 0][0.0008570306125958455, 0.9997539735312251], 
             RGBColor[1, 1, 0][0.0011360527798871102`, 0.9996733333546349], 
             RGBColor[1, 1, 0][0.001459546029111701, 0.9995655746953576], 
             RGBColor[1, 1, 0][0.0018448622290096301`, 0.9994172334648814], 
             RGBColor[1, 1, 0][0.0022707730821955622`, 0.9992279787545969], 
             RGBColor[1, 1, 0][0.002764078314423633, 0.9989755960850112], 
             RGBColor[1, 1, 0][0.0033358994294127938`, 0.9986384822734452], 
             RGBColor[1, 1, 0][0.0039641877791439266`, 0.9982129222737026], 
             RGBColor[1, 1, 0][0.004708794426163632, 0.9976338155296537], 
             RGBColor[1, 1, 0][0.00557106174818314, 0.9968619040930232], 
             RGBColor[1, 1, 0][0.006570381233403678, 0.9958313558831368], 
             RGBColor[1, 1, 0][0.007760310239120928, 0.9944139847438848], 
             RGBColor[1, 1, 0][0.009074927995073494, 0.9926078133313042], 
             RGBColor[1, 1, 0][0.01059699063766246, 0.9902018689832535], 
             RGBColor[1, 1, 0][0.01236064276437406, 0.9869921585600193], 
             RGBColor[1, 1, 0][0.014405866722039052`, 0.9827039032499507], 
             RGBColor[1, 1, 0][0.01684242423497118, 0.9768035075765449], 
             RGBColor[1, 1, 0][0.019536537078385346`, 0.9692806478211516], 
             RGBColor[1, 1, 0][0.022657683646702554`, 0.9592595870807591], 
             RGBColor[1, 1, 0][0.026276445871668167`, 0.9458961959489549], 
             RGBColor[1, 1, 0][0.030253840427646103`, 0.9290635444914929], 
             RGBColor[1, 1, 0][0.034968477017560395`, 0.9062305827837929], 
             RGBColor[1, 1, 0][0.040429381688415963`, 0.8759297613324845], 
             RGBColor[1, 1, 0][0.04675974199437134, 0.8357210367495512], 
             RGBColor[1, 1, 0][0.05429900256063813, 0.7808870184462113], 
             RGBColor[1, 1, 0][0.06263092174294305, 0.7117931378348933], 
             RGBColor[1, 1, 0][0.07227985768708467, 0.6211309291944853], 
             RGBColor[1, 1, 0][0.0834629321569043, 0.5026250348645248], 
             RGBColor[1, 1, 0][0.09574788715069626, 0.3571954988438048], 
             RGBColor[1, 1, 0][0.1103055298174066, 0.16658026590181158`], 
             RGBColor[1, 1, 0][4.164988226356349*^-6, 0.9999297989491778], 
             RGBColor[1, 1, 0][8.347722558530684*^-6, 0.9999291964931193], 
             RGBColor[1, 1, 0][8.347722558530684*^-6, 0.9999291964931193], 
             RGBColor[1, 1, 0][0.000016766732311641508`, 0.9999279761028569], 
             RGBColor[1, 1, 0][0.6048274664867156, 0.40277434571306764`], 
             RGBColor[1, 1, 0][0.6961738645170944, 0.9997979306448214], 
             RGBColor[1, 1, 0][0.8019639962066019, 0.26257678690909114`], 
             RGBColor[1, 1, 0][0.9266266551924798, 0.03534263639373088], 
             RGBColor[1, 1, 0][0.000033821053690435426`, 0.9999254721664199], 
             RGBColor[1, 1, 0][0.00018453887162424033`, 0.9999014925741635], 
             RGBColor[1, 1, 0][0.00036594082783837005`, 0.9998682208592008], 
             RGBColor[1, 1, 0][0.0005632748201566941, 0.9998265561670682], 
             RGBColor[1, 1, 0][0.0007910701178491567, 0.9997713711991807], 
             RGBColor[1, 1, 0][0.0010650453353905737`, 0.9996949363299091], 
             RGBColor[1, 1, 0][0.0013709418096529283`, 0.999596612843383], 
             RGBColor[1, 1, 0][0.0017440866471785524`, 0.9994581291806345], 
             RGBColor[1, 1, 0][0.0021624535563766045`, 0.9992786282645684], 
             RGBColor[1, 1, 0][0.00262897555456695, 0.9990482577136194], 
             RGBColor[1, 1, 0][0.003190321418807493, 0.9987288464315409], 
             RGBColor[1, 1, 0][0.003800631103220837, 0.998329263941285], 
             RGBColor[1, 1, 0][0.004504885398541553, 0.9978004644974076], 
             RGBColor[1, 1, 0][0.005351679515341492, 0.9970686063220277], 
             RGBColor[1, 1, 0][0.0062966793433818944`, 0.9961281200034564], 
             RGBColor[1, 1, 0][0.007449148633732874, 0.9948045839137046], 
             RGBColor[1, 1, 0][0.008740670448461059, 0.9930909558015607], 
             RGBColor[1, 1, 0][0.01018015394586242, 0.9908943312088431], 
             RGBColor[1, 1, 0][0.011911749310718601`, 0.9878520377687566], 
             RGBColor[1, 1, 0][0.013845670848396495`, 0.9839388573655318], 
             RGBColor[1, 1, 0][0.01620510084870066, 0.9784298456566827], 
             RGBColor[1, 1, 0][0.018851254952850165`, 0.9712934313043751], 
             RGBColor[1, 1, 0][0.021802868690860622`, 0.9621431152533736], 
             RGBColor[1, 1, 0][0.025355019659090008`, 0.9494759353486658], 
             RGBColor[1, 1, 0][0.029218330458385122`, 0.9336610792121905], 
             RGBColor[1, 1, 0][0.033677356433178346`, 0.9127920897268735], 
             RGBColor[1, 1, 0][0.03903978284085136, 0.8840289814296179], 
             RGBColor[1, 1, 0][0.04502589180711803, 0.8472701591814135], 
             RGBColor[1, 1, 0][0.05232731140889949, 0.7959443364932537], 
             RGBColor[1, 1, 0][0.06051210930739928, 0.7301899401440978], 
             RGBColor[1, 1, 0][0.069637314277267, 0.6470619742265493], 
             RGBColor[1, 1, 0][0.08061613425034772, 0.5341013053379343], 
             RGBColor[1, 1, 0][0.09255006590607766, 0.3964971517446543], 
             RGBColor[1, 1, 0][0.10631899957331704`, 0.2205855697062757], 
             RGBColor[1, 1, 0][0.000016766732311641508`, 0.9999279761028569], 
             RGBColor[1, 1, 0][0.000033821053690435426`, 0.9999254721664199], 
             RGBColor[1, 1, 0][0.000033821053690435426`, 0.9999254721664199], 
             RGBColor[1, 1, 0][0.5098995542202184, 0.], 
             RGBColor[1, 1, 0][0.584763383194724, 0.141914471730482], 
             RGBColor[1, 1, 0][0.6711586395838732, 0.9481476549904354], 
             RGBColor[1, 1, 0][0.775046810806224, 0.5808387837601585], 
             RGBColor[1, 1, 0][0.8919822227091709, 0.], 
             RGBColor[1, 1, 0][0.00010501416439280416`, 0.9999145596025829], 
             RGBColor[1, 1, 0][0.00027347966929552707`, 0.999885781533805], 
             RGBColor[1, 1, 0][0.0004617145266712775, 0.9998487113967551], 
             RGBColor[1, 1, 0][0.0006708880618825273, 0.999801432803043], 
             RGBColor[1, 1, 0][0.0009254511421806278, 0.9997352540138315], 
             RGBColor[1, 1, 0][0.0012095287200276743`, 0.9996502023594657], 
             RGBColor[1, 1, 0][0.0015514931670802805`, 0.9995321505088306], 
             RGBColor[1, 1, 0][0.0019493693301136717`, 0.9993732534477042], 
             RGBColor[1, 1, 0][0.002382829304913562, 0.9991737749820946], 
             RGBColor[1, 1, 0][0.0029042421560666856`, 0.9988973896229817], 
             RGBColor[1, 1, 0][0.0034865623192991014`, 0.9985416968953873], 
             RGBColor[1, 1, 0][0.00413334302244391, 0.9980884822646122], 
             RGBColor[1, 1, 0][0.004920287517416154, 0.9974545452660053], 
             RGBColor[1, 1, 0][0.005798048194459249, 0.996640632843701], 
             RGBColor[1, 1, 0][0.006854381542263369, 0.9955118574240694], 
             RGBColor[1, 1, 0][0.008082961743891616, 0.993994037962144], 
             RGBColor[1, 1, 0][0.0094206823463784, 0.9920909115398087], 
             RGBColor[1, 1, 0][0.011029399828642992`, 0.9894568000750678], 
             RGBColor[1, 1, 0][0.012825169794207055`, 0.9860714938806489], 
             RGBColor[1, 1, 0][0.014987233440437769`, 0.9813741582029797], 
             RGBColor[1, 1, 0][0.017503386690282344`, 0.9750548329711735], 
             RGBColor[1, 1, 0][0.020245502545663274`, 0.9671271691532193], 
             RGBColor[1, 1, 0][0.02354457481961782, 0.9561573222777804], 
             RGBColor[1, 1, 0][0.02723011456296599, 0.9420642010806224], 
             RGBColor[1, 1, 0][0.03132486126919849, 0.9241496586603655], 
             RGBColor[1, 1, 0][0.03630770028360965, 0.8991801070408401], 
             RGBColor[1, 1, 0][0.0418672342898903, 0.8672720888954208], 
             RGBColor[1, 1, 0][0.0485589403052689, 0.8233135454979053], 
             RGBColor[1, 1, 0][0.056343624553464214`, 0.7647443984114881], 
             RGBColor[1, 1, 0][0.06482274431659657, 0.6921809256915923], 
             RGBColor[1, 1, 0][0.07502129017598884, 0.5933752639660369], 
             RGBColor[1, 1, 0][0.08640905468196373, 0.4691446025232943], 
             RGBColor[1, 1, 0][0.09905504577315444, 0.3155346323518009], 
             RGBColor[1, 1, 0][0.11444017692342062`, 0.10924254714783034`], 
             RGBColor[1, 1, 0][0.00006881227958668778, 0.9999202013993405], 
             RGBColor[1, 1, 0][0.00006881227958668778, 0.9999202013993405], 
             RGBColor[1, 1, 0][0.1753147235789448, 0.], 
             RGBColor[1, 1, 0][0.00007103900137961628, 0.9999198599191763], 
             RGBColor[1, 1, 0][0.6255788288093339, 0.6310346610532886], 
             RGBColor[1, 1, 0][0.7221200934916436, 0.9570033933685981], 
             RGBColor[1, 1, 0][0.00007103900137961628, 0.9999198599191763], 
             RGBColor[1, 1, 0][0.9626151983318483, 0.5005137344188482], 
             RGBColor[1, 1, 0][0.000016766732311641508`, 0.9999279761028569], 
             RGBColor[1, 1, 0][0.0001633098219415036, 0.9999050713977664], 
             RGBColor[1, 1, 0][0.0003430102927310144, 0.9998726926477995], 
             RGBColor[1, 1, 0][0.0005374876655591429, 0.9998323246264157], 
             RGBColor[1, 1, 0][0.0007589846174407672, 0.999779603770327], 
             RGBColor[1, 1, 0][0.001030441272964503, 0.9997051966178699], 
             RGBColor[1, 1, 0][0.001327855139108151, 0.9996112908629416], 
             RGBColor[1, 1, 0][0.0016950563515028365`, 0.9994774886181312], 
             RGBColor[1, 1, 0][0.0021096559513975655`, 0.999302693602009], 
             RGBColor[1, 1, 0][0.0025632647112136513`, 0.9990826331591033], 
             RGBColor[1, 1, 0][0.0031193853850039156`, 0.9987717547784066], 
             RGBColor[1, 1, 0][0.003720894080742576, 0.9983845639086092], 
             RGBColor[1, 1, 0][0.004405689535444386, 0.9978793360628705], 
             RGBColor[1, 1, 0][0.00524476003383047, 0.9971667961774383], 
             RGBColor[1, 1, 0][0.006163573070227626, 0.9962684864495037], 
             RGBColor[1, 1, 0][0.007297748103821082, 0.9949895241649716], 
             RGBColor[1, 1, 0][0.008577733011453145, 0.9933205611654121], 
             RGBColor[1, 1, 0][0.009977399234025701, 0.99122200406762], 
             RGBColor[1, 1, 0][0.01169300005578177, 0.9882604447019822], 
             RGBColor[1, 1, 0][0.013573269947654234`, 0.9845229123624889], 
             RGBColor[1, 1, 0][0.01589503841175795, 0.9791998261889093], 
             RGBColor[1, 1, 0][0.018517246864823735`, 0.9722499433689863], 
             RGBColor[1, 1, 0][0.021387125605633443`, 0.9635076817076477], 
             RGBColor[1, 1, 0][0.02490605537713915, 0.9511763921940557], 
             RGBColor[1, 1, 0][0.028713522572442318`, 0.9358475504415233], 
             RGBColor[1, 1, 0][0.03304929226822398, 0.9158999907195337], 
             RGBColor[1, 1, 0][0.03836257037506468, 0.8878802617649674], 
             RGBColor[1, 1, 0][0.04418272713985971, 0.8527409747927382], 
             RGBColor[1, 1, 0][0.0513679982926321, 0.8030880204644568], 
             RGBColor[1, 1, 0][0.0594793186994914, 0.7389548778989704], 
             RGBColor[1, 1, 0][0.06835200616690433, 0.6593779341812729], 
             RGBColor[1, 1, 0][0.07922893113700583, 0.5491211456667243], 
             RGBColor[1, 1, 0][0.09099102246541649, 0.41529801607466055`], 
             RGBColor[1, 1, 0][0.10437961263084106`, 0.24638336112457437`], 
             RGBColor[1, 1, 0][0.1207831002954462, 0.01883724348220227], 
             RGBColor[1, 1, 0][0.0000732704619180083, 0.9999195169840608], 
             RGBColor[1, 1, 0][0.0000732704619180083, 0.9999195169840608], 
             RGBColor[1, 1, 0][0.501198656982282, 0.], 
             RGBColor[1, 1, 0][0.5749819281648693, 0.0029608257226592456`], 
             RGBColor[1, 1, 0][0.6589896668163061, 0.8906445254160352], 
             RGBColor[1, 1, 0][0.7619285144139343, 0.7075186744051072], 
             RGBColor[1, 1, 0][0.8725779759708207, 0.], 
             RGBColor[1, 1, 0][0.0000867593050483063, 0.9999174284704013], 
             RGBColor[1, 1, 0][0.00025062580273799503`, 0.9998899291382131], 
             RGBColor[1, 1, 0][0.00043714929824401175`, 0.9998538434714178], 
             RGBColor[1, 1, 0][0.0006432998602036351, 0.9998080351417125], 
             RGBColor[1, 1, 0][0.0008909277174919429, 0.9997447851080984], 
             RGBColor[1, 1, 0][0.0011724768933221625`, 0.9996619654410309], 
             RGBColor[1, 1, 0][0.0015050939600107127`, 0.9995491720017422], 
             RGBColor[1, 1, 0][0.001896640821719125, 0.9993956431344648], 
             RGBColor[1, 1, 0][0.002326326152354159, 0.9992013363410424], 
             RGBColor[1, 1, 0][0.0028335159138639285`, 0.9989372116695667], 
             RGBColor[1, 1, 0][0.0034105843067797764`, 0.9985909200137518], 
             RGBColor[1, 1, 0][0.004048053753555497, 0.9981517488933148], 
             RGBColor[1, 1, 0][0.0048135755754475035`, 0.9975458161413209], 
             RGBColor[1, 1, 0][0.0056835881815825925`, 0.9967531520992481], 
             RGBColor[1, 1, 0][0.006711070202623893, 0.9956745542010749], 
             RGBColor[1, 1, 0][0.007920173597507513, 0.9942078137334318], 
             RGBColor[1, 1, 0][0.00924634366896447, 0.9923537258479662], 
             RGBColor[1, 1, 0][0.010811212810264818`, 0.9898361528389038], 
             RGBColor[1, 1, 0][0.012590918489778247`, 0.9865396854391596], 
             RGBColor[1, 1, 0][0.01469385441586253, 0.9820513202617092], 
             RGBColor[1, 1, 0][0.01716989652734048, 0.9759450193606583], 
             RGBColor[1, 1, 0][0.019888008890057835`, 0.9682220909427947], 
             RGBColor[1, 1, 0][0.023097045518074177`, 0.957736797406074], 
             RGBColor[1, 1, 0][0.026749180302742606`, 0.9440128016369019], 
             RGBColor[1, 1, 0][0.030784836840542555`, 0.9266474534497067], 
             RGBColor[1, 1, 0][0.03563196534303195, 0.9027686403817683], 
             RGBColor[1, 1, 0][0.04114217288484567, 0.8716730187304036], 
             RGBColor[1, 1, 0][0.04765102083583893, 0.8296283336130111], 
             RGBColor[1, 1, 0][0.05531203089590415, 0.7729559058931966], 
             RGBColor[1, 1, 0][0.06371755152329234, 0.7021435350924399], 
             RGBColor[1, 1, 0][0.0736379846941692, 0.6074882737632671], 
             RGBColor[1, 1, 0][0.08492336403807033, 0.4861421031481543], 
             RGBColor[1, 1, 0][0.09738756858667517, 0.336666969638933], 
             RGBColor[1, 1, 0][0.11235399951880243`, 0.1383368309334292], 
             RGBColor[1, 1, 0][0.00007774763959124096, 0.9999188267241556], 
             RGBColor[1, 1, 0][0.00007774763959124096, 0.9999188267241556], 
             RGBColor[1, 1, 0][0.0000867593050483063, 0.9999174284704013], 
             RGBColor[1, 1, 0][0.0000867593050483063, 0.9999174284704013], 
             RGBColor[1, 1, 0][0.6151157849653658, 0.5217415161834034], 
             RGBColor[1, 1, 0][0.7090284675705889, 0.990838669538635], 
             RGBColor[1, 1, 0][0.8157707093821833, 0.07371985312110524], 
             RGBColor[1, 1, 0][0.9444497002072438, 0.2799818885791767], 
             RGBColor[1, 1, 0][0.10829408625165464`, 0.19399054804087934`], 
             RGBColor[1, 1, 0][0.00010501416439280416`, 0.9999145596025829], 
             RGBColor[1, 1, 0][0.00010501416439280416`, 0.9999145596025829], 
             RGBColor[1, 1, 0][0.00014246859560939517`, 0.9999085206583611], 
             RGBColor[1, 1, 0][0.518751206544934, 0.], 
             RGBColor[1, 1, 0][0.5947109555844735, 0.2756668195753422], 
             RGBColor[1, 1, 0][0.6835519930506082, 0.9850829784833551], 
             RGBColor[1, 1, 0][0.7883906784917828, 0.43214833838055466`], 
             RGBColor[1, 1, 0][0.9091396074154583, 0.], 
             RGBColor[1, 1, 0][0.00014246859560939517`, 0.9999085206583611], 
             RGBColor[1, 1, 0][0.0001450527832270988, 0.9999080964242876], 
             RGBColor[1, 1, 0][0.17837806729611455`, 0.], 
             RGBColor[1, 1, 0][0.0001450527832270988, 0.9999080964242876], 
             RGBColor[1, 1, 0][0.6362195653600128, 0.7290984362711296], 
             RGBColor[1, 1, 0][0.7354531126866851, 0.8973983102565259], 
             RGBColor[1, 1, 0][0.00014764293344234254`, 0.9999076702302855], 
             RGBColor[1, 1, 0][0.9811297294819195, 0.689324710933815], 
             RGBColor[1, 1, 0][8.347722558530684*^-6, 0.9999291964931193], 
             RGBColor[1, 1, 0][0.00015284117672813646`, 0.9999068119262334], 
             RGBColor[1, 1, 0][0.0003316922147783155, 0.9998748714633381], 
             RGBColor[1, 1, 0][0.0005247563856057171, 0.9998351366550022], 
             RGBColor[1, 1, 0][0.0007431608160067857, 0.9997836083864746], 
             RGBColor[1, 1, 0][0.0010133597081530788`, 0.999710196771675], 
             RGBColor[1, 1, 0][0.0013066091547462707`, 0.9996184285395293], 
             RGBColor[1, 1, 0][0.001670873439326572, 0.9994869075809538], 
             RGBColor[1, 1, 0][0.002083591003371155, 0.9993144236788947], 
             RGBColor[1, 1, 0][0.002530859635371571, 0.9990993526557264], 
             RGBColor[1, 1, 0][0.0030843714061642596`, 0.998792662921141], 
             RGBColor[1, 1, 0][0.003681525955890367, 0.9984115239095172], 
             RGBColor[1, 1, 0][0.004356766697619645, 0.9979177052197423], 
             RGBColor[1, 1, 0][0.005191979536090577, 0.9972146512361474], 
             RGBColor[1, 1, 0][0.006097936101158928, 0.9963367505509094], 
             RGBColor[1, 1, 0][0.007223070984914511, 0.995079512006997], 
             RGBColor[1, 1, 0][0.00849729161663598, 0.9934324882939938], 
             RGBColor[1, 1, 0][0.009877407746410608, 0.9913813955082358], 
             RGBColor[1, 1, 0][0.011585021574146327`, 0.988459475721609], 
             RGBColor[1, 1, 0][0.013438952470146632`, 0.9848069377831202], 
             RGBColor[1, 1, 0][0.015742111714561913`, 0.9795744669616622], 
             RGBColor[1, 1, 0][0.018352358621231822`, 0.9727162110430455], 
             RGBColor[1, 1, 0][0.021182108025967275`, 0.9641714697959342], 
             RGBColor[1, 1, 0][0.0246844519761317, 0.9520051339546381], 
             RGBColor[1, 1, 0][0.02846429223044764, 0.936913772868008], 
             RGBColor[1, 1, 0][0.03273954166440713, 0.9174124830096738], 
             RGBColor[1, 1, 0][0.038028274014353165`, 0.8897581791096026], 
             RGBColor[1, 1, 0][0.043766957799878436`, 0.8554034826902882], 
             RGBColor[1, 1, 0][0.05089483547638247, 0.8065673150538494], 
             RGBColor[1, 1, 0][0.058969446821249875`, 0.7432327504214262], 
             RGBColor[1, 1, 0][0.06771815194350186, 0.6653793914031361], 
             RGBColor[1, 1, 0][0.07854419892960308, 0.5564571762445509], 
             RGBColor[1, 1, 0][0.09022127357784845, 0.4244919635917073], 
             RGBColor[1, 1, 0][0.10342310445448676`, 0.2589889543788165], 
             RGBColor[1, 1, 0][0.11975140130187634`, 0.03373362645210234], 
             RGBColor[1, 1, 0][0.00014764293344234254`, 0.9999076702302855], 
             RGBColor[1, 1, 0][0.00015284117672813646`, 0.9999068119262334], 
             RGBColor[1, 1, 0][0.49690393744325606`, 0.], 
             RGBColor[1, 1, 0][0.00015284117672813646`, 0.9999068119262334], 
             RGBColor[1, 1, 0][0.6529880508075023, 0.8547384412955479], 
             RGBColor[1, 1, 0][0.7554527613069721, 0.762372030196072], 
             RGBColor[1, 1, 0][0.0001633098219415036, 0.9999050713977664], 
             RGBColor[1, 1, 0][0.00007774763959124096, 0.9999188267241556], 
             RGBColor[1, 1, 0][0.00023935591433884565`, 0.9998919462882341], 
             RGBColor[1, 1, 0][0.00042502436662056927`, 0.9998563440021968], 
             RGBColor[1, 1, 0][0.0006296793920105701, 0.999811253673053], 
             RGBColor[1, 1, 0][0.0008739015901091191, 0.9997494213730156], 
             RGBColor[1, 1, 0][0.0011541870413545232`, 0.9996676979535457], 
             RGBColor[1, 1, 0][0.001482214567954205, 0.9995574492730656], 
             RGBColor[1, 1, 0][0.0018706338627539093`, 0.9994065364114361], 
             RGBColor[1, 1, 0][0.002298431861782189, 0.9992147704769697], 
             RGBColor[1, 1, 0][0.0027986375113713095`, 0.9989565802933126], 
             RGBColor[1, 1, 0][0.0033730816106183714`, 0.9986149052042775], 
             RGBColor[1, 1, 0][0.004005944348390934, 0.9981825928578163], 
             RGBColor[1, 1, 0][0.004760945850095126, 0.997590217345472], 
             RGBColor[1, 1, 0][0.005627085321995484, 0.9968079910246701], 
             RGBColor[1, 1, 0][0.006640400941557524, 0.9957536784048338], 
             RGBColor[1, 1, 0][0.007839879626467991, 0.9943118327141832], 
             RGBColor[1, 1, 0][0.009160273538985231, 0.992481842127961], 
             RGBColor[1, 1, 0][0.010703610652227151`, 0.9900206844883209], 
             RGBColor[1, 1, 0][0.01247528792371918, 0.9867678534824658], 
             RGBColor[1, 1, 0][0.014549192887845518`, 0.982380627793384], 
             RGBColor[1, 1, 0][0.01700541498075608, 0.9763781545528755], 
             RGBColor[1, 1, 0][0.019711526633845632`, 0.9687558390046986], 
             RGBColor[1, 1, 0][0.02287635303395977, 0.9585051500491335], 
             RGBColor[1, 1, 0][0.026511796902746076`, 0.9449625129119635], 
             RGBColor[1, 1, 0][0.03051821962479113, 0.9278655451801991], 
             RGBColor[1, 1, 0][0.03529870432044313, 0.904515157890205], 
             RGBColor[1, 1, 0][0.04078425657165843, 0.8738191220516737], 
             RGBColor[1, 1, 0][0.04720332053099988, 0.8327019681308454], 
             RGBColor[1, 1, 0][0.054803217087399596`, 0.7769559342296457], 
             RGBColor[1, 1, 0][0.06317193586700509, 0.707006881175826], 
             RGBColor[1, 1, 0][0.07295580272173939, 0.6143674953941928], 
             RGBColor[1, 1, 0][0.08419001776431535, 0.49444703612612545`], 
             RGBColor[1, 1, 0][0.09656428254097435, 0.34700583127209605`], 
             RGBColor[1, 1, 0][0.11132509409454741`, 0.1525638038441947], 
             RGBColor[1, 1, 0][0.0001633098219415036, 0.9999050713977664], 
             RGBColor[1, 1, 0][0.00018453887162424033`, 0.9999014925741635], 
             RGBColor[1, 1, 0][0.00018453887162424033`, 0.9999014925741635], 
             RGBColor[1, 1, 0][0.00022818944253310685`, 0.9998939265886347], 
             RGBColor[1, 1, 0][0.6099499685688039, 0.463370615923056], 
             RGBColor[1, 1, 0][0.7025718082280273, 0.9983592417169843], 
             RGBColor[1, 1, 0][0.8088379291358093, 0.17044036524123193`], 
             RGBColor[1, 1, 0][0.9354957774327876, 0.16019764235603998`], 
             RGBColor[1, 1, 0][0.10730203965446515`, 0.20738884212460393`], 
             RGBColor[1, 1, 0][0.00022818944253310685`, 0.9998939265886347], 
             RGBColor[1, 1, 0][0.00023097141722614424`, 0.9998934349311606], 
             RGBColor[1, 1, 0][0.00023097141722614424`, 0.9998934349311606], 
             RGBColor[1, 1, 0][0.5143063737958145, 0.], 
             RGBColor[1, 1, 0][0.5897162295110543, 0.2095296636380378], 
             RGBColor[1, 1, 0][0.6773270119202184, 0.9692936324593733], 
             RGBColor[1, 1, 0][0.7816903073662144, 0.5091848994828788], 
             RGBColor[1, 1, 0][0.9005200983728411, 0.], 
             RGBColor[1, 1, 0][0.0002337598108786071, 0.9998929410022734], 
             RGBColor[1, 1, 0][0.0002337598108786071, 0.9998929410022734], 
             RGBColor[1, 1, 0][0.1768397988494777, 0.], 
             RGBColor[1, 1, 0][0.00023935591433884565`, 0.9998919462882341], 
             RGBColor[1, 1, 0][0.6308767980789396, 0.681567770336615], 
             RGBColor[1, 1, 0][0.7287561526489493, 0.9304643389108734], 
             RGBColor[1, 1, 0][0.00023935591433884565`, 0.9998919462882341], 
             RGBColor[1, 1, 0][0.9718284186236636, 0.5993538528373926], 
             RGBColor[1, 1, 0][0.00025062580273799503`, 0.9998899291382131], 
             RGBColor[1, 1, 0][0.505530422721242, 0.], 
             RGBColor[1, 1, 0][0.5798520654822799, 0.07299995103316398], 
             RGBColor[1, 1, 0][0.6650463612519707, 0.9218574082933552], 
             RGBColor[1, 1, 0][0.7684597060450858, 0.6469831966797454], 
             RGBColor[1, 1, 0][0.8835252072935759, 0.], 
             RGBColor[1, 1, 0][0.00025062580273799503`, 0.9998899291382131], 
             RGBColor[1, 1, 0][0.17370866036007207`, 0.], 
             RGBColor[1, 1, 0][0.00027347966929552707`, 0.999885781533805], 
             RGBColor[1, 1, 0][0.6203252819290265, 0.5776942539950447], 
             RGBColor[1, 1, 0][0.7155443813937491, 0.9770942842029354], 
             RGBColor[1, 1, 0][0.00027347966929552707`, 0.999885781533805], 
             RGBColor[1, 1, 0][0.9534892343210696, 0.3937396061841896], 
             RGBColor[1, 1, 0][0.00032047114265961856`, 0.999877013091071], 
             RGBColor[1, 1, 0][0.00032047114265961856`, 0.999877013091071], 
             RGBColor[1, 1, 0][0.6898341024890062, 0.9953141333864374], 
             RGBColor[1, 1, 0][0.7951484110825854, 0.3498842022686861], 
             RGBColor[1, 1, 0][0.9178415303600524, 0.], 
             RGBColor[1, 1, 0][0.0003232673619831585, 0.9998764811355976], 
             RGBColor[1, 1, 0][0.1799296430508588, 0.], 
             RGBColor[1, 1, 0][0.0003232673619831585, 0.9998764811355976], 
             RGBColor[1, 1, 0][0.6416075094508688, 0.773431998511622], 
             RGBColor[1, 1, 0][0.7422115325084331, 0.8577511637280612], 
             RGBColor[1, 1, 0][0.00032606960512150847`, 0.9998759468857552], 
             RGBColor[1, 1, 0][0.9905199731688927, 0.7695153223764838], 
             RGBColor[1, 1, 0][4.164988226356349*^-6, 0.9999297989491778], 
             RGBColor[1, 1, 0][0.00014764293344234254`, 0.9999076702302855], 
             RGBColor[1, 1, 0][0.00032606960512150847`, 0.9998759468857552], 
             RGBColor[1, 1, 0][0.0005184309220348971, 0.9998365249716884], 
             RGBColor[1, 1, 0][0.0007353030703410032, 0.9997855833684697], 
             RGBColor[1, 1, 0][0.0010048734951366592`, 0.9997126649937272], 
             RGBColor[1, 1, 0][0.0012960597007215496`, 0.9996219481225458], 
             RGBColor[1, 1, 0][0.001658864165002744, 0.9994915532442619], 
             RGBColor[1, 1, 0][0.002070641170557814, 0.9993202145540216], 
             RGBColor[1, 1, 0][0.0025147684813371578`, 0.9991075978367872], 
             RGBColor[1, 1, 0][0.003066976794072401, 0.998802983196078], 
             RGBColor[1, 1, 0][0.003661965766751079, 0.9984248347729502], 
             RGBColor[1, 1, 0][0.004332472262008112, 0.9979366287704114], 
             RGBColor[1, 1, 0][0.005165757416894211, 0.9972382749051827], 
             RGBColor[1, 1, 0][0.006065344201470467, 0.9963704130573731], 
             RGBColor[1, 1, 0][0.0071859855180077745`, 0.9951238983508791], 
             RGBColor[1, 1, 0][0.008457325226767953, 0.993487747007194], 
             RGBColor[1, 1, 0][0.009827754778827292, 0.9914600034822274], 
             RGBColor[1, 1, 0][0.01153137789831597, 0.9885577236311155], 
             RGBColor[1, 1, 0][0.013372259403036633`, 0.9849469926532923], 
             RGBColor[1, 1, 0][0.015666168930768658`, 0.9797592540704908], 
             RGBColor[1, 1, 0][0.018270438228163124`, 0.9729464061290835], 
             RGBColor[1, 1, 0][0.021080305093280995`, 0.9644988372535719], 
             RGBColor[1, 1, 0][0.024574362769521827`, 0.9524142381635525], 
             RGBColor[1, 1, 0][0.028340462687110508`, 0.937440259449087], 
             RGBColor[1, 1, 0][0.03258572536021369, 0.9181585770229189], 
             RGBColor[1, 1, 0][0.03786219261641224, 0.8906854328267615], 
             RGBColor[1, 1, 0][0.043560510763080144`, 0.8567168797788155], 
             RGBColor[1, 1, 0][0.0506598603769675, 0.8082842745809465], 
             RGBColor[1, 1, 0][0.05871612568653823, 0.7453459973929065], 
             RGBColor[1, 1, 0][0.06740340131523848, 0.6683417058500166], 
             RGBColor[1, 1, 0][0.07820402807079463, 0.5600824175893502], 
             RGBColor[1, 1, 0][0.08983881847692712, 0.42903805965590086`], 
             RGBColor[1, 1, 0][0.10294811176278001`, 0.265219417646067], 
             RGBColor[1, 1, 0][0.1192388346114761, 0.04110746859539142], 
             RGBColor[1, 1, 0][0.00032606960512150847`, 0.9998759468857552], 
             RGBColor[1, 1, 0][0.0003316922147783155, 0.9998748714633381], 
             RGBColor[1, 1, 0][0.0003316922147783155, 0.9998748714633381], 
             RGBColor[1, 1, 0][0.650007740512033, 0.8350989338380612], 
             RGBColor[1, 1, 0][0.752235526988252, 0.7876519525757674], 
             RGBColor[1, 1, 0][0.0003430102927310144, 0.9998726926477995], 
             RGBColor[1, 1, 0][0.0000732704619180083, 0.9999195169840608], 
             RGBColor[1, 1, 0][0.0002337598108786071, 0.9998929410022734], 
             RGBColor[1, 1, 0][0.00041900092713561475`, 0.9998575782172671], 
             RGBColor[1, 1, 0][0.0006229121403526142, 0.9998128426828646], 
             RGBColor[1, 1, 0][0.0008654467962844146, 0.9997517078694469], 
             RGBColor[1, 1, 0][0.0011451005447981658`, 0.9996705276895467], 
             RGBColor[1, 1, 0][0.0014708540637524423`, 0.9995615307900388], 
             RGBColor[1, 1, 0][0.0018577187637672647`, 0.9994119092437035], 
             RGBColor[1, 1, 0][0.002284573157786784, 0.9992214026092716], 
             RGBColor[1, 1, 0][0.002781318195418523, 0.9989661318887613], 
             RGBColor[1, 1, 0][0.0033544506274012418`, 0.9986267443173229], 
             RGBColor[1, 1, 0][0.003985022144637169, 0.9981978213446401], 
             RGBColor[1, 1, 0][0.00473481062305849, 0.997612115901559], 
             RGBColor[1, 1, 0][0.005599013879275667, 0.9968350623083524], 
             RGBColor[1, 1, 0][0.006605310267804416, 0.9957926963212558], 
             RGBColor[1, 1, 0][0.007800004769893489, 0.9943631399916191], 
             RGBColor[1, 1, 0][0.00911751057622755, 0.9925450936084054], 
             RGBColor[1, 1, 0][0.010650178439222125`, 0.9901116913165092], 
             RGBColor[1, 1, 0][0.012417842694745735`, 0.9868804847882376], 
             RGBColor[1, 1, 0][0.01447736365776093, 0.9825430126000511], 
             RGBColor[1, 1, 0][0.016923734105151817`, 0.9765917950759878], 
             RGBColor[1, 1, 0][0.019623846060121193`, 0.969019351456997], 
             RGBColor[1, 1, 0][0.02276676661634011, 0.9588840922802327], 
             RGBColor[1, 1, 0][0.02639386843211262, 0.945431341122706], 
             RGBColor[1, 1, 0][0.030385751451742566`, 0.9284670358325317], 
             RGBColor[1, 1, 0][0.035133213185979804`, 0.9053767227301817], 
             RGBColor[1, 1, 0][0.040606440571766995`, 0.8748788387611512], 
             RGBColor[1, 1, 0][0.046981018421585405`, 0.8342182642982188], 
             RGBColor[1, 1, 0][0.05455053752101973, 0.7789300231137293], 
             RGBColor[1, 1, 0][0.06290085604663169, 0.7094095738332793], 
             RGBColor[1, 1, 0][0.0726170541633412, 0.6177635743545815], 
             RGBColor[1, 1, 0][0.08382569572856145, 0.49855179625399115`], 
             RGBColor[1, 1, 0][0.09615522712981242, 0.352119204735372], 
             RGBColor[1, 1, 0][0.11081414963107065`, 0.15959821031450924`], 
             RGBColor[1, 1, 0][0.0003430102927310144, 0.9998726926477995], 
             RGBColor[1, 1, 0][0.00036594082783837005`, 0.9998682208592008], 
             RGBColor[1, 1, 0][0.00036594082783837005`, 0.9998682208592008], 
             RGBColor[1, 1, 0][0.00041300335627327136`, 0.9998588018543111], 
             RGBColor[1, 1, 0][0.6073833260089775, 0.4333386711803458], 
             RGBColor[1, 1, 0][0.6993655304047309, 0.999829248128351], 
             RGBColor[1, 1, 0][0.8053936380758573, 0.2170976197511747], 
             RGBColor[1, 1, 0][0.10680939892734292`, 0.2140122607678023], 
             RGBColor[1, 1, 0][0.00041300335627327136`, 0.9998588018543111], 
             RGBColor[1, 1, 0][0.0004159989150813814, 0.9998581913523581], 
             RGBColor[1, 1, 0][0.0004159989150813814, 0.9998581913523581], 
             RGBColor[1, 1, 0][0.5872345933996268, 0.1758955634159206], 
             RGBColor[1, 1, 0][0.6742357819373624, 0.9593771849539142], 
             RGBColor[1, 1, 0][0.778361480034895, 0.5456932532974028], 
             RGBColor[1, 1, 0][0.00041900092713561475`, 0.9998575782172671], 
             RGBColor[1, 1, 0][0.00041900092713561475`, 0.9998575782172671], 
             RGBColor[1, 1, 0][0.00042502436662056927`, 0.9998563440021968], 
             RGBColor[1, 1, 0][0.6282222372432169, 0.6566643278950058], 
             RGBColor[1, 1, 0][0.7254305451926356, 0.9445453690616993], 
             RGBColor[1, 1, 0][0.00042502436662056927`, 0.9998563440021968], 
             RGBColor[1, 1, 0][0.00043714929824401175`, 0.9998538434714178], 
             RGBColor[1, 1, 0][0.5774118709229118, 0.03811020779067451], 
             RGBColor[1, 1, 0][0.6620110977471708, 0.9068521227799962], 
             RGBColor[1, 1, 0][0.7651871508459468, 0.6779572296639209], 
             RGBColor[1, 1, 0][0.00043714929824401175`, 0.9998538434714178], 
             RGBColor[1, 1, 0][0.0004617145266712775, 0.9998487113967551], 
             RGBColor[1, 1, 0][0.0004617145266712775, 0.9998487113967551], 
             RGBColor[1, 1, 0][0.6177150503648524, 0.5500322652229049], 
             RGBColor[1, 1, 0][0.7122789838013923, 0.9847525936157583], 
             RGBColor[1, 1, 0][0.8192593245150978, 0.023725612555671006`], 
             RGBColor[1, 1, 0][0.0005121320924173614, 0.999837901622065], 
             RGBColor[1, 1, 0][0.6866858740759546, 0.9909054622204615], 
             RGBColor[1, 1, 0][0.7917623440103925, 0.39165889266611514`], 
             RGBColor[1, 1, 0][0.0005121320924173614, 0.999837901622065], 
             RGBColor[1, 1, 0][0.0005152781850021044, 0.999837214749019], 
             RGBColor[1, 1, 0][0.6389078665045224, 0.7516769836194431], 
             RGBColor[1, 1, 0][0.7388246049932735, 0.8783997474718772], 
             RGBColor[1, 1, 0][0.0005152781850021044, 0.999837214749019], 
             RGBColor[1, 1, 0][0.0005184309220348971, 0.9998365249716884], 
             RGBColor[1, 1, 0][0.6559820054203346, 0.8732635278932531], 
             RGBColor[1, 1, 0][0.7586837375500237, 0.7356591954535463], 
             RGBColor[1, 1, 0][0.0005184309220348971, 0.9998365249716884], 
             RGBColor[1, 1, 0][0.0005247563856057171, 0.9998351366550022], 
             RGBColor[1, 1, 0][0.0005247563856057171, 0.9998351366550022], 
             RGBColor[1, 1, 0][0.7057927648826671, 0.9953684916367963], 
             RGBColor[1, 1, 0][0.8122969319582376, 0.12263660069664797`], 
             RGBColor[1, 1, 0][0.0005374876655591429, 0.9998323246264157], 
             RGBColor[1, 1, 0][0.680432394027768, 0.9778707534291832], 
             RGBColor[1, 1, 0][0.7850333532743514, 0.4713304339853506], 
             RGBColor[1, 1, 0][0.0005374876655591429, 0.9998323246264157], 
             RGBColor[1, 1, 0][0.7320969852459563, 0.9147511797796454], 
             RGBColor[1, 1, 0][0.0005632748201566941, 0.9998265561670682], 
             RGBColor[1, 1, 0][0.6680955206583489, 0.9356319129860111], 
             RGBColor[1, 1, 0][0.0005632748201566941, 0.9998265561670682], 
             RGBColor[1, 1, 0][0.7188247284768137, 0.9678490197887466], 
             RGBColor[1, 1, 0][0.0006161733828378156, 0.9998144183399591], 
             RGBColor[1, 1, 0][0.0006161733828378156, 0.9998144183399591], 
             RGBColor[1, 1, 0][0.0006195392073377638, 0.9998136321734669], 
             RGBColor[1, 1, 0][0.6929967439743012, 0.9982857458930964], 
             RGBColor[1, 1, 0][0.7456139658969148, 0.8354499428389628], 
             RGBColor[1, 1, 0][0.0006195392073377638, 0.9998136321734669], 
             RGBColor[1, 1, 0][2.080280563170916*^-6, 0.9999300982615583], 
             RGBColor[1, 1, 0][0.0001450527832270988, 0.9999080964242876], 
             RGBColor[1, 1, 0][0.0003232673619831585, 0.9998764811355976], 
             RGBColor[1, 1, 0][0.0005152781850021044, 0.999837214749019], 
             RGBColor[1, 1, 0][0.000731387664125889, 0.9997865641005964], 
             RGBColor[1, 1, 0][0.0010006439631207139`, 0.9997138912200985], 
             RGBColor[1, 1, 0][0.001290803259166736, 0.9996236957326629], 
             RGBColor[1, 1, 0][0.0016528799645696068`, 0.9994938602898477], 
             RGBColor[1, 1, 0][0.0020641868124640357`, 0.999323091633404], 
             RGBColor[1, 1, 0][0.002506750601261927, 0.9991116920913362], 
             RGBColor[1, 1, 0][0.0030583074419706403`, 0.9988081102179253], 
             RGBColor[1, 1, 0][0.003652216488792354, 0.9984314483336652], 
             RGBColor[1, 1, 0][0.004320366568170822, 0.9979460259804371], 
             RGBColor[1, 1, 0][0.005152688181252936, 0.9972500115258859], 
             RGBColor[1, 1, 0][0.006049104593359595, 0.9963871281821056], 
             RGBColor[1, 1, 0][0.0071675057237987425`, 0.9951459412254148], 
             RGBColor[1, 1, 0][0.00843740529578955, 0.9935152018781517], 
             RGBColor[1, 1, 0][0.009803013531689423, 0.99149903842037], 
             RGBColor[1, 1, 0][0.01150464202118582, 0.9886065338242696], 
             RGBColor[1, 1, 0][0.01333902865894113, 0.9850165358720955], 
             RGBColor[1, 1, 0][0.015628326990304732`, 0.9798510209544887], 
             RGBColor[1, 1, 0][0.018229608316321335`, 0.973060776163543], 
             RGBColor[1, 1, 0][0.021029579145239462`, 0.9646614012826427], 
             RGBColor[1, 1, 0][0.024519495398028765`, 0.952617486521708], 
             RGBColor[1, 1, 0][0.028278743358441043`, 0.937701862424131], 
             RGBColor[1, 1, 0][0.03250908054820261, 0.918529112125528], 
             RGBColor[1, 1, 0][0.03777941728799842, 0.8911461612554991], 
             RGBColor[1, 1, 0][0.04345764471795094, 0.8573691594222251], 
             RGBColor[1, 1, 0][0.050542772281763224`, 0.8091371377413774], 
             RGBColor[1, 1, 0][0.05858986682967023, 0.7463962553272016], 
             RGBColor[1, 1, 0][0.06724656721284386, 0.6698133480411145], 
             RGBColor[1, 1, 0][0.07803448871319593, 0.5618844313157185], 
             RGBColor[1, 1, 0][0.08964819280245814, 0.4312984807077874], 
             RGBColor[1, 1, 0][0.10271142643735665`, 0.26831669005067776`], 
             RGBColor[1, 1, 0][0.11898336790205652`, 0.04477589259021112], 
             RGBColor[1, 1, 0][0.0006229121403526142, 0.9998128426828646], 
             RGBColor[1, 1, 0][0.0006229121403526142, 0.9998128426828646], 
             RGBColor[1, 1, 0][0.0006296793920105701, 0.999811253673053], 
             RGBColor[1, 1, 0][0.6485226825406294, 0.824870631101286], 
             RGBColor[1, 1, 0][0.7506320447761432, 0.7997533495418897], 
             RGBColor[1, 1, 0][0.0006296793920105701, 0.999811253673053], 
             RGBColor[1, 1, 0][0.00007103900137961628, 0.9999198599191763], 
             RGBColor[1, 1, 0][0.00023097141722614424`, 0.9998934349311606], 
             RGBColor[1, 1, 0][0.0004159989150813814, 0.9998581913523581], 
             RGBColor[1, 1, 0][0.0006195392073377638, 0.9998136321734669], 
             RGBColor[1, 1, 0][0.0008612338892119798, 0.9997528432927619], 
             RGBColor[1, 1, 0][0.001140571831221977, 0.9996719335181176], 
             RGBColor[1, 1, 0][0.0014651935029092132`, 0.9995635574224194], 
             RGBColor[1, 1, 0][0.0018512831924857801`, 0.9994145774030998], 
             RGBColor[1, 1, 0][0.0022776658069667876`, 0.9992246976506776], 
             RGBColor[1, 1, 0][0.002772688348361097, 0.9989708748616408], 
             RGBColor[1, 1, 0][0.0033451650766422925`, 0.9986326258858196], 
             RGBColor[1, 1, 0][0.003974594005192707, 0.9982053876869248], 
             RGBColor[1, 1, 0][0.004721787679783229, 0.9976229904683264], 
             RGBColor[1, 1, 0][0.005585022931520892, 0.9968485117661474], 
             RGBColor[1, 1, 0][0.0065878255923008675`, 0.9958120706902585], 
             RGBColor[1, 1, 0][0.007780135014836484, 0.994388619922186], 
             RGBColor[1, 1, 0][0.009096196785580508, 0.992576519659642], 
             RGBColor[1, 1, 0][0.010623554057006454`, 0.990156883322151], 
             RGBColor[1, 1, 0][0.012389212132805789`, 0.9869364408567076], 
             RGBColor[1, 1, 0][0.014441573749349899`, 0.9826236438351441], 
             RGBColor[1, 1, 0][0.016883032899885606`, 0.9766978912426633], 
             RGBColor[1, 1, 0][0.01958014521883733, 0.969150275488368], 
             RGBColor[1, 1, 0][0.022712162345327983`, 0.9590722686576217], 
             RGBColor[1, 1, 0][0.026335094048981836`, 0.9456642631193468], 
             RGBColor[1, 1, 0][0.030319726442764143`, 0.9287659103595898], 
             RGBColor[1, 1, 0][0.035050750946642124`, 0.9058046116139141], 
             RGBColor[1, 1, 0][0.040517816692327575`, 0.8754053948522221], 
             RGBColor[1, 1, 0][0.046870252293991686`, 0.8349713336798323], 
             RGBColor[1, 1, 0][0.05442462728968823, 0.7799106486263512], 
             RGBColor[1, 1, 0][0.06276574600822418, 0.7106037379839729], 
             RGBColor[1, 1, 0][0.07244826236016984, 0.619450828432952], 
             RGBColor[1, 1, 0][0.08364411955205672, 0.5005923425424657], 
             RGBColor[1, 1, 0][0.09595134316157652, 0.3546619730313128], 
             RGBColor[1, 1, 0][0.11055954980517275`, 0.16309576461990186`], 
             RGBColor[1, 1, 0][0.0006432998602036351, 0.9998080351417125], 
             RGBColor[1, 1, 0][0.0006432998602036351, 0.9998080351417125], 
             RGBColor[1, 1, 0][0.0006708880618825273, 0.999801432803043], 
             RGBColor[1, 1, 0][0.0006708880618825273, 0.999801432803043], 
             RGBColor[1, 1, 0][0.6061040512039921, 0.4181215654094885], 
             RGBColor[1, 1, 0][0.6977678751380099, 1.0000000000000004`], 
             RGBColor[1, 1, 0][0.8036769898927193, 0.23998636208452978`], 
             RGBColor[1, 1, 0][0.10656391971713287`, 0.21730516130804964`], 
             RGBColor[1, 1, 0][0.0007274812082977204, 0.999787540354233], 
             RGBColor[1, 1, 0][0.0007274812082977204, 0.999787540354233], 
             RGBColor[1, 1, 0][0.000731387664125889, 0.9997865641005964], 
             RGBColor[1, 1, 0][0.5859976878007792, 0.158946996934725], 
             RGBColor[1, 1, 0][0.6726954538264075, 0.9539248899979439], 
             RGBColor[1, 1, 0][0.7767023794273042, 0.5634373475989941], 
             RGBColor[1, 1, 0][0.000731387664125889, 0.9997865641005964], 
             RGBColor[1, 1, 0][0.0007353030703410032, 0.9997855833684697], 
             RGBColor[1, 1, 0][0.0007353030703410032, 0.9997855833684697], 
             RGBColor[1, 1, 0][0.6268991419090261, 0.6439387473133611], 
             RGBColor[1, 1, 0][0.7237734291969415, 0.9509766280817793], 
             RGBColor[1, 1, 0][0.0007431608160067857, 0.9997836083864746], 
             RGBColor[1, 1, 0][0.0007431608160067857, 0.9997836083864746], 
             RGBColor[1, 1, 0][0.5761956207648561, 0.02056664199196266], 
             RGBColor[1, 1, 0][0.6604986571566854, 0.8988968159619476], 
             RGBColor[1, 1, 0][0.763556096489903, 0.6929150838135701], 
             RGBColor[1, 1, 0][0.0007589846174407672, 0.999779603770327], 
             RGBColor[1, 1, 0][0.0007589846174407672, 0.999779603770327], 
             RGBColor[1, 1, 0][0.0007910701178491567, 0.9997713711991807], 
             RGBColor[1, 1, 0][0.6164140497785252, 0.5359639688404275], 
             RGBColor[1, 1, 0][0.7106518697617236, 0.9879911908641039], 
             RGBColor[1, 1, 0][0.8175131582802883, 0.04885512433734925], 
             RGBColor[1, 1, 0][0.0007910701178491567, 0.9997713711991807], 
             RGBColor[1, 1, 0][0.6851171442333933, 0.9881694612078209], 
             RGBColor[1, 1, 0][0.7900747148912838, 0.41206569578708485`], 
             RGBColor[1, 1, 0][0.0008570306125958455, 0.9997539735312251], 
             RGBColor[1, 1, 0][0.0008570306125958455, 0.9997539735312251], 
             RGBColor[1, 1, 0][0.6375623011898293, 0.7404891386360164], 
             RGBColor[1, 1, 0][0.7371369338428579, 0.8881050504579967], 
             RGBColor[1, 1, 0][0.0008612338892119798, 0.9997528432927619], 
             RGBColor[1, 1, 0][0.0008612338892119798, 0.9997528432927619], 
             RGBColor[1, 1, 0][0.6544833186768244, 0.8641421493477128], 
             RGBColor[1, 1, 0][0.7570665280252867, 0.7491944358242061], 
             RGBColor[1, 1, 0][0.0008654467962844146, 0.9997517078694469], 
             RGBColor[1, 1, 0][0.0008654467962844146, 0.9997517078694469], 
             RGBColor[1, 1, 0][0.0008739015901091191, 0.9997494213730156], 
             RGBColor[1, 1, 0][0.7041804475085022, 0.9970551313809808], 
             RGBColor[1, 1, 0][0.810565587655552, 0.1466797471492719], 
             RGBColor[1, 1, 0][0.0008739015901091191, 0.9997494213730156], 
             RGBColor[1, 1, 0][0.678877929915931, 0.9737512232337965], 
             RGBColor[1, 1, 0][0.7833600492084681, 0.4904248174194645], 
             RGBColor[1, 1, 0][0.0008909277174919429, 0.9997447851080984], 
             RGBColor[1, 1, 0][0.7304246614558897, 0.922812286106694], 
             RGBColor[1, 1, 0][0.0008909277174919429, 0.9997447851080984], 
             RGBColor[1, 1, 0][0.6665691999981751, 0.9289002690526491], 
             RGBColor[1, 1, 0][0.0009254511421806278, 0.9997352540138315], 
             RGBColor[1, 1, 0][0.7171826819787034, 0.9726708907799374], 
             RGBColor[1, 1, 0][0.0009254511421806278, 0.9997352540138315], 
             RGBColor[1, 1, 0][0.000996423455026975, 0.9997151122198938], 
             RGBColor[1, 1, 0][0.000996423455026975, 0.9997151122198938], 
             RGBColor[1, 1, 0][0.6914136174806083, 0.9969809912078461], 
             RGBColor[1, 1, 0][0.7439108065393417, 0.8468072280495488], 
             RGBColor[1, 1, 0][0.0010006439631207139`, 0.9997138912200985], 
             RGBColor[1, 1, 0][0.0010006439631207139`, 0.9997138912200985], 
             RGBColor[1, 1, 0][0.0010048734951366592`, 0.9997126649937272], 
             RGBColor[1, 1, 0][0.0010048734951366592`, 0.9997126649937272], 
             RGBColor[1, 1, 0][0.7009668386506027, 0.9992831490833372], 
             RGBColor[1, 1, 0][0.6757796319510662, 0.9645011995106904], 
             RGBColor[1, 1, 0][0.0010133597081530788`, 0.999710196771675], 
             RGBColor[1, 1, 0][0.0010133597081530788`, 0.999710196771675], 
             RGBColor[1, 1, 0][0.7139098181765987, 0.9811209183369397], 
             RGBColor[1, 1, 0][0.001030441272964503, 0.9997051966178699], 
             RGBColor[1, 1, 0][0.5231781027102772, 0.], 
             RGBColor[1, 1, 0][0.6882581907607658, 0.9932879971986819], 
             RGBColor[1, 1, 0][0.001030441272964503, 0.9997051966178699], 
             RGBColor[1, 1, 0][0.8724429055529769, 0.], 
             RGBColor[1, 1, 0][0.0010650453353905737`, 0.9996949363299091], 
             RGBColor[1, 1, 0][0.0010650453353905737`, 0.9996949363299091], 
             RGBColor[1, 1, 0][0.7074087687603448, 0.9932970659743346], 
             RGBColor[1, 1, 0][0.681990412363794, 0.9816490483352308], 
             RGBColor[1, 1, 0][0.0011360527798871102`, 0.9996733333546349], 
             RGBColor[1, 1, 0][0.694583490227648, 0.999225629116285], 
             RGBColor[1, 1, 0][0.0011360527798871102`, 0.9996733333546349], 
             RGBColor[1, 1, 0][0.1220649743085848, 0.], 
             RGBColor[1, 1, 0][0.5747883033252447, 0.], 
             RGBColor[1, 1, 0][0.8208587969547817, 0.], 
             RGBColor[1, 1, 0][0.001140571831221977, 0.9996719335181176], 
             RGBColor[1, 1, 0][0.001140571831221977, 0.9996719335181176], 
             RGBColor[1, 1, 0][0.0011451005447981658`, 0.9996705276895467], 
             RGBColor[1, 1, 0][0.0011451005447981658`, 0.9996705276895467], 
             RGBColor[1, 1, 0][0.0011541870413545232`, 0.9996676979535457], 
             RGBColor[1, 1, 0][0.0011541870413545232`, 0.9996676979535457], 
             RGBColor[1, 1, 0][0.0011724768933221625`, 0.9996619654410309], 
             RGBColor[1, 1, 0][0.0011724768933221625`, 0.9996619654410309], 
             RGBColor[1, 1, 0][0.0012095287200276743`, 0.9996502023594657], 
             RGBColor[1, 1, 0][0.0012095287200276743`, 0.9996502023594657], 
             RGBColor[1, 1, 0][0.001285558970346049, 0.9996254352718362], 
             RGBColor[1, 1, 0][0.001285558970346049, 0.9996254352718362], 
             RGBColor[1, 1, 0][0.001290803259166736, 0.9996236957326629], 
             RGBColor[1, 1, 0][0.001290803259166736, 0.9996236957326629], 
             RGBColor[1, 1, 0][0.0012960597007215496`, 0.9996219481225458], 
             RGBColor[1, 1, 0][0.0012960597007215496`, 0.9996219481225458], 
             RGBColor[1, 1, 0][0.0013066091547462707`, 0.9996184285395293], 
             RGBColor[1, 1, 0][0.0013066091547462707`, 0.9996184285395293], 
             RGBColor[1, 1, 0][0.001327855139108151, 0.9996112908629416], 
             RGBColor[1, 1, 0][0.001327855139108151, 0.9996112908629416], 
             RGBColor[1, 1, 0][0.0013709418096529283`, 0.999596612843383], 
             RGBColor[1, 1, 0][0.0013709418096529283`, 0.999596612843383], 
             RGBColor[1, 1, 0][0.001459546029111701, 0.9995655746953576], 
             RGBColor[1, 1, 0][0.001459546029111701, 0.9995655746953576], 
             RGBColor[1, 1, 0][0.0014651935029092132`, 0.9995635574224194], 
             RGBColor[1, 1, 0][0.0014651935029092132`, 0.9995635574224194], 
             RGBColor[1, 1, 0][0.0014708540637524423`, 0.9995615307900388], 
             RGBColor[1, 1, 0][0.0014708540637524423`, 0.9995615307900388], 
             RGBColor[1, 1, 0][0.001482214567954205, 0.9995574492730656], 
             RGBColor[1, 1, 0][0.001482214567954205, 0.9995574492730656], 
             RGBColor[1, 1, 0][0.0015050939600107127`, 0.9995491720017422], 
             RGBColor[1, 1, 0][0.0015050939600107127`, 0.9995491720017422], 
             RGBColor[1, 1, 0][0.0015514931670802805`, 0.9995321505088306], 
             RGBColor[1, 1, 0][0.0015514931670802805`, 0.9995321505088306], 
             RGBColor[1, 1, 0][0.0016469093473960095`, 0.9994961568749805], 
             RGBColor[1, 1, 0][0.0016469093473960095`, 0.9994961568749805], 
             RGBColor[1, 1, 0][0.0016528799645696068`, 0.9994938602898477], 
             RGBColor[1, 1, 0][0.0016528799645696068`, 0.9994938602898477], 
             RGBColor[1, 1, 0][0.001658864165002744, 0.9994915532442619], 
             RGBColor[1, 1, 0][0.001658864165002744, 0.9994915532442619], 
             RGBColor[1, 1, 0][0.001670873439326572, 0.9994869075809538], 
             RGBColor[1, 1, 0][0.001670873439326572, 0.9994869075809538], 
             RGBColor[1, 1, 0][0.0016950563515028365`, 0.9994774886181312], 
             RGBColor[1, 1, 0][0.0016950563515028365`, 0.9994774886181312], 
             RGBColor[1, 1, 0][0.0017440866471785524`, 0.9994581291806345], 
             RGBColor[1, 1, 0][0.0017440866471785524`, 0.9994581291806345], 
             RGBColor[1, 1, 0][0.0018448622290096301`, 0.9994172334648814], 
             RGBColor[1, 1, 0][0.0018448622290096301`, 0.9994172334648814], 
             RGBColor[1, 1, 0][0.0018512831924857801`, 0.9994145774030998], 
             RGBColor[1, 1, 0][0.0018512831924857801`, 0.9994145774030998], 
             RGBColor[1, 1, 0][0.0018577187637672647`, 0.9994119092437035], 
             RGBColor[1, 1, 0][0.0018577187637672647`, 0.9994119092437035], 
             RGBColor[1, 1, 0][0.0018706338627539093`, 0.9994065364114361], 
             RGBColor[1, 1, 0][0.0018706338627539093`, 0.9994065364114361], 
             RGBColor[1, 1, 0][0.001896640821719125, 0.9993956431344648], 
             RGBColor[1, 1, 0][0.001896640821719125, 0.9993956431344648], 
             RGBColor[1, 1, 0][0.0019493693301136717`, 0.9993732534477042], 
             RGBColor[1, 1, 0][0.0019493693301136717`, 0.9993732534477042], 
             RGBColor[1, 1, 0][0.002057746121224414, 0.999325956542991], 
             RGBColor[1, 1, 0][0.002057746121224414, 0.999325956542991], 
             RGBColor[1, 1, 0][0.0020641868124640357`, 0.999323091633404], 
             RGBColor[1, 1, 0][0.0020641868124640357`, 0.999323091633404], 
             RGBColor[1, 1, 0][0.002070641170557814, 0.9993202145540216], 
             RGBColor[1, 1, 0][0.002070641170557814, 0.9993202145540216], 
             RGBColor[1, 1, 0][0.002083591003371155, 0.9993144236788947], 
             RGBColor[1, 1, 0][0.002083591003371155, 0.9993144236788947], 
             RGBColor[1, 1, 0][0.0021096559513975655`, 0.999302693602009], 
             RGBColor[1, 1, 0][0.0021096559513975655`, 0.999302693602009], 
             RGBColor[1, 1, 0][0.0021624535563766045`, 0.9992786282645684], 
             RGBColor[1, 1, 0][0.0021624535563766045`, 0.9992786282645684], 
             RGBColor[1, 1, 0][0.0022707730821955622`, 0.9992279787545969], 
             RGBColor[1, 1, 0][0.0022707730821955622`, 0.9992279787545969], 
             RGBColor[1, 1, 0][0.0022776658069667876`, 0.9992246976506776], 
             RGBColor[1, 1, 0][0.0022776658069667876`, 0.9992246976506776], 
             RGBColor[1, 1, 0][0.002284573157786784, 0.9992214026092716], 
             RGBColor[1, 1, 0][0.002284573157786784, 0.9992214026092716], 
             RGBColor[1, 1, 0][0.002298431861782189, 0.9992147704769697], 
             RGBColor[1, 1, 0][0.002298431861782189, 0.9992147704769697], 
             RGBColor[1, 1, 0][0.002326326152354159, 0.9992013363410424], 
             RGBColor[1, 1, 0][0.002326326152354159, 0.9992013363410424], 
             RGBColor[1, 1, 0][0.002382829304913562, 0.9991737749820946], 
             RGBColor[1, 1, 0][0.002382829304913562, 0.9991737749820946], 
             RGBColor[1, 1, 0][0.0024987511293020083`, 0.9991157675706719], 
             RGBColor[1, 1, 0][0.0024987511293020083`, 0.9991157675706719], 
             RGBColor[1, 1, 0][0.002506750601261927, 0.9991116920913362], 
             RGBColor[1, 1, 0][0.002506750601261927, 0.9991116920913362], 
             RGBColor[1, 1, 0][0.0025147684813371578`, 0.9991075978367872], 
             RGBColor[1, 1, 0][0.0025147684813371578`, 0.9991075978367872], 
             RGBColor[1, 1, 0][0.002530859635371571, 0.9990993526557264], 
             RGBColor[1, 1, 0][0.002530859635371571, 0.9990993526557264], 
             RGBColor[1, 1, 0][0.0025632647112136513`, 0.9990826331591033], 
             RGBColor[1, 1, 0][0.0025632647112136513`, 0.9990826331591033], 
             RGBColor[1, 1, 0][0.00262897555456695, 0.9990482577136194], 
             RGBColor[1, 1, 0][0.00262897555456695, 0.9990482577136194], 
             RGBColor[1, 1, 0][0.002764078314423633, 0.9989755960850112], 
             RGBColor[1, 1, 0][0.002764078314423633, 0.9989755960850112], 
             RGBColor[1, 1, 0][0.002772688348361097, 0.9989708748616408], 
             RGBColor[1, 1, 0][0.002772688348361097, 0.9989708748616408], 
             RGBColor[1, 1, 0][0.002781318195418523, 0.9989661318887613], 
             RGBColor[1, 1, 0][0.002781318195418523, 0.9989661318887613], 
             RGBColor[1, 1, 0][0.0027986375113713095`, 0.9989565802933126], 
             RGBColor[1, 1, 0][0.0027986375113713095`, 0.9989565802933126], 
             RGBColor[1, 1, 0][0.0028335159138639285`, 0.9989372116695667], 
             RGBColor[1, 1, 0][0.0028335159138639285`, 0.9989372116695667], 
             RGBColor[1, 1, 0][0.0029042421560666856`, 0.9988973896229817], 
             RGBColor[1, 1, 0][0.0029042421560666856`, 0.9988973896229817], 
             RGBColor[1, 1, 0][0.00304965667257974, 0.998813215288649], 
             RGBColor[1, 1, 0][0.00304965667257974, 0.998813215288649], 
             RGBColor[1, 1, 0][0.0030583074419706403`, 0.9988081102179253], 
             RGBColor[1, 1, 0][0.0030583074419706403`, 0.9988081102179253], 
             RGBColor[1, 1, 0][0.003066976794072401, 0.998802983196078], 
             RGBColor[1, 1, 0][0.003066976794072401, 0.998802983196078], 
             RGBColor[1, 1, 0][0.0030843714061642596`, 0.998792662921141], 
             RGBColor[1, 1, 0][0.0030843714061642596`, 0.998792662921141], 
             RGBColor[1, 1, 0][0.0031193853850039156`, 0.9987717547784066], 
             RGBColor[1, 1, 0][0.0031193853850039156`, 0.9987717547784066], 
             RGBColor[1, 1, 0][0.003190321418807493, 0.9987288464315409], 
             RGBColor[1, 1, 0][0.003190321418807493, 0.9987288464315409], 
             RGBColor[1, 1, 0][0.0033358994294127938`, 0.9986384822734452], 
             RGBColor[1, 1, 0][0.0033358994294127938`, 0.9986384822734452], 
             RGBColor[1, 1, 0][0.0033451650766422925`, 0.9986326258858196], 
             RGBColor[1, 1, 0][0.0033451650766422925`, 0.9986326258858196], 
             RGBColor[1, 1, 0][0.0033544506274012418`, 0.9986267443173229], 
             RGBColor[1, 1, 0][0.0033544506274012418`, 0.9986267443173229], 
             RGBColor[1, 1, 0][0.0033730816106183714`, 0.9986149052042775], 
             RGBColor[1, 1, 0][0.0033730816106183714`, 0.9986149052042775], 
             RGBColor[1, 1, 0][0.0034105843067797764`, 0.9985909200137518], 
             RGBColor[1, 1, 0][0.0034105843067797764`, 0.9985909200137518], 
             RGBColor[1, 1, 0][0.0034865623192991014`, 0.9985416968953873], 
             RGBColor[1, 1, 0][0.0034865623192991014`, 0.9985416968953873], 
             RGBColor[1, 1, 0][0.003642487697689092, 0.9984380341364899], 
             RGBColor[1, 1, 0][0.003642487697689092, 0.9984380341364899], 
             RGBColor[1, 1, 0][0.003652216488792354, 0.9984314483336652], 
             RGBColor[1, 1, 0][0.003652216488792354, 0.9984314483336652], 
             RGBColor[1, 1, 0][0.003661965766751079, 0.9984248347729502], 
             RGBColor[1, 1, 0][0.003661965766751079, 0.9984248347729502], 
             RGBColor[1, 1, 0][0.003681525955890367, 0.9984115239095172], 
             RGBColor[1, 1, 0][0.003681525955890367, 0.9984115239095172], 
             RGBColor[1, 1, 0][0.003720894080742576, 0.9983845639086092], 
             RGBColor[1, 1, 0][0.003720894080742576, 0.9983845639086092], 
             RGBColor[1, 1, 0][0.003800631103220837, 0.998329263941285], 
             RGBColor[1, 1, 0][0.003800631103220837, 0.998329263941285], 
             RGBColor[1, 1, 0][0.0039641877791439266`, 0.9982129222737026], 
             RGBColor[1, 1, 0][0.0039641877791439266`, 0.9982129222737026], 
             RGBColor[1, 1, 0][0.003974594005192707, 0.9982053876869248], 
             RGBColor[1, 1, 0][0.003974594005192707, 0.9982053876869248], 
             RGBColor[1, 1, 0][0.003985022144637169, 0.9981978213446401], 
             RGBColor[1, 1, 0][0.003985022144637169, 0.9981978213446401], 
             RGBColor[1, 1, 0][0.004005944348390934, 0.9981825928578163], 
             RGBColor[1, 1, 0][0.004005944348390934, 0.9981825928578163], 
             RGBColor[1, 1, 0][0.004048053753555497, 0.9981517488933148], 
             RGBColor[1, 1, 0][0.004048053753555497, 0.9981517488933148], 
             RGBColor[1, 1, 0][0.00413334302244391, 0.9980884822646122], 
             RGBColor[1, 1, 0][0.00413334302244391, 0.9980884822646122], 
             RGBColor[1, 1, 0][0.0043082884728474794`, 0.9979553804080091], 
             RGBColor[1, 1, 0][0.0043082884728474794`, 0.9979553804080091], 
             RGBColor[1, 1, 0][0.004320366568170822, 0.9979460259804371], 
             RGBColor[1, 1, 0][0.004320366568170822, 0.9979460259804371], 
             RGBColor[1, 1, 0][0.004332472262008112, 0.9979366287704114], 
             RGBColor[1, 1, 0][0.004332472262008112, 0.9979366287704114], 
             RGBColor[1, 1, 0][0.004356766697619645, 0.9979177052197423], 
             RGBColor[1, 1, 0][0.004356766697619645, 0.9979177052197423], 
             RGBColor[1, 1, 0][0.004405689535444386, 0.9978793360628705], 
             RGBColor[1, 1, 0][0.004405689535444386, 0.9978793360628705], 
             RGBColor[1, 1, 0][0.004504885398541553, 0.9978004644974076], 
             RGBColor[1, 1, 0][0.004504885398541553, 0.9978004644974076], 
             RGBColor[1, 1, 0][0.004708794426163632, 0.9976338155296537], 
             RGBColor[1, 1, 0][0.004708794426163632, 0.9976338155296537], 
             RGBColor[1, 1, 0][0.004721787679783229, 0.9976229904683264], 
             RGBColor[1, 1, 0][0.004721787679783229, 0.9976229904683264], 
             RGBColor[1, 1, 0][0.00473481062305849, 0.997612115901559], 
             RGBColor[1, 1, 0][0.00473481062305849, 0.997612115901559], 
             RGBColor[1, 1, 0][0.004760945850095126, 0.997590217345472], 
             RGBColor[1, 1, 0][0.004760945850095126, 0.997590217345472], 
             RGBColor[1, 1, 0][0.0048135755754475035`, 0.9975458161413209], 
             RGBColor[1, 1, 0][0.0048135755754475035`, 0.9975458161413209], 
             RGBColor[1, 1, 0][0.004920287517416154, 0.9974545452660053], 
             RGBColor[1, 1, 0][0.004920287517416154, 0.9974545452660053], 
             RGBColor[1, 1, 0][0.005139646749173411, 0.9972616982878169], 
             RGBColor[1, 1, 0][0.005139646749173411, 0.9972616982878169], 
             RGBColor[1, 1, 0][0.005152688181252936, 0.9972500115258859], 
             RGBColor[1, 1, 0][0.005152688181252936, 0.9972500115258859], 
             RGBColor[1, 1, 0][0.005165757416894211, 0.9972382749051827], 
             RGBColor[1, 1, 0][0.005165757416894211, 0.9972382749051827], 
             RGBColor[1, 1, 0][0.005191979536090577, 0.9972146512361474], 
             RGBColor[1, 1, 0][0.005191979536090577, 0.9972146512361474], 
             RGBColor[1, 1, 0][0.00524476003383047, 0.9971667961774383], 
             RGBColor[1, 1, 0][0.00524476003383047, 0.9971667961774383], 
             RGBColor[1, 1, 0][0.005351679515341492, 0.9970686063220277], 
             RGBColor[1, 1, 0][0.005351679515341492, 0.9970686063220277], 
             RGBColor[1, 1, 0][0.00557106174818314, 0.9968619040930232], 
             RGBColor[1, 1, 0][0.00557106174818314, 0.9968619040930232], 
             RGBColor[1, 1, 0][0.005585022931520892, 0.9968485117661474], 
             RGBColor[1, 1, 0][0.005585022931520892, 0.9968485117661474], 
             RGBColor[1, 1, 0][0.005599013879275667, 0.9968350623083524], 
             RGBColor[1, 1, 0][0.005599013879275667, 0.9968350623083524], 
             RGBColor[1, 1, 0][0.005627085321995484, 0.9968079910246701], 
             RGBColor[1, 1, 0][0.005627085321995484, 0.9968079910246701], 
             RGBColor[1, 1, 0][0.0056835881815825925`, 0.9967531520992481], 
             RGBColor[1, 1, 0][0.0056835881815825925`, 0.9967531520992481], 
             RGBColor[1, 1, 0][0.005798048194459249, 0.996640632843701], 
             RGBColor[1, 1, 0][0.005798048194459249, 0.996640632843701], 
             RGBColor[1, 1, 0][0.006032902430947244, 0.9964037663625122], 
             RGBColor[1, 1, 0][0.006032902430947244, 0.9964037663625122], 
             RGBColor[1, 1, 0][0.006049104593359595, 0.9963871281821056], 
             RGBColor[1, 1, 0][0.006049104593359595, 0.9963871281821056], 
             RGBColor[1, 1, 0][0.006065344201470467, 0.9963704130573731], 
             RGBColor[1, 1, 0][0.006065344201470467, 0.9963704130573731], 
             RGBColor[1, 1, 0][0.006097936101158928, 0.9963367505509094], 
             RGBColor[1, 1, 0][0.006097936101158928, 0.9963367505509094], 
             RGBColor[1, 1, 0][0.006163573070227626, 0.9962684864495037], 
             RGBColor[1, 1, 0][0.006163573070227626, 0.9962684864495037], 
             RGBColor[1, 1, 0][0.0062966793433818944`, 0.9961281200034564], 
             RGBColor[1, 1, 0][0.0062966793433818944`, 0.9961281200034564], 
             RGBColor[1, 1, 0][0.006570381233403678, 0.9958313558831368], 
             RGBColor[1, 1, 0][0.006570381233403678, 0.9958313558831368], 
             RGBColor[1, 1, 0][0.0065878255923008675`, 0.9958120706902585], 
             RGBColor[1, 1, 0][0.0065878255923008675`, 0.9958120706902585], 
             RGBColor[1, 1, 0][0.006605310267804416, 0.9957926963212558], 
             RGBColor[1, 1, 0][0.006605310267804416, 0.9957926963212558], 
             RGBColor[1, 1, 0][0.006640400941557524, 0.9957536784048338], 
             RGBColor[1, 1, 0][0.006640400941557524, 0.9957536784048338], 
             RGBColor[1, 1, 0][0.006711070202623893, 0.9956745542010749], 
             RGBColor[1, 1, 0][0.006711070202623893, 0.9956745542010749], 
             RGBColor[1, 1, 0][0.006854381542263369, 0.9955118574240694], 
             RGBColor[1, 1, 0][0.006854381542263369, 0.9955118574240694], 
             RGBColor[1, 1, 0][0.00714906776246441, 0.9951678845045383], 
             RGBColor[1, 1, 0][0.00714906776246441, 0.9951678845045383], 
             RGBColor[1, 1, 0][0.0071675057237987425`, 0.9951459412254148], 
             RGBColor[1, 1, 0][0.0071675057237987425`, 0.9951459412254148], 
             RGBColor[1, 1, 0][0.0071859855180077745`, 0.9951238983508791], 
             RGBColor[1, 1, 0][0.0071859855180077745`, 0.9951238983508791], 
             RGBColor[1, 1, 0][0.007223070984914511, 0.995079512006997], 
             RGBColor[1, 1, 0][0.007223070984914511, 0.995079512006997], 
             RGBColor[1, 1, 0][0.007297748103821082, 0.9949895241649716], 
             RGBColor[1, 1, 0][0.007297748103821082, 0.9949895241649716], 
             RGBColor[1, 1, 0][0.007449148633732874, 0.9948045839137046], 
             RGBColor[1, 1, 0][0.007449148633732874, 0.9948045839137046], 
             RGBColor[1, 1, 0][0.007760310239120928, 0.9944139847438848], 
             RGBColor[1, 1, 0][0.007760310239120928, 0.9944139847438848], 
             RGBColor[1, 1, 0][0.007780135014836484, 0.994388619922186], 
             RGBColor[1, 1, 0][0.007780135014836484, 0.994388619922186], 
             RGBColor[1, 1, 0][0.007800004769893489, 0.9943631399916191], 
             RGBColor[1, 1, 0][0.007800004769893489, 0.9943631399916191], 
             RGBColor[1, 1, 0][0.007839879626467991, 0.9943118327141832], 
             RGBColor[1, 1, 0][0.007839879626467991, 0.9943118327141832], 
             RGBColor[1, 1, 0][0.007920173597507513, 0.9942078137334318], 
             RGBColor[1, 1, 0][0.007920173597507513, 0.9942078137334318], 
             RGBColor[1, 1, 0][0.008082961743891616, 0.993994037962144], 
             RGBColor[1, 1, 0][0.008082961743891616, 0.993994037962144], 
             RGBColor[1, 1, 0][0.008417527422073415, 0.9935425410777818], 
             RGBColor[1, 1, 0][0.008417527422073415, 0.9935425410777818], 
             RGBColor[1, 1, 0][0.00843740529578955, 0.9935152018781517], 
             RGBColor[1, 1, 0][0.00843740529578955, 0.9935152018781517], 
             RGBColor[1, 1, 0][0.008457325226767953, 0.993487747007194], 
             RGBColor[1, 1, 0][0.008457325226767953, 0.993487747007194], 
             RGBColor[1, 1, 0][0.00849729161663598, 0.9934324882939938], 
             RGBColor[1, 1, 0][0.00849729161663598, 0.9934324882939938], 
             RGBColor[1, 1, 0][0.008577733011453145, 0.9933205611654121], 
             RGBColor[1, 1, 0][0.008577733011453145, 0.9933205611654121], 
             RGBColor[1, 1, 0][0.008740670448461059, 0.9930909558015607], 
             RGBColor[1, 1, 0][0.008740670448461059, 0.9930909558015607], 
             RGBColor[1, 1, 0][0.009074927995073494, 0.9926078133313042], 
             RGBColor[1, 1, 0][0.009074927995073494, 0.9926078133313042], 
             RGBColor[1, 1, 0][0.009096196785580508, 0.992576519659642], 
             RGBColor[1, 1, 0][0.009096196785580508, 0.992576519659642], 
             RGBColor[1, 1, 0][0.00911751057622755, 0.9925450936084054], 
             RGBColor[1, 1, 0][0.00911751057622755, 0.9925450936084054], 
             RGBColor[1, 1, 0][0.009160273538985231, 0.992481842127961], 
             RGBColor[1, 1, 0][0.009160273538985231, 0.992481842127961], 
             RGBColor[1, 1, 0][0.00924634366896447, 0.9923537258479662], 
             RGBColor[1, 1, 0][0.00924634366896447, 0.9923537258479662], 
             RGBColor[1, 1, 0][0.0094206823463784, 0.9920909115398087], 
             RGBColor[1, 1, 0][0.0094206823463784, 0.9920909115398087], 
             RGBColor[1, 1, 0][0.009778328935536445, 0.9915378950827083], 
             RGBColor[1, 1, 0][0.009778328935536445, 0.9915378950827083], 
             RGBColor[1, 1, 0][0.009803013531689423, 0.99149903842037], 
             RGBColor[1, 1, 0][0.009803013531689423, 0.99149903842037], 
             RGBColor[1, 1, 0][0.009827754778827292, 0.9914600034822274], 
             RGBColor[1, 1, 0][0.009827754778827292, 0.9914600034822274], 
             RGBColor[1, 1, 0][0.009877407746410608, 0.9913813955082358], 
             RGBColor[1, 1, 0][0.009877407746410608, 0.9913813955082358], 
             RGBColor[1, 1, 0][0.009977399234025701, 0.99122200406762], 
             RGBColor[1, 1, 0][0.009977399234025701, 0.99122200406762], 
             RGBColor[1, 1, 0][0.01018015394586242, 0.9908943312088431], 
             RGBColor[1, 1, 0][0.01018015394586242, 0.9908943312088431], 
             RGBColor[1, 1, 0][0.01059699063766246, 0.9902018689832535], 
             RGBColor[1, 1, 0][0.01059699063766246, 0.9902018689832535], 
             RGBColor[1, 1, 0][0.010623554057006454`, 0.990156883322151], 
             RGBColor[1, 1, 0][0.010623554057006454`, 0.990156883322151], 
             RGBColor[1, 1, 0][0.010650178439222125`, 0.9901116913165092], 
             RGBColor[1, 1, 0][0.010650178439222125`, 0.9901116913165092], 
             RGBColor[1, 1, 0][0.010703610652227151`, 0.9900206844883209], 
             RGBColor[1, 1, 0][0.010703610652227151`, 0.9900206844883209], 
             RGBColor[1, 1, 0][0.010811212810264818`, 0.9898361528389038], 
             RGBColor[1, 1, 0][0.010811212810264818`, 0.9898361528389038], 
             RGBColor[1, 1, 0][0.011029399828642992`, 0.9894568000750678], 
             RGBColor[1, 1, 0][0.011029399828642992`, 0.9894568000750678], 
             RGBColor[1, 1, 0][0.011477963287960852`, 0.9886551360285215], 
             RGBColor[1, 1, 0][0.011477963287960852`, 0.9886551360285215], 
             RGBColor[1, 1, 0][0.01150464202118582, 0.9886065338242696], 
             RGBColor[1, 1, 0][0.01150464202118582, 0.9886065338242696], 
             RGBColor[1, 1, 0][0.01153137789831597, 0.9885577236311155], 
             RGBColor[1, 1, 0][0.01153137789831597, 0.9885577236311155], 
             RGBColor[1, 1, 0][0.011585021574146327`, 0.988459475721609], 
             RGBColor[1, 1, 0][0.011585021574146327`, 0.988459475721609], 
             RGBColor[1, 1, 0][0.01169300005578177, 0.9882604447019822], 
             RGBColor[1, 1, 0][0.01169300005578177, 0.9882604447019822], 
             RGBColor[1, 1, 0][0.011911749310718601`, 0.9878520377687566], 
             RGBColor[1, 1, 0][0.011911749310718601`, 0.9878520377687566], 
             RGBColor[1, 1, 0][0.01236064276437406, 0.9869921585600193], 
             RGBColor[1, 1, 0][0.01236064276437406, 0.9869921585600193], 
             RGBColor[1, 1, 0][0.012389212132805789`, 0.9869364408567076], 
             RGBColor[1, 1, 0][0.012389212132805789`, 0.9869364408567076], 
             RGBColor[1, 1, 0][0.012417842694745735`, 0.9868804847882376], 
             RGBColor[1, 1, 0][0.012417842694745735`, 0.9868804847882376], 
             RGBColor[1, 1, 0][0.01247528792371918, 0.9867678534824658], 
             RGBColor[1, 1, 0][0.01247528792371918, 0.9867678534824658], 
             RGBColor[1, 1, 0][0.012590918489778247`, 0.9865396854391596], 
             RGBColor[1, 1, 0][0.012590918489778247`, 0.9865396854391596], 
             RGBColor[1, 1, 0][0.012825169794207055`, 0.9860714938806489], 
             RGBColor[1, 1, 0][0.012825169794207055`, 0.9860714938806489], 
             RGBColor[1, 1, 0][0.013305874869516732`, 0.9850857582594084], 
             RGBColor[1, 1, 0][0.013305874869516732`, 0.9850857582594084], 
             RGBColor[1, 1, 0][0.01333902865894113, 0.9850165358720955], 
             RGBColor[1, 1, 0][0.01333902865894113, 0.9850165358720955], 
             RGBColor[1, 1, 0][0.013372259403036633`, 0.9849469926532923], 
             RGBColor[1, 1, 0][0.013372259403036633`, 0.9849469926532923], 
             RGBColor[1, 1, 0][0.013438952470146632`, 0.9848069377831202], 
             RGBColor[1, 1, 0][0.013438952470146632`, 0.9848069377831202], 
             RGBColor[1, 1, 0][0.013573269947654234`, 0.9845229123624889], 
             RGBColor[1, 1, 0][0.013573269947654234`, 0.9845229123624889], 
             RGBColor[1, 1, 0][0.013845670848396495`, 0.9839388573655318], 
             RGBColor[1, 1, 0][0.013845670848396495`, 0.9839388573655318], 
             RGBColor[1, 1, 0][0.014405866722039052`, 0.9827039032499507], 
             RGBColor[1, 1, 0][0.014405866722039052`, 0.9827039032499507], 
             RGBColor[1, 1, 0][0.014441573749349899`, 0.9826236438351441], 
             RGBColor[1, 1, 0][0.014441573749349899`, 0.9826236438351441], 
             RGBColor[1, 1, 0][0.01447736365776093, 0.9825430126000511], 
             RGBColor[1, 1, 0][0.01447736365776093, 0.9825430126000511], 
             RGBColor[1, 1, 0][0.014549192887845518`, 0.982380627793384], 
             RGBColor[1, 1, 0][0.014549192887845518`, 0.982380627793384], 
             RGBColor[1, 1, 0][0.01469385441586253, 0.9820513202617092], 
             RGBColor[1, 1, 0][0.01469385441586253, 0.9820513202617092], 
             RGBColor[1, 1, 0][0.014987233440437769`, 0.9813741582029797], 
             RGBColor[1, 1, 0][0.014987233440437769`, 0.9813741582029797], 
             RGBColor[1, 1, 0][0.015590571089221216`, 0.9799423725685147], 
             RGBColor[1, 1, 0][0.015590571089221216`, 0.9799423725685147], 
             RGBColor[1, 1, 0][0.015628326990304732`, 0.9798510209544887], 
             RGBColor[1, 1, 0][0.015628326990304732`, 0.9798510209544887], 
             RGBColor[1, 1, 0][0.015666168930768658`, 0.9797592540704908], 
             RGBColor[1, 1, 0][0.015666168930768658`, 0.9797592540704908], 
             RGBColor[1, 1, 0][0.015742111714561913`, 0.9795744669616622], 
             RGBColor[1, 1, 0][0.015742111714561913`, 0.9795744669616622], 
             RGBColor[1, 1, 0][0.01589503841175795, 0.9791998261889093], 
             RGBColor[1, 1, 0][0.01589503841175795, 0.9791998261889093], 
             RGBColor[1, 1, 0][0.01620510084870066, 0.9784298456566827], 
             RGBColor[1, 1, 0][0.01620510084870066, 0.9784298456566827], 
             RGBColor[1, 1, 0][0.01684242423497118, 0.9768035075765449], 
             RGBColor[1, 1, 0][0.01684242423497118, 0.9768035075765449], 
             RGBColor[1, 1, 0][0.016883032899885606`, 0.9766978912426633], 
             RGBColor[1, 1, 0][0.016883032899885606`, 0.9766978912426633], 
             RGBColor[1, 1, 0][0.016923734105151817`, 0.9765917950759878], 
             RGBColor[1, 1, 0][0.016923734105151817`, 0.9765917950759878], 
             RGBColor[1, 1, 0][0.01700541498075608, 0.9763781545528755], 
             RGBColor[1, 1, 0][0.01700541498075608, 0.9763781545528755], 
             RGBColor[1, 1, 0][0.01716989652734048, 0.9759450193606583], 
             RGBColor[1, 1, 0][0.01716989652734048, 0.9759450193606583], 
             RGBColor[1, 1, 0][0.017503386690282344`, 0.9750548329711735], 
             RGBColor[1, 1, 0][0.017503386690282344`, 0.9750548329711735], 
             RGBColor[1, 1, 0][0.018188865015324598`, 0.9731746639045374], 
             RGBColor[1, 1, 0][0.018188865015324598`, 0.9731746639045374], 
             RGBColor[1, 1, 0][0.018229608316321335`, 0.973060776163543], 
             RGBColor[1, 1, 0][0.018229608316321335`, 0.973060776163543], 
             RGBColor[1, 1, 0][0.018270438228163124`, 0.9729464061290835], 
             RGBColor[1, 1, 0][0.018270438228163124`, 0.9729464061290835], 
             RGBColor[1, 1, 0][0.018352358621231822`, 0.9727162110430455], 
             RGBColor[1, 1, 0][0.018352358621231822`, 0.9727162110430455], 
             RGBColor[1, 1, 0][0.018517246864823735`, 0.9722499433689863], 
             RGBColor[1, 1, 0][0.018517246864823735`, 0.9722499433689863], 
             RGBColor[1, 1, 0][0.018851254952850165`, 0.9712934313043751], 
             RGBColor[1, 1, 0][0.018851254952850165`, 0.9712934313043751], 
             RGBColor[1, 1, 0][0.019536537078385346`, 0.9692806478211516], 
             RGBColor[1, 1, 0][0.019536537078385346`, 0.9692806478211516], 
             RGBColor[1, 1, 0][0.01958014521883733, 0.969150275488368], 
             RGBColor[1, 1, 0][0.01958014521883733, 0.969150275488368], 
             RGBColor[1, 1, 0][0.019623846060121193`, 0.969019351456997], 
             RGBColor[1, 1, 0][0.019623846060121193`, 0.969019351456997], 
             RGBColor[1, 1, 0][0.019711526633845632`, 0.9687558390046986], 
             RGBColor[1, 1, 0][0.019711526633845632`, 0.9687558390046986], 
             RGBColor[1, 1, 0][0.019888008890057835`, 0.9682220909427947], 
             RGBColor[1, 1, 0][0.019888008890057835`, 0.9682220909427947], 
             RGBColor[1, 1, 0][0.020245502545663274`, 0.9671271691532193], 
             RGBColor[1, 1, 0][0.020245502545663274`, 0.9671271691532193], 
             RGBColor[1, 1, 0][0.02097896985068027, 0.9648232233557525], 
             RGBColor[1, 1, 0][0.02097896985068027, 0.9648232233557525], 
             RGBColor[1, 1, 0][0.021029579145239462`, 0.9646614012826427], 
             RGBColor[1, 1, 0][0.021029579145239462`, 0.9646614012826427], 
             RGBColor[1, 1, 0][0.021080305093280995`, 0.9644988372535719], 
             RGBColor[1, 1, 0][0.021080305093280995`, 0.9644988372535719], 
             RGBColor[1, 1, 0][0.021182108025967275`, 0.9641714697959342], 
             RGBColor[1, 1, 0][0.021182108025967275`, 0.9641714697959342], 
             RGBColor[1, 1, 0][0.021387125605633443`, 0.9635076817076477], 
             RGBColor[1, 1, 0][0.021387125605633443`, 0.9635076817076477], 
             RGBColor[1, 1, 0][0.021802868690860622`, 0.9621431152533736], 
             RGBColor[1, 1, 0][0.021802868690860622`, 0.9621431152533736], 
             RGBColor[1, 1, 0][0.022657683646702554`, 0.9592595870807591], 
             RGBColor[1, 1, 0][0.022657683646702554`, 0.9592595870807591], 
             RGBColor[1, 1, 0][0.022712162345327983`, 0.9590722686576217], 
             RGBColor[1, 1, 0][0.022712162345327983`, 0.9590722686576217], 
             RGBColor[1, 1, 0][0.02276676661634011, 0.9588840922802327], 
             RGBColor[1, 1, 0][0.02276676661634011, 0.9588840922802327], 
             RGBColor[1, 1, 0][0.02287635303395977, 0.9585051500491335], 
             RGBColor[1, 1, 0][0.02287635303395977, 0.9585051500491335], 
             RGBColor[1, 1, 0][0.023097045518074177`, 0.957736797406074], 
             RGBColor[1, 1, 0][0.023097045518074177`, 0.957736797406074], 
             RGBColor[1, 1, 0][0.02354457481961782, 0.9561573222777804], 
             RGBColor[1, 1, 0][0.02354457481961782, 0.9561573222777804], 
             RGBColor[1, 1, 0][0.02446474584285437, 0.9528198705974871], 
             RGBColor[1, 1, 0][0.02446474584285437, 0.9528198705974871], 
             RGBColor[1, 1, 0][0.024519495398028765`, 0.952617486521708], 
             RGBColor[1, 1, 0][0.024519495398028765`, 0.952617486521708], 
             RGBColor[1, 1, 0][0.024574362769521827`, 0.9524142381635525], 
             RGBColor[1, 1, 0][0.024574362769521827`, 0.9524142381635525], 
             RGBColor[1, 1, 0][0.0246844519761317, 0.9520051339546381], 
             RGBColor[1, 1, 0][0.0246844519761317, 0.9520051339546381], 
             RGBColor[1, 1, 0][0.02490605537713915, 0.9511763921940557], 
             RGBColor[1, 1, 0][0.02490605537713915, 0.9511763921940557], 
             RGBColor[1, 1, 0][0.025355019659090008`, 0.9494759353486658], 
             RGBColor[1, 1, 0][0.025355019659090008`, 0.9494759353486658], 
             RGBColor[1, 1, 0][0.026276445871668167`, 0.9458961959489549], 
             RGBColor[1, 1, 0][0.026276445871668167`, 0.9458961959489549], 
             RGBColor[1, 1, 0][0.026335094048981836`, 0.9456642631193468], 
             RGBColor[1, 1, 0][0.026335094048981836`, 0.9456642631193468], 
             RGBColor[1, 1, 0][0.02639386843211262, 0.945431341122706], 
             RGBColor[1, 1, 0][0.02639386843211262, 0.945431341122706], 
             RGBColor[1, 1, 0][0.026511796902746076`, 0.9449625129119635], 
             RGBColor[1, 1, 0][0.026511796902746076`, 0.9449625129119635], 
             RGBColor[1, 1, 0][0.026749180302742606`, 0.9440128016369019], 
             RGBColor[1, 1, 0][0.026749180302742606`, 0.9440128016369019], 
             RGBColor[1, 1, 0][0.02723011456296599, 0.9420642010806224], 
             RGBColor[1, 1, 0][0.02723011456296599, 0.9420642010806224], 
             RGBColor[1, 1, 0][0.028217153959443495`, 0.9379623778424799], 
             RGBColor[1, 1, 0][0.028217153959443495`, 0.9379623778424799], 
             RGBColor[1, 1, 0][0.028278743358441043`, 0.937701862424131], 
             RGBColor[1, 1, 0][0.028278743358441043`, 0.937701862424131], 
             RGBColor[1, 1, 0][0.028340462687110508`, 0.937440259449087], 
             RGBColor[1, 1, 0][0.028340462687110508`, 0.937440259449087], 
             RGBColor[1, 1, 0][0.02846429223044764, 0.936913772868008], 
             RGBColor[1, 1, 0][0.02846429223044764, 0.936913772868008], 
             RGBColor[1, 1, 0][0.028713522572442318`, 0.9358475504415233], 
             RGBColor[1, 1, 0][0.028713522572442318`, 0.9358475504415233], 
             RGBColor[1, 1, 0][0.029218330458385122`, 0.9336610792121905], 
             RGBColor[1, 1, 0][0.029218330458385122`, 0.9336610792121905], 
             RGBColor[1, 1, 0][0.030253840427646103`, 0.9290635444914929], 
             RGBColor[1, 1, 0][0.030253840427646103`, 0.9290635444914929], 
             RGBColor[1, 1, 0][0.030319726442764143`, 0.9287659103595898], 
             RGBColor[1, 1, 0][0.030319726442764143`, 0.9287659103595898], 
             RGBColor[1, 1, 0][0.030385751451742566`, 0.9284670358325317], 
             RGBColor[1, 1, 0][0.030385751451742566`, 0.9284670358325317], 
             RGBColor[1, 1, 0][0.03051821962479113, 0.9278655451801991], 
             RGBColor[1, 1, 0][0.03051821962479113, 0.9278655451801991], 
             RGBColor[1, 1, 0][0.030784836840542555`, 0.9266474534497067], 
             RGBColor[1, 1, 0][0.030784836840542555`, 0.9266474534497067], 
             RGBColor[1, 1, 0][0.03132486126919849, 0.9241496586603655], 
             RGBColor[1, 1, 0][0.03132486126919849, 0.9241496586603655], 
             RGBColor[1, 1, 0][0.03243261076180668, 0.918897982494379], 
             RGBColor[1, 1, 0][0.03243261076180668, 0.918897982494379], 
             RGBColor[1, 1, 0][0.03250908054820261, 0.918529112125528], 
             RGBColor[1, 1, 0][0.03250908054820261, 0.918529112125528], 
             RGBColor[1, 1, 0][0.03258572536021369, 0.9181585770229189], 
             RGBColor[1, 1, 0][0.03258572536021369, 0.9181585770229189], 
             RGBColor[1, 1, 0][0.03273954166440713, 0.9174124830096738], 
             RGBColor[1, 1, 0][0.03273954166440713, 0.9174124830096738], 
             RGBColor[1, 1, 0][0.03304929226822398, 0.9158999907195337], 
             RGBColor[1, 1, 0][0.03304929226822398, 0.9158999907195337], 
             RGBColor[1, 1, 0][0.033677356433178346`, 0.9127920897268735], 
             RGBColor[1, 1, 0][0.033677356433178346`, 0.9127920897268735], 
             RGBColor[1, 1, 0][0.034968477017560395`, 0.9062305827837929], 
             RGBColor[1, 1, 0][0.034968477017560395`, 0.9062305827837929], 
             RGBColor[1, 1, 0][0.035050750946642124`, 0.9058046116139141], 
             RGBColor[1, 1, 0][0.035050750946642124`, 0.9058046116139141], 
             RGBColor[1, 1, 0][0.035133213185979804`, 0.9053767227301817], 
             RGBColor[1, 1, 0][0.035133213185979804`, 0.9053767227301817], 
             RGBColor[1, 1, 0][0.03529870432044313, 0.904515157890205], 
             RGBColor[1, 1, 0][0.03529870432044313, 0.904515157890205], 
             RGBColor[1, 1, 0][0.03563196534303195, 0.9027686403817683], 
             RGBColor[1, 1, 0][0.03563196534303195, 0.9027686403817683], 
             RGBColor[1, 1, 0][0.03630770028360965, 0.8991801070408401], 
             RGBColor[1, 1, 0][0.03630770028360965, 0.8991801070408401], 
             RGBColor[1, 1, 0][0.03769681837065959, 0.8916049679092029], 
             RGBColor[1, 1, 0][0.03769681837065959, 0.8916049679092029], 
             RGBColor[1, 1, 0][0.03777941728799842, 0.8911461612554991], 
             RGBColor[1, 1, 0][0.03777941728799842, 0.8911461612554991], 
             RGBColor[1, 1, 0][0.03786219261641224, 0.8906854328267615], 
             RGBColor[1, 1, 0][0.03786219261641224, 0.8906854328267615], 
             RGBColor[1, 1, 0][0.038028274014353165`, 0.8897581791096026], 
             RGBColor[1, 1, 0][0.038028274014353165`, 0.8897581791096026], 
             RGBColor[1, 1, 0][0.03836257037506468, 0.8878802617649674], 
             RGBColor[1, 1, 0][0.03836257037506468, 0.8878802617649674], 
             RGBColor[1, 1, 0][0.03903978284085136, 0.8840289814296179], 
             RGBColor[1, 1, 0][0.03903978284085136, 0.8840289814296179], 
             RGBColor[1, 1, 0][0.040429381688415963`, 0.8759297613324845], 
             RGBColor[1, 1, 0][0.040429381688415963`, 0.8759297613324845], 
             RGBColor[1, 1, 0][0.040517816692327575`, 0.8754053948522221], 
             RGBColor[1, 1, 0][0.040517816692327575`, 0.8754053948522221], 
             RGBColor[1, 1, 0][0.040606440571766995`, 0.8748788387611512], 
             RGBColor[1, 1, 0][0.040606440571766995`, 0.8748788387611512], 
             RGBColor[1, 1, 0][0.04078425657165843, 0.8738191220516737], 
             RGBColor[1, 1, 0][0.04078425657165843, 0.8738191220516737], 
             RGBColor[1, 1, 0][0.04114217288484567, 0.8716730187304036], 
             RGBColor[1, 1, 0][0.04114217288484567, 0.8716730187304036], 
             RGBColor[1, 1, 0][0.0418672342898903, 0.8672720888954208], 
             RGBColor[1, 1, 0][0.0418672342898903, 0.8672720888954208], 
             RGBColor[1, 1, 0][0.043355016254584586`, 0.8580185102535389], 
             RGBColor[1, 1, 0][0.043355016254584586`, 0.8580185102535389], 
             RGBColor[1, 1, 0][0.04345764471795094, 0.8573691594222251], 
             RGBColor[1, 1, 0][0.04345764471795094, 0.8573691594222251], 
             RGBColor[1, 1, 0][0.043560510763080144`, 0.8567168797788155], 
             RGBColor[1, 1, 0][0.043560510763080144`, 0.8567168797788155], 
             RGBColor[1, 1, 0][0.043766957799878436`, 0.8554034826902882], 
             RGBColor[1, 1, 0][0.043766957799878436`, 0.8554034826902882], 
             RGBColor[1, 1, 0][0.04418272713985971, 0.8527409747927382], 
             RGBColor[1, 1, 0][0.04418272713985971, 0.8527409747927382], 
             RGBColor[1, 1, 0][0.04502589180711803, 0.8472701591814135], 
             RGBColor[1, 1, 0][0.04502589180711803, 0.8472701591814135], 
             RGBColor[1, 1, 0][0.04675974199437134, 0.8357210367495512], 
             RGBColor[1, 1, 0][0.04675974199437134, 0.8357210367495512], 
             RGBColor[1, 1, 0][0.046870252293991686`, 0.8349713336798323], 
             RGBColor[1, 1, 0][0.046870252293991686`, 0.8349713336798323], 
             RGBColor[1, 1, 0][0.046981018421585405`, 0.8342182642982188], 
             RGBColor[1, 1, 0][0.046981018421585405`, 0.8342182642982188], 
             RGBColor[1, 1, 0][0.04720332053099988, 0.8327019681308454], 
             RGBColor[1, 1, 0][0.04720332053099988, 0.8327019681308454], 
             RGBColor[1, 1, 0][0.04765102083583893, 0.8296283336130111], 
             RGBColor[1, 1, 0][0.04765102083583893, 0.8296283336130111], 
             RGBColor[1, 1, 0][0.0485589403052689, 0.8233135454979053], 
             RGBColor[1, 1, 0][0.0485589403052689, 0.8233135454979053], 
             RGBColor[1, 1, 0][0.050425949684588314`, 0.8099862774208242], 
             RGBColor[1, 1, 0][0.050425949684588314`, 0.8099862774208242], 
             RGBColor[1, 1, 0][0.050542772281763224`, 0.8091371377413774], 
             RGBColor[1, 1, 0][0.050542772281763224`, 0.8091371377413774], 
             RGBColor[1, 1, 0][0.0506598603769675, 0.8082842745809465], 
             RGBColor[1, 1, 0][0.0506598603769675, 0.8082842745809465], 
             RGBColor[1, 1, 0][0.05089483547638247, 0.8065673150538494], 
             RGBColor[1, 1, 0][0.05089483547638247, 0.8065673150538494], 
             RGBColor[1, 1, 0][0.0513679982926321, 0.8030880204644568], 
             RGBColor[1, 1, 0][0.0513679982926321, 0.8030880204644568], 
             RGBColor[1, 1, 0][0.05232731140889949, 0.7959443364932537], 
             RGBColor[1, 1, 0][0.05232731140889949, 0.7959443364932537], 
             RGBColor[1, 1, 0][0.05429900256063813, 0.7808870184462113], 
             RGBColor[1, 1, 0][0.05429900256063813, 0.7808870184462113], 
             RGBColor[1, 1, 0][0.05442462728968823, 0.7799106486263512], 
             RGBColor[1, 1, 0][0.05442462728968823, 0.7799106486263512], 
             RGBColor[1, 1, 0][0.05455053752101973, 0.7789300231137293], 
             RGBColor[1, 1, 0][0.05455053752101973, 0.7789300231137293], 
             RGBColor[1, 1, 0][0.054803217087399596`, 0.7769559342296457], 
             RGBColor[1, 1, 0][0.054803217087399596`, 0.7769559342296457], 
             RGBColor[1, 1, 0][0.05531203089590415, 0.7729559058931966], 
             RGBColor[1, 1, 0][0.05531203089590415, 0.7729559058931966], 
             RGBColor[1, 1, 0][0.056343624553464214`, 0.7647443984114881], 
             RGBColor[1, 1, 0][0.056343624553464214`, 0.7647443984114881], 
             RGBColor[1, 1, 0][0.05846387502467105, 0.7474422910454206], 
             RGBColor[1, 1, 0][0.05846387502467105, 0.7474422910454206], 
             RGBColor[1, 1, 0][0.05858986682967023, 0.7463962553272016], 
             RGBColor[1, 1, 0][0.05858986682967023, 0.7463962553272016], 
             RGBColor[1, 1, 0][0.05871612568653823, 0.7453459973929065], 
             RGBColor[1, 1, 0][0.05871612568653823, 0.7453459973929065], 
             RGBColor[1, 1, 0][0.058969446821249875`, 0.7432327504214262], 
             RGBColor[1, 1, 0][0.058969446821249875`, 0.7432327504214262], 
             RGBColor[1, 1, 0][0.0594793186994914, 0.7389548778989704], 
             RGBColor[1, 1, 0][0.0594793186994914, 0.7389548778989704], 
             RGBColor[1, 1, 0][0.06051210930739928, 0.7301899401440978], 
             RGBColor[1, 1, 0][0.06051210930739928, 0.7301899401440978], 
             RGBColor[1, 1, 0][0.06263092174294305, 0.7117931378348933], 
             RGBColor[1, 1, 0][0.06263092174294305, 0.7117931378348933], 
             RGBColor[1, 1, 0][0.06276574600822418, 0.7106037379839729], 
             RGBColor[1, 1, 0][0.06276574600822418, 0.7106037379839729], 
             RGBColor[1, 1, 0][0.06290085604663169, 0.7094095738332793], 
             RGBColor[1, 1, 0][0.06290085604663169, 0.7094095738332793], 
             RGBColor[1, 1, 0][0.06317193586700509, 0.707006881175826], 
             RGBColor[1, 1, 0][0.06317193586700509, 0.707006881175826], 
             RGBColor[1, 1, 0][0.06371755152329234, 0.7021435350924399], 
             RGBColor[1, 1, 0][0.06371755152329234, 0.7021435350924399], 
             RGBColor[1, 1, 0][0.06482274431659657, 0.6921809256915923], 
             RGBColor[1, 1, 0][0.06482274431659657, 0.6921809256915923], 
             RGBColor[1, 1, 0][0.06709009281511735, 0.6712786803806092], 
             RGBColor[1, 1, 0][0.06709009281511735, 0.6712786803806092], 
             RGBColor[1, 1, 0][0.06724656721284386, 0.6698133480411145], 
             RGBColor[1, 1, 0][0.06724656721284386, 0.6698133480411145], 
             RGBColor[1, 1, 0][0.06740340131523848, 0.6683417058500166], 
             RGBColor[1, 1, 0][0.06740340131523848, 0.6683417058500166], 
             RGBColor[1, 1, 0][0.06771815194350186, 0.6653793914031361], 
             RGBColor[1, 1, 0][0.06771815194350186, 0.6653793914031361], 
             RGBColor[1, 1, 0][0.06835200616690433, 0.6593779341812729], 
             RGBColor[1, 1, 0][0.06835200616690433, 0.6593779341812729], 
             RGBColor[1, 1, 0][0.069637314277267, 0.6470619742265493], 
             RGBColor[1, 1, 0][0.069637314277267, 0.6470619742265493], 
             RGBColor[1, 1, 0][0.07227985768708467, 0.6211309291944853], 
             RGBColor[1, 1, 0][0.07227985768708467, 0.6211309291944853], 
             RGBColor[1, 1, 0][0.07244826236016984, 0.619450828432952], 
             RGBColor[1, 1, 0][0.07244826236016984, 0.619450828432952], 
             RGBColor[1, 1, 0][0.0726170541633412, 0.6177635743545815], 
             RGBColor[1, 1, 0][0.0726170541633412, 0.6177635743545815], 
             RGBColor[1, 1, 0][0.07295580272173939, 0.6143674953941928], 
             RGBColor[1, 1, 0][0.07295580272173939, 0.6143674953941928], 
             RGBColor[1, 1, 0][0.0736379846941692, 0.6074882737632671], 
             RGBColor[1, 1, 0][0.0736379846941692, 0.6074882737632671], 
             RGBColor[1, 1, 0][0.07502129017598884, 0.5933752639660369], 
             RGBColor[1, 1, 0][0.07502129017598884, 0.5933752639660369], 
             RGBColor[1, 1, 0][0.07786531236434642, 0.5636794065554604], 
             RGBColor[1, 1, 0][0.07786531236434642, 0.5636794065554604], 
             RGBColor[1, 1, 0][0.07803448871319593, 0.5618844313157185], 
             RGBColor[1, 1, 0][0.07803448871319593, 0.5618844313157185], 
             RGBColor[1, 1, 0][0.07820402807079463, 0.5600824175893502], 
             RGBColor[1, 1, 0][0.07820402807079463, 0.5600824175893502], 
             RGBColor[1, 1, 0][0.07854419892960308, 0.5564571762445509], 
             RGBColor[1, 1, 0][0.07854419892960308, 0.5564571762445509], 
             RGBColor[1, 1, 0][0.07922893113700583, 0.5491211456667243], 
             RGBColor[1, 1, 0][0.07922893113700583, 0.5491211456667243], 
             RGBColor[1, 1, 0][0.08061613425034772, 0.5341013053379343], 
             RGBColor[1, 1, 0][0.08061613425034772, 0.5341013053379343], 
             RGBColor[1, 1, 0][0.0834629321569043, 0.5026250348645248], 
             RGBColor[1, 1, 0][0.0834629321569043, 0.5026250348645248], 
             RGBColor[1, 1, 0][0.08364411955205672, 0.5005923425424657], 
             RGBColor[1, 1, 0][0.08364411955205672, 0.5005923425424657], 
             RGBColor[1, 1, 0][0.08382569572856145, 0.49855179625399115`], 
             RGBColor[1, 1, 0][0.08382569572856145, 0.49855179625399115`], 
             RGBColor[1, 1, 0][0.08419001776431535, 0.49444703612612545`], 
             RGBColor[1, 1, 0][0.08419001776431535, 0.49444703612612545`], 
             RGBColor[1, 1, 0][0.08492336403807033, 0.4861421031481543], 
             RGBColor[1, 1, 0][0.08492336403807033, 0.4861421031481543], 
             RGBColor[1, 1, 0][0.08640905468196373, 0.4691446025232943], 
             RGBColor[1, 1, 0][0.08640905468196373, 0.4691446025232943], 
             RGBColor[1, 1, 0][0.08945796725586729, 0.43355051888633256`], 
             RGBColor[1, 1, 0][0.08945796725586729, 0.43355051888633256`], 
             RGBColor[1, 1, 0][0.08964819280245814, 0.4312984807077874], 
             RGBColor[1, 1, 0][0.08964819280245814, 0.4312984807077874], 
             RGBColor[1, 1, 0][0.08983881847692712, 0.42903805965590086`], 
             RGBColor[1, 1, 0][0.08983881847692712, 0.42903805965590086`], 
             RGBColor[1, 1, 0][0.09022127357784845, 0.4244919635917073], 
             RGBColor[1, 1, 0][0.09022127357784845, 0.4244919635917073], 
             RGBColor[1, 1, 0][0.09099102246541649, 0.41529801607466055`], 
             RGBColor[1, 1, 0][0.09099102246541649, 0.41529801607466055`], 
             RGBColor[1, 1, 0][0.09255006590607766, 0.3964971517446543], 
             RGBColor[1, 1, 0][0.09255006590607766, 0.3964971517446543], 
             RGBColor[1, 1, 0][0.09574788715069626, 0.3571954988438048], 
             RGBColor[1, 1, 0][0.09574788715069626, 0.3571954988438048], 
             RGBColor[1, 1, 0][0.09595134316157652, 0.3546619730313128], 
             RGBColor[1, 1, 0][0.09595134316157652, 0.3546619730313128], 
             RGBColor[1, 1, 0][0.09615522712981242, 0.352119204735372], 
             RGBColor[1, 1, 0][0.09615522712981242, 0.352119204735372], 
             RGBColor[1, 1, 0][0.09656428254097435, 0.34700583127209605`], 
             RGBColor[1, 1, 0][0.09656428254097435, 0.34700583127209605`], 
             RGBColor[1, 1, 0][0.09738756858667517, 0.336666969638933], 
             RGBColor[1, 1, 0][0.09738756858667517, 0.336666969638933], 
             RGBColor[1, 1, 0][0.09905504577315444, 0.3155346323518009], 
             RGBColor[1, 1, 0][0.09905504577315444, 0.3155346323518009], 
             RGBColor[1, 1, 0][0.10247528015070288`, 0.2714020369207014], 
             RGBColor[1, 1, 0][0.10247528015070288`, 0.2714020369207014], 
             RGBColor[1, 1, 0][0.10271142643735665`, 0.26831669005067776`], 
             RGBColor[1, 1, 0][0.10271142643735665`, 0.26831669005067776`], 
             RGBColor[1, 1, 0][0.10294811176278001`, 0.265219417646067], 
             RGBColor[1, 1, 0][0.10294811176278001`, 0.265219417646067], 
             RGBColor[1, 1, 0][0.10342310445448676`, 0.2589889543788165], 
             RGBColor[1, 1, 0][0.10342310445448676`, 0.2589889543788165], 
             RGBColor[1, 1, 0][0.10437961263084106`, 0.24638336112457437`], 
             RGBColor[1, 1, 0][0.10437961263084106`, 0.24638336112457437`], 
             RGBColor[1, 1, 0][0.10631899957331704`, 0.2205855697062757], 
             RGBColor[1, 1, 0][0.10631899957331704`, 0.2205855697062757], 
             RGBColor[1, 1, 0][0.10656391971713287`, 0.21730516130804964`], 
             RGBColor[1, 1, 0][0.10656391971713287`, 0.21730516130804964`], 
             RGBColor[1, 1, 0][0.10680939892734292`, 0.2140122607678023], 
             RGBColor[1, 1, 0][0.10680939892734292`, 0.2140122607678023], 
             RGBColor[1, 1, 0][0.10730203965446515`, 0.20738884212460393`], 
             RGBColor[1, 1, 0][0.10730203965446515`, 0.20738884212460393`], 
             RGBColor[1, 1, 0][0.10829408625165464`, 0.19399054804087934`], 
             RGBColor[1, 1, 0][0.10829408625165464`, 0.19399054804087934`], 
             RGBColor[1, 1, 0][0.1103055298174066, 0.16658026590181158`], 
             RGBColor[1, 1, 0][0.1103055298174066, 0.16658026590181158`], 
             RGBColor[1, 1, 0][0.11055954980517275`, 0.16309576461990186`], 
             RGBColor[1, 1, 0][0.11055954980517275`, 0.16309576461990186`], 
             RGBColor[1, 1, 0][0.11081414963107065`, 0.15959821031450924`], 
             RGBColor[1, 1, 0][0.11081414963107065`, 0.15959821031450924`], 
             RGBColor[1, 1, 0][0.11132509409454741`, 0.1525638038441947], 
             RGBColor[1, 1, 0][0.11132509409454741`, 0.1525638038441947], 
             RGBColor[1, 1, 0][0.11235399951880243`, 0.1383368309334292], 
             RGBColor[1, 1, 0][0.11235399951880243`, 0.1383368309334292], 
             RGBColor[1, 1, 0][0.11444017692342062`, 0.10924254714783034`], 
             RGBColor[1, 1, 0][0.11444017692342062`, 0.10924254714783034`], 
             RGBColor[1, 1, 0][0.11872844407418796`, 0.04843201983961502], 
             RGBColor[1, 1, 0][0.11872844407418796`, 0.04843201983961502], 
             RGBColor[1, 1, 0][0.11898336790205652`, 0.04477589259021112], 
             RGBColor[1, 1, 0][0.11898336790205652`, 0.04477589259021112], 
             RGBColor[1, 1, 0][0.1192388346114761, 0.04110746859539142], 
             RGBColor[1, 1, 0][0.1192388346114761, 0.04110746859539142], 
             RGBColor[1, 1, 0][0.11975140130187634`, 0.03373362645210234], 
             RGBColor[1, 1, 0][0.11975140130187634`, 0.03373362645210234], 
             RGBColor[1, 1, 0][0.1207831002954462, 0.01883724348220227], 
             RGBColor[1, 1, 0][0.1207831002954462, 0.01883724348220227], 
             RGBColor[1, 1, 0][0.5749819281648693, 0.0029608257226592456`], 
             RGBColor[1, 1, 0][0.5749819281648693, 0.0029608257226592456`], 
             RGBColor[1, 1, 0][0.5761956207648561, 0.02056664199196266], 
             RGBColor[1, 1, 0][0.5761956207648561, 0.02056664199196266], 
             RGBColor[1, 1, 0][0.5774118709229118, 0.03811020779067451], 
             RGBColor[1, 1, 0][0.5774118709229118, 0.03811020779067451], 
             RGBColor[1, 1, 0][0.5798520654822799, 0.07299995103316398], 
             RGBColor[1, 1, 0][0.5798520654822799, 0.07299995103316398], 
             RGBColor[1, 1, 0][0.584763383194724, 0.141914471730482], 
             RGBColor[1, 1, 0][0.584763383194724, 0.141914471730482], 
             RGBColor[1, 1, 0][0.5859976878007792, 0.158946996934725], 
             RGBColor[1, 1, 0][0.5859976878007792, 0.158946996934725], 
             RGBColor[1, 1, 0][0.5872345933996268, 0.1758955634159206], 
             RGBColor[1, 1, 0][0.5872345933996268, 0.1758955634159206], 
             RGBColor[1, 1, 0][0.5897162295110543, 0.2095296636380378], 
             RGBColor[1, 1, 0][0.5897162295110543, 0.2095296636380378], 
             RGBColor[1, 1, 0][0.5947109555844735, 0.2756668195753422], 
             RGBColor[1, 1, 0][0.5947109555844735, 0.2756668195753422], 
             RGBColor[1, 1, 0][0.6048274664867156, 0.40277434571306764`], 
             RGBColor[1, 1, 0][0.6048274664867156, 0.40277434571306764`], 
             RGBColor[1, 1, 0][0.6061040512039921, 0.4181215654094885], 
             RGBColor[1, 1, 0][0.6061040512039921, 0.4181215654094885], 
             RGBColor[1, 1, 0][0.6073833260089775, 0.4333386711803458], 
             RGBColor[1, 1, 0][0.6073833260089775, 0.4333386711803458], 
             RGBColor[1, 1, 0][0.6099499685688039, 0.463370615923056], 
             RGBColor[1, 1, 0][0.6099499685688039, 0.463370615923056], 
             RGBColor[1, 1, 0][0.6151157849653658, 0.5217415161834034], 
             RGBColor[1, 1, 0][0.6151157849653658, 0.5217415161834034], 
             RGBColor[1, 1, 0][0.6164140497785252, 0.5359639688404275], 
             RGBColor[1, 1, 0][0.6164140497785252, 0.5359639688404275], 
             RGBColor[1, 1, 0][0.6177150503648524, 0.5500322652229049], 
             RGBColor[1, 1, 0][0.6177150503648524, 0.5500322652229049], 
             RGBColor[1, 1, 0][0.6203252819290265, 0.5776942539950447], 
             RGBColor[1, 1, 0][0.6203252819290265, 0.5776942539950447], 
             RGBColor[1, 1, 0][0.6255788288093339, 0.6310346610532886], 
             RGBColor[1, 1, 0][0.6255788288093339, 0.6310346610532886], 
             RGBColor[1, 1, 0][0.6268991419090261, 0.6439387473133611], 
             RGBColor[1, 1, 0][0.6268991419090261, 0.6439387473133611], 
             RGBColor[1, 1, 0][0.6282222372432169, 0.6566643278950058], 
             RGBColor[1, 1, 0][0.6282222372432169, 0.6566643278950058], 
             RGBColor[1, 1, 0][0.6308767980789396, 0.681567770336615], 
             RGBColor[1, 1, 0][0.6308767980789396, 0.681567770336615], 
             RGBColor[1, 1, 0][0.6362195653600128, 0.7290984362711296], 
             RGBColor[1, 1, 0][0.6362195653600128, 0.7290984362711296], 
             RGBColor[1, 1, 0][0.6375623011898293, 0.7404891386360164], 
             RGBColor[1, 1, 0][0.6375623011898293, 0.7404891386360164], 
             RGBColor[1, 1, 0][0.6389078665045224, 0.7516769836194431], 
             RGBColor[1, 1, 0][0.6389078665045224, 0.7516769836194431], 
             RGBColor[1, 1, 0][0.6416075094508688, 0.773431998511622], 
             RGBColor[1, 1, 0][0.6416075094508688, 0.773431998511622], 
             RGBColor[1, 1, 0][0.6470410123528242, 0.8143749896898111], 
             RGBColor[1, 1, 0][0.6470410123528242, 0.8143749896898111], 
             RGBColor[1, 1, 0][0.6485226825406294, 0.824870631101286], 
             RGBColor[1, 1, 0][0.6485226825406294, 0.824870631101286], 
             RGBColor[1, 1, 0][0.650007740512033, 0.8350989338380612], 
             RGBColor[1, 1, 0][0.650007740512033, 0.8350989338380612], 
             RGBColor[1, 1, 0][0.6529880508075023, 0.8547384412955479], 
             RGBColor[1, 1, 0][0.6529880508075023, 0.8547384412955479], 
             RGBColor[1, 1, 0][0.6544833186768244, 0.8641421493477128], 
             RGBColor[1, 1, 0][0.6544833186768244, 0.8641421493477128], 
             RGBColor[1, 1, 0][0.6559820054203346, 0.8732635278932531], 
             RGBColor[1, 1, 0][0.6559820054203346, 0.8732635278932531], 
             RGBColor[1, 1, 0][0.6589896668163061, 0.8906445254160352], 
             RGBColor[1, 1, 0][0.6589896668163061, 0.8906445254160352], 
             RGBColor[1, 1, 0][0.6604986571566854, 0.8988968159619476], 
             RGBColor[1, 1, 0][0.6604986571566854, 0.8988968159619476], 
             RGBColor[1, 1, 0][0.6620110977471708, 0.9068521227799962], 
             RGBColor[1, 1, 0][0.6620110977471708, 0.9068521227799962], 
             RGBColor[1, 1, 0][0.6650463612519707, 0.9218574082933552], 
             RGBColor[1, 1, 0][0.6650463612519707, 0.9218574082933552], 
             RGBColor[1, 1, 0][0.6665691999981751, 0.9289002690526491], 
             RGBColor[1, 1, 0][0.6665691999981751, 0.9289002690526491], 
             RGBColor[1, 1, 0][0.6680955206583489, 0.9356319129860111], 
             RGBColor[1, 1, 0][0.6680955206583489, 0.9356319129860111], 
             RGBColor[1, 1, 0][0.6711586395838732, 0.9481476549904354], 
             RGBColor[1, 1, 0][0.6711586395838732, 0.9481476549904354], 
             RGBColor[1, 1, 0][0.6726954538264075, 0.9539248899979439], 
             RGBColor[1, 1, 0][0.6726954538264075, 0.9539248899979439], 
             RGBColor[1, 1, 0][0.6742357819373624, 0.9593771849539142], 
             RGBColor[1, 1, 0][0.6742357819373624, 0.9593771849539142], 
             RGBColor[1, 1, 0][0.6757796319510662, 0.9645011995106904], 
             RGBColor[1, 1, 0][0.6757796319510662, 0.9645011995106904], 
             RGBColor[1, 1, 0][0.6773270119202184, 0.9692936324593733], 
             RGBColor[1, 1, 0][0.6773270119202184, 0.9692936324593733], 
             RGBColor[1, 1, 0][0.678877929915931, 0.9737512232337965], 
             RGBColor[1, 1, 0][0.678877929915931, 0.9737512232337965], 
             RGBColor[1, 1, 0][0.680432394027768, 0.9778707534291832], 
             RGBColor[1, 1, 0][0.680432394027768, 0.9778707534291832], 
             RGBColor[1, 1, 0][0.681990412363794, 0.9816490483352308], 
             RGBColor[1, 1, 0][0.681990412363794, 0.9816490483352308], 
             RGBColor[1, 1, 0][0.6835519930506082, 0.9850829784833551], 
             RGBColor[1, 1, 0][0.6835519930506082, 0.9850829784833551], 
             RGBColor[1, 1, 0][0.6851171442333933, 0.9881694612078209], 
             RGBColor[1, 1, 0][0.6851171442333933, 0.9881694612078209], 
             RGBColor[1, 1, 0][0.6866858740759546, 0.9909054622204615], 
             RGBColor[1, 1, 0][0.6866858740759546, 0.9909054622204615], 
             RGBColor[1, 1, 0][0.6882581907607658, 0.9932879971986819], 
             RGBColor[1, 1, 0][0.6882581907607658, 0.9932879971986819], 
             RGBColor[1, 1, 0][0.6898341024890062, 0.9953141333864374], 
             RGBColor[1, 1, 0][0.6898341024890062, 0.9953141333864374], 
             RGBColor[1, 1, 0][0.6914136174806083, 0.9969809912078461], 
             RGBColor[1, 1, 0][0.6914136174806083, 0.9969809912078461], 
             RGBColor[1, 1, 0][0.6929967439743012, 0.9982857458930964], 
             RGBColor[1, 1, 0][0.6929967439743012, 0.9982857458930964], 
             RGBColor[1, 1, 0][0.694583490227648, 0.999225629116285], 
             RGBColor[1, 1, 0][0.694583490227648, 0.999225629116285], 
             RGBColor[1, 1, 0][0.6961738645170944, 0.9997979306448214], 
             RGBColor[1, 1, 0][0.6961738645170944, 0.9997979306448214], 
             RGBColor[1, 1, 0][0.6977678751380099, 1.0000000000000004`], 
             RGBColor[1, 1, 0][0.6977678751380099, 1.0000000000000004`], 
             RGBColor[1, 1, 0][0.6993655304047309, 0.999829248128351], 
             RGBColor[1, 1, 0][0.6993655304047309, 0.999829248128351], 
             RGBColor[1, 1, 0][0.7009668386506027, 0.9992831490833372], 
             RGBColor[1, 1, 0][0.7009668386506027, 0.9992831490833372], 
             RGBColor[1, 1, 0][0.7025718082280273, 0.9983592417169843], 
             RGBColor[1, 1, 0][0.7025718082280273, 0.9983592417169843], 
             RGBColor[1, 1, 0][0.7041804475085022, 0.9970551313809808], 
             RGBColor[1, 1, 0][0.7041804475085022, 0.9970551313809808], 
             RGBColor[1, 1, 0][0.7057927648826671, 0.9953684916367963], 
             RGBColor[1, 1, 0][0.7057927648826671, 0.9953684916367963], 
             RGBColor[1, 1, 0][0.7074087687603448, 0.9932970659743346], 
             RGBColor[1, 1, 0][0.7074087687603448, 0.9932970659743346], 
             RGBColor[1, 1, 0][0.7090284675705889, 0.990838669538635], 
             RGBColor[1, 1, 0][0.7090284675705889, 0.990838669538635], 
             RGBColor[1, 1, 0][0.7106518697617236, 0.9879911908641039], 
             RGBColor[1, 1, 0][0.7106518697617236, 0.9879911908641039], 
             RGBColor[1, 1, 0][0.7122789838013923, 0.9847525936157583], 
             RGBColor[1, 1, 0][0.7122789838013923, 0.9847525936157583], 
             RGBColor[1, 1, 0][0.7139098181765987, 0.9811209183369397], 
             RGBColor[1, 1, 0][0.7139098181765987, 0.9811209183369397], 
             RGBColor[1, 1, 0][0.7155443813937491, 0.9770942842029354], 
             RGBColor[1, 1, 0][0.7155443813937491, 0.9770942842029354], 
             RGBColor[1, 1, 0][0.7171826819787034, 0.9726708907799374], 
             RGBColor[1, 1, 0][0.7171826819787034, 0.9726708907799374], 
             RGBColor[1, 1, 0][0.7188247284768137, 0.9678490197887466], 
             RGBColor[1, 1, 0][0.7188247284768137, 0.9678490197887466], 
             RGBColor[1, 1, 0][0.7221200934916436, 0.9570033933685981], 
             RGBColor[1, 1, 0][0.7221200934916436, 0.9570033933685981], 
             RGBColor[1, 1, 0][0.7237734291969415, 0.9509766280817793], 
             RGBColor[1, 1, 0][0.7237734291969415, 0.9509766280817793], 
             RGBColor[1, 1, 0][0.7254305451926356, 0.9445453690616993], 
             RGBColor[1, 1, 0][0.7254305451926356, 0.9445453690616993], 
             RGBColor[1, 1, 0][0.7287561526489493, 0.9304643389108734], 
             RGBColor[1, 1, 0][0.7287561526489493, 0.9304643389108734], 
             RGBColor[1, 1, 0][0.7304246614558897, 0.922812286106694], 
             RGBColor[1, 1, 0][0.7304246614558897, 0.922812286106694], 
             RGBColor[1, 1, 0][0.7320969852459563, 0.9147511797796454], 
             RGBColor[1, 1, 0][0.7320969852459563, 0.9147511797796454], 
             RGBColor[1, 1, 0][0.7354531126866851, 0.8973983102565259], 
             RGBColor[1, 1, 0][0.7354531126866851, 0.8973983102565259], 
             RGBColor[1, 1, 0][0.7371369338428579, 0.8881050504579967], 
             RGBColor[1, 1, 0][0.7371369338428579, 0.8881050504579967], 
             RGBColor[1, 1, 0][0.7388246049932735, 0.8783997474718772], 
             RGBColor[1, 1, 0][0.7388246049932735, 0.8783997474718772], 
             RGBColor[1, 1, 0][0.7422115325084331, 0.8577511637280612], 
             RGBColor[1, 1, 0][0.7422115325084331, 0.8577511637280612], 
             RGBColor[1, 1, 0][0.7439108065393417, 0.8468072280495488], 
             RGBColor[1, 1, 0][0.7439108065393417, 0.8468072280495488], 
             RGBColor[1, 1, 0][0.7456139658969148, 0.8354499428389628], 
             RGBColor[1, 1, 0][0.7456139658969148, 0.8354499428389628], 
             RGBColor[1, 1, 0][0.7490319761469832, 0.8114952360702252], 
             RGBColor[1, 1, 0][0.7490319761469832, 0.8114952360702252], 
             RGBColor[1, 1, 0][0.7506320447761432, 0.7997533495418897], 
             RGBColor[1, 1, 0][0.7506320447761432, 0.7997533495418897], 
             RGBColor[1, 1, 0][0.752235526988252, 0.7876519525757674], 
             RGBColor[1, 1, 0][0.752235526988252, 0.7876519525757674], 
             RGBColor[1, 1, 0][0.7554527613069721, 0.762372030196072], 
             RGBColor[1, 1, 0][0.7554527613069721, 0.762372030196072], 
             RGBColor[1, 1, 0][0.7570665280252867, 0.7491944358242061], 
             RGBColor[1, 1, 0][0.7570665280252867, 0.7491944358242061], 
             RGBColor[1, 1, 0][0.7586837375500237, 0.7356591954535463], 
             RGBColor[1, 1, 0][0.7586837375500237, 0.7356591954535463], 
             RGBColor[1, 1, 0][0.7619285144139343, 0.7075186744051072], 
             RGBColor[1, 1, 0][0.7619285144139343, 0.7075186744051072], 
             RGBColor[1, 1, 0][0.763556096489903, 0.6929150838135701], 
             RGBColor[1, 1, 0][0.763556096489903, 0.6929150838135701], 
             RGBColor[1, 1, 0][0.7651871508459468, 0.6779572296639209], 
             RGBColor[1, 1, 0][0.7651871508459468, 0.6779572296639209], 
             RGBColor[1, 1, 0][0.7684597060450858, 0.6469831966797454], 
             RGBColor[1, 1, 0][0.7684597060450858, 0.6469831966797454], 
             RGBColor[1, 1, 0][0.775046810806224, 0.5808387837601585], 
             RGBColor[1, 1, 0][0.775046810806224, 0.5808387837601585], 
             RGBColor[1, 1, 0][0.7767023794273042, 0.5634373475989941], 
             RGBColor[1, 1, 0][0.7767023794273042, 0.5634373475989941], 
             RGBColor[1, 1, 0][0.778361480034895, 0.5456932532974028], 
             RGBColor[1, 1, 0][0.778361480034895, 0.5456932532974028], 
             RGBColor[1, 1, 0][0.7816903073662144, 0.5091848994828788], 
             RGBColor[1, 1, 0][0.7816903073662144, 0.5091848994828788], 
             RGBColor[1, 1, 0][0.7833600492084681, 0.4904248174194645], 
             RGBColor[1, 1, 0][0.7833600492084681, 0.4904248174194645], 
             RGBColor[1, 1, 0][0.7850333532743514, 0.4713304339853506], 
             RGBColor[1, 1, 0][0.7850333532743514, 0.4713304339853506], 
             RGBColor[1, 1, 0][0.7883906784917828, 0.43214833838055466`], 
             RGBColor[1, 1, 0][0.7883906784917828, 0.43214833838055466`], 
             RGBColor[1, 1, 0][0.7900747148912838, 0.41206569578708485`], 
             RGBColor[1, 1, 0][0.7900747148912838, 0.41206569578708485`], 
             RGBColor[1, 1, 0][0.7917623440103925, 0.39165889266611514`], 
             RGBColor[1, 1, 0][0.7917623440103925, 0.39165889266611514`], 
             RGBColor[1, 1, 0][0.7951484110825854, 0.3498842022686861], 
             RGBColor[1, 1, 0][0.7951484110825854, 0.3498842022686861], 
             RGBColor[1, 1, 0][0.8019639962066019, 0.26257678690909114`], 
             RGBColor[1, 1, 0][0.8019639962066019, 0.26257678690909114`], 
             RGBColor[1, 1, 0][0.8036769898927193, 0.23998636208452978`], 
             RGBColor[1, 1, 0][0.8036769898927193, 0.23998636208452978`], 
             RGBColor[1, 1, 0][0.8053936380758573, 0.2170976197511747], 
             RGBColor[1, 1, 0][0.8053936380758573, 0.2170976197511747], 
             RGBColor[1, 1, 0][0.8088379291358093, 0.17044036524123193`], 
             RGBColor[1, 1, 0][0.8088379291358093, 0.17044036524123193`], 
             RGBColor[1, 1, 0][0.810565587655552, 0.1466797471492719], 
             RGBColor[1, 1, 0][0.810565587655552, 0.1466797471492719], 
             RGBColor[1, 1, 0][0.8122969319582376, 0.12263660069664797`], 
             RGBColor[1, 1, 0][0.8122969319582376, 0.12263660069664797`], 
             RGBColor[1, 1, 0][0.8157707093821833, 0.07371985312110524], 
             RGBColor[1, 1, 0][0.8157707093821833, 0.07371985312110524], 
             RGBColor[1, 1, 0][0.8175131582802883, 0.04885512433734925], 
             RGBColor[1, 1, 0][0.8175131582802883, 0.04885512433734925], 
             RGBColor[1, 1, 0][0.8192593245150978, 0.023725612555671006`], 
             RGBColor[1, 1, 0][
             0.8192593245150978, 0.023725612555671006`]}], {}}, {
         DisplayFunction -> Identity, 
          ImagePadding -> {{36., 1.5000000000000568`}, {35., 
           35.84354704608937}}, DisplayFunction -> Identity, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "AxesInFront" -> True}, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, Ticks -> {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
          AxesOrigin -> {-4.734247086804626, -0.80330768557028}, 
          FrameTicks -> {{Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
             Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
             Charting`ScaledFrameTicks[{Log, Exp}]}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 0}}, PlotRangeClipping -> True, ImagePadding -> 
          All, DisplayFunction -> Identity, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "AxesInFront" -> True, 
            "ClippingRange" -> {{{-4.734247086804626, 
             2.060909141005812}, {-8.763877590435708, \
-1.9156929257098818`*^-7}}, {{-4.734247086804626, 
             2.060909141005812}, {-0.80330768557028, \
-1.9156929257098818`*^-7}}}}, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
          CoordinatesToolOptions -> {"DisplayFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& )}, DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "AxesInFront" -> True}, PlotLabel -> 
          FormBox["\"Log Log Plot\"", TraditionalForm], 
          PlotRange -> {{-4.734247086804626, 
            2.060909141005812}, {-0.80330768557028, 0}}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], Automatic}}, Ticks -> {Automatic, Automatic}}], 
        NCache[{
          Rational[1083, 2], -335.23835392494317`}, {
         541.5, -335.23835392494317`}], 
        ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}]}}, {
      Directive[Antialiasing -> False], {}, {{
        LineBox[{{0, 0}, {0, -223.49223594996212`}}]}, {
        LineBox[{{0, -223.49223594996212`}, {0, -446.98447189992424`}}]}, {
        LineBox[{{361, 0}, {361, -223.49223594996212`}}]}, {
        LineBox[{{361, -223.49223594996212`}, {361, -446.98447189992424`}}]}, {
        LineBox[{{722, 0}, {722, -223.49223594996212`}}]}, {
        LineBox[{{722, -223.49223594996212`}, {722, -446.98447189992424`}}]}, {
        LineBox[{{0, 0}, {361, 0}}]}, {
        LineBox[{{361, 0}, {722, 0}}]}, {
        LineBox[{{0, -223.49223594996212`}, {361, -223.49223594996212`}}]}, {
        LineBox[{{361, -223.49223594996212`}, {722, -223.49223594996212`}}]}, {
        LineBox[{{0, -446.98447189992424`}, {361, -446.98447189992424`}}]}, {
        LineBox[{{361, -446.98447189992424`}, {
          722, -446.98447189992424`}}]}}}}, ImageSize -> {
      UpTo[600], 
      UpTo[700]}, {PlotRangePadding -> {6, 5}}, ContentSelectable -> True],
   StyleBox["\"Multiple Plots Box\"", 20, Italic, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        FrameBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], Background -> RGBColor[1, 1, 0.85], 
         FrameMargins -> 4, FrameStyle -> Automatic], DefaultBaseStyle -> 
        "Labeled"], "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"Background", "\[Rule]", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{{
               GrayLevel[0], 
               RectangleBox[{0, 0}]}, {
               GrayLevel[0], 
               RectangleBox[{1, -1}]}, {
               RGBColor[1, 1, 0.85], 
               RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
             "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
             FrameStyle -> 
             RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.5666666666666667], 
             FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
             Dynamic[{
               Automatic, 1.35 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            StyleBox[
             RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "1", ",", "0.85`"}], "]"}], NumberMarks -> 
             False]], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
           Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
           With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[1, 1, 0.85]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
           "Preemptive"], 
          RGBColor[1, 1, 0.85], Editable -> False, Selectable -> False]}]}], 
     "]"}]& )]], "Output",
 CellChangeTimes->{{3.8604206128603153`*^9, 3.860420642511967*^9}, 
   3.860421334107583*^9, {3.8604213772818155`*^9, 3.8604213991552444`*^9}},
 CellLabel->
  "Out[115]=",ExpressionUUID->"6b5b6538-7c72-4ee9-aea2-260b2455a945"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Labeled", "[", 
  RowBox[{
   RowBox[{"GraphicsGrid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"NewPlot1", ",", "NewPlot2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"NewPlot3", ",", "NewPlot4"}], "}"}]}], "}"}], ",", 
     RowBox[{"Frame", "->", "All"}], ",", 
     RowBox[{"Background", "->", "White"}], ",", 
     RowBox[{"Spacings", "->", "1"}]}], "]"}], ",", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Multiple Plots Box\>\"", ",", "20", ",", "Italic"}], "]"}], 
   ",", "Top", ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"Background", "->", "LightYellow"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860421458330104*^9, 3.8604214583311033`*^9}, {
  3.8604215245152254`*^9, 3.86042154978418*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"f7bb0216-b41b-4232-bd0d-dc78da4724a6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{
        GrayLevel[1], 
        RectangleBox[{361, -223.49223594996212`}, {
         722, -446.98447189992424`}]}, {
        GrayLevel[1], 
        RectangleBox[{0, -223.49223594996212`}, {
         361, -446.98447189992424`}]}}, {{
        GrayLevel[1], 
        RectangleBox[{361, 0}, {722, -223.49223594996212`}]}, {
        GrayLevel[1], 
        RectangleBox[{0, 0}, {361, -223.49223594996212`}]}}}, {{
       InsetBox[
        GraphicsBox[{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0.5, 0, 0.5], 
               Thickness[Large]], 
              LineBox[CompressedData["
1:eJxFxXss1AEcAPDToXZOc5QId7+TuZxH/NGWlke0Ja8lLttZjzvcKa+Y24RK
Im5GV908d7sd0cyctNOmxyVEXte4Usu1zLkZsdF1cSjVH77fPz77MPnZ51J3
kUikmH/+L7vJtw5IqQzeeUBLRCcSV0J23h5U3yGI67Cst4phRYjhjCBR5hqj
HtZupklXGG3w7ulZ1jKjB1aMyHO+M4ZhZad4OsPvCywMmahfytXDWQYvvUq5
AFOYpaxvx1bgartRtuKyEeZPJ7wmj/2Cc96W8rNZG3DXNWq805nfsKIwfdE/
kRS6c4l8K+7nkgVM0s6Eviwgw555gvwEthU8Z6o9b/PKGo40XL3xIGcPHDsn
8abTKfBiP7/4XYcN7Eebcgu/ZAtTQkw8nXEvfHqZu+bOsYM/96VYcH1ocHfF
wEXChAusRDMajT2cnFvYTW1wgI8IvTXRvH3we3sfG1HgfviFsqTRh+wIF1qw
z459xSm6gogs1QHY0MqUyoucYOlhZ8sejjMsaRAM8YiDMFd6QUOdx9dPtZjl
ahdYbwjL7yt3hZuCAlzGeW5wR5mIJvSlw+Wc5CiyCT+qU7SVjzPgOq/GjvEo
Ar7VW1UX1YPHuHBaRjyY8MmsoSSaGJe78j3GTLhH/+Oa2CR3WOLbx55U4wKj
5cQw+xDM7/pBiO/hGSXxW5H3cVG86hP1IV5hElVLanBloHmzVoab32xPtbbj
kklq1cAQ3tCcmXZ3GG/O04RHjOLPHCUboxpcx3VI037EWXrn8Fk97q8qoD8y
4MfLps2p83g0S/ZkYRHPTSfoq6t40Ynb5qdGvMx29kOeCa/rbK5cX8ebii2F
zzfw9rjUsKItXOU+6Bb8B1cbPc3b2/hfxrMqyQ==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$44976#1"]& ]}}, {}}, {
         DisplayFunction -> Identity, 
          ImagePadding -> {{36., 1.5000000000000568`}, {35., 
           35.84354704608937}}, DisplayFunction -> Identity, 
          Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> 
          FormBox["\"X\"", TraditionalForm], 
          PlotRange -> {{0, 10}, {0., 9.999999795918367}}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        NCache[{
          Rational[361, 2], -111.74611797498106`}, {
         180.5, -111.74611797498106`}], 
        ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], 
       InsetBox[
        GraphicsBox[{
          GraphicsComplexBox[CompressedData["
1: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
smdsPH3MvHnIIxk1TAl8XEz6P+bvh3tCcyiQ7WnMtRglMHpV/S3aQQwO2axr
CUsm/dL+hxFhSTS4kHVGNbGAQIeNH7i4+pHnMShdW0/6o5LOn4ubjjJBi3/P
yCUjAgckFjS/rmSCdYqzXjDJF4kD6+kjQYXIiD9Sl0G+P+8iS7nSJAp3xPwd
WPGkH6rN1qq4SYWVQ1r3TcYIrL1XPaViPQ2GurV/52kTiE8u0YQmToeQxS/1
Rkk/4zKz5cu7RjrQbtLEJAMJNEP7QyQmMqEDjesv+0rgw/MtrzKEyfncdPvU
5XbS350tshzyzEHKJ/2JiW4CdVlqG6arUYFgpab9I/MZp5vUX11Lg20bDdoK
+wjUkXQyVvI5HQIlXCM78glEWFh8zRxgAgevRs4kfzaollY/2U4BAUtu5EA1
gd0tNy0cGqMC7Ajcql1L4OOjCY+cjOiQe/ZimyYZ3zvZrbXnc5lwpi8r5TOb
wI2vvRNeqJP5CArUHX9N4KuSHbWnx1iwecMEmtVl4xappH+z9TFo6WgRJ5Gc
z2v8Pt3GCRS4v6O+pv1/Pjx2pC7vCB0WeA2W+5HzVeWkjcvQNyYYTcfY55Pn
yzldfVz4JBX0Jvc+kZwm6/N+Yua1ORoc2bNavZKcn6I15/S4/0j9/LLVXZn0
S7VtVotGTd6goID5cXsuySOjppc6hKgQPGNvo0PG5+yHpH1QSgPWnziHllYC
xTD6dxKdTFA6NWu1k8xvB2F70HE5BUwkHnqkkHx0ZtTOZkkTFfDLoj03/hJ4
T9A9sXJdOtzwFAsqJu9DSCTdN3nFhBx2YeWyLgKHH55zGJl5gmZDz8j5kvwt
qxcivreSXG/W489+kg/qv6kfOFnHhLwD438a/8/X2jsdd55QQV61zUaRnP9K
4feb02ikvzpbtSyN7JfaHIkJXwMqNMs9MDtKPp+Z/iDYtYMG9pXnNuiRvGwe
8Aa8h5jgq5WjIE7Oj2vHEzYM7qJD0kkbA2Vyf0M7htTbD0z4tVa6WJPkp/S9
bsZBs//PE780pckB/KVG3fyAuie6PJ7OHCf3G43P1W4N/47+5K/fau1IoAHZ
gXAz50Z04l3TeOdeLuJLGX/fFNaJPNZvynqzbgC1Of2hFH3vR+l/D1wpXULO
51V5p5aN8MPXp6PbJ4Y68ZX+T48CLgnCgRUpjz979OHlBq37k1cJw9ev2wMl
VnNwipGub8tnERiJbZFuuM/D286zMraepcC+Z9G+nSQPly3rqnXQEIO+E2is
k+RltVsNRyNzxIG1MFBM3oGHeyJ6Lt92k4QpZ37X5Cg2Pmu0hPJ2WgpYCsta
x2p68WYvr/77hvLwrT0/sHOmHYmYWyndFVEAlf4zQxd/9aCereINmu0K8K9d
QM1Eio3W+adJRr1ThGtydaJIiIc4V9qnBINpsPxJ9J2PCQRycNJ81mlDh0pf
eqf+KIH8z1z2DWIpwfszZitt/vGQSraY8rEBJcjis9sQ18pBQR+SQ74UKcPl
oC53X/t+ZJxckaIdpgIlFki1RrIbDbQUxk29V4dVq5KKgne34viuFYX2mgwI
1e/75qPWjacb+rd9uckA0WMT8R3u/dhAd9kKlwkGbGX2VinzOLhCZzK12YEJ
N+7rMq9KkXy9wZ56uZAJtVeW/gKS151ebK1w0GHBwMPrsgNxZD9f3j9rdosF
9gY4p2iMixsKP/px+vLR333pFLk6Aj1/804z/XYNitXVGzwewkObNwU6BDu1
Ib/PHNeDvWwkZabtKf1eAGzsckskTXsw7f2lj9tsheCgQ8RGF58BLDEzUTw9
JQypavE70m5ysWV+oggjSRSqZH/UhHoR+FvQupCbu6hgRh9LkSb77Z6yxfxq
jhhEMDVeVekSuGh9TP7OCAmQLT7hqaRG+q2x56M9vgqgfZKes0C+H+lk6db6
myuCD7tmqPUNB6U2B2U/U6ZBctHQpufk/P1s0vImmkODv0vH9zaR+bFTLKds
+ESHtwVft/1+SOZvZG68+poSfMDcrAcLeeh4WObrtdbKUBwp4xq/hY1kpY4o
X7RhwBZTM5dVB3ux9qr16YwiBpgdqFTato+Ng0R2ebC0mZCvfybbSIOHhVyE
TyRFMiEjr9E19jmBY+4HNZ8fJz/LVaY1kf3mcGPjmQInFshv121hcHj43mOv
I9e+s+A599x+uXAOPlOquop48wK5bjDW+EueVxZRnSRXVKGN99sN7s3w0IN7
x8QtbguDqewjpZ89HBw012s4v4qcN8u2TU5Jk35hLuOuRycFShJtlJaTPJHz
mHbUNFQMjH72R4xcJjBnaeyh+/2KYB4/bvntKg8dcGu1MntL6h/VBT7+IlDj
+6n6iDA69CddtQuuJf3IWtDTslKCA494zJUxPNSYWPCjWIYJ3xUt2gJiuPhI
6b8bH/2YMNF+NJfiRuBFA+zhi01MCNe6840g9amZDinhJmR95fK/WGdG4Bmp
t2knDT+jnrH27y8eE2iF394qY3EKOEebpEIOgW/OYu+X+VT403r8w41+Al+O
vRSnskccZHt+R6ZX87BdlLtIjgUN7g2/mby3h0ArNZsk65l0aBs6suX//69o
8H2o3zFIh1+GvqK2tqQfO9kqeGULE+q4bx/Kkf4kaVbc8uIzJhxRuOww20DG
y0Lya+ACFjSc8vwsWUngVTkBqqndLJAQjBXuzWXj7Nq21NEtiSjW1ntROznv
NDf1MepeUuDe33tnSf+ACz0uqO2zFoNiG/1ky8cEZvi1aWndp0Gx9dpTiuR8
TZSIxht86BAtf+RPcw85zwICFS08SX8oYU9hGRLY5RbrH18FE1y0xlMGSZ7O
8Tfz8aUVovsivNS9mEDGiv7sN7WicN60fP3nWLKfDWcmla9QQef3Xr0Esp//
5Q41v1xLA0q7j5jgYgJN6TW3ZovSYcu8io8FyRP3StYxIurpsFKB8SPyIoH2
vQptl7pP8m3J3VUrPhPYYnRr9awgi+Tx3rwfpL6axfSIDD/MRnUpG3x5vQTq
KzglOUWjgr5mcS6bzGeE1d8Qr2oaSJane7wg76Pk6TrYkUqH928btml9JONv
nNP7r48JPWVqfZvI+lOqWZZbY0QBxeCS1TOk3z1acKVrM0GFoxa1FzrrCOym
0LhxehMdei1+7xgk48vZEfWVyGaCBZOROE3mv/jJ7/fTqizY6Xv73HOyPoIM
L01ljZD9cknZuNCYjXWIw5HzHlHoRlr2USqZ/3Utwh6SsRRIlb/0V4pDPq9n
rxvpRofTfEq+y3gEEnbDIUalTNhzRquwguSHvGba5v2eVGjM9X8uSvLF34/N
25nTNBiUK7ctmyLQYGmb9aY5JtDOtXRQyPUEZgIqR4Neo2mvQ6WCBIEmHaL2
rfpHgUvn9fMxqV8+LX85TZ9poK4fsuRYC4ECFPZ4oQ4m/CnNGC0jv9dI/WQc
pkkBudU996yLSZ50SFl6ppYKZwZkTfvbyPgnNaYeWUUH4dOuLSv/9/OPLSLe
vWSC55Fdz+Q7CNwXb1o06pmKFp5m7TlPnk/hwY/mpG8UOC04PqY7Sdbjx+tn
C2uZ8NyYa/2UzFd8Ykt2VxIV/oWtDPwySGC5zKYzJvJ0OLcr1sfp/35RsfxW
pEuF/ZQqgTfk88/LW5Tm/9JAMeZ0bAAZL70TNJdPBBMchWQKjcn1gyP//Arb
SYfXgQ9SgNw/ZrBqXus9yRPTj3gvyPVTgoU83k+zoKOU475GlI2lYt6+Fmu4
jAL3rTV4Ru5Xtyvia/tnJkhPvTHN/f+8Gc/aePZUeL19h38eWS9V/I7nbUdo
0MR9VnVpguTj5apjPwcp0NWWaviY7A9zPtXXrX+ZoC3c0xNGnteww+5P8lI6
lBdI3y3530/wN9+YMHmEdG/NpFrPkP3vZXvR4APJD/wC869J/r71zOrDoWom
XEFuQlNkPkSG7dODpOiQJqc7EULyWxun46ijJhUOhXutmSHXF7HtSXXiMKHF
VO63F1kvPr9sRT9vJftr7bEz28j1NZ5S103P3EZSi17lqpDvrw0cgkc/mJDk
Eq0XQd6Hfc5Bjs1HhyjLip735POD4Xyv48SpIGA4FX6ZXD9N57J2cjcTfjRS
R7PI+x2wszu5ej0dcIUsbTO5nlT5RgPBOgr4qHlZO5L782ry9dQbmBDJfRg/
Sb7POGpvLKVC8qf29/Zm8v5V5iWLNY2oQLmQryVJfp/D/Lpo8z8WvBRjKPH6
BvB/f79+tw==
           "], {{{}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1:eJwl1nf8yEUcx/GfkFX2SPbIyt57REYyMgtlFqKMUlTIKCObyiozWlaFCtmy
smVFyg6R2dB4fh798fIed8bd9+788nTq1ez5RAkJCd3vSkgI3emXenhM/kGu
QD+T29O35Bx0qvw4LUbr0vW0ubEk/GA+I6rzX9GN+qL8Qr4qysiXaFfc4T9B
fuOz5LJ4QU4vj+XzYq8sJnzH18dxfgxaIKmB13WZsEkui8t8N/zNf4oXkRi7
dA1wgh+LliiHX3Xd8Q+/CP1iHditewQ/8uPQCuXj78QefUOc5MejdewT7kYy
JEcKpEQq3IO95j+Kn/gJeBwVcUX3LP7lF+Ml3It9ukb4mZ+IJ1AJV3U94kNh
CXkZqbFfboxT/CS0iX+P/Rmiy4zNcmX8xvdEIiyV+yMNDshNcJqfjLaxFr9/
qC4LtshVcI1/DndhmfyAObP5chggZ5DH8fnwEL+G7tOX4j/layGtfJA2xZnY
B2Of81P4nPw0/glaPM4i3UCfpu1ib+kwuSW9j9agX9NO9FvjxeiHcjtaLb4T
3RJnglY1fp2PA99cTkyr0BX0M2MF+Dl8+Tgr/Cb6ij4jP57Pj9r8N3S/vjS/
KNaJdPL3cW9wln8buYxPl0vgyTgT8nA+K7bK1XCD74Uk+Fx+FZnMmyA/gANx
H3CIb4Zz/Dt4CtVxU9cbSfGF/Fp8AxyONeI8/y7ao0asBUf0LXCBn4oOqBl/
LzIjC+5DVtyPbDgae45f+GnoiFrIjmP6VrjIT0cnPIRbuj64G8vlgciBH+TW
uMTPQGfUxm1dXyTDCnlQnAccj/cGl/mZ6BJ3yx69obsf2+Q6+D3eDyTHSrmg
OXP5Chgca5Mn8gVwML4PTsRZw6/8e8htzgy5ZJy5uL/ym3w21ORX0e364vxH
fPW413H26MP6P+iLsb+6FLQqXUk70i+NF6Lz5La0YrwxdDPtGm9Z7D2dFPtD
C9I6dC3tQr83XoYulp+itePO0200t7EfaRtcibdC/wX/Pp+Hn8mXwjPxHskj
+OzYIZeQP467hLryn7QfUuIrubDx+XwlDImzIU/mC+FQ/Pk4GWvCVX4WusY7
Zt5IXQ7slOvhL/4lpMLX8lDkxU9xZ/EbPxvdUB93dC/jHqyShyEffo47hWv8
HHRHA+THqdgfXOfn4lk8Em9V3PE4F/EdYl0ogtPmtscNfh56oCEexBl9B9zk
56MnHsXfuv64F6vl4SiKs/GtcYv/AM+hEf7RDUBqrJHfQDGckzvhNr8AzyO1
fRuly4nv5Mb4N94ipME38ptxP82bIhfG4TiTOM93xu/8wthbc96TS8c7I6eR
R/O5sEtugvgP9lU5LdbGnsgf8JUxIt4A+W2+SJxxfh09oi/LL4kziib8dlpC
fyHOK5rp/pAr0+Wxj/E2x/ej78dZpWVofboxzibtbTxt/KwRbwrNTWvR1bEu
utt4SfpJfH9akzaiW2lTY4n41/h0qBZ3jq6Lb8kv4KtgZLxp8jv8gzgql5OX
xvri7su/xP3Hn/xH6IN05ozR5cEe+bHYOt1AOT3Wy6NQChdjPfiL/xh90QyJ
zR+kz4AN8mhk170rF8Uxuby8LO5irInfkej/n89KG/sPLEMYvw==
                "], VertexColors -> Automatic]}, 
              Annotation[#, "Charting`Private`Tag$45023#1"]& ]}}, 
           VertexColors -> CompressedData["
1:eJwVm3k01G8bxlUqlS0qUiG7oogi5FKJFqkf2rQjRRsKFdmXkhKhtCGSrUKk
MjIz9n3fzZixM0OkJMT7vP9wjvM9z3N/7+W6P5dhvdV1swvzeXh47MiXBeT7
UMUOOffrHLyJUmxeUUJFsY3jXOggFV9vHrZ5dp8D++HlB0Qm8zEzrap14BYN
G6LeNX3o5KBjVXyl050qBOgkzGeY5qNP6XOrkiMX2+rkPt/QakaJzvPotH1F
aLYOeB7A4KKJVvc89DgL9lzRMLeJUuglNqasHuDASXb1T9O6Hohm6geUpVfC
6RxDfkHfALYxb4gu0ezHaMKtrnnytbiTx1wS8Ksb2x74vV1U3o/kdpe9782b
8Dw1eN3y9UywOK7jin19eCk4KKXh3IlK/6XWEV1NKHrMO2LH6IHKlVuN18g9
4u27NOJ+1+IK/yH3rq8s7D0RUfH95wBio/0Xxx+pRsBKLfvq882QH79l/G31
EHj3uSlqn62BqsTe1yUfyyEcHTAVazGAvpBd7i+NGzDfbcCujPc7NkrYRQZI
9OKzskuYuX8bwieMSrzfUsCf5pSYd7ULD/kNWtIZDJQc3H9dezAHp2TShD/P
sjApfq/ufjADf67lnBeezsFEGee1x3o2Fu3PjZbib0Pwij0lilQKDI+c3ZAR
24UmB7cuk3v1KFE2aDGzoYKptv5AVmQvnkS+tdq8pAYHS1hq9/dVglEVUhmW
MICxPQv4Lflq8MNceQevSys2xSaN/pkZhNKTvoyPw3XY/dx2s8wIG849ieea
Ng3gwB3pqt3iLUgW0JNcYd6L8e+b/57r6kaHTtrCCk0Wzqh3KZnt7UfSH+P5
ZpQOlBS+0dj+rwdXeQRcJ4r7Qd3t6JQk3Aih97PaR60H0flYeWTRqn68WXZs
67uvNWCel/6PR5MLhemNMYelezB17qX4J6FKTNQfVLnZyUXYvk+xo286kZG8
1Tg6pBTPZydjFEy4MPtNWfr6aCNOKXh0CzwshEfVk+ithRxs+zvNvxblOCHz
OlbxOx16gd1tKt4cpN1sPToySodRaFu64X4aruTtv6TtyMH6jzFth2epGBiK
vyo4TsXNrd0XdKM4OK4h//w7qxBHfVUPFVTScC1K4+XlnxxovV1WNN+qBi4r
N/3em5WPVVH/Qk6+5OLNws8tny61QoVr/rJTvhi3W+Qp51q5ELljFKvtxsbx
WwLLiuvLoJC8iHPVloP5Nkl+tm96kfjY4Jr9iyo8Ew+1S6rpx/7Nc+ucXPqh
q1ufHClSB7ZJZHCJWjeKDU9mzcvvx62/B6/62zQjN9ZSvPVrB1h23sYNSX0w
Pd9on/OYhXJ5isWa3404iJYF7w17sM390Zux173Q4uEv33OoFqn7D9P2NXWC
d+7XN1mXQRyhGEopulYjdyK1N6+pASmtJhzfL4OIVNWwPnu0FoWVkj5+eiVY
zhUJ2ObRD7+lWSdtNjehWV3X5EFULmbOjZS67OvByDu1F0/T2hHS1HIuy5qC
SHvbIbdhNkQ3/eyTFGIihaV+05KZg5AJ29mAQRZsX9B11GUZWKVVwtguQsHk
qKHJW1M2igJLd07wtSLT50qPzF8Krt0wiSsU7kbb1PnZ/RV1aKhfd1OLNx+C
t5fTa7b3oWd2VG+xC8lnwYo9YeE0GOZstjwqQEPXycQ4k/cceHloPGabl2B0
qv8/Z106XptcoTHXcBFfdOSpRXcdHMxGyiciC8BJNuILrOXCsuPMW581HQgt
uKLSpVmCcae49ywKF++M9ltadHbh8J3Hq2w45SiTfnQLn6uhVPvVUNCsDr2z
HYVK+wahvT/me/eJOijQAuYvf1WA5/rL5Ja/6kPZg5nvAgXN0BfzfB5mkAux
V7Z9i14S/ZKJagxO6MDQdnunWFUKNBZRlJf7sTGoJFS7SImJC8zh56yWHFhZ
Ru1vY7JQ8mZ6LVu1A3+OFHgo76Xg6MGMvaXZbHBDF2750tuEgc2UtpuOubig
R4/9b7ob4qcluls6ahHpWrFy9GQRPKf/swte0g/psPs160Kq0WCVUtTDrkdN
389W7UeD0Iy9/ftTExdxP3evSdzWha1ZFifcrcrx/Kw+X1oaFz7cl41NDm3Y
oq8q6/mwGJpTOqz+fxxUJD7Nv7OyFlcFin4I/8pHkfgRfs5LDho8ijaOmRfB
54WA8xCbhiVqO1OfkLkrF41e5ryEhr+FwybzflORKP1pfoIHB79dH1/+E0sH
75tHP27q0VB34XNidR4Hp4Lprhcjy6Cs8TvibQwdpnF71/7R5aL6U4aTuV8D
ZBb/W/1IpxBNu/RlmWwuLCTzO+MPMyGYnWLXJFiKuNB97QNnuNB4HSWYntON
mgXpXcKZFVj85GgXfVMNUiqXXAs73Ia0E2sDlcZI/784Jjo3Vg05Pc9z6zqr
sahk7GNW5wAmg9SK5mvUY8R19oN0BA2nwr69/cTqRUh9tqvof61w1B7rMR6k
gMcjWJMx1oUd3oN+3J0MLGs4vO7WMgoele25cHsnG//usE2zBJgorS/7lUTm
woLbMbl+iIWW3dPq526145qn7+PlDhQ4jUctDV/YBc6nlMP7HBrh6OFUH5Kf
i0D7WrGzL3qgdOHqRimSz5IcCxm9aSoYBndv+/2kQmCflUkE0THdLfnrv3AK
4Vuv/eVjNQ2rVKPrRWc46L5zQGpwsgblNd5eIkP50JN/yFcXzYX7+t2m6RGt
UGiemx+gVYwLKrVrGlu4cO5d5eEQy8Yvz6NbWaNlCFIrd+AQ3Sj72DQ+WNWA
5BXbHJSzB/FdrOvg7gu1iNa1izu4uARGK5RcDzj248f9Z/o5a5vwpJ8e/fZV
LrR70+DyXw/yn5706cxoR12k/Zwm0Y20Z5PvvLlsKFddTHwmxYQJO2RtTlsO
zO5P7nHtYuG+irt66+8OPJ4VWLllLQWvvhfeXmHFxpcXtXNHwlvwNXDIqFgk
F6tZShO0Xd2QXfcsI/5bHTw476n7d+fjmv6GeOl9feCcejXiW1eN41kjbtvV
a7Fxe5fGHrFB7DEQYL6K5ELOdBlHYHs3or50P1y9owL2S8zetnVz8URsea6h
DgOH8j6uZ8SXYPIF3l6X5iJ3f9/Zd5L1uBCQm6n3oQBeQ3W6fh85iFXyLtsY
VYK4l75dT4zpWHwm4uAdVw6eftKNZ9JoMDr94d2ulTS0VSifNCY6Fn44Wsj2
JQ2c5iWNmYI0JFPfi8wmc6BUJn+1dFkJ0uIrN7duoiPl80L/PBEuXK98c1A6
WYcnUzFOsxfIvbdeKRtVcfG74FzUjrF2LD22edpErgRfw86uzy7mQn/NrMBQ
YRci9MeF0FCOVzX/5vje1+Cc8Q7nVVIMCCasaLcoG4TlTVmxRUTfbAJtwo5b
1IFFF1v2iOhbb1p3ecfBOiT8O3uVv6QALfw3Tb3e9aGQlR0q2NKMW98WZKno
5ULk+13pm0+6cerMgcrw0A7o1e3K2LGFAizIIPuajbG9FL1XG5nY9nEodRXR
t+65R4mHGSz4z3t5Ncm2A79cl994r0uB7KCbwI1oNo7W9L5LPdEM52fTOyaO
5QLyyaOvS7tRfi/WTP3/uvGqP/fLEzrRi+7Vf7bToA5xmbQCDjINTPbUbCrH
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
            "]], {}}, {
         DisplayFunction -> Identity, 
          ImagePadding -> {{36., 1.5000000000000568`}, {35., 
           35.84354704608937}}, DisplayFunction -> Identity, 
          Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
          FrameTicks -> {{Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
             Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
          GridLines -> {{-1, 0, 1}, {-1, 0, 1}}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
          DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
          Identity, Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {{-1, 0, 1}, {-1, 0, 1}}, GridLinesStyle -> Directive[
            Dashing[{0, Small}], 
            RGBColor[0, 0, 1]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> 
          FormBox["\"Cos[x]\"", TraditionalForm], 
          PlotRange -> {{0, 10}, {-0.9999997966795732, 0.9999999999999791}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
        NCache[{
          Rational[1083, 2], -111.74611797498106`}, {
         541.5, -111.74611797498106`}], 
        ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}]}, {
       InsetBox[
        GraphicsBox[{{}, {{{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]], 
             GeometricTransformationBox[
              TagBox[
               InsetBox["X", {0., 0.}], "InsetString"], {{{1., 
              1.8414709848078965`}}, {{2., 1.9092974268256817`}}, {{3., 
              1.1411200080598671`}}, {{4., 0.24319750469207174`}}, {{5., 
              0.04107572533686153}}, {{6., 0.7205845018010741}}, {{7., 
              1.656986598718789}}, {{8., 1.9893582466233817`}}, {{9., 
              1.4121184852417565`}}, {{10., 0.45597888911063017`}}}]}}, {{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}, {{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}, {
         DisplayFunction -> Identity, 
          ImagePadding -> {{36., 1.5000000000000568`}, {35., 
           35.84354704608937}}, DisplayFunction -> Identity, DisplayFunction -> 
          Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
          Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
             FormBox[
              StyleBox["\"Y\"", Bold, StripOnInput -> False], 
              TraditionalForm], None}, {
             FormBox[
              StyleBox["\"X\"", Bold, StripOnInput -> False], 
              TraditionalForm], None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& )}}, PlotLabel -> 
          FormBox["\"2D\\nScatter Plot\"", TraditionalForm], 
          PlotRange -> {{0., 10.}, {0, 1.9893582466233817`}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
        NCache[{
          Rational[361, 2], -335.23835392494317`}, {
         180.5, -335.23835392494317`}], 
        ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], 
       InsetBox[
        GraphicsBox[{
          GraphicsComplexBox[CompressedData["
1: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
f/H4346Vtg3X+fXHrmLmQz2X8rjzqgmch+Ry+FWf6lnk3s9xmrlDfB3u/XM+
7m8/Mlcbpr1SZGD9wjimbG5OhtTA/Y7Wvg8bWxoVB/69ApZIJcpEDgaxjwbf
K24psJFX+FXKbRowb3ektbSGAtt04wg/IXMMSLg8tckdLc+i1bSEJRZOhJdZ
em8PdMiyBfvGS52y0YNPS15da86TYZc+Zv4Q9J0FErpT7LMypFm0pmudqooh
eHl5FuSekGJXLWq/i4cZwySbEMEIN0lm6Tfqfd8WM+g8/ybrmK0E893ilLL8
vBVIGbfNSNURZ+NVG+tsa1bDbNOKkxOHiDGna8Xqw+02QOyQ1Oup9SLs/Fb9
fXf7tsDKMdd02pgwm/35ilyXw3YYd8LtZFCyEJPsX3U6zngPzLUcmuD4nyB7
nyu3OrzsAOzcHXTprKMAk128xD5V+DBkPnqeHba9H+YKGVan1h+HSSoFAoeH
9sFKp887jG6egkJV119qDb9gtU66UtLkMJCpLdihe6YLoudNrk0fewkevipe
/3HdT1gRNyxSsiEGrpwa5Zg2rR2WWDhZ/ApOhGEac773f2qB1ItO5dez0iD8
7kuT7rWNkDDok/A7fgaUOl1vE7xcBwtU+VqmR7LAVNRYVaX3K3jM+vJ8/vIc
MO0XXCJu8hkM9Usz9uS8gOWT4u0Lq97Bkqz2mUH3C8Bh64FbNdPzYOP3Ra0S
I0rhfGj/3S9tN8Gqx+Sa7+lKsGemahb2tzjxNz2KPn21A9/3A+tVfxmf7wfu
vzXlh04x6OOOfXW52y7xAMbYb7izMKSfq93Yfb6tP/uf83F/pfi9xZcWM/GB
57Fil0HMvl1u4PPdat0mXkbooIHreeGryQt+iamD1wpOrWqrAnOKFZnwuX4k
KLhq2w+/Ic+URmjyxzzVAu2HMYIqgXJsv9N5Z89IHQjYGHcrcL0s03/DhPWn
TgfDI1rfRAxlWMD/fH0/KhlA91TPU0M1pNnVvFzXlJgFoKicsnpcrySb717g
5PLIFOznrAH4JsFq3zX9EOYs4I7ZsZ2tT8RZQ96nd6uPrYAdJ4Pnq8eJsYJr
Yrq3/e1g0tptgVU+oqx/5OlrO7scQM/rTbXWChE2fGrOyKmuzhColpHtNkOY
Nd1dZSNbtBNqFm+Vt1IRYj4aJuEpVu4Qn9DrM7ldgMUnhOcNTfSGF9rZpUsi
+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
/UrK2F+njPNrKGM+izLmxyljf4wy9pUp4zwIyjjPhDLmeShj3pgy9osoY5+V
Ms4LoIzzgihjHo4y5vUpY1+PMvbDKeP8Dco4P4Yy5qcoY76bMva5KGN/mDLO
Z6CM85koY/6QMvYjKGM/kjL28SnjvBPKOK+HMubVKGOenjL25yhjX5syzsOg
jPOwKGPekzL2UShjH5Uyzj+gjPNlKON8JMqYD6SM/QXK2FekjP14yjh/hDLO
H6OM+VrK2P+hjP1fyjhvgjLO86GM86goYx6TMvZFKGM/lDLOI6CM814o47w3
yphnpox9K8rYt6aM8z0o4/wkyjj/izLmXyljP4cy9nEp4/wHyjhfhzLO16OM
+XHK2G+jjP12yjhPhTLOq6KM89YoY96YMvahKGP/mTLO26CM84wo4zxDypjX
p4x9Qso4T4Ayzq+hjPPBKON8O8qY76aM/TPK2DenjPNNKOP8KMo4P5Iy9iMo
Y3+TMs5voIzzgijjPDbKmFenjH06ytiXp4zzWSjjPEPKmOenjH1DyjhfgDLO
s6GM88Io47xQytiHoYx9Xco4r4MyzoeijPOfKGOenzL2DSlj/58yzu+jjH0H
ytjHpIzzFSjjPB/KOP+SMvY/KGM/lTLOo6CM848oYx+CMvY1KeO8BMo4v44y
9kUoY5+VMs6foIzzjihjH4My9kUp47wFyjiflzL20ShjX54yzsehjH0Rythn
pYzz3ChjP4cy9ocp4zwPytgPoYz9Vco4z5My9p8oYz+bMvY9KOM8FsrYp6GM
fV/K2NegjPPFKGOfiTL2rSljH4UyzjuhjP0cytgfpox9FMo4b5gy9u0o4zwA
ytj/oYzzgShj/4oy9sMpY3+HMs67o4z9N8rYz6eM/SXKOD+HMva7KGP/nDLO
Q6WM/UPKOB+BMs4zooz9NsrYv6eM8/coYz+QMs4voIzzfyhjH44y9vUp47x5
ytivpozzXyjjvDfK2H+kjPMZKON8UsrYN6WM8zAo43wqyjhfmjL2cSnjvBDK
OP+LMvY3KeN8Cco4r5Iy9mMp4/wOyjgfizLOj6eM/WnKON+FMs5zo4x9Wco4
z4Myzh+ljH1kyjgvhfL/AaMlksk=
           "], {{{
              EdgeForm[], 
              GrayLevel[0.5], 
              GraphicsGroupBox[{
                
                PolygonBox[{{501, 1609, 691}, {204, 1391, 689}, {690, 1392, 
                 208}}], 
                PolygonBox[CompressedData["
1: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
OQv+3yL8H9Dl9U8=
                 "]]}]}}, {{}, {}, 
             TagBox[{
               Directive[
                Opacity[1.], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               LineBox[CompressedData["
1:eJwl01WUVmUYhuEfDCykO4eOSVK6uweYIiVUDDAQTm0MYOhuTFIMuhsGlUaQ
UMFukVMW17s8uL69n/v8TRo1IXN8oUQiscoT3zKFE4lpfoqxxs4imbb6Zq0F
Z+2XkBJlPdO14qy1s0mhnb5Fa8k5+2Xuopyer5VgnZ1DKu31rVorztuvcDfl
9RlaSdbbuaTRQd+mteaC/Sr3UEGfqZVig51HOh317VobvrZf414q6rO00my0
h5BBJ32H1paL9usUoZI+WyvDx/ZQGtFZ36m145L9BvdRWZ+jlWWTPYzGdNF3
ae35xp7C/VTR52rl+MQeThO66ru1Dly23+QBqurztPJ8ao+gKd30PVpHrthv
8SDV9PlaBT6zR9KM7vperRNX7bd5iOr6Aq0in9uP0pwe+j6tM9fsdyhKkr5Q
q8RmexSP0FPfr3XhW3sqD1NDX6RVZos9mhb00g9oXfnOnkYxauqLtSpstcfQ
kt76Qa0b39vTKU4tfYlWlW32WFrRRz+kdee6nU8JautLtWpstx+jNX31w1oP
btgzKEkdfZlWnR3247Shn35E68kP9kxKUVdfriWx034ibov++lGtFz/asyhN
PX2FVoNd9ri4LQbox7Te/GTPjtulvr5Sq8lu+8m4LTL141offrbnxO3SoPD/
t1+LPfZTcVsM1Au0vvxiz43bpaG+WqvNXvvpuC0G6Se0fvxqz4vbJVl/V6vD
PvuZuC0G619o/fnNnh+3S4r+nlaX/fb4uC2y9C+1AfxuL4jbJVV/X6vHAXtC
3BbZ+ldaJn/YC+N2SdM/0Opz0H42bosc/aQ2kD/tRXG7pOsfag04ZD8Xt0Wu
fkobxF/24rhdMvSPtIYctp+P2yJPP60N5m97SdwujfQ1WjJH7Bfithiin9Gy
+MdeGrdLY32tlsJRe2LcFkP1s1o2/9rL4nZpoq/TUjlmvxi3xTD9nJbDTXt5
3C5N9fVaGsftSXFbDNfPa7n8Z6+I26WZvkFLp8CeHDegXbNHcztujRHaBTuP
W/bKuGWa6xu1DE7Ym+w77FW3uQ==
                "], VertexColors -> Automatic], 
               LineBox[CompressedData["
1:eJwVzssqxGEAhvHPKUIWXIEdN8CCqxj2DiHnMcqMMjPUKIeIJAs2lMyGlHEh
WGODBYUFIhS/b/H0vO/7ff9Dc38yMVkWQkjirDyEC57hZ2MaWX1Mv5OHUYGE
bcB2LffgW5/T3+QcjvSU/ihPoQ4F/YdX0OK8Qy/JbViS//jSnpZf5Ay25Xrk
7ON8bzvgEd7gapygUp/nTy5ygXe5Eafo8vwg39j3uZfX4nM4jv/lPMvv9kPO
8w43oOhsmp9sKWzJtfG/5EX+5VXsyU1odb+Tz23tWJYDrijDr7ZZ5PUJ/UEe
xaZcgyp5gb/i+9Ht3pB+K/dhPd6J37Xn+MNW4n8QFDyv
                "], VertexColors -> Automatic]}, 
              Annotation[#, "Charting`Private`Tag$45111#1"]& ]}}, 
           VertexColors -> {
             RGBColor[1, 1, 0][0., 0.9999303963040612], 
             RGBColor[1, 1, 0][0.00014246859560939517`, 0.9999085206583611], 
             RGBColor[1, 1, 0][0.00032047114265961856`, 0.999877013091071], 
             RGBColor[1, 1, 0][0.0005121320924173614, 0.999837901622065], 
             RGBColor[1, 1, 0][0.0007274812082977204, 0.999787540354233], 
             RGBColor[1, 1, 0][0.000996423455026975, 0.9997151122198938], 
             RGBColor[1, 1, 0][0.001285558970346049, 0.9996254352718362], 
             RGBColor[1, 1, 0][0.0016469093473960095`, 0.9994961568749805], 
             RGBColor[1, 1, 0][0.002057746121224414, 0.999325956542991], 
             RGBColor[1, 1, 0][0.0024987511293020083`, 0.9991157675706719], 
             RGBColor[1, 1, 0][0.00304965667257974, 0.998813215288649], 
             RGBColor[1, 1, 0][0.003642487697689092, 0.9984380341364899], 
             RGBColor[1, 1, 0][0.0043082884728474794`, 0.9979553804080091], 
             RGBColor[1, 1, 0][0.005139646749173411, 0.9972616982878169], 
             RGBColor[1, 1, 0][0.006032902430947244, 0.9964037663625122], 
             RGBColor[1, 1, 0][0.00714906776246441, 0.9951678845045383], 
             RGBColor[1, 1, 0][0.008417527422073415, 0.9935425410777818], 
             RGBColor[1, 1, 0][0.009778328935536445, 0.9915378950827083], 
             RGBColor[1, 1, 0][0.011477963287960852`, 0.9886551360285215], 
             RGBColor[1, 1, 0][0.013305874869516732`, 0.9850857582594084], 
             RGBColor[1, 1, 0][0.015590571089221216`, 0.9799423725685147], 
             RGBColor[1, 1, 0][0.018188865015324598`, 0.9731746639045374], 
             RGBColor[1, 1, 0][0.02097896985068027, 0.9648232233557525], 
             RGBColor[1, 1, 0][0.02446474584285437, 0.9528198705974871], 
             RGBColor[1, 1, 0][0.028217153959443495`, 0.9379623778424799], 
             RGBColor[1, 1, 0][0.03243261076180668, 0.918897982494379], 
             RGBColor[1, 1, 0][0.03769681837065959, 0.8916049679092029], 
             RGBColor[1, 1, 0][0.043355016254584586`, 0.8580185102535389], 
             RGBColor[1, 1, 0][0.050425949684588314`, 0.8099862774208242], 
             RGBColor[1, 1, 0][0.05846387502467105, 0.7474422910454206], 
             RGBColor[1, 1, 0][0.06709009281511735, 0.6712786803806092], 
             RGBColor[1, 1, 0][0.07786531236434642, 0.5636794065554604], 
             RGBColor[1, 1, 0][0.08945796725586729, 0.43355051888633256`], 
             RGBColor[1, 1, 0][0.10247528015070288`, 0.2714020369207014], 
             RGBColor[1, 1, 0][0.11872844407418796`, 0.04843201983961502], 
             RGBColor[1, 1, 0][0., 0.9999303963040612], 
             RGBColor[1, 1, 0][2.080280563170916*^-6, 0.9999300982615583], 
             RGBColor[1, 1, 0][0.18149464123305048`, 0.], 
             RGBColor[1, 1, 0][2.080280563170916*^-6, 0.9999300982615583], 
             RGBColor[1, 1, 0][0.6470410123528242, 0.8143749896898111], 
             RGBColor[1, 1, 0][0.7490319761469832, 0.8114952360702252], 
             RGBColor[1, 1, 0][4.164988226356349*^-6, 0.9999297989491778], 
             RGBColor[1, 1, 0][1.0000000000000002`, 0.8390485803649089], 
             RGBColor[1, 1, 0][0.00006881227958668778, 0.9999202013993405], 
             RGBColor[1, 1, 0][0.00022818944253310685`, 0.9998939265886347], 
             RGBColor[1, 1, 0][0.00041300335627327136`, 0.9998588018543111], 
             RGBColor[1, 1, 0][0.0006161733828378156, 0.9998144183399591], 
             RGBColor[1, 1, 0][0.0008570306125958455, 0.9997539735312251], 
             RGBColor[1, 1, 0][0.0011360527798871102`, 0.9996733333546349], 
             RGBColor[1, 1, 0][0.001459546029111701, 0.9995655746953576], 
             RGBColor[1, 1, 0][0.0018448622290096301`, 0.9994172334648814], 
             RGBColor[1, 1, 0][0.0022707730821955622`, 0.9992279787545969], 
             RGBColor[1, 1, 0][0.002764078314423633, 0.9989755960850112], 
             RGBColor[1, 1, 0][0.0033358994294127938`, 0.9986384822734452], 
             RGBColor[1, 1, 0][0.0039641877791439266`, 0.9982129222737026], 
             RGBColor[1, 1, 0][0.004708794426163632, 0.9976338155296537], 
             RGBColor[1, 1, 0][0.00557106174818314, 0.9968619040930232], 
             RGBColor[1, 1, 0][0.006570381233403678, 0.9958313558831368], 
             RGBColor[1, 1, 0][0.007760310239120928, 0.9944139847438848], 
             RGBColor[1, 1, 0][0.009074927995073494, 0.9926078133313042], 
             RGBColor[1, 1, 0][0.01059699063766246, 0.9902018689832535], 
             RGBColor[1, 1, 0][0.01236064276437406, 0.9869921585600193], 
             RGBColor[1, 1, 0][0.014405866722039052`, 0.9827039032499507], 
             RGBColor[1, 1, 0][0.01684242423497118, 0.9768035075765449], 
             RGBColor[1, 1, 0][0.019536537078385346`, 0.9692806478211516], 
             RGBColor[1, 1, 0][0.022657683646702554`, 0.9592595870807591], 
             RGBColor[1, 1, 0][0.026276445871668167`, 0.9458961959489549], 
             RGBColor[1, 1, 0][0.030253840427646103`, 0.9290635444914929], 
             RGBColor[1, 1, 0][0.034968477017560395`, 0.9062305827837929], 
             RGBColor[1, 1, 0][0.040429381688415963`, 0.8759297613324845], 
             RGBColor[1, 1, 0][0.04675974199437134, 0.8357210367495512], 
             RGBColor[1, 1, 0][0.05429900256063813, 0.7808870184462113], 
             RGBColor[1, 1, 0][0.06263092174294305, 0.7117931378348933], 
             RGBColor[1, 1, 0][0.07227985768708467, 0.6211309291944853], 
             RGBColor[1, 1, 0][0.0834629321569043, 0.5026250348645248], 
             RGBColor[1, 1, 0][0.09574788715069626, 0.3571954988438048], 
             RGBColor[1, 1, 0][0.1103055298174066, 0.16658026590181158`], 
             RGBColor[1, 1, 0][4.164988226356349*^-6, 0.9999297989491778], 
             RGBColor[1, 1, 0][8.347722558530684*^-6, 0.9999291964931193], 
             RGBColor[1, 1, 0][8.347722558530684*^-6, 0.9999291964931193], 
             RGBColor[1, 1, 0][0.000016766732311641508`, 0.9999279761028569], 
             RGBColor[1, 1, 0][0.6048274664867156, 0.40277434571306764`], 
             RGBColor[1, 1, 0][0.6961738645170944, 0.9997979306448214], 
             RGBColor[1, 1, 0][0.8019639962066019, 0.26257678690909114`], 
             RGBColor[1, 1, 0][0.9266266551924798, 0.03534263639373088], 
             RGBColor[1, 1, 0][0.000033821053690435426`, 0.9999254721664199], 
             RGBColor[1, 1, 0][0.00018453887162424033`, 0.9999014925741635], 
             RGBColor[1, 1, 0][0.00036594082783837005`, 0.9998682208592008], 
             RGBColor[1, 1, 0][0.0005632748201566941, 0.9998265561670682], 
             RGBColor[1, 1, 0][0.0007910701178491567, 0.9997713711991807], 
             RGBColor[1, 1, 0][0.0010650453353905737`, 0.9996949363299091], 
             RGBColor[1, 1, 0][0.0013709418096529283`, 0.999596612843383], 
             RGBColor[1, 1, 0][0.0017440866471785524`, 0.9994581291806345], 
             RGBColor[1, 1, 0][0.0021624535563766045`, 0.9992786282645684], 
             RGBColor[1, 1, 0][0.00262897555456695, 0.9990482577136194], 
             RGBColor[1, 1, 0][0.003190321418807493, 0.9987288464315409], 
             RGBColor[1, 1, 0][0.003800631103220837, 0.998329263941285], 
             RGBColor[1, 1, 0][0.004504885398541553, 0.9978004644974076], 
             RGBColor[1, 1, 0][0.005351679515341492, 0.9970686063220277], 
             RGBColor[1, 1, 0][0.0062966793433818944`, 0.9961281200034564], 
             RGBColor[1, 1, 0][0.007449148633732874, 0.9948045839137046], 
             RGBColor[1, 1, 0][0.008740670448461059, 0.9930909558015607], 
             RGBColor[1, 1, 0][0.01018015394586242, 0.9908943312088431], 
             RGBColor[1, 1, 0][0.011911749310718601`, 0.9878520377687566], 
             RGBColor[1, 1, 0][0.013845670848396495`, 0.9839388573655318], 
             RGBColor[1, 1, 0][0.01620510084870066, 0.9784298456566827], 
             RGBColor[1, 1, 0][0.018851254952850165`, 0.9712934313043751], 
             RGBColor[1, 1, 0][0.021802868690860622`, 0.9621431152533736], 
             RGBColor[1, 1, 0][0.025355019659090008`, 0.9494759353486658], 
             RGBColor[1, 1, 0][0.029218330458385122`, 0.9336610792121905], 
             RGBColor[1, 1, 0][0.033677356433178346`, 0.9127920897268735], 
             RGBColor[1, 1, 0][0.03903978284085136, 0.8840289814296179], 
             RGBColor[1, 1, 0][0.04502589180711803, 0.8472701591814135], 
             RGBColor[1, 1, 0][0.05232731140889949, 0.7959443364932537], 
             RGBColor[1, 1, 0][0.06051210930739928, 0.7301899401440978], 
             RGBColor[1, 1, 0][0.069637314277267, 0.6470619742265493], 
             RGBColor[1, 1, 0][0.08061613425034772, 0.5341013053379343], 
             RGBColor[1, 1, 0][0.09255006590607766, 0.3964971517446543], 
             RGBColor[1, 1, 0][0.10631899957331704`, 0.2205855697062757], 
             RGBColor[1, 1, 0][0.000016766732311641508`, 0.9999279761028569], 
             RGBColor[1, 1, 0][0.000033821053690435426`, 0.9999254721664199], 
             RGBColor[1, 1, 0][0.000033821053690435426`, 0.9999254721664199], 
             RGBColor[1, 1, 0][0.5098995542202184, 0.], 
             RGBColor[1, 1, 0][0.584763383194724, 0.141914471730482], 
             RGBColor[1, 1, 0][0.6711586395838732, 0.9481476549904354], 
             RGBColor[1, 1, 0][0.775046810806224, 0.5808387837601585], 
             RGBColor[1, 1, 0][0.8919822227091709, 0.], 
             RGBColor[1, 1, 0][0.00010501416439280416`, 0.9999145596025829], 
             RGBColor[1, 1, 0][0.00027347966929552707`, 0.999885781533805], 
             RGBColor[1, 1, 0][0.0004617145266712775, 0.9998487113967551], 
             RGBColor[1, 1, 0][0.0006708880618825273, 0.999801432803043], 
             RGBColor[1, 1, 0][0.0009254511421806278, 0.9997352540138315], 
             RGBColor[1, 1, 0][0.0012095287200276743`, 0.9996502023594657], 
             RGBColor[1, 1, 0][0.0015514931670802805`, 0.9995321505088306], 
             RGBColor[1, 1, 0][0.0019493693301136717`, 0.9993732534477042], 
             RGBColor[1, 1, 0][0.002382829304913562, 0.9991737749820946], 
             RGBColor[1, 1, 0][0.0029042421560666856`, 0.9988973896229817], 
             RGBColor[1, 1, 0][0.0034865623192991014`, 0.9985416968953873], 
             RGBColor[1, 1, 0][0.00413334302244391, 0.9980884822646122], 
             RGBColor[1, 1, 0][0.004920287517416154, 0.9974545452660053], 
             RGBColor[1, 1, 0][0.005798048194459249, 0.996640632843701], 
             RGBColor[1, 1, 0][0.006854381542263369, 0.9955118574240694], 
             RGBColor[1, 1, 0][0.008082961743891616, 0.993994037962144], 
             RGBColor[1, 1, 0][0.0094206823463784, 0.9920909115398087], 
             RGBColor[1, 1, 0][0.011029399828642992`, 0.9894568000750678], 
             RGBColor[1, 1, 0][0.012825169794207055`, 0.9860714938806489], 
             RGBColor[1, 1, 0][0.014987233440437769`, 0.9813741582029797], 
             RGBColor[1, 1, 0][0.017503386690282344`, 0.9750548329711735], 
             RGBColor[1, 1, 0][0.020245502545663274`, 0.9671271691532193], 
             RGBColor[1, 1, 0][0.02354457481961782, 0.9561573222777804], 
             RGBColor[1, 1, 0][0.02723011456296599, 0.9420642010806224], 
             RGBColor[1, 1, 0][0.03132486126919849, 0.9241496586603655], 
             RGBColor[1, 1, 0][0.03630770028360965, 0.8991801070408401], 
             RGBColor[1, 1, 0][0.0418672342898903, 0.8672720888954208], 
             RGBColor[1, 1, 0][0.0485589403052689, 0.8233135454979053], 
             RGBColor[1, 1, 0][0.056343624553464214`, 0.7647443984114881], 
             RGBColor[1, 1, 0][0.06482274431659657, 0.6921809256915923], 
             RGBColor[1, 1, 0][0.07502129017598884, 0.5933752639660369], 
             RGBColor[1, 1, 0][0.08640905468196373, 0.4691446025232943], 
             RGBColor[1, 1, 0][0.09905504577315444, 0.3155346323518009], 
             RGBColor[1, 1, 0][0.11444017692342062`, 0.10924254714783034`], 
             RGBColor[1, 1, 0][0.00006881227958668778, 0.9999202013993405], 
             RGBColor[1, 1, 0][0.00006881227958668778, 0.9999202013993405], 
             RGBColor[1, 1, 0][0.1753147235789448, 0.], 
             RGBColor[1, 1, 0][0.00007103900137961628, 0.9999198599191763], 
             RGBColor[1, 1, 0][0.6255788288093339, 0.6310346610532886], 
             RGBColor[1, 1, 0][0.7221200934916436, 0.9570033933685981], 
             RGBColor[1, 1, 0][0.00007103900137961628, 0.9999198599191763], 
             RGBColor[1, 1, 0][0.9626151983318483, 0.5005137344188482], 
             RGBColor[1, 1, 0][0.000016766732311641508`, 0.9999279761028569], 
             RGBColor[1, 1, 0][0.0001633098219415036, 0.9999050713977664], 
             RGBColor[1, 1, 0][0.0003430102927310144, 0.9998726926477995], 
             RGBColor[1, 1, 0][0.0005374876655591429, 0.9998323246264157], 
             RGBColor[1, 1, 0][0.0007589846174407672, 0.999779603770327], 
             RGBColor[1, 1, 0][0.001030441272964503, 0.9997051966178699], 
             RGBColor[1, 1, 0][0.001327855139108151, 0.9996112908629416], 
             RGBColor[1, 1, 0][0.0016950563515028365`, 0.9994774886181312], 
             RGBColor[1, 1, 0][0.0021096559513975655`, 0.999302693602009], 
             RGBColor[1, 1, 0][0.0025632647112136513`, 0.9990826331591033], 
             RGBColor[1, 1, 0][0.0031193853850039156`, 0.9987717547784066], 
             RGBColor[1, 1, 0][0.003720894080742576, 0.9983845639086092], 
             RGBColor[1, 1, 0][0.004405689535444386, 0.9978793360628705], 
             RGBColor[1, 1, 0][0.00524476003383047, 0.9971667961774383], 
             RGBColor[1, 1, 0][0.006163573070227626, 0.9962684864495037], 
             RGBColor[1, 1, 0][0.007297748103821082, 0.9949895241649716], 
             RGBColor[1, 1, 0][0.008577733011453145, 0.9933205611654121], 
             RGBColor[1, 1, 0][0.009977399234025701, 0.99122200406762], 
             RGBColor[1, 1, 0][0.01169300005578177, 0.9882604447019822], 
             RGBColor[1, 1, 0][0.013573269947654234`, 0.9845229123624889], 
             RGBColor[1, 1, 0][0.01589503841175795, 0.9791998261889093], 
             RGBColor[1, 1, 0][0.018517246864823735`, 0.9722499433689863], 
             RGBColor[1, 1, 0][0.021387125605633443`, 0.9635076817076477], 
             RGBColor[1, 1, 0][0.02490605537713915, 0.9511763921940557], 
             RGBColor[1, 1, 0][0.028713522572442318`, 0.9358475504415233], 
             RGBColor[1, 1, 0][0.03304929226822398, 0.9158999907195337], 
             RGBColor[1, 1, 0][0.03836257037506468, 0.8878802617649674], 
             RGBColor[1, 1, 0][0.04418272713985971, 0.8527409747927382], 
             RGBColor[1, 1, 0][0.0513679982926321, 0.8030880204644568], 
             RGBColor[1, 1, 0][0.0594793186994914, 0.7389548778989704], 
             RGBColor[1, 1, 0][0.06835200616690433, 0.6593779341812729], 
             RGBColor[1, 1, 0][0.07922893113700583, 0.5491211456667243], 
             RGBColor[1, 1, 0][0.09099102246541649, 0.41529801607466055`], 
             RGBColor[1, 1, 0][0.10437961263084106`, 0.24638336112457437`], 
             RGBColor[1, 1, 0][0.1207831002954462, 0.01883724348220227], 
             RGBColor[1, 1, 0][0.0000732704619180083, 0.9999195169840608], 
             RGBColor[1, 1, 0][0.0000732704619180083, 0.9999195169840608], 
             RGBColor[1, 1, 0][0.501198656982282, 0.], 
             RGBColor[1, 1, 0][0.5749819281648693, 0.0029608257226592456`], 
             RGBColor[1, 1, 0][0.6589896668163061, 0.8906445254160352], 
             RGBColor[1, 1, 0][0.7619285144139343, 0.7075186744051072], 
             RGBColor[1, 1, 0][0.8725779759708207, 0.], 
             RGBColor[1, 1, 0][0.0000867593050483063, 0.9999174284704013], 
             RGBColor[1, 1, 0][0.00025062580273799503`, 0.9998899291382131], 
             RGBColor[1, 1, 0][0.00043714929824401175`, 0.9998538434714178], 
             RGBColor[1, 1, 0][0.0006432998602036351, 0.9998080351417125], 
             RGBColor[1, 1, 0][0.0008909277174919429, 0.9997447851080984], 
             RGBColor[1, 1, 0][0.0011724768933221625`, 0.9996619654410309], 
             RGBColor[1, 1, 0][0.0015050939600107127`, 0.9995491720017422], 
             RGBColor[1, 1, 0][0.001896640821719125, 0.9993956431344648], 
             RGBColor[1, 1, 0][0.002326326152354159, 0.9992013363410424], 
             RGBColor[1, 1, 0][0.0028335159138639285`, 0.9989372116695667], 
             RGBColor[1, 1, 0][0.0034105843067797764`, 0.9985909200137518], 
             RGBColor[1, 1, 0][0.004048053753555497, 0.9981517488933148], 
             RGBColor[1, 1, 0][0.0048135755754475035`, 0.9975458161413209], 
             RGBColor[1, 1, 0][0.0056835881815825925`, 0.9967531520992481], 
             RGBColor[1, 1, 0][0.006711070202623893, 0.9956745542010749], 
             RGBColor[1, 1, 0][0.007920173597507513, 0.9942078137334318], 
             RGBColor[1, 1, 0][0.00924634366896447, 0.9923537258479662], 
             RGBColor[1, 1, 0][0.010811212810264818`, 0.9898361528389038], 
             RGBColor[1, 1, 0][0.012590918489778247`, 0.9865396854391596], 
             RGBColor[1, 1, 0][0.01469385441586253, 0.9820513202617092], 
             RGBColor[1, 1, 0][0.01716989652734048, 0.9759450193606583], 
             RGBColor[1, 1, 0][0.019888008890057835`, 0.9682220909427947], 
             RGBColor[1, 1, 0][0.023097045518074177`, 0.957736797406074], 
             RGBColor[1, 1, 0][0.026749180302742606`, 0.9440128016369019], 
             RGBColor[1, 1, 0][0.030784836840542555`, 0.9266474534497067], 
             RGBColor[1, 1, 0][0.03563196534303195, 0.9027686403817683], 
             RGBColor[1, 1, 0][0.04114217288484567, 0.8716730187304036], 
             RGBColor[1, 1, 0][0.04765102083583893, 0.8296283336130111], 
             RGBColor[1, 1, 0][0.05531203089590415, 0.7729559058931966], 
             RGBColor[1, 1, 0][0.06371755152329234, 0.7021435350924399], 
             RGBColor[1, 1, 0][0.0736379846941692, 0.6074882737632671], 
             RGBColor[1, 1, 0][0.08492336403807033, 0.4861421031481543], 
             RGBColor[1, 1, 0][0.09738756858667517, 0.336666969638933], 
             RGBColor[1, 1, 0][0.11235399951880243`, 0.1383368309334292], 
             RGBColor[1, 1, 0][0.00007774763959124096, 0.9999188267241556], 
             RGBColor[1, 1, 0][0.00007774763959124096, 0.9999188267241556], 
             RGBColor[1, 1, 0][0.0000867593050483063, 0.9999174284704013], 
             RGBColor[1, 1, 0][0.0000867593050483063, 0.9999174284704013], 
             RGBColor[1, 1, 0][0.6151157849653658, 0.5217415161834034], 
             RGBColor[1, 1, 0][0.7090284675705889, 0.990838669538635], 
             RGBColor[1, 1, 0][0.8157707093821833, 0.07371985312110524], 
             RGBColor[1, 1, 0][0.9444497002072438, 0.2799818885791767], 
             RGBColor[1, 1, 0][0.10829408625165464`, 0.19399054804087934`], 
             RGBColor[1, 1, 0][0.00010501416439280416`, 0.9999145596025829], 
             RGBColor[1, 1, 0][0.00010501416439280416`, 0.9999145596025829], 
             RGBColor[1, 1, 0][0.00014246859560939517`, 0.9999085206583611], 
             RGBColor[1, 1, 0][0.518751206544934, 0.], 
             RGBColor[1, 1, 0][0.5947109555844735, 0.2756668195753422], 
             RGBColor[1, 1, 0][0.6835519930506082, 0.9850829784833551], 
             RGBColor[1, 1, 0][0.7883906784917828, 0.43214833838055466`], 
             RGBColor[1, 1, 0][0.9091396074154583, 0.], 
             RGBColor[1, 1, 0][0.00014246859560939517`, 0.9999085206583611], 
             RGBColor[1, 1, 0][0.0001450527832270988, 0.9999080964242876], 
             RGBColor[1, 1, 0][0.17837806729611455`, 0.], 
             RGBColor[1, 1, 0][0.0001450527832270988, 0.9999080964242876], 
             RGBColor[1, 1, 0][0.6362195653600128, 0.7290984362711296], 
             RGBColor[1, 1, 0][0.7354531126866851, 0.8973983102565259], 
             RGBColor[1, 1, 0][0.00014764293344234254`, 0.9999076702302855], 
             RGBColor[1, 1, 0][0.9811297294819195, 0.689324710933815], 
             RGBColor[1, 1, 0][8.347722558530684*^-6, 0.9999291964931193], 
             RGBColor[1, 1, 0][0.00015284117672813646`, 0.9999068119262334], 
             RGBColor[1, 1, 0][0.0003316922147783155, 0.9998748714633381], 
             RGBColor[1, 1, 0][0.0005247563856057171, 0.9998351366550022], 
             RGBColor[1, 1, 0][0.0007431608160067857, 0.9997836083864746], 
             RGBColor[1, 1, 0][0.0010133597081530788`, 0.999710196771675], 
             RGBColor[1, 1, 0][0.0013066091547462707`, 0.9996184285395293], 
             RGBColor[1, 1, 0][0.001670873439326572, 0.9994869075809538], 
             RGBColor[1, 1, 0][0.002083591003371155, 0.9993144236788947], 
             RGBColor[1, 1, 0][0.002530859635371571, 0.9990993526557264], 
             RGBColor[1, 1, 0][0.0030843714061642596`, 0.998792662921141], 
             RGBColor[1, 1, 0][0.003681525955890367, 0.9984115239095172], 
             RGBColor[1, 1, 0][0.004356766697619645, 0.9979177052197423], 
             RGBColor[1, 1, 0][0.005191979536090577, 0.9972146512361474], 
             RGBColor[1, 1, 0][0.006097936101158928, 0.9963367505509094], 
             RGBColor[1, 1, 0][0.007223070984914511, 0.995079512006997], 
             RGBColor[1, 1, 0][0.00849729161663598, 0.9934324882939938], 
             RGBColor[1, 1, 0][0.009877407746410608, 0.9913813955082358], 
             RGBColor[1, 1, 0][0.011585021574146327`, 0.988459475721609], 
             RGBColor[1, 1, 0][0.013438952470146632`, 0.9848069377831202], 
             RGBColor[1, 1, 0][0.015742111714561913`, 0.9795744669616622], 
             RGBColor[1, 1, 0][0.018352358621231822`, 0.9727162110430455], 
             RGBColor[1, 1, 0][0.021182108025967275`, 0.9641714697959342], 
             RGBColor[1, 1, 0][0.0246844519761317, 0.9520051339546381], 
             RGBColor[1, 1, 0][0.02846429223044764, 0.936913772868008], 
             RGBColor[1, 1, 0][0.03273954166440713, 0.9174124830096738], 
             RGBColor[1, 1, 0][0.038028274014353165`, 0.8897581791096026], 
             RGBColor[1, 1, 0][0.043766957799878436`, 0.8554034826902882], 
             RGBColor[1, 1, 0][0.05089483547638247, 0.8065673150538494], 
             RGBColor[1, 1, 0][0.058969446821249875`, 0.7432327504214262], 
             RGBColor[1, 1, 0][0.06771815194350186, 0.6653793914031361], 
             RGBColor[1, 1, 0][0.07854419892960308, 0.5564571762445509], 
             RGBColor[1, 1, 0][0.09022127357784845, 0.4244919635917073], 
             RGBColor[1, 1, 0][0.10342310445448676`, 0.2589889543788165], 
             RGBColor[1, 1, 0][0.11975140130187634`, 0.03373362645210234], 
             RGBColor[1, 1, 0][0.00014764293344234254`, 0.9999076702302855], 
             RGBColor[1, 1, 0][0.00015284117672813646`, 0.9999068119262334], 
             RGBColor[1, 1, 0][0.49690393744325606`, 0.], 
             RGBColor[1, 1, 0][0.00015284117672813646`, 0.9999068119262334], 
             RGBColor[1, 1, 0][0.6529880508075023, 0.8547384412955479], 
             RGBColor[1, 1, 0][0.7554527613069721, 0.762372030196072], 
             RGBColor[1, 1, 0][0.0001633098219415036, 0.9999050713977664], 
             RGBColor[1, 1, 0][0.00007774763959124096, 0.9999188267241556], 
             RGBColor[1, 1, 0][0.00023935591433884565`, 0.9998919462882341], 
             RGBColor[1, 1, 0][0.00042502436662056927`, 0.9998563440021968], 
             RGBColor[1, 1, 0][0.0006296793920105701, 0.999811253673053], 
             RGBColor[1, 1, 0][0.0008739015901091191, 0.9997494213730156], 
             RGBColor[1, 1, 0][0.0011541870413545232`, 0.9996676979535457], 
             RGBColor[1, 1, 0][0.001482214567954205, 0.9995574492730656], 
             RGBColor[1, 1, 0][0.0018706338627539093`, 0.9994065364114361], 
             RGBColor[1, 1, 0][0.002298431861782189, 0.9992147704769697], 
             RGBColor[1, 1, 0][0.0027986375113713095`, 0.9989565802933126], 
             RGBColor[1, 1, 0][0.0033730816106183714`, 0.9986149052042775], 
             RGBColor[1, 1, 0][0.004005944348390934, 0.9981825928578163], 
             RGBColor[1, 1, 0][0.004760945850095126, 0.997590217345472], 
             RGBColor[1, 1, 0][0.005627085321995484, 0.9968079910246701], 
             RGBColor[1, 1, 0][0.006640400941557524, 0.9957536784048338], 
             RGBColor[1, 1, 0][0.007839879626467991, 0.9943118327141832], 
             RGBColor[1, 1, 0][0.009160273538985231, 0.992481842127961], 
             RGBColor[1, 1, 0][0.010703610652227151`, 0.9900206844883209], 
             RGBColor[1, 1, 0][0.01247528792371918, 0.9867678534824658], 
             RGBColor[1, 1, 0][0.014549192887845518`, 0.982380627793384], 
             RGBColor[1, 1, 0][0.01700541498075608, 0.9763781545528755], 
             RGBColor[1, 1, 0][0.019711526633845632`, 0.9687558390046986], 
             RGBColor[1, 1, 0][0.02287635303395977, 0.9585051500491335], 
             RGBColor[1, 1, 0][0.026511796902746076`, 0.9449625129119635], 
             RGBColor[1, 1, 0][0.03051821962479113, 0.9278655451801991], 
             RGBColor[1, 1, 0][0.03529870432044313, 0.904515157890205], 
             RGBColor[1, 1, 0][0.04078425657165843, 0.8738191220516737], 
             RGBColor[1, 1, 0][0.04720332053099988, 0.8327019681308454], 
             RGBColor[1, 1, 0][0.054803217087399596`, 0.7769559342296457], 
             RGBColor[1, 1, 0][0.06317193586700509, 0.707006881175826], 
             RGBColor[1, 1, 0][0.07295580272173939, 0.6143674953941928], 
             RGBColor[1, 1, 0][0.08419001776431535, 0.49444703612612545`], 
             RGBColor[1, 1, 0][0.09656428254097435, 0.34700583127209605`], 
             RGBColor[1, 1, 0][0.11132509409454741`, 0.1525638038441947], 
             RGBColor[1, 1, 0][0.0001633098219415036, 0.9999050713977664], 
             RGBColor[1, 1, 0][0.00018453887162424033`, 0.9999014925741635], 
             RGBColor[1, 1, 0][0.00018453887162424033`, 0.9999014925741635], 
             RGBColor[1, 1, 0][0.00022818944253310685`, 0.9998939265886347], 
             RGBColor[1, 1, 0][0.6099499685688039, 0.463370615923056], 
             RGBColor[1, 1, 0][0.7025718082280273, 0.9983592417169843], 
             RGBColor[1, 1, 0][0.8088379291358093, 0.17044036524123193`], 
             RGBColor[1, 1, 0][0.9354957774327876, 0.16019764235603998`], 
             RGBColor[1, 1, 0][0.10730203965446515`, 0.20738884212460393`], 
             RGBColor[1, 1, 0][0.00022818944253310685`, 0.9998939265886347], 
             RGBColor[1, 1, 0][0.00023097141722614424`, 0.9998934349311606], 
             RGBColor[1, 1, 0][0.00023097141722614424`, 0.9998934349311606], 
             RGBColor[1, 1, 0][0.5143063737958145, 0.], 
             RGBColor[1, 1, 0][0.5897162295110543, 0.2095296636380378], 
             RGBColor[1, 1, 0][0.6773270119202184, 0.9692936324593733], 
             RGBColor[1, 1, 0][0.7816903073662144, 0.5091848994828788], 
             RGBColor[1, 1, 0][0.9005200983728411, 0.], 
             RGBColor[1, 1, 0][0.0002337598108786071, 0.9998929410022734], 
             RGBColor[1, 1, 0][0.0002337598108786071, 0.9998929410022734], 
             RGBColor[1, 1, 0][0.1768397988494777, 0.], 
             RGBColor[1, 1, 0][0.00023935591433884565`, 0.9998919462882341], 
             RGBColor[1, 1, 0][0.6308767980789396, 0.681567770336615], 
             RGBColor[1, 1, 0][0.7287561526489493, 0.9304643389108734], 
             RGBColor[1, 1, 0][0.00023935591433884565`, 0.9998919462882341], 
             RGBColor[1, 1, 0][0.9718284186236636, 0.5993538528373926], 
             RGBColor[1, 1, 0][0.00025062580273799503`, 0.9998899291382131], 
             RGBColor[1, 1, 0][0.505530422721242, 0.], 
             RGBColor[1, 1, 0][0.5798520654822799, 0.07299995103316398], 
             RGBColor[1, 1, 0][0.6650463612519707, 0.9218574082933552], 
             RGBColor[1, 1, 0][0.7684597060450858, 0.6469831966797454], 
             RGBColor[1, 1, 0][0.8835252072935759, 0.], 
             RGBColor[1, 1, 0][0.00025062580273799503`, 0.9998899291382131], 
             RGBColor[1, 1, 0][0.17370866036007207`, 0.], 
             RGBColor[1, 1, 0][0.00027347966929552707`, 0.999885781533805], 
             RGBColor[1, 1, 0][0.6203252819290265, 0.5776942539950447], 
             RGBColor[1, 1, 0][0.7155443813937491, 0.9770942842029354], 
             RGBColor[1, 1, 0][0.00027347966929552707`, 0.999885781533805], 
             RGBColor[1, 1, 0][0.9534892343210696, 0.3937396061841896], 
             RGBColor[1, 1, 0][0.00032047114265961856`, 0.999877013091071], 
             RGBColor[1, 1, 0][0.00032047114265961856`, 0.999877013091071], 
             RGBColor[1, 1, 0][0.6898341024890062, 0.9953141333864374], 
             RGBColor[1, 1, 0][0.7951484110825854, 0.3498842022686861], 
             RGBColor[1, 1, 0][0.9178415303600524, 0.], 
             RGBColor[1, 1, 0][0.0003232673619831585, 0.9998764811355976], 
             RGBColor[1, 1, 0][0.1799296430508588, 0.], 
             RGBColor[1, 1, 0][0.0003232673619831585, 0.9998764811355976], 
             RGBColor[1, 1, 0][0.6416075094508688, 0.773431998511622], 
             RGBColor[1, 1, 0][0.7422115325084331, 0.8577511637280612], 
             RGBColor[1, 1, 0][0.00032606960512150847`, 0.9998759468857552], 
             RGBColor[1, 1, 0][0.9905199731688927, 0.7695153223764838], 
             RGBColor[1, 1, 0][4.164988226356349*^-6, 0.9999297989491778], 
             RGBColor[1, 1, 0][0.00014764293344234254`, 0.9999076702302855], 
             RGBColor[1, 1, 0][0.00032606960512150847`, 0.9998759468857552], 
             RGBColor[1, 1, 0][0.0005184309220348971, 0.9998365249716884], 
             RGBColor[1, 1, 0][0.0007353030703410032, 0.9997855833684697], 
             RGBColor[1, 1, 0][0.0010048734951366592`, 0.9997126649937272], 
             RGBColor[1, 1, 0][0.0012960597007215496`, 0.9996219481225458], 
             RGBColor[1, 1, 0][0.001658864165002744, 0.9994915532442619], 
             RGBColor[1, 1, 0][0.002070641170557814, 0.9993202145540216], 
             RGBColor[1, 1, 0][0.0025147684813371578`, 0.9991075978367872], 
             RGBColor[1, 1, 0][0.003066976794072401, 0.998802983196078], 
             RGBColor[1, 1, 0][0.003661965766751079, 0.9984248347729502], 
             RGBColor[1, 1, 0][0.004332472262008112, 0.9979366287704114], 
             RGBColor[1, 1, 0][0.005165757416894211, 0.9972382749051827], 
             RGBColor[1, 1, 0][0.006065344201470467, 0.9963704130573731], 
             RGBColor[1, 1, 0][0.0071859855180077745`, 0.9951238983508791], 
             RGBColor[1, 1, 0][0.008457325226767953, 0.993487747007194], 
             RGBColor[1, 1, 0][0.009827754778827292, 0.9914600034822274], 
             RGBColor[1, 1, 0][0.01153137789831597, 0.9885577236311155], 
             RGBColor[1, 1, 0][0.013372259403036633`, 0.9849469926532923], 
             RGBColor[1, 1, 0][0.015666168930768658`, 0.9797592540704908], 
             RGBColor[1, 1, 0][0.018270438228163124`, 0.9729464061290835], 
             RGBColor[1, 1, 0][0.021080305093280995`, 0.9644988372535719], 
             RGBColor[1, 1, 0][0.024574362769521827`, 0.9524142381635525], 
             RGBColor[1, 1, 0][0.028340462687110508`, 0.937440259449087], 
             RGBColor[1, 1, 0][0.03258572536021369, 0.9181585770229189], 
             RGBColor[1, 1, 0][0.03786219261641224, 0.8906854328267615], 
             RGBColor[1, 1, 0][0.043560510763080144`, 0.8567168797788155], 
             RGBColor[1, 1, 0][0.0506598603769675, 0.8082842745809465], 
             RGBColor[1, 1, 0][0.05871612568653823, 0.7453459973929065], 
             RGBColor[1, 1, 0][0.06740340131523848, 0.6683417058500166], 
             RGBColor[1, 1, 0][0.07820402807079463, 0.5600824175893502], 
             RGBColor[1, 1, 0][0.08983881847692712, 0.42903805965590086`], 
             RGBColor[1, 1, 0][0.10294811176278001`, 0.265219417646067], 
             RGBColor[1, 1, 0][0.1192388346114761, 0.04110746859539142], 
             RGBColor[1, 1, 0][0.00032606960512150847`, 0.9998759468857552], 
             RGBColor[1, 1, 0][0.0003316922147783155, 0.9998748714633381], 
             RGBColor[1, 1, 0][0.0003316922147783155, 0.9998748714633381], 
             RGBColor[1, 1, 0][0.650007740512033, 0.8350989338380612], 
             RGBColor[1, 1, 0][0.752235526988252, 0.7876519525757674], 
             RGBColor[1, 1, 0][0.0003430102927310144, 0.9998726926477995], 
             RGBColor[1, 1, 0][0.0000732704619180083, 0.9999195169840608], 
             RGBColor[1, 1, 0][0.0002337598108786071, 0.9998929410022734], 
             RGBColor[1, 1, 0][0.00041900092713561475`, 0.9998575782172671], 
             RGBColor[1, 1, 0][0.0006229121403526142, 0.9998128426828646], 
             RGBColor[1, 1, 0][0.0008654467962844146, 0.9997517078694469], 
             RGBColor[1, 1, 0][0.0011451005447981658`, 0.9996705276895467], 
             RGBColor[1, 1, 0][0.0014708540637524423`, 0.9995615307900388], 
             RGBColor[1, 1, 0][0.0018577187637672647`, 0.9994119092437035], 
             RGBColor[1, 1, 0][0.002284573157786784, 0.9992214026092716], 
             RGBColor[1, 1, 0][0.002781318195418523, 0.9989661318887613], 
             RGBColor[1, 1, 0][0.0033544506274012418`, 0.9986267443173229], 
             RGBColor[1, 1, 0][0.003985022144637169, 0.9981978213446401], 
             RGBColor[1, 1, 0][0.00473481062305849, 0.997612115901559], 
             RGBColor[1, 1, 0][0.005599013879275667, 0.9968350623083524], 
             RGBColor[1, 1, 0][0.006605310267804416, 0.9957926963212558], 
             RGBColor[1, 1, 0][0.007800004769893489, 0.9943631399916191], 
             RGBColor[1, 1, 0][0.00911751057622755, 0.9925450936084054], 
             RGBColor[1, 1, 0][0.010650178439222125`, 0.9901116913165092], 
             RGBColor[1, 1, 0][0.012417842694745735`, 0.9868804847882376], 
             RGBColor[1, 1, 0][0.01447736365776093, 0.9825430126000511], 
             RGBColor[1, 1, 0][0.016923734105151817`, 0.9765917950759878], 
             RGBColor[1, 1, 0][0.019623846060121193`, 0.969019351456997], 
             RGBColor[1, 1, 0][0.02276676661634011, 0.9588840922802327], 
             RGBColor[1, 1, 0][0.02639386843211262, 0.945431341122706], 
             RGBColor[1, 1, 0][0.030385751451742566`, 0.9284670358325317], 
             RGBColor[1, 1, 0][0.035133213185979804`, 0.9053767227301817], 
             RGBColor[1, 1, 0][0.040606440571766995`, 0.8748788387611512], 
             RGBColor[1, 1, 0][0.046981018421585405`, 0.8342182642982188], 
             RGBColor[1, 1, 0][0.05455053752101973, 0.7789300231137293], 
             RGBColor[1, 1, 0][0.06290085604663169, 0.7094095738332793], 
             RGBColor[1, 1, 0][0.0726170541633412, 0.6177635743545815], 
             RGBColor[1, 1, 0][0.08382569572856145, 0.49855179625399115`], 
             RGBColor[1, 1, 0][0.09615522712981242, 0.352119204735372], 
             RGBColor[1, 1, 0][0.11081414963107065`, 0.15959821031450924`], 
             RGBColor[1, 1, 0][0.0003430102927310144, 0.9998726926477995], 
             RGBColor[1, 1, 0][0.00036594082783837005`, 0.9998682208592008], 
             RGBColor[1, 1, 0][0.00036594082783837005`, 0.9998682208592008], 
             RGBColor[1, 1, 0][0.00041300335627327136`, 0.9998588018543111], 
             RGBColor[1, 1, 0][0.6073833260089775, 0.4333386711803458], 
             RGBColor[1, 1, 0][0.6993655304047309, 0.999829248128351], 
             RGBColor[1, 1, 0][0.8053936380758573, 0.2170976197511747], 
             RGBColor[1, 1, 0][0.10680939892734292`, 0.2140122607678023], 
             RGBColor[1, 1, 0][0.00041300335627327136`, 0.9998588018543111], 
             RGBColor[1, 1, 0][0.0004159989150813814, 0.9998581913523581], 
             RGBColor[1, 1, 0][0.0004159989150813814, 0.9998581913523581], 
             RGBColor[1, 1, 0][0.5872345933996268, 0.1758955634159206], 
             RGBColor[1, 1, 0][0.6742357819373624, 0.9593771849539142], 
             RGBColor[1, 1, 0][0.778361480034895, 0.5456932532974028], 
             RGBColor[1, 1, 0][0.00041900092713561475`, 0.9998575782172671], 
             RGBColor[1, 1, 0][0.00041900092713561475`, 0.9998575782172671], 
             RGBColor[1, 1, 0][0.00042502436662056927`, 0.9998563440021968], 
             RGBColor[1, 1, 0][0.6282222372432169, 0.6566643278950058], 
             RGBColor[1, 1, 0][0.7254305451926356, 0.9445453690616993], 
             RGBColor[1, 1, 0][0.00042502436662056927`, 0.9998563440021968], 
             RGBColor[1, 1, 0][0.00043714929824401175`, 0.9998538434714178], 
             RGBColor[1, 1, 0][0.5774118709229118, 0.03811020779067451], 
             RGBColor[1, 1, 0][0.6620110977471708, 0.9068521227799962], 
             RGBColor[1, 1, 0][0.7651871508459468, 0.6779572296639209], 
             RGBColor[1, 1, 0][0.00043714929824401175`, 0.9998538434714178], 
             RGBColor[1, 1, 0][0.0004617145266712775, 0.9998487113967551], 
             RGBColor[1, 1, 0][0.0004617145266712775, 0.9998487113967551], 
             RGBColor[1, 1, 0][0.6177150503648524, 0.5500322652229049], 
             RGBColor[1, 1, 0][0.7122789838013923, 0.9847525936157583], 
             RGBColor[1, 1, 0][0.8192593245150978, 0.023725612555671006`], 
             RGBColor[1, 1, 0][0.0005121320924173614, 0.999837901622065], 
             RGBColor[1, 1, 0][0.6866858740759546, 0.9909054622204615], 
             RGBColor[1, 1, 0][0.7917623440103925, 0.39165889266611514`], 
             RGBColor[1, 1, 0][0.0005121320924173614, 0.999837901622065], 
             RGBColor[1, 1, 0][0.0005152781850021044, 0.999837214749019], 
             RGBColor[1, 1, 0][0.6389078665045224, 0.7516769836194431], 
             RGBColor[1, 1, 0][0.7388246049932735, 0.8783997474718772], 
             RGBColor[1, 1, 0][0.0005152781850021044, 0.999837214749019], 
             RGBColor[1, 1, 0][0.0005184309220348971, 0.9998365249716884], 
             RGBColor[1, 1, 0][0.6559820054203346, 0.8732635278932531], 
             RGBColor[1, 1, 0][0.7586837375500237, 0.7356591954535463], 
             RGBColor[1, 1, 0][0.0005184309220348971, 0.9998365249716884], 
             RGBColor[1, 1, 0][0.0005247563856057171, 0.9998351366550022], 
             RGBColor[1, 1, 0][0.0005247563856057171, 0.9998351366550022], 
             RGBColor[1, 1, 0][0.7057927648826671, 0.9953684916367963], 
             RGBColor[1, 1, 0][0.8122969319582376, 0.12263660069664797`], 
             RGBColor[1, 1, 0][0.0005374876655591429, 0.9998323246264157], 
             RGBColor[1, 1, 0][0.680432394027768, 0.9778707534291832], 
             RGBColor[1, 1, 0][0.7850333532743514, 0.4713304339853506], 
             RGBColor[1, 1, 0][0.0005374876655591429, 0.9998323246264157], 
             RGBColor[1, 1, 0][0.7320969852459563, 0.9147511797796454], 
             RGBColor[1, 1, 0][0.0005632748201566941, 0.9998265561670682], 
             RGBColor[1, 1, 0][0.6680955206583489, 0.9356319129860111], 
             RGBColor[1, 1, 0][0.0005632748201566941, 0.9998265561670682], 
             RGBColor[1, 1, 0][0.7188247284768137, 0.9678490197887466], 
             RGBColor[1, 1, 0][0.0006161733828378156, 0.9998144183399591], 
             RGBColor[1, 1, 0][0.0006161733828378156, 0.9998144183399591], 
             RGBColor[1, 1, 0][0.0006195392073377638, 0.9998136321734669], 
             RGBColor[1, 1, 0][0.6929967439743012, 0.9982857458930964], 
             RGBColor[1, 1, 0][0.7456139658969148, 0.8354499428389628], 
             RGBColor[1, 1, 0][0.0006195392073377638, 0.9998136321734669], 
             RGBColor[1, 1, 0][2.080280563170916*^-6, 0.9999300982615583], 
             RGBColor[1, 1, 0][0.0001450527832270988, 0.9999080964242876], 
             RGBColor[1, 1, 0][0.0003232673619831585, 0.9998764811355976], 
             RGBColor[1, 1, 0][0.0005152781850021044, 0.999837214749019], 
             RGBColor[1, 1, 0][0.000731387664125889, 0.9997865641005964], 
             RGBColor[1, 1, 0][0.0010006439631207139`, 0.9997138912200985], 
             RGBColor[1, 1, 0][0.001290803259166736, 0.9996236957326629], 
             RGBColor[1, 1, 0][0.0016528799645696068`, 0.9994938602898477], 
             RGBColor[1, 1, 0][0.0020641868124640357`, 0.999323091633404], 
             RGBColor[1, 1, 0][0.002506750601261927, 0.9991116920913362], 
             RGBColor[1, 1, 0][0.0030583074419706403`, 0.9988081102179253], 
             RGBColor[1, 1, 0][0.003652216488792354, 0.9984314483336652], 
             RGBColor[1, 1, 0][0.004320366568170822, 0.9979460259804371], 
             RGBColor[1, 1, 0][0.005152688181252936, 0.9972500115258859], 
             RGBColor[1, 1, 0][0.006049104593359595, 0.9963871281821056], 
             RGBColor[1, 1, 0][0.0071675057237987425`, 0.9951459412254148], 
             RGBColor[1, 1, 0][0.00843740529578955, 0.9935152018781517], 
             RGBColor[1, 1, 0][0.009803013531689423, 0.99149903842037], 
             RGBColor[1, 1, 0][0.01150464202118582, 0.9886065338242696], 
             RGBColor[1, 1, 0][0.01333902865894113, 0.9850165358720955], 
             RGBColor[1, 1, 0][0.015628326990304732`, 0.9798510209544887], 
             RGBColor[1, 1, 0][0.018229608316321335`, 0.973060776163543], 
             RGBColor[1, 1, 0][0.021029579145239462`, 0.9646614012826427], 
             RGBColor[1, 1, 0][0.024519495398028765`, 0.952617486521708], 
             RGBColor[1, 1, 0][0.028278743358441043`, 0.937701862424131], 
             RGBColor[1, 1, 0][0.03250908054820261, 0.918529112125528], 
             RGBColor[1, 1, 0][0.03777941728799842, 0.8911461612554991], 
             RGBColor[1, 1, 0][0.04345764471795094, 0.8573691594222251], 
             RGBColor[1, 1, 0][0.050542772281763224`, 0.8091371377413774], 
             RGBColor[1, 1, 0][0.05858986682967023, 0.7463962553272016], 
             RGBColor[1, 1, 0][0.06724656721284386, 0.6698133480411145], 
             RGBColor[1, 1, 0][0.07803448871319593, 0.5618844313157185], 
             RGBColor[1, 1, 0][0.08964819280245814, 0.4312984807077874], 
             RGBColor[1, 1, 0][0.10271142643735665`, 0.26831669005067776`], 
             RGBColor[1, 1, 0][0.11898336790205652`, 0.04477589259021112], 
             RGBColor[1, 1, 0][0.0006229121403526142, 0.9998128426828646], 
             RGBColor[1, 1, 0][0.0006229121403526142, 0.9998128426828646], 
             RGBColor[1, 1, 0][0.0006296793920105701, 0.999811253673053], 
             RGBColor[1, 1, 0][0.6485226825406294, 0.824870631101286], 
             RGBColor[1, 1, 0][0.7506320447761432, 0.7997533495418897], 
             RGBColor[1, 1, 0][0.0006296793920105701, 0.999811253673053], 
             RGBColor[1, 1, 0][0.00007103900137961628, 0.9999198599191763], 
             RGBColor[1, 1, 0][0.00023097141722614424`, 0.9998934349311606], 
             RGBColor[1, 1, 0][0.0004159989150813814, 0.9998581913523581], 
             RGBColor[1, 1, 0][0.0006195392073377638, 0.9998136321734669], 
             RGBColor[1, 1, 0][0.0008612338892119798, 0.9997528432927619], 
             RGBColor[1, 1, 0][0.001140571831221977, 0.9996719335181176], 
             RGBColor[1, 1, 0][0.0014651935029092132`, 0.9995635574224194], 
             RGBColor[1, 1, 0][0.0018512831924857801`, 0.9994145774030998], 
             RGBColor[1, 1, 0][0.0022776658069667876`, 0.9992246976506776], 
             RGBColor[1, 1, 0][0.002772688348361097, 0.9989708748616408], 
             RGBColor[1, 1, 0][0.0033451650766422925`, 0.9986326258858196], 
             RGBColor[1, 1, 0][0.003974594005192707, 0.9982053876869248], 
             RGBColor[1, 1, 0][0.004721787679783229, 0.9976229904683264], 
             RGBColor[1, 1, 0][0.005585022931520892, 0.9968485117661474], 
             RGBColor[1, 1, 0][0.0065878255923008675`, 0.9958120706902585], 
             RGBColor[1, 1, 0][0.007780135014836484, 0.994388619922186], 
             RGBColor[1, 1, 0][0.009096196785580508, 0.992576519659642], 
             RGBColor[1, 1, 0][0.010623554057006454`, 0.990156883322151], 
             RGBColor[1, 1, 0][0.012389212132805789`, 0.9869364408567076], 
             RGBColor[1, 1, 0][0.014441573749349899`, 0.9826236438351441], 
             RGBColor[1, 1, 0][0.016883032899885606`, 0.9766978912426633], 
             RGBColor[1, 1, 0][0.01958014521883733, 0.969150275488368], 
             RGBColor[1, 1, 0][0.022712162345327983`, 0.9590722686576217], 
             RGBColor[1, 1, 0][0.026335094048981836`, 0.9456642631193468], 
             RGBColor[1, 1, 0][0.030319726442764143`, 0.9287659103595898], 
             RGBColor[1, 1, 0][0.035050750946642124`, 0.9058046116139141], 
             RGBColor[1, 1, 0][0.040517816692327575`, 0.8754053948522221], 
             RGBColor[1, 1, 0][0.046870252293991686`, 0.8349713336798323], 
             RGBColor[1, 1, 0][0.05442462728968823, 0.7799106486263512], 
             RGBColor[1, 1, 0][0.06276574600822418, 0.7106037379839729], 
             RGBColor[1, 1, 0][0.07244826236016984, 0.619450828432952], 
             RGBColor[1, 1, 0][0.08364411955205672, 0.5005923425424657], 
             RGBColor[1, 1, 0][0.09595134316157652, 0.3546619730313128], 
             RGBColor[1, 1, 0][0.11055954980517275`, 0.16309576461990186`], 
             RGBColor[1, 1, 0][0.0006432998602036351, 0.9998080351417125], 
             RGBColor[1, 1, 0][0.0006432998602036351, 0.9998080351417125], 
             RGBColor[1, 1, 0][0.0006708880618825273, 0.999801432803043], 
             RGBColor[1, 1, 0][0.0006708880618825273, 0.999801432803043], 
             RGBColor[1, 1, 0][0.6061040512039921, 0.4181215654094885], 
             RGBColor[1, 1, 0][0.6977678751380099, 1.0000000000000004`], 
             RGBColor[1, 1, 0][0.8036769898927193, 0.23998636208452978`], 
             RGBColor[1, 1, 0][0.10656391971713287`, 0.21730516130804964`], 
             RGBColor[1, 1, 0][0.0007274812082977204, 0.999787540354233], 
             RGBColor[1, 1, 0][0.0007274812082977204, 0.999787540354233], 
             RGBColor[1, 1, 0][0.000731387664125889, 0.9997865641005964], 
             RGBColor[1, 1, 0][0.5859976878007792, 0.158946996934725], 
             RGBColor[1, 1, 0][0.6726954538264075, 0.9539248899979439], 
             RGBColor[1, 1, 0][0.7767023794273042, 0.5634373475989941], 
             RGBColor[1, 1, 0][0.000731387664125889, 0.9997865641005964], 
             RGBColor[1, 1, 0][0.0007353030703410032, 0.9997855833684697], 
             RGBColor[1, 1, 0][0.0007353030703410032, 0.9997855833684697], 
             RGBColor[1, 1, 0][0.6268991419090261, 0.6439387473133611], 
             RGBColor[1, 1, 0][0.7237734291969415, 0.9509766280817793], 
             RGBColor[1, 1, 0][0.0007431608160067857, 0.9997836083864746], 
             RGBColor[1, 1, 0][0.0007431608160067857, 0.9997836083864746], 
             RGBColor[1, 1, 0][0.5761956207648561, 0.02056664199196266], 
             RGBColor[1, 1, 0][0.6604986571566854, 0.8988968159619476], 
             RGBColor[1, 1, 0][0.763556096489903, 0.6929150838135701], 
             RGBColor[1, 1, 0][0.0007589846174407672, 0.999779603770327], 
             RGBColor[1, 1, 0][0.0007589846174407672, 0.999779603770327], 
             RGBColor[1, 1, 0][0.0007910701178491567, 0.9997713711991807], 
             RGBColor[1, 1, 0][0.6164140497785252, 0.5359639688404275], 
             RGBColor[1, 1, 0][0.7106518697617236, 0.9879911908641039], 
             RGBColor[1, 1, 0][0.8175131582802883, 0.04885512433734925], 
             RGBColor[1, 1, 0][0.0007910701178491567, 0.9997713711991807], 
             RGBColor[1, 1, 0][0.6851171442333933, 0.9881694612078209], 
             RGBColor[1, 1, 0][0.7900747148912838, 0.41206569578708485`], 
             RGBColor[1, 1, 0][0.0008570306125958455, 0.9997539735312251], 
             RGBColor[1, 1, 0][0.0008570306125958455, 0.9997539735312251], 
             RGBColor[1, 1, 0][0.6375623011898293, 0.7404891386360164], 
             RGBColor[1, 1, 0][0.7371369338428579, 0.8881050504579967], 
             RGBColor[1, 1, 0][0.0008612338892119798, 0.9997528432927619], 
             RGBColor[1, 1, 0][0.0008612338892119798, 0.9997528432927619], 
             RGBColor[1, 1, 0][0.6544833186768244, 0.8641421493477128], 
             RGBColor[1, 1, 0][0.7570665280252867, 0.7491944358242061], 
             RGBColor[1, 1, 0][0.0008654467962844146, 0.9997517078694469], 
             RGBColor[1, 1, 0][0.0008654467962844146, 0.9997517078694469], 
             RGBColor[1, 1, 0][0.0008739015901091191, 0.9997494213730156], 
             RGBColor[1, 1, 0][0.7041804475085022, 0.9970551313809808], 
             RGBColor[1, 1, 0][0.810565587655552, 0.1466797471492719], 
             RGBColor[1, 1, 0][0.0008739015901091191, 0.9997494213730156], 
             RGBColor[1, 1, 0][0.678877929915931, 0.9737512232337965], 
             RGBColor[1, 1, 0][0.7833600492084681, 0.4904248174194645], 
             RGBColor[1, 1, 0][0.0008909277174919429, 0.9997447851080984], 
             RGBColor[1, 1, 0][0.7304246614558897, 0.922812286106694], 
             RGBColor[1, 1, 0][0.0008909277174919429, 0.9997447851080984], 
             RGBColor[1, 1, 0][0.6665691999981751, 0.9289002690526491], 
             RGBColor[1, 1, 0][0.0009254511421806278, 0.9997352540138315], 
             RGBColor[1, 1, 0][0.7171826819787034, 0.9726708907799374], 
             RGBColor[1, 1, 0][0.0009254511421806278, 0.9997352540138315], 
             RGBColor[1, 1, 0][0.000996423455026975, 0.9997151122198938], 
             RGBColor[1, 1, 0][0.000996423455026975, 0.9997151122198938], 
             RGBColor[1, 1, 0][0.6914136174806083, 0.9969809912078461], 
             RGBColor[1, 1, 0][0.7439108065393417, 0.8468072280495488], 
             RGBColor[1, 1, 0][0.0010006439631207139`, 0.9997138912200985], 
             RGBColor[1, 1, 0][0.0010006439631207139`, 0.9997138912200985], 
             RGBColor[1, 1, 0][0.0010048734951366592`, 0.9997126649937272], 
             RGBColor[1, 1, 0][0.0010048734951366592`, 0.9997126649937272], 
             RGBColor[1, 1, 0][0.7009668386506027, 0.9992831490833372], 
             RGBColor[1, 1, 0][0.6757796319510662, 0.9645011995106904], 
             RGBColor[1, 1, 0][0.0010133597081530788`, 0.999710196771675], 
             RGBColor[1, 1, 0][0.0010133597081530788`, 0.999710196771675], 
             RGBColor[1, 1, 0][0.7139098181765987, 0.9811209183369397], 
             RGBColor[1, 1, 0][0.001030441272964503, 0.9997051966178699], 
             RGBColor[1, 1, 0][0.5231781027102772, 0.], 
             RGBColor[1, 1, 0][0.6882581907607658, 0.9932879971986819], 
             RGBColor[1, 1, 0][0.001030441272964503, 0.9997051966178699], 
             RGBColor[1, 1, 0][0.8724429055529769, 0.], 
             RGBColor[1, 1, 0][0.0010650453353905737`, 0.9996949363299091], 
             RGBColor[1, 1, 0][0.0010650453353905737`, 0.9996949363299091], 
             RGBColor[1, 1, 0][0.7074087687603448, 0.9932970659743346], 
             RGBColor[1, 1, 0][0.681990412363794, 0.9816490483352308], 
             RGBColor[1, 1, 0][0.0011360527798871102`, 0.9996733333546349], 
             RGBColor[1, 1, 0][0.694583490227648, 0.999225629116285], 
             RGBColor[1, 1, 0][0.0011360527798871102`, 0.9996733333546349], 
             RGBColor[1, 1, 0][0.1220649743085848, 0.], 
             RGBColor[1, 1, 0][0.5747883033252447, 0.], 
             RGBColor[1, 1, 0][0.8208587969547817, 0.], 
             RGBColor[1, 1, 0][0.001140571831221977, 0.9996719335181176], 
             RGBColor[1, 1, 0][0.001140571831221977, 0.9996719335181176], 
             RGBColor[1, 1, 0][0.0011451005447981658`, 0.9996705276895467], 
             RGBColor[1, 1, 0][0.0011451005447981658`, 0.9996705276895467], 
             RGBColor[1, 1, 0][0.0011541870413545232`, 0.9996676979535457], 
             RGBColor[1, 1, 0][0.0011541870413545232`, 0.9996676979535457], 
             RGBColor[1, 1, 0][0.0011724768933221625`, 0.9996619654410309], 
             RGBColor[1, 1, 0][0.0011724768933221625`, 0.9996619654410309], 
             RGBColor[1, 1, 0][0.0012095287200276743`, 0.9996502023594657], 
             RGBColor[1, 1, 0][0.0012095287200276743`, 0.9996502023594657], 
             RGBColor[1, 1, 0][0.001285558970346049, 0.9996254352718362], 
             RGBColor[1, 1, 0][0.001285558970346049, 0.9996254352718362], 
             RGBColor[1, 1, 0][0.001290803259166736, 0.9996236957326629], 
             RGBColor[1, 1, 0][0.001290803259166736, 0.9996236957326629], 
             RGBColor[1, 1, 0][0.0012960597007215496`, 0.9996219481225458], 
             RGBColor[1, 1, 0][0.0012960597007215496`, 0.9996219481225458], 
             RGBColor[1, 1, 0][0.0013066091547462707`, 0.9996184285395293], 
             RGBColor[1, 1, 0][0.0013066091547462707`, 0.9996184285395293], 
             RGBColor[1, 1, 0][0.001327855139108151, 0.9996112908629416], 
             RGBColor[1, 1, 0][0.001327855139108151, 0.9996112908629416], 
             RGBColor[1, 1, 0][0.0013709418096529283`, 0.999596612843383], 
             RGBColor[1, 1, 0][0.0013709418096529283`, 0.999596612843383], 
             RGBColor[1, 1, 0][0.001459546029111701, 0.9995655746953576], 
             RGBColor[1, 1, 0][0.001459546029111701, 0.9995655746953576], 
             RGBColor[1, 1, 0][0.0014651935029092132`, 0.9995635574224194], 
             RGBColor[1, 1, 0][0.0014651935029092132`, 0.9995635574224194], 
             RGBColor[1, 1, 0][0.0014708540637524423`, 0.9995615307900388], 
             RGBColor[1, 1, 0][0.0014708540637524423`, 0.9995615307900388], 
             RGBColor[1, 1, 0][0.001482214567954205, 0.9995574492730656], 
             RGBColor[1, 1, 0][0.001482214567954205, 0.9995574492730656], 
             RGBColor[1, 1, 0][0.0015050939600107127`, 0.9995491720017422], 
             RGBColor[1, 1, 0][0.0015050939600107127`, 0.9995491720017422], 
             RGBColor[1, 1, 0][0.0015514931670802805`, 0.9995321505088306], 
             RGBColor[1, 1, 0][0.0015514931670802805`, 0.9995321505088306], 
             RGBColor[1, 1, 0][0.0016469093473960095`, 0.9994961568749805], 
             RGBColor[1, 1, 0][0.0016469093473960095`, 0.9994961568749805], 
             RGBColor[1, 1, 0][0.0016528799645696068`, 0.9994938602898477], 
             RGBColor[1, 1, 0][0.0016528799645696068`, 0.9994938602898477], 
             RGBColor[1, 1, 0][0.001658864165002744, 0.9994915532442619], 
             RGBColor[1, 1, 0][0.001658864165002744, 0.9994915532442619], 
             RGBColor[1, 1, 0][0.001670873439326572, 0.9994869075809538], 
             RGBColor[1, 1, 0][0.001670873439326572, 0.9994869075809538], 
             RGBColor[1, 1, 0][0.0016950563515028365`, 0.9994774886181312], 
             RGBColor[1, 1, 0][0.0016950563515028365`, 0.9994774886181312], 
             RGBColor[1, 1, 0][0.0017440866471785524`, 0.9994581291806345], 
             RGBColor[1, 1, 0][0.0017440866471785524`, 0.9994581291806345], 
             RGBColor[1, 1, 0][0.0018448622290096301`, 0.9994172334648814], 
             RGBColor[1, 1, 0][0.0018448622290096301`, 0.9994172334648814], 
             RGBColor[1, 1, 0][0.0018512831924857801`, 0.9994145774030998], 
             RGBColor[1, 1, 0][0.0018512831924857801`, 0.9994145774030998], 
             RGBColor[1, 1, 0][0.0018577187637672647`, 0.9994119092437035], 
             RGBColor[1, 1, 0][0.0018577187637672647`, 0.9994119092437035], 
             RGBColor[1, 1, 0][0.0018706338627539093`, 0.9994065364114361], 
             RGBColor[1, 1, 0][0.0018706338627539093`, 0.9994065364114361], 
             RGBColor[1, 1, 0][0.001896640821719125, 0.9993956431344648], 
             RGBColor[1, 1, 0][0.001896640821719125, 0.9993956431344648], 
             RGBColor[1, 1, 0][0.0019493693301136717`, 0.9993732534477042], 
             RGBColor[1, 1, 0][0.0019493693301136717`, 0.9993732534477042], 
             RGBColor[1, 1, 0][0.002057746121224414, 0.999325956542991], 
             RGBColor[1, 1, 0][0.002057746121224414, 0.999325956542991], 
             RGBColor[1, 1, 0][0.0020641868124640357`, 0.999323091633404], 
             RGBColor[1, 1, 0][0.0020641868124640357`, 0.999323091633404], 
             RGBColor[1, 1, 0][0.002070641170557814, 0.9993202145540216], 
             RGBColor[1, 1, 0][0.002070641170557814, 0.9993202145540216], 
             RGBColor[1, 1, 0][0.002083591003371155, 0.9993144236788947], 
             RGBColor[1, 1, 0][0.002083591003371155, 0.9993144236788947], 
             RGBColor[1, 1, 0][0.0021096559513975655`, 0.999302693602009], 
             RGBColor[1, 1, 0][0.0021096559513975655`, 0.999302693602009], 
             RGBColor[1, 1, 0][0.0021624535563766045`, 0.9992786282645684], 
             RGBColor[1, 1, 0][0.0021624535563766045`, 0.9992786282645684], 
             RGBColor[1, 1, 0][0.0022707730821955622`, 0.9992279787545969], 
             RGBColor[1, 1, 0][0.0022707730821955622`, 0.9992279787545969], 
             RGBColor[1, 1, 0][0.0022776658069667876`, 0.9992246976506776], 
             RGBColor[1, 1, 0][0.0022776658069667876`, 0.9992246976506776], 
             RGBColor[1, 1, 0][0.002284573157786784, 0.9992214026092716], 
             RGBColor[1, 1, 0][0.002284573157786784, 0.9992214026092716], 
             RGBColor[1, 1, 0][0.002298431861782189, 0.9992147704769697], 
             RGBColor[1, 1, 0][0.002298431861782189, 0.9992147704769697], 
             RGBColor[1, 1, 0][0.002326326152354159, 0.9992013363410424], 
             RGBColor[1, 1, 0][0.002326326152354159, 0.9992013363410424], 
             RGBColor[1, 1, 0][0.002382829304913562, 0.9991737749820946], 
             RGBColor[1, 1, 0][0.002382829304913562, 0.9991737749820946], 
             RGBColor[1, 1, 0][0.0024987511293020083`, 0.9991157675706719], 
             RGBColor[1, 1, 0][0.0024987511293020083`, 0.9991157675706719], 
             RGBColor[1, 1, 0][0.002506750601261927, 0.9991116920913362], 
             RGBColor[1, 1, 0][0.002506750601261927, 0.9991116920913362], 
             RGBColor[1, 1, 0][0.0025147684813371578`, 0.9991075978367872], 
             RGBColor[1, 1, 0][0.0025147684813371578`, 0.9991075978367872], 
             RGBColor[1, 1, 0][0.002530859635371571, 0.9990993526557264], 
             RGBColor[1, 1, 0][0.002530859635371571, 0.9990993526557264], 
             RGBColor[1, 1, 0][0.0025632647112136513`, 0.9990826331591033], 
             RGBColor[1, 1, 0][0.0025632647112136513`, 0.9990826331591033], 
             RGBColor[1, 1, 0][0.00262897555456695, 0.9990482577136194], 
             RGBColor[1, 1, 0][0.00262897555456695, 0.9990482577136194], 
             RGBColor[1, 1, 0][0.002764078314423633, 0.9989755960850112], 
             RGBColor[1, 1, 0][0.002764078314423633, 0.9989755960850112], 
             RGBColor[1, 1, 0][0.002772688348361097, 0.9989708748616408], 
             RGBColor[1, 1, 0][0.002772688348361097, 0.9989708748616408], 
             RGBColor[1, 1, 0][0.002781318195418523, 0.9989661318887613], 
             RGBColor[1, 1, 0][0.002781318195418523, 0.9989661318887613], 
             RGBColor[1, 1, 0][0.0027986375113713095`, 0.9989565802933126], 
             RGBColor[1, 1, 0][0.0027986375113713095`, 0.9989565802933126], 
             RGBColor[1, 1, 0][0.0028335159138639285`, 0.9989372116695667], 
             RGBColor[1, 1, 0][0.0028335159138639285`, 0.9989372116695667], 
             RGBColor[1, 1, 0][0.0029042421560666856`, 0.9988973896229817], 
             RGBColor[1, 1, 0][0.0029042421560666856`, 0.9988973896229817], 
             RGBColor[1, 1, 0][0.00304965667257974, 0.998813215288649], 
             RGBColor[1, 1, 0][0.00304965667257974, 0.998813215288649], 
             RGBColor[1, 1, 0][0.0030583074419706403`, 0.9988081102179253], 
             RGBColor[1, 1, 0][0.0030583074419706403`, 0.9988081102179253], 
             RGBColor[1, 1, 0][0.003066976794072401, 0.998802983196078], 
             RGBColor[1, 1, 0][0.003066976794072401, 0.998802983196078], 
             RGBColor[1, 1, 0][0.0030843714061642596`, 0.998792662921141], 
             RGBColor[1, 1, 0][0.0030843714061642596`, 0.998792662921141], 
             RGBColor[1, 1, 0][0.0031193853850039156`, 0.9987717547784066], 
             RGBColor[1, 1, 0][0.0031193853850039156`, 0.9987717547784066], 
             RGBColor[1, 1, 0][0.003190321418807493, 0.9987288464315409], 
             RGBColor[1, 1, 0][0.003190321418807493, 0.9987288464315409], 
             RGBColor[1, 1, 0][0.0033358994294127938`, 0.9986384822734452], 
             RGBColor[1, 1, 0][0.0033358994294127938`, 0.9986384822734452], 
             RGBColor[1, 1, 0][0.0033451650766422925`, 0.9986326258858196], 
             RGBColor[1, 1, 0][0.0033451650766422925`, 0.9986326258858196], 
             RGBColor[1, 1, 0][0.0033544506274012418`, 0.9986267443173229], 
             RGBColor[1, 1, 0][0.0033544506274012418`, 0.9986267443173229], 
             RGBColor[1, 1, 0][0.0033730816106183714`, 0.9986149052042775], 
             RGBColor[1, 1, 0][0.0033730816106183714`, 0.9986149052042775], 
             RGBColor[1, 1, 0][0.0034105843067797764`, 0.9985909200137518], 
             RGBColor[1, 1, 0][0.0034105843067797764`, 0.9985909200137518], 
             RGBColor[1, 1, 0][0.0034865623192991014`, 0.9985416968953873], 
             RGBColor[1, 1, 0][0.0034865623192991014`, 0.9985416968953873], 
             RGBColor[1, 1, 0][0.003642487697689092, 0.9984380341364899], 
             RGBColor[1, 1, 0][0.003642487697689092, 0.9984380341364899], 
             RGBColor[1, 1, 0][0.003652216488792354, 0.9984314483336652], 
             RGBColor[1, 1, 0][0.003652216488792354, 0.9984314483336652], 
             RGBColor[1, 1, 0][0.003661965766751079, 0.9984248347729502], 
             RGBColor[1, 1, 0][0.003661965766751079, 0.9984248347729502], 
             RGBColor[1, 1, 0][0.003681525955890367, 0.9984115239095172], 
             RGBColor[1, 1, 0][0.003681525955890367, 0.9984115239095172], 
             RGBColor[1, 1, 0][0.003720894080742576, 0.9983845639086092], 
             RGBColor[1, 1, 0][0.003720894080742576, 0.9983845639086092], 
             RGBColor[1, 1, 0][0.003800631103220837, 0.998329263941285], 
             RGBColor[1, 1, 0][0.003800631103220837, 0.998329263941285], 
             RGBColor[1, 1, 0][0.0039641877791439266`, 0.9982129222737026], 
             RGBColor[1, 1, 0][0.0039641877791439266`, 0.9982129222737026], 
             RGBColor[1, 1, 0][0.003974594005192707, 0.9982053876869248], 
             RGBColor[1, 1, 0][0.003974594005192707, 0.9982053876869248], 
             RGBColor[1, 1, 0][0.003985022144637169, 0.9981978213446401], 
             RGBColor[1, 1, 0][0.003985022144637169, 0.9981978213446401], 
             RGBColor[1, 1, 0][0.004005944348390934, 0.9981825928578163], 
             RGBColor[1, 1, 0][0.004005944348390934, 0.9981825928578163], 
             RGBColor[1, 1, 0][0.004048053753555497, 0.9981517488933148], 
             RGBColor[1, 1, 0][0.004048053753555497, 0.9981517488933148], 
             RGBColor[1, 1, 0][0.00413334302244391, 0.9980884822646122], 
             RGBColor[1, 1, 0][0.00413334302244391, 0.9980884822646122], 
             RGBColor[1, 1, 0][0.0043082884728474794`, 0.9979553804080091], 
             RGBColor[1, 1, 0][0.0043082884728474794`, 0.9979553804080091], 
             RGBColor[1, 1, 0][0.004320366568170822, 0.9979460259804371], 
             RGBColor[1, 1, 0][0.004320366568170822, 0.9979460259804371], 
             RGBColor[1, 1, 0][0.004332472262008112, 0.9979366287704114], 
             RGBColor[1, 1, 0][0.004332472262008112, 0.9979366287704114], 
             RGBColor[1, 1, 0][0.004356766697619645, 0.9979177052197423], 
             RGBColor[1, 1, 0][0.004356766697619645, 0.9979177052197423], 
             RGBColor[1, 1, 0][0.004405689535444386, 0.9978793360628705], 
             RGBColor[1, 1, 0][0.004405689535444386, 0.9978793360628705], 
             RGBColor[1, 1, 0][0.004504885398541553, 0.9978004644974076], 
             RGBColor[1, 1, 0][0.004504885398541553, 0.9978004644974076], 
             RGBColor[1, 1, 0][0.004708794426163632, 0.9976338155296537], 
             RGBColor[1, 1, 0][0.004708794426163632, 0.9976338155296537], 
             RGBColor[1, 1, 0][0.004721787679783229, 0.9976229904683264], 
             RGBColor[1, 1, 0][0.004721787679783229, 0.9976229904683264], 
             RGBColor[1, 1, 0][0.00473481062305849, 0.997612115901559], 
             RGBColor[1, 1, 0][0.00473481062305849, 0.997612115901559], 
             RGBColor[1, 1, 0][0.004760945850095126, 0.997590217345472], 
             RGBColor[1, 1, 0][0.004760945850095126, 0.997590217345472], 
             RGBColor[1, 1, 0][0.0048135755754475035`, 0.9975458161413209], 
             RGBColor[1, 1, 0][0.0048135755754475035`, 0.9975458161413209], 
             RGBColor[1, 1, 0][0.004920287517416154, 0.9974545452660053], 
             RGBColor[1, 1, 0][0.004920287517416154, 0.9974545452660053], 
             RGBColor[1, 1, 0][0.005139646749173411, 0.9972616982878169], 
             RGBColor[1, 1, 0][0.005139646749173411, 0.9972616982878169], 
             RGBColor[1, 1, 0][0.005152688181252936, 0.9972500115258859], 
             RGBColor[1, 1, 0][0.005152688181252936, 0.9972500115258859], 
             RGBColor[1, 1, 0][0.005165757416894211, 0.9972382749051827], 
             RGBColor[1, 1, 0][0.005165757416894211, 0.9972382749051827], 
             RGBColor[1, 1, 0][0.005191979536090577, 0.9972146512361474], 
             RGBColor[1, 1, 0][0.005191979536090577, 0.9972146512361474], 
             RGBColor[1, 1, 0][0.00524476003383047, 0.9971667961774383], 
             RGBColor[1, 1, 0][0.00524476003383047, 0.9971667961774383], 
             RGBColor[1, 1, 0][0.005351679515341492, 0.9970686063220277], 
             RGBColor[1, 1, 0][0.005351679515341492, 0.9970686063220277], 
             RGBColor[1, 1, 0][0.00557106174818314, 0.9968619040930232], 
             RGBColor[1, 1, 0][0.00557106174818314, 0.9968619040930232], 
             RGBColor[1, 1, 0][0.005585022931520892, 0.9968485117661474], 
             RGBColor[1, 1, 0][0.005585022931520892, 0.9968485117661474], 
             RGBColor[1, 1, 0][0.005599013879275667, 0.9968350623083524], 
             RGBColor[1, 1, 0][0.005599013879275667, 0.9968350623083524], 
             RGBColor[1, 1, 0][0.005627085321995484, 0.9968079910246701], 
             RGBColor[1, 1, 0][0.005627085321995484, 0.9968079910246701], 
             RGBColor[1, 1, 0][0.0056835881815825925`, 0.9967531520992481], 
             RGBColor[1, 1, 0][0.0056835881815825925`, 0.9967531520992481], 
             RGBColor[1, 1, 0][0.005798048194459249, 0.996640632843701], 
             RGBColor[1, 1, 0][0.005798048194459249, 0.996640632843701], 
             RGBColor[1, 1, 0][0.006032902430947244, 0.9964037663625122], 
             RGBColor[1, 1, 0][0.006032902430947244, 0.9964037663625122], 
             RGBColor[1, 1, 0][0.006049104593359595, 0.9963871281821056], 
             RGBColor[1, 1, 0][0.006049104593359595, 0.9963871281821056], 
             RGBColor[1, 1, 0][0.006065344201470467, 0.9963704130573731], 
             RGBColor[1, 1, 0][0.006065344201470467, 0.9963704130573731], 
             RGBColor[1, 1, 0][0.006097936101158928, 0.9963367505509094], 
             RGBColor[1, 1, 0][0.006097936101158928, 0.9963367505509094], 
             RGBColor[1, 1, 0][0.006163573070227626, 0.9962684864495037], 
             RGBColor[1, 1, 0][0.006163573070227626, 0.9962684864495037], 
             RGBColor[1, 1, 0][0.0062966793433818944`, 0.9961281200034564], 
             RGBColor[1, 1, 0][0.0062966793433818944`, 0.9961281200034564], 
             RGBColor[1, 1, 0][0.006570381233403678, 0.9958313558831368], 
             RGBColor[1, 1, 0][0.006570381233403678, 0.9958313558831368], 
             RGBColor[1, 1, 0][0.0065878255923008675`, 0.9958120706902585], 
             RGBColor[1, 1, 0][0.0065878255923008675`, 0.9958120706902585], 
             RGBColor[1, 1, 0][0.006605310267804416, 0.9957926963212558], 
             RGBColor[1, 1, 0][0.006605310267804416, 0.9957926963212558], 
             RGBColor[1, 1, 0][0.006640400941557524, 0.9957536784048338], 
             RGBColor[1, 1, 0][0.006640400941557524, 0.9957536784048338], 
             RGBColor[1, 1, 0][0.006711070202623893, 0.9956745542010749], 
             RGBColor[1, 1, 0][0.006711070202623893, 0.9956745542010749], 
             RGBColor[1, 1, 0][0.006854381542263369, 0.9955118574240694], 
             RGBColor[1, 1, 0][0.006854381542263369, 0.9955118574240694], 
             RGBColor[1, 1, 0][0.00714906776246441, 0.9951678845045383], 
             RGBColor[1, 1, 0][0.00714906776246441, 0.9951678845045383], 
             RGBColor[1, 1, 0][0.0071675057237987425`, 0.9951459412254148], 
             RGBColor[1, 1, 0][0.0071675057237987425`, 0.9951459412254148], 
             RGBColor[1, 1, 0][0.0071859855180077745`, 0.9951238983508791], 
             RGBColor[1, 1, 0][0.0071859855180077745`, 0.9951238983508791], 
             RGBColor[1, 1, 0][0.007223070984914511, 0.995079512006997], 
             RGBColor[1, 1, 0][0.007223070984914511, 0.995079512006997], 
             RGBColor[1, 1, 0][0.007297748103821082, 0.9949895241649716], 
             RGBColor[1, 1, 0][0.007297748103821082, 0.9949895241649716], 
             RGBColor[1, 1, 0][0.007449148633732874, 0.9948045839137046], 
             RGBColor[1, 1, 0][0.007449148633732874, 0.9948045839137046], 
             RGBColor[1, 1, 0][0.007760310239120928, 0.9944139847438848], 
             RGBColor[1, 1, 0][0.007760310239120928, 0.9944139847438848], 
             RGBColor[1, 1, 0][0.007780135014836484, 0.994388619922186], 
             RGBColor[1, 1, 0][0.007780135014836484, 0.994388619922186], 
             RGBColor[1, 1, 0][0.007800004769893489, 0.9943631399916191], 
             RGBColor[1, 1, 0][0.007800004769893489, 0.9943631399916191], 
             RGBColor[1, 1, 0][0.007839879626467991, 0.9943118327141832], 
             RGBColor[1, 1, 0][0.007839879626467991, 0.9943118327141832], 
             RGBColor[1, 1, 0][0.007920173597507513, 0.9942078137334318], 
             RGBColor[1, 1, 0][0.007920173597507513, 0.9942078137334318], 
             RGBColor[1, 1, 0][0.008082961743891616, 0.993994037962144], 
             RGBColor[1, 1, 0][0.008082961743891616, 0.993994037962144], 
             RGBColor[1, 1, 0][0.008417527422073415, 0.9935425410777818], 
             RGBColor[1, 1, 0][0.008417527422073415, 0.9935425410777818], 
             RGBColor[1, 1, 0][0.00843740529578955, 0.9935152018781517], 
             RGBColor[1, 1, 0][0.00843740529578955, 0.9935152018781517], 
             RGBColor[1, 1, 0][0.008457325226767953, 0.993487747007194], 
             RGBColor[1, 1, 0][0.008457325226767953, 0.993487747007194], 
             RGBColor[1, 1, 0][0.00849729161663598, 0.9934324882939938], 
             RGBColor[1, 1, 0][0.00849729161663598, 0.9934324882939938], 
             RGBColor[1, 1, 0][0.008577733011453145, 0.9933205611654121], 
             RGBColor[1, 1, 0][0.008577733011453145, 0.9933205611654121], 
             RGBColor[1, 1, 0][0.008740670448461059, 0.9930909558015607], 
             RGBColor[1, 1, 0][0.008740670448461059, 0.9930909558015607], 
             RGBColor[1, 1, 0][0.009074927995073494, 0.9926078133313042], 
             RGBColor[1, 1, 0][0.009074927995073494, 0.9926078133313042], 
             RGBColor[1, 1, 0][0.009096196785580508, 0.992576519659642], 
             RGBColor[1, 1, 0][0.009096196785580508, 0.992576519659642], 
             RGBColor[1, 1, 0][0.00911751057622755, 0.9925450936084054], 
             RGBColor[1, 1, 0][0.00911751057622755, 0.9925450936084054], 
             RGBColor[1, 1, 0][0.009160273538985231, 0.992481842127961], 
             RGBColor[1, 1, 0][0.009160273538985231, 0.992481842127961], 
             RGBColor[1, 1, 0][0.00924634366896447, 0.9923537258479662], 
             RGBColor[1, 1, 0][0.00924634366896447, 0.9923537258479662], 
             RGBColor[1, 1, 0][0.0094206823463784, 0.9920909115398087], 
             RGBColor[1, 1, 0][0.0094206823463784, 0.9920909115398087], 
             RGBColor[1, 1, 0][0.009778328935536445, 0.9915378950827083], 
             RGBColor[1, 1, 0][0.009778328935536445, 0.9915378950827083], 
             RGBColor[1, 1, 0][0.009803013531689423, 0.99149903842037], 
             RGBColor[1, 1, 0][0.009803013531689423, 0.99149903842037], 
             RGBColor[1, 1, 0][0.009827754778827292, 0.9914600034822274], 
             RGBColor[1, 1, 0][0.009827754778827292, 0.9914600034822274], 
             RGBColor[1, 1, 0][0.009877407746410608, 0.9913813955082358], 
             RGBColor[1, 1, 0][0.009877407746410608, 0.9913813955082358], 
             RGBColor[1, 1, 0][0.009977399234025701, 0.99122200406762], 
             RGBColor[1, 1, 0][0.009977399234025701, 0.99122200406762], 
             RGBColor[1, 1, 0][0.01018015394586242, 0.9908943312088431], 
             RGBColor[1, 1, 0][0.01018015394586242, 0.9908943312088431], 
             RGBColor[1, 1, 0][0.01059699063766246, 0.9902018689832535], 
             RGBColor[1, 1, 0][0.01059699063766246, 0.9902018689832535], 
             RGBColor[1, 1, 0][0.010623554057006454`, 0.990156883322151], 
             RGBColor[1, 1, 0][0.010623554057006454`, 0.990156883322151], 
             RGBColor[1, 1, 0][0.010650178439222125`, 0.9901116913165092], 
             RGBColor[1, 1, 0][0.010650178439222125`, 0.9901116913165092], 
             RGBColor[1, 1, 0][0.010703610652227151`, 0.9900206844883209], 
             RGBColor[1, 1, 0][0.010703610652227151`, 0.9900206844883209], 
             RGBColor[1, 1, 0][0.010811212810264818`, 0.9898361528389038], 
             RGBColor[1, 1, 0][0.010811212810264818`, 0.9898361528389038], 
             RGBColor[1, 1, 0][0.011029399828642992`, 0.9894568000750678], 
             RGBColor[1, 1, 0][0.011029399828642992`, 0.9894568000750678], 
             RGBColor[1, 1, 0][0.011477963287960852`, 0.9886551360285215], 
             RGBColor[1, 1, 0][0.011477963287960852`, 0.9886551360285215], 
             RGBColor[1, 1, 0][0.01150464202118582, 0.9886065338242696], 
             RGBColor[1, 1, 0][0.01150464202118582, 0.9886065338242696], 
             RGBColor[1, 1, 0][0.01153137789831597, 0.9885577236311155], 
             RGBColor[1, 1, 0][0.01153137789831597, 0.9885577236311155], 
             RGBColor[1, 1, 0][0.011585021574146327`, 0.988459475721609], 
             RGBColor[1, 1, 0][0.011585021574146327`, 0.988459475721609], 
             RGBColor[1, 1, 0][0.01169300005578177, 0.9882604447019822], 
             RGBColor[1, 1, 0][0.01169300005578177, 0.9882604447019822], 
             RGBColor[1, 1, 0][0.011911749310718601`, 0.9878520377687566], 
             RGBColor[1, 1, 0][0.011911749310718601`, 0.9878520377687566], 
             RGBColor[1, 1, 0][0.01236064276437406, 0.9869921585600193], 
             RGBColor[1, 1, 0][0.01236064276437406, 0.9869921585600193], 
             RGBColor[1, 1, 0][0.012389212132805789`, 0.9869364408567076], 
             RGBColor[1, 1, 0][0.012389212132805789`, 0.9869364408567076], 
             RGBColor[1, 1, 0][0.012417842694745735`, 0.9868804847882376], 
             RGBColor[1, 1, 0][0.012417842694745735`, 0.9868804847882376], 
             RGBColor[1, 1, 0][0.01247528792371918, 0.9867678534824658], 
             RGBColor[1, 1, 0][0.01247528792371918, 0.9867678534824658], 
             RGBColor[1, 1, 0][0.012590918489778247`, 0.9865396854391596], 
             RGBColor[1, 1, 0][0.012590918489778247`, 0.9865396854391596], 
             RGBColor[1, 1, 0][0.012825169794207055`, 0.9860714938806489], 
             RGBColor[1, 1, 0][0.012825169794207055`, 0.9860714938806489], 
             RGBColor[1, 1, 0][0.013305874869516732`, 0.9850857582594084], 
             RGBColor[1, 1, 0][0.013305874869516732`, 0.9850857582594084], 
             RGBColor[1, 1, 0][0.01333902865894113, 0.9850165358720955], 
             RGBColor[1, 1, 0][0.01333902865894113, 0.9850165358720955], 
             RGBColor[1, 1, 0][0.013372259403036633`, 0.9849469926532923], 
             RGBColor[1, 1, 0][0.013372259403036633`, 0.9849469926532923], 
             RGBColor[1, 1, 0][0.013438952470146632`, 0.9848069377831202], 
             RGBColor[1, 1, 0][0.013438952470146632`, 0.9848069377831202], 
             RGBColor[1, 1, 0][0.013573269947654234`, 0.9845229123624889], 
             RGBColor[1, 1, 0][0.013573269947654234`, 0.9845229123624889], 
             RGBColor[1, 1, 0][0.013845670848396495`, 0.9839388573655318], 
             RGBColor[1, 1, 0][0.013845670848396495`, 0.9839388573655318], 
             RGBColor[1, 1, 0][0.014405866722039052`, 0.9827039032499507], 
             RGBColor[1, 1, 0][0.014405866722039052`, 0.9827039032499507], 
             RGBColor[1, 1, 0][0.014441573749349899`, 0.9826236438351441], 
             RGBColor[1, 1, 0][0.014441573749349899`, 0.9826236438351441], 
             RGBColor[1, 1, 0][0.01447736365776093, 0.9825430126000511], 
             RGBColor[1, 1, 0][0.01447736365776093, 0.9825430126000511], 
             RGBColor[1, 1, 0][0.014549192887845518`, 0.982380627793384], 
             RGBColor[1, 1, 0][0.014549192887845518`, 0.982380627793384], 
             RGBColor[1, 1, 0][0.01469385441586253, 0.9820513202617092], 
             RGBColor[1, 1, 0][0.01469385441586253, 0.9820513202617092], 
             RGBColor[1, 1, 0][0.014987233440437769`, 0.9813741582029797], 
             RGBColor[1, 1, 0][0.014987233440437769`, 0.9813741582029797], 
             RGBColor[1, 1, 0][0.015590571089221216`, 0.9799423725685147], 
             RGBColor[1, 1, 0][0.015590571089221216`, 0.9799423725685147], 
             RGBColor[1, 1, 0][0.015628326990304732`, 0.9798510209544887], 
             RGBColor[1, 1, 0][0.015628326990304732`, 0.9798510209544887], 
             RGBColor[1, 1, 0][0.015666168930768658`, 0.9797592540704908], 
             RGBColor[1, 1, 0][0.015666168930768658`, 0.9797592540704908], 
             RGBColor[1, 1, 0][0.015742111714561913`, 0.9795744669616622], 
             RGBColor[1, 1, 0][0.015742111714561913`, 0.9795744669616622], 
             RGBColor[1, 1, 0][0.01589503841175795, 0.9791998261889093], 
             RGBColor[1, 1, 0][0.01589503841175795, 0.9791998261889093], 
             RGBColor[1, 1, 0][0.01620510084870066, 0.9784298456566827], 
             RGBColor[1, 1, 0][0.01620510084870066, 0.9784298456566827], 
             RGBColor[1, 1, 0][0.01684242423497118, 0.9768035075765449], 
             RGBColor[1, 1, 0][0.01684242423497118, 0.9768035075765449], 
             RGBColor[1, 1, 0][0.016883032899885606`, 0.9766978912426633], 
             RGBColor[1, 1, 0][0.016883032899885606`, 0.9766978912426633], 
             RGBColor[1, 1, 0][0.016923734105151817`, 0.9765917950759878], 
             RGBColor[1, 1, 0][0.016923734105151817`, 0.9765917950759878], 
             RGBColor[1, 1, 0][0.01700541498075608, 0.9763781545528755], 
             RGBColor[1, 1, 0][0.01700541498075608, 0.9763781545528755], 
             RGBColor[1, 1, 0][0.01716989652734048, 0.9759450193606583], 
             RGBColor[1, 1, 0][0.01716989652734048, 0.9759450193606583], 
             RGBColor[1, 1, 0][0.017503386690282344`, 0.9750548329711735], 
             RGBColor[1, 1, 0][0.017503386690282344`, 0.9750548329711735], 
             RGBColor[1, 1, 0][0.018188865015324598`, 0.9731746639045374], 
             RGBColor[1, 1, 0][0.018188865015324598`, 0.9731746639045374], 
             RGBColor[1, 1, 0][0.018229608316321335`, 0.973060776163543], 
             RGBColor[1, 1, 0][0.018229608316321335`, 0.973060776163543], 
             RGBColor[1, 1, 0][0.018270438228163124`, 0.9729464061290835], 
             RGBColor[1, 1, 0][0.018270438228163124`, 0.9729464061290835], 
             RGBColor[1, 1, 0][0.018352358621231822`, 0.9727162110430455], 
             RGBColor[1, 1, 0][0.018352358621231822`, 0.9727162110430455], 
             RGBColor[1, 1, 0][0.018517246864823735`, 0.9722499433689863], 
             RGBColor[1, 1, 0][0.018517246864823735`, 0.9722499433689863], 
             RGBColor[1, 1, 0][0.018851254952850165`, 0.9712934313043751], 
             RGBColor[1, 1, 0][0.018851254952850165`, 0.9712934313043751], 
             RGBColor[1, 1, 0][0.019536537078385346`, 0.9692806478211516], 
             RGBColor[1, 1, 0][0.019536537078385346`, 0.9692806478211516], 
             RGBColor[1, 1, 0][0.01958014521883733, 0.969150275488368], 
             RGBColor[1, 1, 0][0.01958014521883733, 0.969150275488368], 
             RGBColor[1, 1, 0][0.019623846060121193`, 0.969019351456997], 
             RGBColor[1, 1, 0][0.019623846060121193`, 0.969019351456997], 
             RGBColor[1, 1, 0][0.019711526633845632`, 0.9687558390046986], 
             RGBColor[1, 1, 0][0.019711526633845632`, 0.9687558390046986], 
             RGBColor[1, 1, 0][0.019888008890057835`, 0.9682220909427947], 
             RGBColor[1, 1, 0][0.019888008890057835`, 0.9682220909427947], 
             RGBColor[1, 1, 0][0.020245502545663274`, 0.9671271691532193], 
             RGBColor[1, 1, 0][0.020245502545663274`, 0.9671271691532193], 
             RGBColor[1, 1, 0][0.02097896985068027, 0.9648232233557525], 
             RGBColor[1, 1, 0][0.02097896985068027, 0.9648232233557525], 
             RGBColor[1, 1, 0][0.021029579145239462`, 0.9646614012826427], 
             RGBColor[1, 1, 0][0.021029579145239462`, 0.9646614012826427], 
             RGBColor[1, 1, 0][0.021080305093280995`, 0.9644988372535719], 
             RGBColor[1, 1, 0][0.021080305093280995`, 0.9644988372535719], 
             RGBColor[1, 1, 0][0.021182108025967275`, 0.9641714697959342], 
             RGBColor[1, 1, 0][0.021182108025967275`, 0.9641714697959342], 
             RGBColor[1, 1, 0][0.021387125605633443`, 0.9635076817076477], 
             RGBColor[1, 1, 0][0.021387125605633443`, 0.9635076817076477], 
             RGBColor[1, 1, 0][0.021802868690860622`, 0.9621431152533736], 
             RGBColor[1, 1, 0][0.021802868690860622`, 0.9621431152533736], 
             RGBColor[1, 1, 0][0.022657683646702554`, 0.9592595870807591], 
             RGBColor[1, 1, 0][0.022657683646702554`, 0.9592595870807591], 
             RGBColor[1, 1, 0][0.022712162345327983`, 0.9590722686576217], 
             RGBColor[1, 1, 0][0.022712162345327983`, 0.9590722686576217], 
             RGBColor[1, 1, 0][0.02276676661634011, 0.9588840922802327], 
             RGBColor[1, 1, 0][0.02276676661634011, 0.9588840922802327], 
             RGBColor[1, 1, 0][0.02287635303395977, 0.9585051500491335], 
             RGBColor[1, 1, 0][0.02287635303395977, 0.9585051500491335], 
             RGBColor[1, 1, 0][0.023097045518074177`, 0.957736797406074], 
             RGBColor[1, 1, 0][0.023097045518074177`, 0.957736797406074], 
             RGBColor[1, 1, 0][0.02354457481961782, 0.9561573222777804], 
             RGBColor[1, 1, 0][0.02354457481961782, 0.9561573222777804], 
             RGBColor[1, 1, 0][0.02446474584285437, 0.9528198705974871], 
             RGBColor[1, 1, 0][0.02446474584285437, 0.9528198705974871], 
             RGBColor[1, 1, 0][0.024519495398028765`, 0.952617486521708], 
             RGBColor[1, 1, 0][0.024519495398028765`, 0.952617486521708], 
             RGBColor[1, 1, 0][0.024574362769521827`, 0.9524142381635525], 
             RGBColor[1, 1, 0][0.024574362769521827`, 0.9524142381635525], 
             RGBColor[1, 1, 0][0.0246844519761317, 0.9520051339546381], 
             RGBColor[1, 1, 0][0.0246844519761317, 0.9520051339546381], 
             RGBColor[1, 1, 0][0.02490605537713915, 0.9511763921940557], 
             RGBColor[1, 1, 0][0.02490605537713915, 0.9511763921940557], 
             RGBColor[1, 1, 0][0.025355019659090008`, 0.9494759353486658], 
             RGBColor[1, 1, 0][0.025355019659090008`, 0.9494759353486658], 
             RGBColor[1, 1, 0][0.026276445871668167`, 0.9458961959489549], 
             RGBColor[1, 1, 0][0.026276445871668167`, 0.9458961959489549], 
             RGBColor[1, 1, 0][0.026335094048981836`, 0.9456642631193468], 
             RGBColor[1, 1, 0][0.026335094048981836`, 0.9456642631193468], 
             RGBColor[1, 1, 0][0.02639386843211262, 0.945431341122706], 
             RGBColor[1, 1, 0][0.02639386843211262, 0.945431341122706], 
             RGBColor[1, 1, 0][0.026511796902746076`, 0.9449625129119635], 
             RGBColor[1, 1, 0][0.026511796902746076`, 0.9449625129119635], 
             RGBColor[1, 1, 0][0.026749180302742606`, 0.9440128016369019], 
             RGBColor[1, 1, 0][0.026749180302742606`, 0.9440128016369019], 
             RGBColor[1, 1, 0][0.02723011456296599, 0.9420642010806224], 
             RGBColor[1, 1, 0][0.02723011456296599, 0.9420642010806224], 
             RGBColor[1, 1, 0][0.028217153959443495`, 0.9379623778424799], 
             RGBColor[1, 1, 0][0.028217153959443495`, 0.9379623778424799], 
             RGBColor[1, 1, 0][0.028278743358441043`, 0.937701862424131], 
             RGBColor[1, 1, 0][0.028278743358441043`, 0.937701862424131], 
             RGBColor[1, 1, 0][0.028340462687110508`, 0.937440259449087], 
             RGBColor[1, 1, 0][0.028340462687110508`, 0.937440259449087], 
             RGBColor[1, 1, 0][0.02846429223044764, 0.936913772868008], 
             RGBColor[1, 1, 0][0.02846429223044764, 0.936913772868008], 
             RGBColor[1, 1, 0][0.028713522572442318`, 0.9358475504415233], 
             RGBColor[1, 1, 0][0.028713522572442318`, 0.9358475504415233], 
             RGBColor[1, 1, 0][0.029218330458385122`, 0.9336610792121905], 
             RGBColor[1, 1, 0][0.029218330458385122`, 0.9336610792121905], 
             RGBColor[1, 1, 0][0.030253840427646103`, 0.9290635444914929], 
             RGBColor[1, 1, 0][0.030253840427646103`, 0.9290635444914929], 
             RGBColor[1, 1, 0][0.030319726442764143`, 0.9287659103595898], 
             RGBColor[1, 1, 0][0.030319726442764143`, 0.9287659103595898], 
             RGBColor[1, 1, 0][0.030385751451742566`, 0.9284670358325317], 
             RGBColor[1, 1, 0][0.030385751451742566`, 0.9284670358325317], 
             RGBColor[1, 1, 0][0.03051821962479113, 0.9278655451801991], 
             RGBColor[1, 1, 0][0.03051821962479113, 0.9278655451801991], 
             RGBColor[1, 1, 0][0.030784836840542555`, 0.9266474534497067], 
             RGBColor[1, 1, 0][0.030784836840542555`, 0.9266474534497067], 
             RGBColor[1, 1, 0][0.03132486126919849, 0.9241496586603655], 
             RGBColor[1, 1, 0][0.03132486126919849, 0.9241496586603655], 
             RGBColor[1, 1, 0][0.03243261076180668, 0.918897982494379], 
             RGBColor[1, 1, 0][0.03243261076180668, 0.918897982494379], 
             RGBColor[1, 1, 0][0.03250908054820261, 0.918529112125528], 
             RGBColor[1, 1, 0][0.03250908054820261, 0.918529112125528], 
             RGBColor[1, 1, 0][0.03258572536021369, 0.9181585770229189], 
             RGBColor[1, 1, 0][0.03258572536021369, 0.9181585770229189], 
             RGBColor[1, 1, 0][0.03273954166440713, 0.9174124830096738], 
             RGBColor[1, 1, 0][0.03273954166440713, 0.9174124830096738], 
             RGBColor[1, 1, 0][0.03304929226822398, 0.9158999907195337], 
             RGBColor[1, 1, 0][0.03304929226822398, 0.9158999907195337], 
             RGBColor[1, 1, 0][0.033677356433178346`, 0.9127920897268735], 
             RGBColor[1, 1, 0][0.033677356433178346`, 0.9127920897268735], 
             RGBColor[1, 1, 0][0.034968477017560395`, 0.9062305827837929], 
             RGBColor[1, 1, 0][0.034968477017560395`, 0.9062305827837929], 
             RGBColor[1, 1, 0][0.035050750946642124`, 0.9058046116139141], 
             RGBColor[1, 1, 0][0.035050750946642124`, 0.9058046116139141], 
             RGBColor[1, 1, 0][0.035133213185979804`, 0.9053767227301817], 
             RGBColor[1, 1, 0][0.035133213185979804`, 0.9053767227301817], 
             RGBColor[1, 1, 0][0.03529870432044313, 0.904515157890205], 
             RGBColor[1, 1, 0][0.03529870432044313, 0.904515157890205], 
             RGBColor[1, 1, 0][0.03563196534303195, 0.9027686403817683], 
             RGBColor[1, 1, 0][0.03563196534303195, 0.9027686403817683], 
             RGBColor[1, 1, 0][0.03630770028360965, 0.8991801070408401], 
             RGBColor[1, 1, 0][0.03630770028360965, 0.8991801070408401], 
             RGBColor[1, 1, 0][0.03769681837065959, 0.8916049679092029], 
             RGBColor[1, 1, 0][0.03769681837065959, 0.8916049679092029], 
             RGBColor[1, 1, 0][0.03777941728799842, 0.8911461612554991], 
             RGBColor[1, 1, 0][0.03777941728799842, 0.8911461612554991], 
             RGBColor[1, 1, 0][0.03786219261641224, 0.8906854328267615], 
             RGBColor[1, 1, 0][0.03786219261641224, 0.8906854328267615], 
             RGBColor[1, 1, 0][0.038028274014353165`, 0.8897581791096026], 
             RGBColor[1, 1, 0][0.038028274014353165`, 0.8897581791096026], 
             RGBColor[1, 1, 0][0.03836257037506468, 0.8878802617649674], 
             RGBColor[1, 1, 0][0.03836257037506468, 0.8878802617649674], 
             RGBColor[1, 1, 0][0.03903978284085136, 0.8840289814296179], 
             RGBColor[1, 1, 0][0.03903978284085136, 0.8840289814296179], 
             RGBColor[1, 1, 0][0.040429381688415963`, 0.8759297613324845], 
             RGBColor[1, 1, 0][0.040429381688415963`, 0.8759297613324845], 
             RGBColor[1, 1, 0][0.040517816692327575`, 0.8754053948522221], 
             RGBColor[1, 1, 0][0.040517816692327575`, 0.8754053948522221], 
             RGBColor[1, 1, 0][0.040606440571766995`, 0.8748788387611512], 
             RGBColor[1, 1, 0][0.040606440571766995`, 0.8748788387611512], 
             RGBColor[1, 1, 0][0.04078425657165843, 0.8738191220516737], 
             RGBColor[1, 1, 0][0.04078425657165843, 0.8738191220516737], 
             RGBColor[1, 1, 0][0.04114217288484567, 0.8716730187304036], 
             RGBColor[1, 1, 0][0.04114217288484567, 0.8716730187304036], 
             RGBColor[1, 1, 0][0.0418672342898903, 0.8672720888954208], 
             RGBColor[1, 1, 0][0.0418672342898903, 0.8672720888954208], 
             RGBColor[1, 1, 0][0.043355016254584586`, 0.8580185102535389], 
             RGBColor[1, 1, 0][0.043355016254584586`, 0.8580185102535389], 
             RGBColor[1, 1, 0][0.04345764471795094, 0.8573691594222251], 
             RGBColor[1, 1, 0][0.04345764471795094, 0.8573691594222251], 
             RGBColor[1, 1, 0][0.043560510763080144`, 0.8567168797788155], 
             RGBColor[1, 1, 0][0.043560510763080144`, 0.8567168797788155], 
             RGBColor[1, 1, 0][0.043766957799878436`, 0.8554034826902882], 
             RGBColor[1, 1, 0][0.043766957799878436`, 0.8554034826902882], 
             RGBColor[1, 1, 0][0.04418272713985971, 0.8527409747927382], 
             RGBColor[1, 1, 0][0.04418272713985971, 0.8527409747927382], 
             RGBColor[1, 1, 0][0.04502589180711803, 0.8472701591814135], 
             RGBColor[1, 1, 0][0.04502589180711803, 0.8472701591814135], 
             RGBColor[1, 1, 0][0.04675974199437134, 0.8357210367495512], 
             RGBColor[1, 1, 0][0.04675974199437134, 0.8357210367495512], 
             RGBColor[1, 1, 0][0.046870252293991686`, 0.8349713336798323], 
             RGBColor[1, 1, 0][0.046870252293991686`, 0.8349713336798323], 
             RGBColor[1, 1, 0][0.046981018421585405`, 0.8342182642982188], 
             RGBColor[1, 1, 0][0.046981018421585405`, 0.8342182642982188], 
             RGBColor[1, 1, 0][0.04720332053099988, 0.8327019681308454], 
             RGBColor[1, 1, 0][0.04720332053099988, 0.8327019681308454], 
             RGBColor[1, 1, 0][0.04765102083583893, 0.8296283336130111], 
             RGBColor[1, 1, 0][0.04765102083583893, 0.8296283336130111], 
             RGBColor[1, 1, 0][0.0485589403052689, 0.8233135454979053], 
             RGBColor[1, 1, 0][0.0485589403052689, 0.8233135454979053], 
             RGBColor[1, 1, 0][0.050425949684588314`, 0.8099862774208242], 
             RGBColor[1, 1, 0][0.050425949684588314`, 0.8099862774208242], 
             RGBColor[1, 1, 0][0.050542772281763224`, 0.8091371377413774], 
             RGBColor[1, 1, 0][0.050542772281763224`, 0.8091371377413774], 
             RGBColor[1, 1, 0][0.0506598603769675, 0.8082842745809465], 
             RGBColor[1, 1, 0][0.0506598603769675, 0.8082842745809465], 
             RGBColor[1, 1, 0][0.05089483547638247, 0.8065673150538494], 
             RGBColor[1, 1, 0][0.05089483547638247, 0.8065673150538494], 
             RGBColor[1, 1, 0][0.0513679982926321, 0.8030880204644568], 
             RGBColor[1, 1, 0][0.0513679982926321, 0.8030880204644568], 
             RGBColor[1, 1, 0][0.05232731140889949, 0.7959443364932537], 
             RGBColor[1, 1, 0][0.05232731140889949, 0.7959443364932537], 
             RGBColor[1, 1, 0][0.05429900256063813, 0.7808870184462113], 
             RGBColor[1, 1, 0][0.05429900256063813, 0.7808870184462113], 
             RGBColor[1, 1, 0][0.05442462728968823, 0.7799106486263512], 
             RGBColor[1, 1, 0][0.05442462728968823, 0.7799106486263512], 
             RGBColor[1, 1, 0][0.05455053752101973, 0.7789300231137293], 
             RGBColor[1, 1, 0][0.05455053752101973, 0.7789300231137293], 
             RGBColor[1, 1, 0][0.054803217087399596`, 0.7769559342296457], 
             RGBColor[1, 1, 0][0.054803217087399596`, 0.7769559342296457], 
             RGBColor[1, 1, 0][0.05531203089590415, 0.7729559058931966], 
             RGBColor[1, 1, 0][0.05531203089590415, 0.7729559058931966], 
             RGBColor[1, 1, 0][0.056343624553464214`, 0.7647443984114881], 
             RGBColor[1, 1, 0][0.056343624553464214`, 0.7647443984114881], 
             RGBColor[1, 1, 0][0.05846387502467105, 0.7474422910454206], 
             RGBColor[1, 1, 0][0.05846387502467105, 0.7474422910454206], 
             RGBColor[1, 1, 0][0.05858986682967023, 0.7463962553272016], 
             RGBColor[1, 1, 0][0.05858986682967023, 0.7463962553272016], 
             RGBColor[1, 1, 0][0.05871612568653823, 0.7453459973929065], 
             RGBColor[1, 1, 0][0.05871612568653823, 0.7453459973929065], 
             RGBColor[1, 1, 0][0.058969446821249875`, 0.7432327504214262], 
             RGBColor[1, 1, 0][0.058969446821249875`, 0.7432327504214262], 
             RGBColor[1, 1, 0][0.0594793186994914, 0.7389548778989704], 
             RGBColor[1, 1, 0][0.0594793186994914, 0.7389548778989704], 
             RGBColor[1, 1, 0][0.06051210930739928, 0.7301899401440978], 
             RGBColor[1, 1, 0][0.06051210930739928, 0.7301899401440978], 
             RGBColor[1, 1, 0][0.06263092174294305, 0.7117931378348933], 
             RGBColor[1, 1, 0][0.06263092174294305, 0.7117931378348933], 
             RGBColor[1, 1, 0][0.06276574600822418, 0.7106037379839729], 
             RGBColor[1, 1, 0][0.06276574600822418, 0.7106037379839729], 
             RGBColor[1, 1, 0][0.06290085604663169, 0.7094095738332793], 
             RGBColor[1, 1, 0][0.06290085604663169, 0.7094095738332793], 
             RGBColor[1, 1, 0][0.06317193586700509, 0.707006881175826], 
             RGBColor[1, 1, 0][0.06317193586700509, 0.707006881175826], 
             RGBColor[1, 1, 0][0.06371755152329234, 0.7021435350924399], 
             RGBColor[1, 1, 0][0.06371755152329234, 0.7021435350924399], 
             RGBColor[1, 1, 0][0.06482274431659657, 0.6921809256915923], 
             RGBColor[1, 1, 0][0.06482274431659657, 0.6921809256915923], 
             RGBColor[1, 1, 0][0.06709009281511735, 0.6712786803806092], 
             RGBColor[1, 1, 0][0.06709009281511735, 0.6712786803806092], 
             RGBColor[1, 1, 0][0.06724656721284386, 0.6698133480411145], 
             RGBColor[1, 1, 0][0.06724656721284386, 0.6698133480411145], 
             RGBColor[1, 1, 0][0.06740340131523848, 0.6683417058500166], 
             RGBColor[1, 1, 0][0.06740340131523848, 0.6683417058500166], 
             RGBColor[1, 1, 0][0.06771815194350186, 0.6653793914031361], 
             RGBColor[1, 1, 0][0.06771815194350186, 0.6653793914031361], 
             RGBColor[1, 1, 0][0.06835200616690433, 0.6593779341812729], 
             RGBColor[1, 1, 0][0.06835200616690433, 0.6593779341812729], 
             RGBColor[1, 1, 0][0.069637314277267, 0.6470619742265493], 
             RGBColor[1, 1, 0][0.069637314277267, 0.6470619742265493], 
             RGBColor[1, 1, 0][0.07227985768708467, 0.6211309291944853], 
             RGBColor[1, 1, 0][0.07227985768708467, 0.6211309291944853], 
             RGBColor[1, 1, 0][0.07244826236016984, 0.619450828432952], 
             RGBColor[1, 1, 0][0.07244826236016984, 0.619450828432952], 
             RGBColor[1, 1, 0][0.0726170541633412, 0.6177635743545815], 
             RGBColor[1, 1, 0][0.0726170541633412, 0.6177635743545815], 
             RGBColor[1, 1, 0][0.07295580272173939, 0.6143674953941928], 
             RGBColor[1, 1, 0][0.07295580272173939, 0.6143674953941928], 
             RGBColor[1, 1, 0][0.0736379846941692, 0.6074882737632671], 
             RGBColor[1, 1, 0][0.0736379846941692, 0.6074882737632671], 
             RGBColor[1, 1, 0][0.07502129017598884, 0.5933752639660369], 
             RGBColor[1, 1, 0][0.07502129017598884, 0.5933752639660369], 
             RGBColor[1, 1, 0][0.07786531236434642, 0.5636794065554604], 
             RGBColor[1, 1, 0][0.07786531236434642, 0.5636794065554604], 
             RGBColor[1, 1, 0][0.07803448871319593, 0.5618844313157185], 
             RGBColor[1, 1, 0][0.07803448871319593, 0.5618844313157185], 
             RGBColor[1, 1, 0][0.07820402807079463, 0.5600824175893502], 
             RGBColor[1, 1, 0][0.07820402807079463, 0.5600824175893502], 
             RGBColor[1, 1, 0][0.07854419892960308, 0.5564571762445509], 
             RGBColor[1, 1, 0][0.07854419892960308, 0.5564571762445509], 
             RGBColor[1, 1, 0][0.07922893113700583, 0.5491211456667243], 
             RGBColor[1, 1, 0][0.07922893113700583, 0.5491211456667243], 
             RGBColor[1, 1, 0][0.08061613425034772, 0.5341013053379343], 
             RGBColor[1, 1, 0][0.08061613425034772, 0.5341013053379343], 
             RGBColor[1, 1, 0][0.0834629321569043, 0.5026250348645248], 
             RGBColor[1, 1, 0][0.0834629321569043, 0.5026250348645248], 
             RGBColor[1, 1, 0][0.08364411955205672, 0.5005923425424657], 
             RGBColor[1, 1, 0][0.08364411955205672, 0.5005923425424657], 
             RGBColor[1, 1, 0][0.08382569572856145, 0.49855179625399115`], 
             RGBColor[1, 1, 0][0.08382569572856145, 0.49855179625399115`], 
             RGBColor[1, 1, 0][0.08419001776431535, 0.49444703612612545`], 
             RGBColor[1, 1, 0][0.08419001776431535, 0.49444703612612545`], 
             RGBColor[1, 1, 0][0.08492336403807033, 0.4861421031481543], 
             RGBColor[1, 1, 0][0.08492336403807033, 0.4861421031481543], 
             RGBColor[1, 1, 0][0.08640905468196373, 0.4691446025232943], 
             RGBColor[1, 1, 0][0.08640905468196373, 0.4691446025232943], 
             RGBColor[1, 1, 0][0.08945796725586729, 0.43355051888633256`], 
             RGBColor[1, 1, 0][0.08945796725586729, 0.43355051888633256`], 
             RGBColor[1, 1, 0][0.08964819280245814, 0.4312984807077874], 
             RGBColor[1, 1, 0][0.08964819280245814, 0.4312984807077874], 
             RGBColor[1, 1, 0][0.08983881847692712, 0.42903805965590086`], 
             RGBColor[1, 1, 0][0.08983881847692712, 0.42903805965590086`], 
             RGBColor[1, 1, 0][0.09022127357784845, 0.4244919635917073], 
             RGBColor[1, 1, 0][0.09022127357784845, 0.4244919635917073], 
             RGBColor[1, 1, 0][0.09099102246541649, 0.41529801607466055`], 
             RGBColor[1, 1, 0][0.09099102246541649, 0.41529801607466055`], 
             RGBColor[1, 1, 0][0.09255006590607766, 0.3964971517446543], 
             RGBColor[1, 1, 0][0.09255006590607766, 0.3964971517446543], 
             RGBColor[1, 1, 0][0.09574788715069626, 0.3571954988438048], 
             RGBColor[1, 1, 0][0.09574788715069626, 0.3571954988438048], 
             RGBColor[1, 1, 0][0.09595134316157652, 0.3546619730313128], 
             RGBColor[1, 1, 0][0.09595134316157652, 0.3546619730313128], 
             RGBColor[1, 1, 0][0.09615522712981242, 0.352119204735372], 
             RGBColor[1, 1, 0][0.09615522712981242, 0.352119204735372], 
             RGBColor[1, 1, 0][0.09656428254097435, 0.34700583127209605`], 
             RGBColor[1, 1, 0][0.09656428254097435, 0.34700583127209605`], 
             RGBColor[1, 1, 0][0.09738756858667517, 0.336666969638933], 
             RGBColor[1, 1, 0][0.09738756858667517, 0.336666969638933], 
             RGBColor[1, 1, 0][0.09905504577315444, 0.3155346323518009], 
             RGBColor[1, 1, 0][0.09905504577315444, 0.3155346323518009], 
             RGBColor[1, 1, 0][0.10247528015070288`, 0.2714020369207014], 
             RGBColor[1, 1, 0][0.10247528015070288`, 0.2714020369207014], 
             RGBColor[1, 1, 0][0.10271142643735665`, 0.26831669005067776`], 
             RGBColor[1, 1, 0][0.10271142643735665`, 0.26831669005067776`], 
             RGBColor[1, 1, 0][0.10294811176278001`, 0.265219417646067], 
             RGBColor[1, 1, 0][0.10294811176278001`, 0.265219417646067], 
             RGBColor[1, 1, 0][0.10342310445448676`, 0.2589889543788165], 
             RGBColor[1, 1, 0][0.10342310445448676`, 0.2589889543788165], 
             RGBColor[1, 1, 0][0.10437961263084106`, 0.24638336112457437`], 
             RGBColor[1, 1, 0][0.10437961263084106`, 0.24638336112457437`], 
             RGBColor[1, 1, 0][0.10631899957331704`, 0.2205855697062757], 
             RGBColor[1, 1, 0][0.10631899957331704`, 0.2205855697062757], 
             RGBColor[1, 1, 0][0.10656391971713287`, 0.21730516130804964`], 
             RGBColor[1, 1, 0][0.10656391971713287`, 0.21730516130804964`], 
             RGBColor[1, 1, 0][0.10680939892734292`, 0.2140122607678023], 
             RGBColor[1, 1, 0][0.10680939892734292`, 0.2140122607678023], 
             RGBColor[1, 1, 0][0.10730203965446515`, 0.20738884212460393`], 
             RGBColor[1, 1, 0][0.10730203965446515`, 0.20738884212460393`], 
             RGBColor[1, 1, 0][0.10829408625165464`, 0.19399054804087934`], 
             RGBColor[1, 1, 0][0.10829408625165464`, 0.19399054804087934`], 
             RGBColor[1, 1, 0][0.1103055298174066, 0.16658026590181158`], 
             RGBColor[1, 1, 0][0.1103055298174066, 0.16658026590181158`], 
             RGBColor[1, 1, 0][0.11055954980517275`, 0.16309576461990186`], 
             RGBColor[1, 1, 0][0.11055954980517275`, 0.16309576461990186`], 
             RGBColor[1, 1, 0][0.11081414963107065`, 0.15959821031450924`], 
             RGBColor[1, 1, 0][0.11081414963107065`, 0.15959821031450924`], 
             RGBColor[1, 1, 0][0.11132509409454741`, 0.1525638038441947], 
             RGBColor[1, 1, 0][0.11132509409454741`, 0.1525638038441947], 
             RGBColor[1, 1, 0][0.11235399951880243`, 0.1383368309334292], 
             RGBColor[1, 1, 0][0.11235399951880243`, 0.1383368309334292], 
             RGBColor[1, 1, 0][0.11444017692342062`, 0.10924254714783034`], 
             RGBColor[1, 1, 0][0.11444017692342062`, 0.10924254714783034`], 
             RGBColor[1, 1, 0][0.11872844407418796`, 0.04843201983961502], 
             RGBColor[1, 1, 0][0.11872844407418796`, 0.04843201983961502], 
             RGBColor[1, 1, 0][0.11898336790205652`, 0.04477589259021112], 
             RGBColor[1, 1, 0][0.11898336790205652`, 0.04477589259021112], 
             RGBColor[1, 1, 0][0.1192388346114761, 0.04110746859539142], 
             RGBColor[1, 1, 0][0.1192388346114761, 0.04110746859539142], 
             RGBColor[1, 1, 0][0.11975140130187634`, 0.03373362645210234], 
             RGBColor[1, 1, 0][0.11975140130187634`, 0.03373362645210234], 
             RGBColor[1, 1, 0][0.1207831002954462, 0.01883724348220227], 
             RGBColor[1, 1, 0][0.1207831002954462, 0.01883724348220227], 
             RGBColor[1, 1, 0][0.5749819281648693, 0.0029608257226592456`], 
             RGBColor[1, 1, 0][0.5749819281648693, 0.0029608257226592456`], 
             RGBColor[1, 1, 0][0.5761956207648561, 0.02056664199196266], 
             RGBColor[1, 1, 0][0.5761956207648561, 0.02056664199196266], 
             RGBColor[1, 1, 0][0.5774118709229118, 0.03811020779067451], 
             RGBColor[1, 1, 0][0.5774118709229118, 0.03811020779067451], 
             RGBColor[1, 1, 0][0.5798520654822799, 0.07299995103316398], 
             RGBColor[1, 1, 0][0.5798520654822799, 0.07299995103316398], 
             RGBColor[1, 1, 0][0.584763383194724, 0.141914471730482], 
             RGBColor[1, 1, 0][0.584763383194724, 0.141914471730482], 
             RGBColor[1, 1, 0][0.5859976878007792, 0.158946996934725], 
             RGBColor[1, 1, 0][0.5859976878007792, 0.158946996934725], 
             RGBColor[1, 1, 0][0.5872345933996268, 0.1758955634159206], 
             RGBColor[1, 1, 0][0.5872345933996268, 0.1758955634159206], 
             RGBColor[1, 1, 0][0.5897162295110543, 0.2095296636380378], 
             RGBColor[1, 1, 0][0.5897162295110543, 0.2095296636380378], 
             RGBColor[1, 1, 0][0.5947109555844735, 0.2756668195753422], 
             RGBColor[1, 1, 0][0.5947109555844735, 0.2756668195753422], 
             RGBColor[1, 1, 0][0.6048274664867156, 0.40277434571306764`], 
             RGBColor[1, 1, 0][0.6048274664867156, 0.40277434571306764`], 
             RGBColor[1, 1, 0][0.6061040512039921, 0.4181215654094885], 
             RGBColor[1, 1, 0][0.6061040512039921, 0.4181215654094885], 
             RGBColor[1, 1, 0][0.6073833260089775, 0.4333386711803458], 
             RGBColor[1, 1, 0][0.6073833260089775, 0.4333386711803458], 
             RGBColor[1, 1, 0][0.6099499685688039, 0.463370615923056], 
             RGBColor[1, 1, 0][0.6099499685688039, 0.463370615923056], 
             RGBColor[1, 1, 0][0.6151157849653658, 0.5217415161834034], 
             RGBColor[1, 1, 0][0.6151157849653658, 0.5217415161834034], 
             RGBColor[1, 1, 0][0.6164140497785252, 0.5359639688404275], 
             RGBColor[1, 1, 0][0.6164140497785252, 0.5359639688404275], 
             RGBColor[1, 1, 0][0.6177150503648524, 0.5500322652229049], 
             RGBColor[1, 1, 0][0.6177150503648524, 0.5500322652229049], 
             RGBColor[1, 1, 0][0.6203252819290265, 0.5776942539950447], 
             RGBColor[1, 1, 0][0.6203252819290265, 0.5776942539950447], 
             RGBColor[1, 1, 0][0.6255788288093339, 0.6310346610532886], 
             RGBColor[1, 1, 0][0.6255788288093339, 0.6310346610532886], 
             RGBColor[1, 1, 0][0.6268991419090261, 0.6439387473133611], 
             RGBColor[1, 1, 0][0.6268991419090261, 0.6439387473133611], 
             RGBColor[1, 1, 0][0.6282222372432169, 0.6566643278950058], 
             RGBColor[1, 1, 0][0.6282222372432169, 0.6566643278950058], 
             RGBColor[1, 1, 0][0.6308767980789396, 0.681567770336615], 
             RGBColor[1, 1, 0][0.6308767980789396, 0.681567770336615], 
             RGBColor[1, 1, 0][0.6362195653600128, 0.7290984362711296], 
             RGBColor[1, 1, 0][0.6362195653600128, 0.7290984362711296], 
             RGBColor[1, 1, 0][0.6375623011898293, 0.7404891386360164], 
             RGBColor[1, 1, 0][0.6375623011898293, 0.7404891386360164], 
             RGBColor[1, 1, 0][0.6389078665045224, 0.7516769836194431], 
             RGBColor[1, 1, 0][0.6389078665045224, 0.7516769836194431], 
             RGBColor[1, 1, 0][0.6416075094508688, 0.773431998511622], 
             RGBColor[1, 1, 0][0.6416075094508688, 0.773431998511622], 
             RGBColor[1, 1, 0][0.6470410123528242, 0.8143749896898111], 
             RGBColor[1, 1, 0][0.6470410123528242, 0.8143749896898111], 
             RGBColor[1, 1, 0][0.6485226825406294, 0.824870631101286], 
             RGBColor[1, 1, 0][0.6485226825406294, 0.824870631101286], 
             RGBColor[1, 1, 0][0.650007740512033, 0.8350989338380612], 
             RGBColor[1, 1, 0][0.650007740512033, 0.8350989338380612], 
             RGBColor[1, 1, 0][0.6529880508075023, 0.8547384412955479], 
             RGBColor[1, 1, 0][0.6529880508075023, 0.8547384412955479], 
             RGBColor[1, 1, 0][0.6544833186768244, 0.8641421493477128], 
             RGBColor[1, 1, 0][0.6544833186768244, 0.8641421493477128], 
             RGBColor[1, 1, 0][0.6559820054203346, 0.8732635278932531], 
             RGBColor[1, 1, 0][0.6559820054203346, 0.8732635278932531], 
             RGBColor[1, 1, 0][0.6589896668163061, 0.8906445254160352], 
             RGBColor[1, 1, 0][0.6589896668163061, 0.8906445254160352], 
             RGBColor[1, 1, 0][0.6604986571566854, 0.8988968159619476], 
             RGBColor[1, 1, 0][0.6604986571566854, 0.8988968159619476], 
             RGBColor[1, 1, 0][0.6620110977471708, 0.9068521227799962], 
             RGBColor[1, 1, 0][0.6620110977471708, 0.9068521227799962], 
             RGBColor[1, 1, 0][0.6650463612519707, 0.9218574082933552], 
             RGBColor[1, 1, 0][0.6650463612519707, 0.9218574082933552], 
             RGBColor[1, 1, 0][0.6665691999981751, 0.9289002690526491], 
             RGBColor[1, 1, 0][0.6665691999981751, 0.9289002690526491], 
             RGBColor[1, 1, 0][0.6680955206583489, 0.9356319129860111], 
             RGBColor[1, 1, 0][0.6680955206583489, 0.9356319129860111], 
             RGBColor[1, 1, 0][0.6711586395838732, 0.9481476549904354], 
             RGBColor[1, 1, 0][0.6711586395838732, 0.9481476549904354], 
             RGBColor[1, 1, 0][0.6726954538264075, 0.9539248899979439], 
             RGBColor[1, 1, 0][0.6726954538264075, 0.9539248899979439], 
             RGBColor[1, 1, 0][0.6742357819373624, 0.9593771849539142], 
             RGBColor[1, 1, 0][0.6742357819373624, 0.9593771849539142], 
             RGBColor[1, 1, 0][0.6757796319510662, 0.9645011995106904], 
             RGBColor[1, 1, 0][0.6757796319510662, 0.9645011995106904], 
             RGBColor[1, 1, 0][0.6773270119202184, 0.9692936324593733], 
             RGBColor[1, 1, 0][0.6773270119202184, 0.9692936324593733], 
             RGBColor[1, 1, 0][0.678877929915931, 0.9737512232337965], 
             RGBColor[1, 1, 0][0.678877929915931, 0.9737512232337965], 
             RGBColor[1, 1, 0][0.680432394027768, 0.9778707534291832], 
             RGBColor[1, 1, 0][0.680432394027768, 0.9778707534291832], 
             RGBColor[1, 1, 0][0.681990412363794, 0.9816490483352308], 
             RGBColor[1, 1, 0][0.681990412363794, 0.9816490483352308], 
             RGBColor[1, 1, 0][0.6835519930506082, 0.9850829784833551], 
             RGBColor[1, 1, 0][0.6835519930506082, 0.9850829784833551], 
             RGBColor[1, 1, 0][0.6851171442333933, 0.9881694612078209], 
             RGBColor[1, 1, 0][0.6851171442333933, 0.9881694612078209], 
             RGBColor[1, 1, 0][0.6866858740759546, 0.9909054622204615], 
             RGBColor[1, 1, 0][0.6866858740759546, 0.9909054622204615], 
             RGBColor[1, 1, 0][0.6882581907607658, 0.9932879971986819], 
             RGBColor[1, 1, 0][0.6882581907607658, 0.9932879971986819], 
             RGBColor[1, 1, 0][0.6898341024890062, 0.9953141333864374], 
             RGBColor[1, 1, 0][0.6898341024890062, 0.9953141333864374], 
             RGBColor[1, 1, 0][0.6914136174806083, 0.9969809912078461], 
             RGBColor[1, 1, 0][0.6914136174806083, 0.9969809912078461], 
             RGBColor[1, 1, 0][0.6929967439743012, 0.9982857458930964], 
             RGBColor[1, 1, 0][0.6929967439743012, 0.9982857458930964], 
             RGBColor[1, 1, 0][0.694583490227648, 0.999225629116285], 
             RGBColor[1, 1, 0][0.694583490227648, 0.999225629116285], 
             RGBColor[1, 1, 0][0.6961738645170944, 0.9997979306448214], 
             RGBColor[1, 1, 0][0.6961738645170944, 0.9997979306448214], 
             RGBColor[1, 1, 0][0.6977678751380099, 1.0000000000000004`], 
             RGBColor[1, 1, 0][0.6977678751380099, 1.0000000000000004`], 
             RGBColor[1, 1, 0][0.6993655304047309, 0.999829248128351], 
             RGBColor[1, 1, 0][0.6993655304047309, 0.999829248128351], 
             RGBColor[1, 1, 0][0.7009668386506027, 0.9992831490833372], 
             RGBColor[1, 1, 0][0.7009668386506027, 0.9992831490833372], 
             RGBColor[1, 1, 0][0.7025718082280273, 0.9983592417169843], 
             RGBColor[1, 1, 0][0.7025718082280273, 0.9983592417169843], 
             RGBColor[1, 1, 0][0.7041804475085022, 0.9970551313809808], 
             RGBColor[1, 1, 0][0.7041804475085022, 0.9970551313809808], 
             RGBColor[1, 1, 0][0.7057927648826671, 0.9953684916367963], 
             RGBColor[1, 1, 0][0.7057927648826671, 0.9953684916367963], 
             RGBColor[1, 1, 0][0.7074087687603448, 0.9932970659743346], 
             RGBColor[1, 1, 0][0.7074087687603448, 0.9932970659743346], 
             RGBColor[1, 1, 0][0.7090284675705889, 0.990838669538635], 
             RGBColor[1, 1, 0][0.7090284675705889, 0.990838669538635], 
             RGBColor[1, 1, 0][0.7106518697617236, 0.9879911908641039], 
             RGBColor[1, 1, 0][0.7106518697617236, 0.9879911908641039], 
             RGBColor[1, 1, 0][0.7122789838013923, 0.9847525936157583], 
             RGBColor[1, 1, 0][0.7122789838013923, 0.9847525936157583], 
             RGBColor[1, 1, 0][0.7139098181765987, 0.9811209183369397], 
             RGBColor[1, 1, 0][0.7139098181765987, 0.9811209183369397], 
             RGBColor[1, 1, 0][0.7155443813937491, 0.9770942842029354], 
             RGBColor[1, 1, 0][0.7155443813937491, 0.9770942842029354], 
             RGBColor[1, 1, 0][0.7171826819787034, 0.9726708907799374], 
             RGBColor[1, 1, 0][0.7171826819787034, 0.9726708907799374], 
             RGBColor[1, 1, 0][0.7188247284768137, 0.9678490197887466], 
             RGBColor[1, 1, 0][0.7188247284768137, 0.9678490197887466], 
             RGBColor[1, 1, 0][0.7221200934916436, 0.9570033933685981], 
             RGBColor[1, 1, 0][0.7221200934916436, 0.9570033933685981], 
             RGBColor[1, 1, 0][0.7237734291969415, 0.9509766280817793], 
             RGBColor[1, 1, 0][0.7237734291969415, 0.9509766280817793], 
             RGBColor[1, 1, 0][0.7254305451926356, 0.9445453690616993], 
             RGBColor[1, 1, 0][0.7254305451926356, 0.9445453690616993], 
             RGBColor[1, 1, 0][0.7287561526489493, 0.9304643389108734], 
             RGBColor[1, 1, 0][0.7287561526489493, 0.9304643389108734], 
             RGBColor[1, 1, 0][0.7304246614558897, 0.922812286106694], 
             RGBColor[1, 1, 0][0.7304246614558897, 0.922812286106694], 
             RGBColor[1, 1, 0][0.7320969852459563, 0.9147511797796454], 
             RGBColor[1, 1, 0][0.7320969852459563, 0.9147511797796454], 
             RGBColor[1, 1, 0][0.7354531126866851, 0.8973983102565259], 
             RGBColor[1, 1, 0][0.7354531126866851, 0.8973983102565259], 
             RGBColor[1, 1, 0][0.7371369338428579, 0.8881050504579967], 
             RGBColor[1, 1, 0][0.7371369338428579, 0.8881050504579967], 
             RGBColor[1, 1, 0][0.7388246049932735, 0.8783997474718772], 
             RGBColor[1, 1, 0][0.7388246049932735, 0.8783997474718772], 
             RGBColor[1, 1, 0][0.7422115325084331, 0.8577511637280612], 
             RGBColor[1, 1, 0][0.7422115325084331, 0.8577511637280612], 
             RGBColor[1, 1, 0][0.7439108065393417, 0.8468072280495488], 
             RGBColor[1, 1, 0][0.7439108065393417, 0.8468072280495488], 
             RGBColor[1, 1, 0][0.7456139658969148, 0.8354499428389628], 
             RGBColor[1, 1, 0][0.7456139658969148, 0.8354499428389628], 
             RGBColor[1, 1, 0][0.7490319761469832, 0.8114952360702252], 
             RGBColor[1, 1, 0][0.7490319761469832, 0.8114952360702252], 
             RGBColor[1, 1, 0][0.7506320447761432, 0.7997533495418897], 
             RGBColor[1, 1, 0][0.7506320447761432, 0.7997533495418897], 
             RGBColor[1, 1, 0][0.752235526988252, 0.7876519525757674], 
             RGBColor[1, 1, 0][0.752235526988252, 0.7876519525757674], 
             RGBColor[1, 1, 0][0.7554527613069721, 0.762372030196072], 
             RGBColor[1, 1, 0][0.7554527613069721, 0.762372030196072], 
             RGBColor[1, 1, 0][0.7570665280252867, 0.7491944358242061], 
             RGBColor[1, 1, 0][0.7570665280252867, 0.7491944358242061], 
             RGBColor[1, 1, 0][0.7586837375500237, 0.7356591954535463], 
             RGBColor[1, 1, 0][0.7586837375500237, 0.7356591954535463], 
             RGBColor[1, 1, 0][0.7619285144139343, 0.7075186744051072], 
             RGBColor[1, 1, 0][0.7619285144139343, 0.7075186744051072], 
             RGBColor[1, 1, 0][0.763556096489903, 0.6929150838135701], 
             RGBColor[1, 1, 0][0.763556096489903, 0.6929150838135701], 
             RGBColor[1, 1, 0][0.7651871508459468, 0.6779572296639209], 
             RGBColor[1, 1, 0][0.7651871508459468, 0.6779572296639209], 
             RGBColor[1, 1, 0][0.7684597060450858, 0.6469831966797454], 
             RGBColor[1, 1, 0][0.7684597060450858, 0.6469831966797454], 
             RGBColor[1, 1, 0][0.775046810806224, 0.5808387837601585], 
             RGBColor[1, 1, 0][0.775046810806224, 0.5808387837601585], 
             RGBColor[1, 1, 0][0.7767023794273042, 0.5634373475989941], 
             RGBColor[1, 1, 0][0.7767023794273042, 0.5634373475989941], 
             RGBColor[1, 1, 0][0.778361480034895, 0.5456932532974028], 
             RGBColor[1, 1, 0][0.778361480034895, 0.5456932532974028], 
             RGBColor[1, 1, 0][0.7816903073662144, 0.5091848994828788], 
             RGBColor[1, 1, 0][0.7816903073662144, 0.5091848994828788], 
             RGBColor[1, 1, 0][0.7833600492084681, 0.4904248174194645], 
             RGBColor[1, 1, 0][0.7833600492084681, 0.4904248174194645], 
             RGBColor[1, 1, 0][0.7850333532743514, 0.4713304339853506], 
             RGBColor[1, 1, 0][0.7850333532743514, 0.4713304339853506], 
             RGBColor[1, 1, 0][0.7883906784917828, 0.43214833838055466`], 
             RGBColor[1, 1, 0][0.7883906784917828, 0.43214833838055466`], 
             RGBColor[1, 1, 0][0.7900747148912838, 0.41206569578708485`], 
             RGBColor[1, 1, 0][0.7900747148912838, 0.41206569578708485`], 
             RGBColor[1, 1, 0][0.7917623440103925, 0.39165889266611514`], 
             RGBColor[1, 1, 0][0.7917623440103925, 0.39165889266611514`], 
             RGBColor[1, 1, 0][0.7951484110825854, 0.3498842022686861], 
             RGBColor[1, 1, 0][0.7951484110825854, 0.3498842022686861], 
             RGBColor[1, 1, 0][0.8019639962066019, 0.26257678690909114`], 
             RGBColor[1, 1, 0][0.8019639962066019, 0.26257678690909114`], 
             RGBColor[1, 1, 0][0.8036769898927193, 0.23998636208452978`], 
             RGBColor[1, 1, 0][0.8036769898927193, 0.23998636208452978`], 
             RGBColor[1, 1, 0][0.8053936380758573, 0.2170976197511747], 
             RGBColor[1, 1, 0][0.8053936380758573, 0.2170976197511747], 
             RGBColor[1, 1, 0][0.8088379291358093, 0.17044036524123193`], 
             RGBColor[1, 1, 0][0.8088379291358093, 0.17044036524123193`], 
             RGBColor[1, 1, 0][0.810565587655552, 0.1466797471492719], 
             RGBColor[1, 1, 0][0.810565587655552, 0.1466797471492719], 
             RGBColor[1, 1, 0][0.8122969319582376, 0.12263660069664797`], 
             RGBColor[1, 1, 0][0.8122969319582376, 0.12263660069664797`], 
             RGBColor[1, 1, 0][0.8157707093821833, 0.07371985312110524], 
             RGBColor[1, 1, 0][0.8157707093821833, 0.07371985312110524], 
             RGBColor[1, 1, 0][0.8175131582802883, 0.04885512433734925], 
             RGBColor[1, 1, 0][0.8175131582802883, 0.04885512433734925], 
             RGBColor[1, 1, 0][0.8192593245150978, 0.023725612555671006`], 
             RGBColor[1, 1, 0][
             0.8192593245150978, 0.023725612555671006`]}], {}}, {
         DisplayFunction -> Identity, 
          ImagePadding -> {{36., 1.5000000000000568`}, {35., 
           35.84354704608937}}, DisplayFunction -> Identity, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "AxesInFront" -> True}, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, Ticks -> {Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
             Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
          AxesOrigin -> {-4.734247086804626, -0.80330768557028}, 
          FrameTicks -> {{Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
             Charting`ScaledFrameTicks[{Log, Exp}]}, {Quiet[
              Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
             Charting`ScaledFrameTicks[{Log, Exp}]}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 0}}, PlotRangeClipping -> True, ImagePadding -> 
          All, DisplayFunction -> Identity, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "AxesInFront" -> True, 
            "ClippingRange" -> {{{-4.734247086804626, 
             2.060909141005812}, {-8.763877590435708, \
-1.9156929257098818`*^-7}}, {{-4.734247086804626, 
             2.060909141005812}, {-0.80330768557028, \
-1.9156929257098818`*^-7}}}}, DisplayFunction -> Identity, AspectRatio -> 
          NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
          CoordinatesToolOptions -> {"DisplayFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& )}, DisplayFunction :> Identity, 
          Frame -> {{False, False}, {False, False}}, 
          FrameLabel -> {{None, None}, {None, None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "AxesInFront" -> True}, PlotLabel -> 
          FormBox["\"Log Log Plot\"", TraditionalForm], 
          PlotRange -> {{-4.734247086804626, 
            2.060909141005812}, {-0.80330768557028, 0}}, PlotRangeClipping -> 
          True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.02], Automatic}}, Ticks -> {Automatic, Automatic}}], 
        NCache[{
          Rational[1083, 2], -335.23835392494317`}, {
         541.5, -335.23835392494317`}], 
        ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}]}}, {
      Directive[Antialiasing -> False], {}, {{
        LineBox[{{0, 0}, {0, -223.49223594996212`}}]}, {
        LineBox[{{0, -223.49223594996212`}, {0, -446.98447189992424`}}]}, {
        LineBox[{{361, 0}, {361, -223.49223594996212`}}]}, {
        LineBox[{{361, -223.49223594996212`}, {361, -446.98447189992424`}}]}, {
        LineBox[{{722, 0}, {722, -223.49223594996212`}}]}, {
        LineBox[{{722, -223.49223594996212`}, {722, -446.98447189992424`}}]}, {
        LineBox[{{0, 0}, {361, 0}}]}, {
        LineBox[{{361, 0}, {722, 0}}]}, {
        LineBox[{{0, -223.49223594996212`}, {361, -223.49223594996212`}}]}, {
        LineBox[{{361, -223.49223594996212`}, {722, -223.49223594996212`}}]}, {
        LineBox[{{0, -446.98447189992424`}, {361, -446.98447189992424`}}]}, {
        LineBox[{{361, -446.98447189992424`}, {
          722, -446.98447189992424`}}]}}}}, ImageSize -> {
      UpTo[600], 
      UpTo[700]}, {PlotRangePadding -> {6, 5}}, ContentSelectable -> True],
   StyleBox["\"Multiple Plots Box\"", 20, Italic, StripOnInput -> False]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        FrameBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], Background -> RGBColor[1, 1, 0.85], 
         FrameMargins -> 4, FrameStyle -> Automatic], DefaultBaseStyle -> 
        "Labeled"], "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"Background", "\[Rule]", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{{
               GrayLevel[0], 
               RectangleBox[{0, 0}]}, {
               GrayLevel[0], 
               RectangleBox[{1, -1}]}, {
               RGBColor[1, 1, 0.85], 
               RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
             "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
             FrameStyle -> 
             RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.5666666666666667], 
             FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
             Dynamic[{
               Automatic, 1.35 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            StyleBox[
             RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "1", ",", "0.85`"}], "]"}], NumberMarks -> 
             False]], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
           Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
           With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[1, 1, 0.85]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
           "Preemptive"], 
          RGBColor[1, 1, 0.85], Editable -> False, Selectable -> False]}]}], 
     "]"}]& )]], "Output",
 CellChangeTimes->{3.860421459218069*^9, 3.8604215208801327`*^9, 
  3.8604215525868177`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"255af3b2-a15e-4061-bd15-3f0aee037ead"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "ColorDataFunction", "]"}]], "Input",
 CellChangeTimes->{{3.8604215714563336`*^9, 3.860421630442792*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"ec9daecf-93d4-4bc7-beb0-72060a2cbda1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{21., {6., 15.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{21., {6., 15.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ColorDataFunction",
              ButtonNote->"paclet:ref/ColorDataFunction"],
             "\"paclet:ref/ColorDataFunction\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ColorDataFunction\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) is a function that represents \
a color scheme. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/ColorDataFunction", 
                    "paclet:ref/ColorDataFunction", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
ColorDataFunction.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
ColorDataFunction.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ColorDataFunction\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{16., {3., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{16., {3., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ColorDataFunction",
              ButtonNote->"paclet:ref/ColorDataFunction"],
             "\"paclet:ref/ColorDataFunction\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ColorDataFunction\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"range\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) is a function that represents \
a color scheme. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ColorDataFunction\", \"[\", RowBox[{StyleBox[\"range\", \
\"TI\"], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}]\) is a function \
that represents a color scheme. ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ColorDataFunction", "Web" -> 
      "http://reference.wolfram.com/language/ref/ColorDataFunction.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`ColorDataFunction"], True]]], "Output",
 CellChangeTimes->{{3.8604215997325244`*^9, 3.8604216323975716`*^9}},
 CellLabel->
  "Out[121]=",ExpressionUUID->"9b79fa7c-8bd3-4943-9fa7-bd9661ae348c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"ColorFunction", "->", 
    RowBox[{"ColorData", "[", "\"\<BrownCyanTones\>\"", "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.860421656049514*^9, 3.860421661012931*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"675b2645-4fa3-40d0-b0fb-b02379fd6b2a"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxF0GlIk3EcwPHZtEJneJRp6vbMict5pC+CjPRZGmReZLoEpWNTN8srxYGp
lZmmQ7RVw5MxpmmIODNmYMcyNc1roSuLtkicQzQFbS2dWsug5/d/8eXz/kvn
5Z5L30UikWJ3+qf0Jm93cFp1GKF8TJb3nTaKEyq6RdqswC+gAJ9qXM7XgzkG
X71SsQja0suZ346tgrUO4yz5ZSPI0ya+Jk/8AvPelvNymZtgzzVKguuZ36C8
OHMpKInEJiyTbcf/XLYCSZpZ9ssiMuhTwC9MZNmA86b683avdoNRhqs3HuTt
BePmxX5Uqi24NMgrfddlBwY6znhGXLIHbXETV2fcB55eSV734jiAnwfSrJL9
HcHeqqGLmAnJtxHOqtVOYGp+cS+lyRk8IvBTx3D3g++d/O2EIQfAF4qyZn+y
C1hsxTo78RVpqyuKzFEeBA3tdImsxBWUHHaz7uO4geIm/ggXOwQmSy6oKQvI
jVNtZpnKHdQbwgsHKj3AltBg90muJ9hVIXQUBFDBSk5qNNmEPKqTd1RO0sAG
3+auyWgMvNVf0xDdh4x157SNedPBkzkjKY4ipMyD5z1hQnoPPq6LS/ECxQED
rGkVkm+0nhplMUBezw9MdA+pMvqYLRbkHu0cc4XWhxOKpyk1QyMMNqFmK0Oy
SuvACc1vLDPtnQw2IVPvFjGnR2aFCrPXaY04oSLEvFUvZbAJdcnOGZqPyPxM
jLq2hpT219BsMBFOWGUS1orrGGzCZy7izXE1MoYpfbK4hGzobq3e2EBahlV3
MOw6TihMUH6iPGSwCVsL1BGR48jjFVpz+gKywn7uQ4EJ2RmfHl6yjRzSYDFJ
2BWcMKssYTvq/s6H/za1ZmfcHUUGKYuojwzIkhO3zU+NyJZSa8HzTaTSa9gz
7A/yL61zKsk=
    "], {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
         13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
        47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 63, 
        59, 75, 69, 64, 76, 70, 77, 50},
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$50261#1"]& ]},
    VertexColors->CompressedData["
1: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
uIO8hA==
     "]], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {0., 9.999999795918367}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8604216567017574`*^9, 3.860421663240892*^9}},
 CellLabel->
  "Out[123]=",ExpressionUUID->"bf13439f-7c08-44e2-9a29-bf128b7fb1d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Sinc", "[", 
    RowBox[{
     RowBox[{"x", "*", "8"}], "+", 
     RowBox[{"y", "^", "2"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
   RowBox[{"ImageSize", "->", "Medium"}], ",", 
   RowBox[{"PlotPoints", "->", "20"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860421677407729*^9, 3.8604216934832487`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"d741eb2c-bec4-4139-86bd-cc6b80779da3"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxcnXdcj9///6NkZEZFb2WFskUo9CqRTckspWxFZjYtKqShEoWm9tZer/ak
EIWUtDXJKqufy+d6PK/X79s/3W732/N2rnOdx/M8r3OeZ7wm7D66aV9fISEh
wzFCQsJ//78Yuzi0t7eTn3uhx4H5vyLvxH/1oom84jGFx2y6Woi/2T18odHs
BH6W5LYFQxoaiFcN6J7d9riYnzSy4adLRQ3xyCV27QO73fiGExqtlFwriO/5
ZZZb61jNu79AZKxNVxHxdQme170c23nNwR8LrnSFEJcL03nds7SDtylb6qht
VzIPPDPT5rhxag2v8VuwlmvFU+LpewaGWn6x5XX/uplr0/WG+JmnDeOS3Ir5
V/so30+1qSU+ZtCC7FvOKXwHkdAKJdcm4i63pshs1I7jufeXEY/0aSN+eYmU
xLpPaTytqyunuFZ8JF6YtXZ0fKsy74WNRbaWwWfiR14quHaXxPO32yUZDmn4
Sjz4RL65VVUQ/+21rt+FJt3Eh9odvaiuGcgzvDHd06brB3GJZ2kbe6KjePX2
exdpnPtN/GDbyS6bYQZ8Y4f7L3t7e4lvlNwkd/FLGB/6DnsS36qv8YHvJ3+m
93hZOukLrrdzQEgfzXukL3hr1Hnh05OKSF9wS36v7cDsdNIXXGz1t9nKki9I
X/CB6lL99um0kL7g/zm63FtV0En6gjt837F9e0ID6Que/Vw2Mf1FFukLfsZ8
RmaZVAHpCy5ZOqX41tsc0hdcXGZ1d7amL+kLvsPqtczAgxmkL7jGqDeFHv0e
kr7gTzZLBerNfkT6gucHi0z67RRD+oL7NKT3sZNwI33Bx126bDNncgzpC96T
Hq8VnHSbB33Bq3lHxR4ZB5G+O2RPrfr73vxJDUM9K/dnkL7gX4o/9p3efIsH
fcFtLwp9TIjII33B97U3GujI5pG+4KHubTL/8QtIX3CJiNubH09qIn3BtXbO
sev8yukL/mxC+Z3r0h9IX/DEI1GWNS1PSV/wn2N5JrnGWaQvuP6Pgcumfyog
fcHlZTTeFVtY8qEvuFOusXrGNz7pCz7aWjZ08bgY0hf8SOOARk3vMNIXfFCB
b414dhzpC557K/uNwS9dPvQFVz2m8MjMPpr0Be8595+b1Ex/0hd8lntJ+/R9
vqSv5rvdaxgdLKQ+Z53T5PQF7+oJ0KhWDSJ9wX2vD9+25Fg26QvutyenM2Jp
IekLPiRtddh0izTSF7zpaultseB60hd8w6Gl39c7c/qCL02fMf/qpFbSF/xc
8MwwH6Ny0he8IT9Sde6HJNIXPNgksOW/0iLSF7z/4ycep1Uekr7gB8vPbFiU
wsVn8JtqTuP6v4gnfandRFTMV4n7k77gC9d1eVr1TSB9wZ9afnVr/O8W6Qvu
f+XQvA1qXHwG/zDPOmKbbTDpC543paP3ro4H6ftIOKV/vVIO/+c5r/JjVXzS
F/z9uMT94+MjSV/wAcl+ilkHMklf8Ka1/uV6R4tIX3Dfc93O28Uekb7gY14n
fspRqiN9wfuGiDccnc7pC27kzZewnNRG+oIvFn+T+/30a9IX3N7s7ouBxTGk
L/iCu5N7xE4Uk77gwy87SL7MiCB9wXt379nR70MK6Qtu3dXR2T0lifQFt5I9
nxp4+z7pC/7M6E7HUh1OX2r/peIik+Z6kr7grj1pZ7NORZC+4JNem19JmBhG
+oKr71CcF9fiQvreeasqcb0rhBeQfORuUwSnL3jTpjEar5yiSF/wI1oeRhd/
ZpC+4AfG7ot+7s3pCz4zyS5eUiSa9AV3GyS0RrmllvQFt7pTVTZvJKcvuMXT
Uac9dDh9wYctsNipKfGG9AXv4xpwefWqaNIX/Iffnl75a5y+4PqWEdm7N0eR
vuD5c5xvqplz+oLPCTfdY3Ob0xd8fHnO8Jv7PUlf8MD4detydTl9wbdcDpWp
+n2P9AV/HeGspNQbTvqCC18Z+lbIi9MX/PycuIn33G+RvkLKM68x7RS9TvTY
XSkuPoOHLNTSayoOI33BhWK/2W5YkkX6gr+d/X1KqRCnL3iHuFuc9rQE0hdc
2jHkt08x13/Bi68/thi+ndMXvKHw0chpGVx8Bteb8HFWqMor0hf8Vb3IkT3J
caQvePO8AVYLVTh9wbcskd93/WMI6Qt+4PJcbamoVNIX3H7h+3PKaomkL3iu
QbdY2ydv0hc8XCtlhfViTl9wsRkX7ENvuZO+4Iduig+dpxNJ+oIve6LrmTo+
lPQFX5G1X+y4zW3S9/DtmNIKrWreiJU9tRqHOH3Bb/ul1C+s9iF9wS9qe3z9
+TmH9AWvXHXOmte3gPQFV458z7f/L5v0BT9UZXxPsrCB9AWfkjV1+JpiTl/w
I1Ny/QevaCF9wa+qDJu4rLOM9AW3WyU7pXsEn/QF//TEfIarJPf9Be80t35k
uMWT9AU/rbrp1Z+6dNIXXGaF/dKHpbGkL3j/SMUcmYFBpC/4Ro+MfaaO8aQv
+IGj5o9Hu18lfcHPPtk970QL9/0Ff9Rn3qdi1UDSF3y9rdLQTwpepG9bz383
/urGO9V3zK9SWU5f8AsjFe6Wd+ym+RF4r9vx8hEXCkhfcNur3Y3BW7JJX3BL
z6FP12eUkr7gN0a4Rg0PbyZ9wa3uSH/r/sXpCz5ixfrnynebSF9wN9OlK8uz
i0hf8CS3adFb9HNJX/AzMmsmnFiaT/qCzwlz2FrodY3mR+DTY77Nid/BzY/A
fY/dvNV/XzjpCy4XKHFtUm4U6QseaGezber5WNIXfI/EtAn9pa1ofgQufePN
S01hbn4Efmlcq6P2Ym/SFzy7pXYz7/BD0tc3yGAW8x6WZRFrvJRSSV/w7xsz
3qdvCid9wfvy+ubdNeDyG+CTzty6r978iPQFH7rgrfJ6odekL3jq1fCHaX9a
SV/w6TlFA/KWcPqCm6465KlgWkf6gq/u83XgftdY0he84nlUVtLKItIX3LHr
UMGYxEzSFzy8z7t76j4RpC+4S4Sub81vbn4EPrh3ovCnA7dJX/C4pvEmMevi
SF9wr6aUOo9nkaQvtf/qhF0p7d6kL7hY+7sVk3O4+RH4vIM7ZZJ22ZC+4G1Z
zf5nh4aSvmGhTw/KR37iSdrVnr/eFU36glu8nzZYdVwG6Qu++LbRRJVuLr8B
rtnZ8Hn6kBAe9AXP2rFiU99NtaQvuK75j8Xt1R2kL/i9qvWz3aPaSF/w1/Wf
p/ZqV5K+4F/9DEdX7QjjQ1/wbR5nhVzDufwVeE38qzD7xTGkL9l/8dI28Eom
fcFH3RDXCTySTPqCJ+QvVrf58vd7x+oLruA05tQoowTSF3z81/FbXFd5k77g
s15d+B3YP5z0Bf9oNLv52U1ufAV+Q+iOilmpI+WvwLNTDyqejwgnffsLn1A5
N+Qrb774/+Iw9AX/zcZh6At+k43D0Bf8BBuHoS/4NTYOQ19wxGHoCz6SjcPQ
F9yTjcPQFzyOjcPQF/w8G4ehL3hN6P/iMPQFRxyGvuCIw9AXHHEY+oIjDkNf
cMRh6AuOOAx9wRGHoS94BBuHoS94k/KjHNHuYNJ3t+7IwUV/n3NIPHMi/3sS
6QtusyRxod2jYtIXvOnmT/URN1aTvlTOxsHmofNqSF/woK0KUpVCHaQvuOis
npyvz7n8M3h1x+3dPL93pC/4TPO6mWfOWPOhL7hRTqWhaFYx6QteUaxnuuZp
IukLfmlcU5fOiATSF3zkTv9jsiJppC/Vx1Q9dMfIC3zoC/5jeaf5WOkE0hfc
O0X12i/9ANIX3KvvnfDUqcGkL/j8do+5CopRpC/4NO2K3Ijws3zoC96zMeB7
lE446QseuHdO58xMT9I3LTq2SrroJ+/tSqlV5vwC0hd8yItEqfanWaQv+PNi
1yFaZ5/yoC94lujN5+2tzaQv+GurjP9O9XSSvuBHHZZn7d7K5SfBK9f+Z1Xj
WUj6gqepZ8nLPsklfcGNpfJbHrXlkb7gmR5jxG5tcOJBX/B7LlsmCu/OIH3B
z187mjVnURjpC/57spuczuRo0hdc80DovS6VWNIX/KHPqtuZ96/yoC94uefU
G8LDYkhf8JzatAma0l6kL3jM6NCgGXUPSV/w8abp/k4BwaQv1ZP//JttsyUP
+o4euDXSRL6Xd4zNS0Bf8A+J/8tLQF9wezYvAX3BLdi8BPQFt2HzEtAXfAKb
l4C+4C9d/peXgL7gv9m8BPQFv8zmJaAveCybl4C+4MpsXgL6gne8/F9eAvqC
Iy8BfcGRl4C+4MhLQF9w5CWgL/hSNi8BfcEzTV0mpweEk77gkc0HxiYfdCZ9
wc2Cx5w91uFP+qpEXVAz0OijZl7QLDwxLoL0BZ/7LLNJpfIN6Qve7jLtpopD
G+kLnj8srd+4zx2kL7jj+y+L1G9w4yvwkPdVD6v6hZO+4FYpcc2qr4tIX/Bh
tQXPdp/IIH3BWw74RZw7Gk3jZ/B9yydetj7KJ33BL8zuezZfzIH0BVcIOjZ1
THMc6QsenfpjiIpHOOkL/mH0iru8qX40fgbP2rYrwOVCNOkLLvL0vtSXFRdI
X/AfrtsdzJ+Fkr7g70U9XG56+pK+pMtzlVQvbU8aP4MfcIlWUBwTRPo2660L
tunqq2btMfNK0vLnNH4GfzTn+n9Ofh9IX3DT49Jbqxs7SV/wDV/65vCvNZK+
4L/v1KbOmZ1H+oIbfd6xykwknw99we9+mFYR2J5L+oIfsDQ9UuzuQeMr8DV+
aW7bTDNIX/Bnt63yhQOCSF9weYnv1VsWcONn8MYVlQnJRx+RvuBRk5/t+a+v
E42vwAvX9xMzluPWj8BrnqjX23/xIH3Bv17wjNipFEjjZ/DMFVXXV3gHkb7g
7UEHAlXK7Wh8BS72QvX13tHc+gL4jAPbQycHOpO+t/+9h4iaOLtOB33BsU4H
fcHL2HU66Auewq7TQV/wbnadDvqCY50O+oJfYNfpoC+4I7tOB33BJ7PrdNAX
HOt00Bcc63TQFxzrdNAXXI1dp4O+4NXsOh30Bcc6HfQF31985Om7B6GkL/ii
pbvrd6Ytp+8v+MCJz15u3hpE+oJHmUdu2juN67/gw11Fhw6P58ZXyx+1n6/Q
ElVTFt50OTe9k/QFzzo1duaoyy2kLzivT9X65TdekL7gq07+WrWzLI3yG+Bz
T9snDVpdRPqCi/abaic2xov0BU8MaKlX9E6n8RV4jYn3rjKdONIXvOK1evTm
EYH0/QVXC5aYrh0VT/qCD5g77usF3jXSF3ymi4+kenYUja/Afw9/7PbqRSDp
C+5cnPta9ud9+v6Cm11aY7y7hFv/BXer6at+8cB50hfcdKZTsOxabv8GuO2U
/iuWzeTmR+BLvgedc6y6Td9f8LW5x7sihbn81SeD9Lre3v5q5wcPdNzc3kL6
gl+adHrH5ZyXpC+4pHqYbYdqCs2PwLcsO5mk+5BbXwC/t93/i9dmP9IXXGfP
SqUnYun0/QX3iJpbIbk1nvQFv6CSsKZU4iF9f8E3/H7g9f5DPOkLvtbx5trJ
q5xIX/C+g3p9pptG0fcXPGKUVqBiTxDpC95+Mb241NGTvr/g8zcsTUuRCid9
wecZ7gm/N8iK9AU/PcW/7uLrAPr+UrtJSd2K+8Xlr8D3xq5zvSfnRt9f8K22
HQX+S7n5L/ihuiPjt0Wa8VUlZO9qGdTxjeW2p0X4tPGVTx8/86KkgG8/Z3yg
S0UG8aXPG52uBHfyhP791fDAJ6fJTzBwLOKLi9af6pJuIf7pilKquWI6Gy++
EB9et3mSzdt4em6smYQ04y/8Ge/uhXgU03PB5TVU9p1V6uCl/lv38uCBf/6g
3mN2t53qA957YO3X/o+LqfxfNx+2l2tV8+cEN5/eeaeYj3LAjy8eXTVHiHsv
8IFh9qb7souonPimozMWuFbwnMR8JuoqcuWAz5Qa6rVSnysH3GarcnfDp0Iq
x9n3fBLjXy/tSkOCn3DvC55oJVU2Sqed3he8wiMk1ORoB5UP7lqvlq58knvf
ldppOw00PvAO6X3XGZtYROWDB+ZNCvAU7aTywXe9uSyibtJG5YN/0Zh509yl
mPQFjzIqanq2KoX0BQ//YRt/XD+BrznaqazQpJn/u5f56+Tlq5pcPKuQT/UE
N29YfzngXC7VE/xM5eWPC3918jr/5dNf8sj+WEZk5fxsPuoJ3l3T+P2AfQHV
E7y5ZWjhFOkMqid430u1SvLn4vgPBjmuk4/sIf6sdZ5nR3Q0D/XX3ebzjOmv
5l1WSZHWXDuDW7/LXfswOJq/7d++mefEdx4TGxWxso2H9wIXf35YwWgM917g
6tt1hz93LeIP+pefaiA+cuzlfvF7onh4Lyontu1nbTKf5V3Eh2fd13x0n3sv
cAvVSStX+P4dV/zXd6jGuXZ+bMQyP5/Ubzw/ucb3NUuzSS/wwllC9UGGhfRe
4EPeDvrP1a6T3gtczjmlhqfaykv+5/f5PPCVJkMqzRYn8fG+4DL5kzyqarn3
Be9InByw1TmN3hdctkKmZpp4Ar0v+LSTT0PyhiTwpf/NG78TDzpYZ2YvH8UL
HNLH1if1D/GykZmnDFf8nR+x7TD8X3k/eI5sv0Y7gMvFpOopSsbzD/2LX2+J
e869am72qJWH9gGfxcYB9C/wjzHS9WGRCdQ+4NZsfED7gK+UOrzq/NYs8nPw
MdU3nOsPh/HQbuDjFbf9mT42gzf2Xzt0Es/fk3dy4tdYPtoN3Kd4kLb88Shq
N/CZZn23yb2P5k0cXPChXukXcW/Pibml3iHUbsb6VzWZ78y2bp95O8q5fg3+
5s6idLO2Bh7aDVzRYt6EIc86qd3AxZcMGDxXvoXaDVwq12GBbgSfj3YD51fP
L1vzq5DaB1z3rvLoNSJ8ah/wE/oqIWX2seRX4PPr6pPPWAfx0W7g2T+WGPdc
iufT94vl3cqzqxV/R1H7gN80bNUe5xBG7bPnXx5SSG3C5+CQ107HqX3AbWea
6Sd2tFP7gEsveDP3ekM79S/wqx+n3fwVf5a+O+D3dzxZ3JRaTP4D/jqq9mTf
wniK5+DqwedrImdy/Qs833uUqNmwBPITcDEHs8Xpr4MofoJPHj1HLXRVFA9x
ht7Ld17+NM1wPvoduEqLTo/1eR+KqyP+Paev2o13D9KHS7by0D7gp+bZ7rnh
1kntA/4np6h8bUo9+Q+4RuTvS3oD06ndwCdvuVtSNr2Q2g1888GV5cuuZZNf
gXumG0wyqQyk+AyeYTKh/+3VGeRX4LwtMTU3FWPpuwOe+yDw3sDT0eRX4J2G
OyYte+5BcQx842eFoasHx/DQH8EPJUQ7+YcHUzwHb+jIs98/IoDaGbx6z4yD
k9qDKM7z/+VLhdUGrmtpW7m+mdofPLn5UFfq3+8e2h/ctD7MYeKvJmpn4ldd
A+Ujcuh7Da5mLyKpH5NP7Qx+fXKHesPgyxT3wDPXKB9Y/7c90c7g0zeH95OV
iyS/BY8+YWgrOyeKvhfgebZl5i4vYqmdwdvb+g/Z0R5Nfgt++pJPwoJYf4p7
4I/HNOwyOxzCR78GX60Weu3lC649j/zr7/3UnJWXbHat7KT2BN/dTyvicfsH
8lvwvIK1//kcy6DvKTj/i3uMXy7nn+BXLli4h6jzqd3ASwa/qcvrF0vtRuU/
Onm4v1kwxUPwBQ1vXAbviCf/BI9cdKuk74Ro+l6AO6TYz5LZEUD+CZ4/MU//
wUlviofgzQsU7nUYhJF/gqsVLzsiVBBI31/wGOuO+lFddyhO/k+H/mp2muPs
3j1rIT8EL3M/1N7emELfX/Cp7LwDfgjews470J7gjvf6ZWyQjKf2BO88/FR4
6u2HFD/BMU+Bv4GbKonv17zCjcfAJU9XLJaODqL2BJ/yuXbWhhn3KK6CL733
aHuyaDj5Ifhqkxjv/t8DKK6CL9/4o9u+0JvaE/zlijtJE+Y85L7L7DzLRSk3
4Xn9Q8q/gX9NSEtm9p/Ab8FnbS3581Ykh9a/wNfNLQxk9p9AF5zveBSUNijw
77idvu+svdnzILEe/QzSEecF/hSXWDDzEdijnIpldRpR54q48QBbjlrnpemj
JBsoTwseesnblNnHAt1RjlijbRszX6DxA2tvxfoV7FGf1IbhNwXnQSin1Uyu
7E1qM/UvlNPN+iHyBuBN9nNtmH0v6HcoZ9zj9+sP/p2P0DiEtb88Ydmksbt9
yR710W6L8WbmWbBHOQkW9ltj5xpTfgnl+Lh/+MPziSA/hL1rnGU0M9+h8Qxr
f4X1f3DYT480XhG+Kpr6O+z7Hflfv0C+AtzT9+oMZr8N4gDKmTXqjhkzn4I/
w/5MwIuVyqkOxGE/8If/rqFGWuTnsDdm+xeNr1g+ie1f4Chnl8abY9UL/Khf
wB79DnkPagfbE1uZfTs032HzBv01Bw/dtC2F/B/86xdJT2ZfB/wW/E3evPpj
y69QPgp82C/b7m6BeSv4ODkPW9+lruQ/4B4NylrMfgyaB7E86uJYxykmCeQn
OJexXDUslJnv0/yIte/SUFC6Vp9A+oKL/Uz8FGCVys2bWG7cP+v8ogdXSEfw
k8amO92VBOZTyM+k7HRXlXpIcR58+6LRnQqDQ0gX8IevvF3vVUTSdxN5lUzn
SP6CmSkUf8DXyk2LXiwWTe0PLjLNOp3Zv4r2B5f95OJ6aEIUxX/weVWJYj9P
t5Eu4Gt8FQYy+1QR/8GX5xRe2BhdS3qB/x68yN1PJJLy/OA6WZcOfx/BJ73A
G96YZ5wMziBdwJeIHIsWk+K+s+B1plZWjte4+Tt40nuFY4fVnGjcAj5VKe7n
gKdc/wL/YbF7UNqPcNIF/GjfU+HTinxJF/CnsroP+1yLpv4Crjhuk5nz7Muk
l9O/dn3KPyD57UVWaRrpBR6oZ36rLcOfvgvgQl/u7/ycw8V58CV2i9228JJJ
L/Cb7PgfcRj8JDv+h17gP9nxP/QCV2DH/+gvxNnxP/QCX8eO/6EXeBo7/ode
4Hx2/A+9wEepey8dlO5NeoFjXgC9wDEvgF7gxey8AHqBY14AvcA3PKxsHhXv
THpJ3y0Xsf7r7xdPvWm/EZ1OeoHXXv1s83rqA9ILPHtxt1X0Ek4v8LZCn1kp
k9K58RXLdVtM6puPcvN08L4Xpq0TzeL0Ai+fuLk1w6WB9AK/Vi7s77wyi/QC
/9za9GPxMu67CR7kPFHMODyH9AIvOay27Z2kHzfuYvleA88xivs4vcBNhggH
5B3yJ73Au4zy/M5tfcSNx1i+UE/GdrBxDOkFXuMidNKvxY30ovI9zHbqTOL0
An9pYbb2tPBt0stl1MviBqUc3mTpo3U3jDm9wOuGXpP++M2b9AI/vmtJk8gR
Ti/wmGtLqja8SyW9wPuPeyuhGsTpBd7gNv+9dSynF7ix1fM1k9dxeoEPXPC6
tm1WJukFvif1gP1wV04v8FEqde8y1nN6gS8Y+sth8iN/0gv8xLIDTr36nF7g
Z6KGj9ef60d6gS83/prg48vpBc7vGrQ0RJrTC1z+dqlToLM76QXe+OPuuEYZ
Ti9wWYljRiVurqQX8vmHrXXdivO58TP4gObRmxxOh9D3CzwhSuIqc/4ReoGP
ZPOK0BfnAi7oT7Ji1imgI+wfsPlGfNfAJ/qM7mXOP0JHqs+C09FLq+tId5T/
elTVE2a9A/rC/hWbn8T3Drxj0MIq5lwk9AXXYPOT0Bd8GpufhL7g49j8JPQF
F6/cYT9P2oP0BUfeEvqCI28JfcHXnv365aWDF+lL6zJsPhP6gts66TXtTb1O
+mI9RUu1U7u5NJH0BR/4uvfr/vw40hdcukZhRmJEHukLnqQ1y2fvGK7/4lzA
mHXG9sw6F+Y7sN+cODxVxa+K5jvgtk/3XxU81ww+KaDjBrNfAn6C8jeO2W7F
rJfBH2B/xk1IdOTc9+QPsH955U0Fs44Gf4D9HQ3LqpfT3ckfwKusrEuY/RXw
B/CD8au8G9pSabyK8uUt4rqZ9Tj4CewfjVhh/GxvLPkJuKzDVxufnenkJ+BN
a94ESYw/Rn4C/vHOaL2NXvHkJ+BBS+Z62EqEkJ+Au0xffCpwdQD5Cfi5u5o9
vFZuvQBcUu77mrtKiuQPWOfKym/YUpPD7eendbRpBUrMfQXwB/DPBn3XOfeN
onkxzhHYyz+ZwKy3wh9gP+3FUYcNOdw+NPDqPkZLBe8xAN/hf8eJuccA/oDy
vWsLfZh1W/gD7B2bgn+f2PuG/AHrXxN5968Izn9hL9JVsGn6FW5fIrh3nI3E
C6kCyp/guQuXeBp1/p0vw09gP33NHaO1JVHkJ7C/U7SjU9+RO+cFe3/rR7dy
NX3JT8D9ZJO+aj1Jovkvyimq442wUOT8B/Ylu74uVVnnQfNZcGPPsC/M/Qnw
H6qntEyOed198h/w9QHjplVnhZP/gPdkzbv+sTKM4gna8/eZO0k3DG/Qfgnw
IaWfDXcL3GcCHlsycgZznwn8DecRztnFDf9LyK9gnyPfHRt9roj8Cva8z7Nv
ea/h8o2wr15mV+dm10R+BZ6yqihF8P4T8MyyyZHM/SfwK5QfUWC1Wfw151ew
/0/hm42s6FPaVwO+eWPo8qMC96KAn7KUUmbuRYH/oPynazYt9L2VT/4D+8+N
GpOc5hqT/2B9M+f9E+1QSe6cEexP7hxWzdyjAv8B3yvU5hxGeY8W7jyLuLqP
+RHuOwV7ZdUPX7tbuP0b4HEtnYnM/SrwH2o3kUBNRSMt2r8BbhLevGaZZiD5
D3j21Pu+VQv8yH/wXtOfVFuYSEXRflfwM47DT4a6cfk68MEbL3oO21ZA/oPz
DvjuwH9gb/b9xvOY9tfkP1gn1U/qGxNtmkr762Cf5BS3odmSy8uBrwrVvMHs
+4K/4bkb2O8R4gzslxqK8eV+15Jfwb6C/R7Br2DfffvGEb2r0eRX4EUtQjb6
ZWm0joNyzLMXmwYJ5Ftgv3vP1mvM/jH4G+zxnYL/wF4mO1hhnnc6rfvA3icz
KEQw3wL7WkXenmnxt8ivqD65swKYPAz2BcH+7aYXAVtGBFIeBvy7lnC2WVIE
5Y1RztrgCcaC+RnYT1YzE8kd4kv+Bp5iuUyV2YcGfwMvVHsQbtnHir534MvL
tukPOxVK/gZ/eGEgMX3gxGLKM+OcxZEElagXw7hzT7A3OjR/97HH8eSHsHf4
OilygwSXz4F9xaKQ2uNX6snfwBuNhxi8udtK6ykoZ+3mNvFV67lzUrCX3xK5
6OwBzg9hf1239ROzzkX7iFj7B09G79aKKic/xHq3GDt+xr4y2AupRQ82SUkk
PwSfrnEjY+vf+Aw/xHP3N6l0MOtltE+JtZ9QuLcnZWYA+SHs6wYN/bAzhjuH
Bfsq3cYJMeGhtA8NfH/S/WFf5bh1SZRzt/qeKbO+RvlA1n7XlRDx8Y5+tD8N
vFLyUph5ObeOhnLkukZmM+tulCdk7aXu/Rrl3M+F/BP2l39p6zPrcdjPRroc
8hP6mP+A8r3go6cmXNr1JJjWPen81MUwSWb9jvKKrP2t+6f3tj66S/vcwMX3
ZdedPx9CfgsdX89XLmXumYHf4vxI7uQ786yvcusasA8ttJw9a+Qrbn2EXd8f
cnDTCIfgbNqnCvu2gC2JzL008FvwCey8DH6L53o9fnN/0Dbu/BfsJSKu/cfc
VwO/hX3N1P8cwo63kx/CvoKdl8GfYW+2refnDBlP2vcI+wdxs14x99jAP+k8
kXLzN80S7lwn7BWTD55i7rGB35L9fR9Ty8OJFN9gv4adx8EPYb/Ldemw4/Kp
tE8S9r/L5L4z997AD8GNS1Y7M/fewA9RjsuAj+tmLU8gP4Q95n3wN/B6la+r
mPtwYI9yYtW17/G9QsgPYV/Azgdp/YLVXfK3+NSKrgDab0n7ahq+OXvoeND6
O/nPly2tVun+tI6M54qvn9tP5Vo4+SfKd/79bP+EuAjyT5x/qavzGsPk32j9
jrVfaKA24KwPdx4c/OAc9dvMORf4M8pZ81KumcnXwT9hX3HtmhBz/gX+Cftt
LZvWMnk82v/J2k+99+DRYZ8y8k/s69Dt8yac/+kdjRthL/fpdtXbfuHkt+AP
hGU+Medl4Ld47sEp+4WWLOPmEbCvFr6Z/PrUXfJbPPewanFxomYStx7H2t/9
qfqMOV+DclC+7JHjJ5g8Ifyc3mtm/Enm3A38HPbzbs37lz+E38JeJj9zDnPu
Bv4Pe70tlUFM/pDW0Vj7kV2ytTLZ1uTPqL/ieZ0/HwoDuPU11j6zITGNOacD
fwY/8uqXN3NOB/6M50rbz/yXb6R1NNY+41VTlCvfi85xgF/TGurBnN+BPcrp
CrousssziPyZ9jXF9ptcP+kk+TPtI1q7dWnAhnv0fQc3nHHjxMXBNTSOxb4U
eYnvJzeplNN6NO13straR1GHG8eC1+45p/p9BrdfBeeGPA9vi2L2lcH/YV+/
VVH7t8A+Fti/mS40jtlvBv+H/c8x/t0pY5vJ/2Gf4X5YitmHhvgMe68pCrM7
Rj8hPwdv33L8c85xbj8MyvF6eqJnRwSfzpXAftpK/ZVzXnH7ZGA/YmREFbOf
DXEb9spThn6d0n6a5k3gpyc/F85bxu2fQTnLHqSKCe5/g72vYYHeIZ3TNA6B
LnPY9QuMK2Dv+MJ70oEfkTT/QvlrSn9dZ/bLoV/A/tWSgUK2n7h9ULBfPn7J
cWYfHfwc9s7uD4Jr67l1Zzpf9q61nNlfhzgM+/5jN1/Tf2lG8R/1xzoIxr2w
32DhrL7XzJ/8H5w/SOlOnDOXF8Jz3xlV6jL79+D/4K1mwed07wTS/B3PXdyh
1sDcdwR/Bl9U2SPK3I8EfwY/mNx8jrkHCf6Mc1IVtb06JrEd5M+w9+6vLcfc
jwR/hr3xn2+9Zz5z509pX5y+3pfdyXE036fzYq/zpaVuBNK5GNhnvlpgz9yb
BL+l8273R0+emsGdS4V9sn7XXObeJMRh2K/NjL6Z1ZZE/gn7oBPm3sx9SvBP
2BuKCXln9+fOscL+YmR5TOsnb5p/gd/1cVzD3LMEP0Q5V8WV30gbcOdYYW+y
UbRVUSeSxr2wv2wXcGmVRhidn4L9JDXvPOb+Jfgh9n256Pb9FLnUh+Iw7C0s
5nods7lN527AVRsTnQzMuf08eO6Ua780LoWEU/yEPT/QLeeerwudxwHXKlqw
XO/5Qxr3ohzvHWXuvjncPgfUc3Nc+A7X3tvkn+DnL33qw9wzgDiMc1vnJxnG
MecL4J+0/81xeCVz/wD8E/ZvNudmMecOECdhL/zWr3eA9WOKq+BjYoqfm56x
pvkdyincumZd5XR38lvYF9zYrsfcVwC/hf0Kdp8D/Bb2a43UfzD3GMBvsa+s
pU7ve1C8G8Vb2G98MPUBc78B4i3K3xkf8O3p3liax8Heb98UX+beA/g5nQcM
i0lk8tLwc9h3fxgwcvPICzR+Bi+PKDnJ3IeAeItyWqe5LGPy1YiTsLdN6WhP
dz1HcRvvtVaKH/rmPwuKt6T7tgmbmPsTUA7Knyr3qztgdQDlGWCf/u7oOuZe
BfQL2PONEkeqtUaRn8M+8m9XY+5VQLyFvVFwSbF6Irffj3TXGPpEQfwsjZPB
eyVH3y6P8KHxCcpR/JFQ1+eqF/k/7L8fCpmSoc7l59EOd0dqPb3De0B+Dr56
4dQDA19xfo7zayvbHNWZcxaIz7DXP5Q9+EMKN04GX5IV81tWtIxbN2f3132f
ID198OmXFJ9hP1FEXVdkRDCVg+fKXPD+O3SKpn4B+wFiT46P6svl32DvJBZe
88yVO88Ie5l3/vONhLn8LeqTxu4fQ7+AfdOjK+FPZWJo3I7yU6Nv68TtiaJx
OOyfP2i7EbGIT/0C9rOmuE+rS+aTn8O+z6nU330k42l8DvuntlEjmfMm8H/Y
e3lXL+opDyP/R/2xHwxxHvaWartUxr3zI/+n85XvS1bnDOHuSYZ9Yo9o8MRd
XP4W9qGWbQbMORfEedj3l5BYoCIWRuNzOo/pf0SGyXchbsPeoE4xzOTuYfJ/
1P/XkMy9Y15aUPyHfbe1zMPPK+/RuAXlJ3gbpwe9ukv9Ava3l54pUfoYSP2C
zrFe890/WTuI4jx4uM/yaF0Nf5o/oj4K8cKdzD1d8H+c7xstzffxceHGJ7QP
tqTvROa+L8R/8EkrJm8+6BpL/k/nB3W6RBXuxZH/w76W3fcI/4f9i9iwGMkZ
3LlO2AeWzOdJJ2aS/9N5TCUZR9X2TPJ/2Fuy+xvh/7CfKHfwd0Qjdw8D7LX0
vz1l7g2D/8P+50i7UQoDM8jPwcdqmngZ+LlT/Ec52N+I+A/7P6V9JJfMiaP5
JuxHyUtFez6LpH4Be2GDy4fCJaOoX8B+gcMh2+R2b5pvwn5J4YqbG+y5cTjs
N35T0WfuJUO/gH3IuzQlvRLO/8E1x0mdmPvCluI/ysG+R8R/2Ncuip5Z2hJC
43PYP0xT0J4wxJ/6C+z58fqaZau4+4phb1GQaTty2x2an8K+bkzHnkcv3Gl8
Tvurb0xctMcqiPoL7NdtiB63zpnb5wn7Rr2B4mKu3PlW8hPXLaYmv/xofIVy
HvVovDhT50f7P2Ef5VgsVZd8j8b5sL9x6UZa8qj7lIfB/lKDHzEnXA1vUL8A
D1/pNJo5z0h5GHZ/qYHc3GUazY8obsPec66NE7PuRnkS1v4m2x/hP7CXLYoV
Y845Ur6CtX/A9iPKS2CfNuv/0Avl+ItkN31vCSe9YA+/RfyB/YIXSy8z5x8p
b8Daa7N+iHaDvfvDV3KX5vhRO2D/p665/taQLVz9wRt3T9rH3DOG+oPvs/wj
z9wnBj8ELz07ZIHg/Y3g33/stmfuDUM9af+q6rsi5n4wxEnsb2x/mFq5qNqH
4hi42IyweOYeVHwfwcOdw/OY+0tRf/BjZ0evZe4jRf3BPVXvRAveOwpubChp
L3jvKLjdSfV5gveOgn+I6DrH3DuK9wLPi+gYK3i/KO2PXXRszWNVbn6K/YGj
H9+vELzvF9zI684+wft+wfsZ6aow9/3CP8FN2Hkr2gf8Pjs/RTwEH2rwv3ko
2g0c8020G3gWO69Eu1H57PwR7QaOeSLaDRzzRLQb+G52Poh2A5/Nzvvoe8ru
08uqadogeA82+FnZM7qC92CDNz+0imXum6LvEcs7tZc8F7zXGly5VvEcc38U
fUdY/s58+D7B+6vB2xc+FlK4xrUbeKywhY3gPdXgZauDjAXvqQb39nvbai9w
TzX4c/+Yf/dBod3APY4kzxS8jxrcumR0PXPvE9oN++V0ez1kBe+Hp/11/Mcr
Be+HB081v/aYuR8e7QYutyn+g+B97+BV4+YMZu57R7uBa5i1jBskcK87uFCf
1V+Ye93RbuBxsXlHBO9vB38nzn8teH87+FGH3wpBAve30/7MIy/amPvb0W7g
o0WPOwre0w7+eG6GCXNPO9oN+9AqZpy5WaUaRHEJ/CW7boV2oH2D7DoR3hfc
k13fwfuCK7HrOHhf2hf3fU2jqMDvEYBjXQbvC451GbwvONZZ8L7g/NLOI8zv
DuB9sZ8qocT4qnzzLXpf2l9n3TaC+b0PvC94ZK3aYeb+H7wv+LOoH+LMfT54
X/A5CRuNBH9fA3yXW9lywd/XAI9SPWu7UuD3NcA/rL6Qztzbg/cF19c+lCf4
OxrgjulvxzH38+C9sC/o+og4rQHZ6fRe4Fc+XBFnfl8G41LsX6quClvDnFfC
+8I+vua9KfM7Mnhf8Dkd2aOZ34tB/cHPPvpa/kvg919on1Ja+sNrAr//At53
+h5r5vdfUH/sS9liO25rn2436l/g33rX+zg7p9D8Dvtn4rV3HVhxIJfqCXvf
JWWJaz+lUT3B7U2unLes4u6bAreQ2SrL/N4Q6oP9CbNz9e/N75NF827si5DU
Ujp2SeA8DuwVhll+HXm5heaP4OdlQ6qf68SRP9B+jBdSg5l7flAf8Czra8LM
vT3QHXzZ1LR+43/epziG9eht7gXiRsL1NB/BuvbEqv8OMudq6RwQa39x4ng9
h+tZNA4HTztUUZlxP4p0pHsYfA2j4z9w9xli/fG6b17gDAvuvAbWH09unGvX
z96Z5hewX8jGAZQPjv6L8TnK8XxeaDfVjPuewt70xEGLYQvDaR6H9aNNbj0K
zH16GA/T+ublwEbmXADmX7D/VCGeytybh/kX7Bd5tIkw+//Rr2Efn/y+Sdkj
nOY1sP+55ocls28f9aR1sTXZ55l76jBfgL1YypOqjPWBNL+mc+47dh8ZtPcJ
za+xLlArafj6ZnA29VPYn3tiM+5LAnd+GfZCHndymPsH4P+wf3Tyy8bft3xo
3gT7Y0+HrWDWnTGeRx54ye938ycsiqBxOLieeOimUfH+5G/Is13iL9NsbEul
fAvybLcWvx3wWz+A8uqwb9F4PstOIoT8DfaOqy/dnpXpSe0Ge913x8S/rQ4k
P0R+Q0TE6fh71VryQ+Qx0ooODJz8m/MH8At2DqnM/j20G/jqjd0XTydFUHxG
+fcejHRcMNaX8jOwjzys+zR1qx+tr+F85fntKYrM/TaYZ4FPPnuwVOFKFOVj
wZ+5ZF0QvN8GfKmseApzvw3iD87lXV25Mpi5zwf5DfCM+2LDDozxpnw1+CU2
D496gr9m8+2oJ/gDNn+OeoIjjw3/B7dj89WoPzjyz/Bn/B5Q1swHGcy5BrwX
uI2IyCjmXhS8F/jclSXC8yTj6b3A74bLHWTOKeC9wFsu3QwSvB8JfIy671vm
/hPUn34vaZOX6Iyx3L094I8P9G5jzgWg/vi9G+dhTz8x52hQf/B7h0SqBc/L
0O/yfM2X2ShwXgY8ybBmkOB5GfA9Wb/rmPMyqD+42pC4i4LnX8CTd1R3Medf
8F7gy9RFbjHnXPBe9HtJ2suCmfMseC/8zkv/Mds+MOe58F70+zW/VGwEz22B
x7D7RvBe4NrsPhC8F/0eDbvfA+8FfpLdj4H3Ap/KxmG8F7giu18C7wVuxO6L
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
zI+jezmrHep42Ub9EOqXekxTr4V3NjjJYMoNG3ac/ItvNfOeNBwLF92QSc/7
YuOWFWlXm3l/GkJ4x3Z703goXF/Tu9K8njfBq4Z7tdib7DKYOZfUpX125u6P
taz/rxa872r7B56qvWRQ9HNWn87Os4X8fWrMx+caQs2RpM/CU2+t+HHKrdu/
6zw7kUH6TPQSd5MoqOVZnWs9NdghmPSZs0wpZaX5O16z2ZfXRyv8yR8LYOJO
qztGJ17vYvcjUxYXns83fs0TqNJdlrOK1cfK/oimREElr9UwsDW3OJn0+WEn
H6e76g1vyzSTMcsnppI+T6s9G75KVPBuu40evH1CBPXDSSYeFWYQP/ezFuuv
GkXdOMGvmzi7QTY6O5P1VyX1ikdG+jzlif8ceSF1QQb975h/9a1PeBynVyN+
//VX8b8ZA2RW6q7K5y3UO36uaXIU/a+AQPVQfpxKb0Xp7b7+/yOZHpPGxf6c
yafyX4h4sP+7e9GKI2fb7Xj+gepuff38sX9O3ndo9+Akhd+9MD8sif43WqUy
wqXdjqOtWvPPn0f/L8sMWCRa/5ijvO1DgYQeu59SYeJa3443xTduYPth1j8/
q4ST6Xt3tsIHVh+XsWsH6K/K53Q7lw7ZcIzth/sSKdzXmsWcUXNWTL9ay/ZD
57HGcn5896zi07Mf7Fj/3Fbp9R5+fF1zz93M4eMjSJ9h+C52zeiKbU3seHDi
rvfk1+OEee/UUDnOjoclTcH57X/n5Rkmu1rGW6WQPg//xZXfcgol9c/fi2bH
w0cX84UTCio5/jkts2fosftNi6LI0r/jn3PiyKeo1gdHyF6KTBysbMmmgTo8
9n3pLW44scq8nhPw4np61ytWn83Txw6aUFDLEcyePMqpOpr0Gekft41fR1N3
PdJ+5jP2fZljbq0Y5VPHefqxodPmZSD9bzsTr24NF5W4ureB/jfhnPSo+sWf
ON/Nai02H2X/d+CLHWF/5wGO2dmtyoVDnOl/87W+d0sUtHBa1mVtshnDzhtV
s7Or+PWnZbGl3Pe+96gfTPnllou/cJY1pm/JmFNC/7v4TuIufh3Bndlde9K2
ttI8mfmvbuIrx98tssZcKZ3krze2UTEf9pWzLKrJun69Kcl/diT1/WKXDk6F
lb4/t/Ityb/dqiPjUt7Jmb28o21rZiPJl3itNIUfRy+JTXv+rF88yQ/Mnj6y
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
qP/LmX6QeH7YPOcHy6cycenh5XvseevZPFEQs0+M2psxq/ZLEJvvuF/erbuq
hrfz0aLutuwQskvOuzkR/Horb8N9RXmWDsSTmDgw1+/qiK4R7mQv7tsvYvx6
5DIxXvJ7NXZ/lznYy+qVZjHvrkZh7LjGPDZPevV65eyo57zbT37/vDclnge7
3Pt3zu8l7wun7K2ZbRPZayATl75xSDDXVK2Z7DJu4Y7VmnqlvIYrF1/PnFdA
XJyJb1uVZRvPsnpK9nJm6jNnbr1bXDqX3Z86MHwGw2FHcUZ+7OuqPNuDaVSX
pc/E2wvfljxb6s6u48bMcw2Pa9iptDOW+OGE4/V//s7TiZdFfzhasvElBabf
bk3XvVUrxNYRZTL932YW41b0d9+B/tz0K2Jm7eJ4nnj0vqpfB9h9pey/ej0P
nsZOpw0Fmmw/l/sN1XYqj+a9GvXKRi03meb/CC2NLnmXJF5ZR31F55Vi6jcj
+f/i8/E3PxRG9RRTvy1g6k4/tzT8VFjJ7jeF/4ej324y8nNaZ9p8usejfhML
/e/czYWmOqfpaaHEBQQ0xfh5hINuXQ0TZUOp334w+ntwl4XGrY4jvrrZeW/N
Yn9elvmQ60fWx1F/Lmf6x2CxaZeGNVvXpNnPyeOlZgbv+gSpZXKybF2Q9qlL
1ktdkjgrLr92boy+R7yHifPbWShNjljjRv2/8F9dfCbn0YohbjPPs/3faWx2
n1/fHTAhxWZqGtv/n436G6RfzeasKkhf+uNFEvX/gOm5095oZnD2N88uXbeR
7X8/Jh9RUfHrhHYTO25vMnW5emmG9uIubP+7M1yf4ej/GYx8aXOlqa8usP3v
z5wzSvaa1bPaiu1/bSZv4nL3a7rbhHDq5/eM/pNEZ36dM5jtfzUm/zJkr+jR
IV3seFZi+qf8gOyQ4U1s/xsw/Rx9U3FqkTnb/zYrDs7arFfKiXdzPPV95m3i
zUxew7szQ/DNRwPqf9QDv1qknPpChV0X6hwH/vBJe8X55CNmkN0vhuyCuqOz
Ev30+esI1gvIWSA/q61vfWDovzrcF5z2/TN+RT5h559sJv+ic/hrw/Yw1r9a
8HHJLfNhLzn2uioFcyflE1di8jiugTWzl4rlkh3xvxeYOBjlfRg5J4PPFy3s
TqX1ouSma7pU1HPO5aqBDUKDE2m9uMfkj/bcUFpoMyCO1ottzHmrMc7Z5uOO
RZC9Kpn+UX4ZuNvlTgxxRyZvteFlwds7e2PIjiJM3K/tY43vIHl/suNVxl7z
3HdO26wbSfaay+R9LM9ZetSMYOOrqK/2nzxrQ+sV1i8KPqPq9Xcd5PxM04vP
nWpD7VFn5Tj5kx7fj4J/+5E5t/X43vLfOzZ+IL8X8rfcSfoa/5OtXwWPzypd
1Ld+VcRHZSL//OsiwVFKogKNxMcy+az541dIyv61B+xYPPX9Yf452nWO8Qpm
PTzi2kxezN5QxPbzD9Yfw//eZuKQsO9zRs7Q3H6u4v7x9P7ieWddSPjB999g
X8VPEv2PSFVxppvMy/qyNZbs3v/Zf3m6srlV3z/+CCG71zD9I/fDfXLbZta+
/kw/H5lVof52KDsezjP5wbTN+QtCZcPJ7mlMPPa23fs4n2i2Lre78PSSAuNq
zryyeJOopWFk9xom75Z37MfHS+kJZEc6z3LL+GnffY3eLNuV/HMAr1Ou3NFq
T6D3GvVpc49V2PH3TbDvPeb8XXn7Ra+o5HqyO+T3Hm6s71u/De47aH1H3/rt
LI3LvL9+KSdH9ni6eW8d8SImn7hOfrWLTFUN2fdSyRRRgb/jw79rz6obF/yI
D2HykiH5mhkWJ26QHdf+T9wY7fFcEuvtYvVM/Gg8XGPkh/RU76j18CU5aO9e
sKNNt8/+C/I/j/m+JnjTPRonD5n86d6OXg/jzbdpPKD9oA0eLw+qJpDddzL9
rykTeehXhC/xRVZfzaSimjj2ysp/NOR8aDycZOLn10on/3xQEkXjIcoi+c3f
/QWneHeujEOXP40HnI8wK2l8k/SWR+MB/Jk+r+mM6BPaT6HeT6L6fdHb7Ec0
Tv4tay5tnClyJU9vHi6icYL2grsVvw/4nk3jRIs5XzmK+W4yxgP+N6VT80zW
6c9k9zP/7sNo5VilHhU2cK5m53km/9t2Or53gPVrsjvklFw+u//+BzYeAt7N
xNvRHnqOO/924oj9WWRHJSbOv7HANlDymyvNGzuYcxwFNUWbw8ZkkfxdDH/C
cNiXvj/CfN8NdhRn+k1Kf22djqIV8dNMHjzv9fYw34OHKL50gMlfGGVMGylu
6Ep2xLkS91OWw1rnPyE7gi++5ZT76HAK2RH1kKoVkRItgey6XK9yLcdYqoPz
pbhw6LnVlWTHvH/3pX3n9OTFeF5c40Pc+41ZOv/8391OH9nlFfEU78L/hr5t
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
YcTAOdjPDDtiaC96kOaNhHhbQRfVi/dE6P7QQvwWLBs/OogLUv0n+DNYE477
9sB8GKpw6+jWIp1IGt8K+TRMGdGeWer0vOuMHZOhojFUQYQVeODkQ/dPiD+d
Yhc34mAbvX+BXVJZa9cadyka3wp5OSrFn6wcok7jjiEOtyiMIyRfRf0TfpD/
vbhg5mxeKy9cFxBvqzvhjMPwwGDkEiRPSPxdM3nT+dS/N5vIaYsbtd5pK4fg
fRbiQOV7Q5XWL21GDnGmV99v+/N0QwtyyO/xLvKDT1tPK3LIHzKjX/FugDHt
T7BX6l7tPDxekvobQPzsRhI/C/3poVO8zJB3uALP9iP8nxenI4f41kRFX99L
g9Yd1G88IT1GXCQY1wXYK7eN2pKwKSMKOeQz2aA4RVJ/UiJyyGdS/v32BNmg
OBwv6J+4lfd1vAvjcN6CnbSa2GcxHyAp7901NCTkD43P9STfdbBwqkqIO437
A3vot0kGcbd6aT+DPdc1Q0ZqVEQL7gMqU/yeu3FGKLw1aclUP2bzP/G5IiQ+
F76LZ8APZ4SCqoiD256T1O4P8bNdE0vSt4xh/+e7Gsl3/avf2Ef0G7Aeof71
lgUHzlykcjLYbf/sSstLVKN2RlPSzsgOJmWFVgCuXzPC0/7hh0jemKbL00ua
nClXJbyRcJhvsQP+aaMUzG5Nv9J/Kgz7rS/++tAs3VEKja1hMvus6PrtJ7yk
NX+ysTW9/0LcblZ0+e3EZ9Qf6SqxZ/XPmrih9DqNC4Y8MOUXtL65rKB6ObB/
lUc+UJ57KRDXI7RH3E47zYnHHdc7xCPb7LS+sn2mP3K4R8iXZQ8J5QtEDveO
lW9eX054TPXhkN9m6tsWE5kFND4U7F/bDG1+Nj1rwXE5Qd4pW/KF30+ogPrJ
HCVclHCUt0n84KVnCYlCaq1YTzB5H0qwMFtfITEM6/ElfCbhMF7PSFzeDP5L
0wbngZlG4vJOPjC+zI17gnmo9I8+Cng00SPJ/aNf+k7eh7JO2eC6KjAYeQ3h
VoTD/+4NmLmS++5fb3qd1eA4LHGSR+5lrNQObhwc/G8Q+d+15H+BmxF91Dmi
p4J6eAUrA2tkwpnV9+/XDI6zcyV54WSnzkvlxjNCPYH/1IP+4bL/3S/MyP0C
xqWExPWMkL9jvrmbnl+lJE4nbae8h8wCOl58JI+c4NqISUuWh2L/8BAuQDjU
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
+YskLgPmCfzvpfmtc9X/rhdoP5xf8g8X3nJopHn/4N5tnnVixOs9NK94/j/6
WJgP4N+lFnlXzPgs9VcBrkriB6H9YM8SaL+TskA3itpZCBcmHOYz1DMhZ7ym
TTWVG8EfbN+CR0cWZ75C/oPYhVMTjScZNdH8IZCP9MyL8a7FPb7YD3AOnqp9
JGV+NR05vL9pUD0xL3xnMrYf4rVHkne4oN/gHGw22m3VcIX6PUL5OUYtZ75W
X8f1CHraqeYPDPNs6Ds1UI/WvFC7Oa1UzgF9adJnw8MKwkk4b4HblETPv+BE
/brhHNQielpoJ7zvKT1+svFUvWRqdyPnr8Y/8QVQf0DEinPCQa+pnzzxW3Oc
/llSxJS+Rwb5Kksr54+YviicvsNL2nNvleT3N7te4zkC577JYrGXG39Re/0W
ogde8XPqirHvXiOHeM+nKQ8WRXyjchfIFW6skGfGmRfYn/A+qUxjt5iKmROe
CxAf4f5CNOj7VBbPKXgPtKa/bPIXuRTk4LdWWS/61csuCTn4p3mYfe8UuPES
1xGUP6jYdnvxmEich8AXB7RuezYpHOUEqMd6z6wjI5+4IYf4iOuFk/UaR1L5
B94F61yw4ZyhIM1jAPXHEz0w9BvE6a+o7li/ZqIFchPyXuo3tR0KKV9oXjJ4
d/Xamq/L9m57hOsC5IdO+xcLvkxrou+DE385ya7rNj3vqB8axHFcO8g7Ojed
6jEsyPtlufuMT69vNMF+g/qXZLSpyz+mdgGoX33KgT3NptS/Gsqv/TNrdplg
IPVnJvKJ1zufaReXfMP2Q9yBEM+P7KXfqpDD+VjoPG3JJw/6Xgz4uQ3nE699
NYvarSAeVnrjDlHrfNpvED9723DOmd4+mvcA/OuUHjyo8uH3RQ71uz78qDnf
UhHlKGjPx3r+BU2Z9ji+/qSeO8ziYZpmHtSvm3A9wmHfAH+5vpuBxePaqb4C
3m+d8HXutFNjI5DD+61Pfm/2y++JQQ71PMlUe35/GH1PDfT2Or3JGWFNVP8P
5S1sfG4/FPTHeQvyZJ7CmsTLHPqeLMQLmEfYDb803Qc5vCPWry5/r7vZCecb
6PkDHaRCVm6Px3beJHaBWUnD06sXvMJ5CO+OuVdFJY4YYY4c/D28zfzf7j3l
j+c4yEWcuJVa3HMc2gP87RnRNsPViTiOIK9O4QhmmDy1RF5G4nbPvtBZal19
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
zy/kuSO9N63QUmG8eYfe5d7zgV8vmphtJOnBBoSLlWfqVqKc88lGY6aOlS+z
6fjZzW6cEuS1SsPnSxyuYG7qd8aEuAUwwMfEL5q9MKmUKQxfIGPI+x15aedy
l4jGB+z3+BtVVTL9yJNmCsy3qvZjxdVmPJexbUQ5au2Ii1/70rPYeaqv1DkW
Nchnm7s/nbY7hBXYJyWiZFiBXG9i7/sPH4uZOQP2oSLk6apfdfcNa2KEBt7z
eIs8vuaK3dH8FkZlwD8ggup5DLNlBMvCma0DcUTvkSf7rKrhCclkZQf0VsXI
FWVFnIdVJrILBvSbFcjHGg1teTQhkJEYsOvUIA9wPrxnc2sCs5LYK4F3HTi3
SHrnU2bOgP/fd+QjV3Q+k2gOZ//Ln9uB/NH7sfq6YkHknYZO5MbnnhydZeTK
BJzedqZdoAt5naVQZpp4KCOpaz462K0budau4vVfTW4z4Xrxnrpif5BHPN62
UFHGl11z7ud6seB+5EFnKg9kxrgRvXMhnnexaWzWCClX8u5FO/I7ci/b23yt
mcKlPgKGvPR8VNlkeuuApzmjeT1hCW91I56POoEGE+XKmpmD+tvbnhbWIL89
5fXMsPlfmZ1XSiIFsiqQXyh+MGlv7WPmfmVul6JhMfKdX9dHd/lksT+ii0e7
cd4hd58k+3S+ZDQbkKBnv1vjNZ6zyamXcnb+4jBXdY0jeKvfIldYu91stORe
5v1aj12GvMXIQycf3OrPE8m2uipVythWIM8dv/xteLgn+9sjYnawWw3yx7yS
pVcuejCj8nPeqGh8R/5yStjYYQ+Psg8KRurwVrcjb/KNtU/v92d5i+SHZ+l2
Irc/svmoxkkH1qZY39Wi/Rfy9/kVmyPSHRm+zyHrlAy7kauaC9puGe3BCJfP
M+BYULmi/ePlytD3bqwz0e+B3uOtxfCWUzFZbPmn9xfdOJXIT1cYXsrcmM12
DfhLXUc9SURg/fw/uq3MkStmt1bZeiPvveFzwSq/mehhvyKfM/bKcMtV2ez0
Ab+0N3ivTxzFt/iZfy0TSPYf2PcmGhVeeOj9hs0N63wS5JaKXN5sybgNws3M
4yN219oEYpEnfL45dLVjKyPpz10AZ5BnnbwgdfdgC3OO7FfAn82V9pTObGBs
NDtjLdq/IhdSlM5vvpDFmg746dYjF1va7DpkfRjzX57uRuTXAxf27RuewOxU
dQ/XFfuBfP/dp486VkWy5VH259sFOpHzC1udimAj2c381h+5dkHYh9PkdW8a
LMpgmelCDlz/P+Cm1TuMvQzT2McDdrJE5Pqfjb+v6m0l71Lk435+80Ji8Gfp
FGK3aEBe2zAhc6EA5KP8gXy4UaWMmGEE6zzu8XZufn88LxqlHFtCQ5kigzuP
VDTqcf8XtLGOP/gqi735RSMhU/cT8nC5sOWqQxqZfDJewMXbM+1e2bQyBlw3
M4Eq3P8dc+ePjNvgTfyh65G/2DPBd6JCIpO5//SMYLc25J67p2iv5gln96tN
a62S+Y1ctTjWPGpIGFPgZfxofPUrvP+O/HnunfHZVGZdlsICbnwd3F/2CG7W
61X2YDe9DTvaLtCHPL2RKdhhZcroy6466capo/eXOZv3D9OqZ6YTeRv49GNr
Lu/d2Micl0kTFwv+hlzTclwwv30rw9t5baQhL+UCbV/EJcxbmRxtryp1pTLk
/tsb8uq31zCxGsnndcU+Ii8RLhCVUkpnOssWzOWtzkM+4ULbjDhhDrM7lNPZ
JpCM/NrKHLtPsunso6OjQ8+IsciPXrqz8qFOJvu0QM3VvtAa7zUhzCmJLfvS
2EsXJ29MsHCn9yDD2u+LxFPYTp2PZYUq6chzpm1Se5PiwNwi9wvgGQeqnfvX
+DIPY94e11DKR14m/WFzTT3L7CH3DuDqQj2ndq9NZIors7zcOFXIC4ZyRvFK
h7JrRWa+U9GoRv5csDvHXC+craiWqxDIqkc+Tc/T4Xh+GKs0cO40IFfLT34X
uzCUbawLmmVb2IL8mv/mUDv2MbNj4N2gVlpP8veffMxL5vfVSf4W7W3I64VX
3LrjGor3I+Dlrr0fXPtC8X4EfH5uxwiBn77snetxtzkWv5HrW1o9GVXgzUa9
OMZnW0j5t91uZ/3dX7GPjJbGy9j2ITc3b/j53NybgXsW8CMjX+gXF/kwIYdV
ZNoFWvAe6vNRtCO0v5bxOljebcBbj9x8rLZPYV8r40T2eeCS3XuuRCjXMXwu
k+wFsj4i/1E5fsxWgVR23IpDG1Q0UpD3ii4bazP2DTtf6b/9H/j2yaulu0ac
YeRqVj425E1Dvn7lvo9nVyUyywfsW5+Quw2LEZH4O+v8Bt5rqUJ+MTXuqjtf
BMsZ8M9oQX73oPufoIJQRmdAnv+B3KS8+kj2LE+2o3HOAd7qHuQx0eFHZCJ8
GEeZZLNClTY87/avvjDBb6oLK7rm7GHe6i7kzmIdezoMvZll5H6N5+/4b6br
X9mz8mQfhnt3nMLME6pzs1krsg8DTz01R0MiuuXvfYz7+4r3dFPexTyzY7JZ
Wch7Rrhenv9EDdVAdjSRB4Abm8f8TlAMZZ6S8x3414aLZu+FT7ALSPuB13Gk
12w97IrzAc7ZTd0dDhLi8cz3ktc1TwubkPPHtrO61hE4T4DvaOg65vzBi60p
XB8gkFWLnPNDj5McFs0uGsjPUoY8dmRDiLxyNDuezBPgd/b27tFe18jwa7yb
GuTGQS7reWGtb0Azs4bME+CvPvMoOW+rYtYO+LFlIW/R5A1UnfeVWUbmD9pr
Lp0ocbLiMMFE/gQ+ZMek1KNLj+G8An5mbOQQv2Ep7JmB93WqkW+riOmXehDD
hg34J9Ujf/ZJKsf8gQ+xfzcgH7tOSeliZQQD8xP4gee6Lf38EP/QivznZV+r
bgkOUzmwX7Uh39m0rt9qlzOjSORk4K6dmwQet+qyMM/R/mWRGDNfOZxNH/Aj
pPzvrWzZveeR7H/vn/1C3nTy1p1RYV7suYbaaBWN38ifL41dtm3pS6adrBfg
512GDF9RFMrsET9vxLHoRR7Hs1P9zcFgRr/5UEembh/yJxsF5rYYP0Z5HviF
pczd/Tv02Ntrfd0EsppRH+URGvVO2zKBMSDnKfA1RSE107VfshfIuQk8yy18
tEVBJvuWnI/AtYe9WLDfNIHdS8474HFCwzaO/ivfmJNzDfiXHXrTqoJamQ5y
fgHX1fQ13uNTzViRcwq4oqldV75pClNEziPgpmyl5PXcVPYrOXeAd516pT5H
xY1pIOcL8Fu2k30a/p5rcI4A3xmjtL5oxyvGSH+LspLhD+R3Pt861vac5tMA
HmE+oYvrlw7nCHD3NCvLFilbZuzNH8KGvL3Iw/uCKww7Qhk4R4APEf0qPuTe
M8ZhIG9OGurNrnTLzJgcWIP+gcDP2f+q5b4fupHIRcAZ96ohGrkezJeIk29F
gzNRzzM9KcRExruK6Z0tOyzYjeo32q+Mahk6ypeB/RPkfJeX3de2+mWznIF4
jBdonwrUV/vKfmlhLpU2malotGL5xbFtdV/yEoh/ZwFyT5e25k0L3zLLif8D
2t2GTVs34a98vYHc34G/irSc3WNZyPynr6tDPmTGI/XZq2YROb8N+Y/VDvcN
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
Hz+aWu0V2vMCmx/AnaTuPjrbvo5nsXWE4ou/XUpbdfoO38zan+J8lW7WCe2f
y/yQwR9oWcsIfshr2XcBV077VCx8Fw82P4Mbq8f3DfC4x99j3wt8Rmh9hvC9
3rL5Ezy1+0Zfwd94PLO/SE9msHd6U24A18jsNfA9nhmKnc/GsPh00fnPvJ+W
boJ/uzyzR8DnPz//x0CnWM6M2S/gnfUalKU+JXGKzB4B76OgVqHWEsPqLzov
umHupi74q9v8h92Nc2/sf/S9Bnx+n5BL50u0j7J+GqAyM5fuGbHfUJC+q1MS
m0t6JuAnRram6h3MpfNnzJ+xx3KqTUOb6Pwf/OehvE9eqln0v+DhIT3Gr1ia
Qvet4PP37pvp3j2Ck2DjCHzqUsWZrpVNXJdfevSxxJXHGbyy18jluzE/Fsyr
chqvZDqnNpEfC3iD3L1Lp3MaqX3At9V88wxt3yf7Mj0E8G6Tvw8Kisjh7Zm/
N8X1TI91dvPNpvM08PnNT/edqMkkvynwyxkPSiZrptD5IdmnBvP6dhgfQeeZ
4Hx57Y1TreFcX9ebGwS9b8x7nYJO9N1Y2ET+G+Ct+zc9NjPI5RvZvAFu+dFl
0wLNVLrPAh/VPDYz900C15/NJ+CDjV4UFbXv83GfBV797n3fvybG0n0W3Wu7
/X1c1yiY7p0xPyzfoKuS5JtDnPzbr8ovFe6jtVjcMenRxTRkVeffpXh5sk8P
DI8T4lUL2LkNePaejrqGian8AGYvg3+JXrzo68VE/j2LIwa/fMIza3J6Fn+V
xaWSzptF559CXKoks3fAu0drVym0t4M3s7vJPnVaFSPEpfZmdhC4g4mxnmAH
vWFxqeChRcdPC3Gp6wscn1RMLSH7NEDWN69CNoP/uPa3HQp+r8uYBMEOxfcC
n+zwIkTQ6UK8PPjYLQ1u8XExfBzbh4BbrW07KNibOD8BX9kUf0CwK3F/Ch7c
v2iSoLuF8xDSfyu0bBTmn03MHsf8k9BrCy/Y40OZPQ7ul3m+PqHdHn/F4p3B
Pz8q3i3EO69l7QAeXdNgIbTDeOanRPZ1bl2R+uI4/itbx8kuvjzZSljHE1jc
ELjZhcFVQtzQ36xfwT7dvLh5u9Cv0J5kF8d9DhX0DAtZvwLXOi31UuhX6P/g
P7u4OAm6hR9Yv6Lnd3nYCv1qzK92e0s85sa2jfqFPAe9C7ILajumnv0UTn5o
4P/onatafT+IMxpkq3y852fin1bvWGSUGM4dG9q27f2Q78Q3PdfRavK6zcOv
DNzXPEbn+KZg8gvFPDkjM5wrMBb5iYE3711hvK6XyC8I/JyxtXLM9Abqh+D5
R+weW+uL7CPwGG5P5uX8WNKtIj+3PrfHW82M5T8Nzrw31b6F+GdJCwfzncF8
BdOlIT+fZR1CU7rn8oeZngztD2/PDhs1NYb8kDG+1szpGVA4jSf/SRqnU1SX
6OoHceLx1/ks/rqHmL+9e9Vvf3tx//lZzH8e9y9YB3Pcxw0ZYBdO9/JYT0OH
qkqP7elD+kWkdxH2scOIpbfInxDPh6zTH9JlahBxPB8lndcpbGQg3XeD6xVZ
B/sme9LzuMf/cf7NcWs/Zw5+oWhnzWl5mf17eNN9LtaXvw1Ndv3x6jatRxjv
anLK6lIfcmg9QntKmyscFe6VlFk/B3+x++gZoZ/Dvx1cxjJZS4g3gZ8kzWPX
G/P8d6aQHy+4beg7jSubRX7RFG9YnTOn7nw458nOPbDf/rjos4HpmBSuH1sf
se74/3UwqvOeFK7Pf3AfVg7Wo8CDrbuFck6x8xPwoq3O8UKc3Tx2foh5RpW7
ukA4PzzBzsPBd0wbpivoM+C9wO0uh04Q3gvtAP69uOWh0A7YR5H+3sWv84R4
2PXsvAu8x+Nv+43f19P+iuKbJNZKyiQ2ctlMfwN8g0/0DjXZWvq+4O9ffukg
xM92Y3Gy4Ie6397brBLBqYvpJBxjOgkJYv5Cx5m/0Byx583Y8+5i534JiKMR
i4vJWPY7LsZWLM5lP4tzuSzGjzHeT0yHoYbpMPT9Dw6/KfDwH5J9PtfN/H/x
Mhr/ES8TxeJlcK6O8XvFeEjo0T9S+dnMvgZ/lLEhpXJZLWfJzs/BT0l27eDU
2MDhvB08q590VMY90fcFzxjyfluNayMnuft3HBn4/HGfXt5y8OQtmL4KuHFM
sfLP4dE89i3gdRM8PG3rEzjsc8AvWGvfyNaJo3YD13iz5KZ3wh1Oj90vkI5E
ySQ/tZoY/iLTVwFfut1ucNm4WN6ZxYmDn96zYNEXq3B+K4sXA5fc1TlJRy2Q
4rKp3dZ3H3J6UCiHuGxwxQALi89Z4TSvUjxLtemHtuRAfgKLNwf3aEjrErDJ
l5dl5zaYPyXmBT1tnPOW68nirMEvuqgrnl1Zx81k8dTgRqaautXFiXwYi48G
z9Dsd3TYuUx2b1sjmucr+oeviEjkEAcN/vToyTzNr1EU1wzueP5cnMoxkX4j
+LJuTmMaA2J4xDWTXTb99SKJ6kiKUwY/s/J24sYeEdz5X/PwZ+L9PttoB8kH
srhaEXeJm3b+2uwwsi+wf2jofe204alcfjPTJSOdTIdxgVXR1eSvDu79/me3
rq1BPOwsrDtzRnneOjrtLdkX4Aez9DovacriG9l9CtajvAjZ3GwZf96HnauD
HyvZ9GHq1xh6L7LjbJ40dGxfN6ez+wLsE+Lv/XSoXVrHvWBxoOCabn0eBO+t
4c6xcwmsI4+NXaqEc4kLTN8D3PvQ+pWJYfVcLDunBc9fuSZ+kkMO35vZoVhf
vnSxfXhtgihOEFzbbvu2ATJN3KJfeuLldH4y4pR1j2VjsvklYnwo45/FdO3G
MF07V1ZPrFMrz8zcKtQT/wt+vafSdsG/F/tMcJWI1J2Cn0MHti5gfvtYUvVl
h00Wbynm//md+X9KiD3/hT0v7ud5mvl54r4e+4Fhvk5DnBdn0v0+6W+fXmwv
xOHCDwd87+S/kt1qfbil7JwT3Mck452/dyR/mZ1zgo+L+Fbf68Et8ncCTx6z
V2nYkkh+EPP/p3vJfO7x28BUHvo54FWd1VaOkkumfSD41l63Ig6Mt6d5D/z7
FuM+56IDecyT4CELBmls2uFD8ZXg1drf3j/kPHiPGap3tPU/E39saep4OiKU
z1/3UkcpVMQnqxZPPTQ6gP+D6VCBj9Xc/SF0djhXndA9YI+SiHcPH3ye3xNG
+xDSzcg/uU7nWzDnz+IFwGtfWS29GiyKHwSvaO6pJcTnwq8A+7F1VuN17OzS
KE4Q/JPRuxa1f+lUkz1bJOsu6FTDngLfPm5IB0EvGt8LfOhsJedI2RQ6Pye9
i3UdF6rFi3TjwZUbF0QL+tJoZ/C4A2YF+zsE85g3SI9rkUvj3owo8ucEN/3r
yS1BLxp6buCavT80cMah5M8PvvyYYqCgFw17BPNDVzm3L0GLvOn8B9yho0zX
HQ8qaJ0Fl12farDF+DbtQ8j/8N5Nj8PSIr9f8PrY4Ai3C+Fk74CvPByWOWG3
C3138ErV02GmvSIoXhLzyfNHrTUp1yqpPuB93z7b9magF9WH9s+ncm5k7vKm
+oAPLrhoKb07guoDvkWmydyrzoHqA/7XNZ0NK/+MIHuE9Cfb9vjXXbtDdhm4
i95TE8EPE/UEH507qFxoN9QH/ObsS07/bh/SaU/otUjlX+0DHvJuXLDQPviO
2J9rvzz/QWpcBK/A+j+4tcaoK0L/r2B+OODbXEcuTY+Io3NO8GVaz09ZrArg
VNm5Demcxw87lRAXw0eyfQX9L9dzzezxW6gdwNvqH68UxkU1Gxd0zjzu/iBh
XPix+2XyJ1TamebfMZ3GBdkdLYvXC+PCmo0LOn+2GnBfGBe1bJ8APkb2ML/9
exi1J52H2+ZFPvLy4q4wew1c2rSjpmCvvWO6KOAH9NS+T3oWzqmw8QU+N+3P
8Rrt4+shywMCrmblcq68+Ta3kq0jpFP3bfEOYR3B/AM+5fk1NSH/BdYRcN3P
5zZ7tK8j2mwdAd84oOaqX/s6gvkKXEZJxS3mh2heIn25XToL5drXkT/YOgLe
8P3UfmEdwbxEOhIn93gL+SxwzgZ+sODor7wVNmwdAVd1aCsR1hHYHeAJxis9
hLwV+I7gxePb5IV1xJ2tI+BS3hX15u3rCOY38A9WdjpCngv0f/DrzXOatNvX
BT+2LoBPVTikJqwLg9i6Ay4t5S0d1r7uYD4El7N4Ii/kxdAW022oZnqqCWI6
CYP/Q0+1P9NTRTnYzzdOX6mxZXkUfV9weaspjRqRr8gPFvzm87gbSdqnyK8Y
+14vo7HTpm98RHYxxa0vl4i9m3+E/PnJXsi5pO8h0ZnsdOx7VYdeP9XmWEr3
4+Du1kein9jUkE4d+GjLAtk2+zKa9+h87/a88MOnonjcd4Mb+m+4PlTBitNh
Om/gdlUZKp9Hh9N8CC7jGi3vqHeFdNvAbRzfXV+xxInGL3jmwotLF/a3Jn1d
8LGd07Oax/jwW9j+H/t2m0jPE4oGPhT3B252r+/nzNPh/BnmXwE+ts676xIV
UVwneJzeJIuyY4l0vwA+rLtBqNPKePLXBZ/mdOL1oMuBZL+Dq0p1lUz/EUxx
4uBzp3y13F4QRPEj4DfXvbpibRrMX2J+vLALti7W/PC3bSOnwfx1KR5wVvX1
KZfv0DoIu2N4vtnd5EZn6s943jDbZOy8Ym+6b8I+ynG2Y0G99l2+TfO37jTp
m21Sc4zpGc6dYfY75anxtfgydUc+l8j8YbCOr/3ctW6L1BO696H4hdD1LQd8
Y7jOzN8GfNGoxyWLZkTz6cw/B9wqJ1CpLjiU5cl+SnZKhe3iWRo+WVQ+5U9Z
5+ozUDKcqxLTD3/D9MOnMr0j0flMB9e0BbH0vuT3+75G/12/iP+nK3KA6Yrc
Z3rgGL/FFg7lNwckcoeY7je4yS0L6w2rY3noT4IfG3c2MW1YBAe9INKRKA66
3Pt0MI94avA7ak7BB3oGMbu7hvrJEZfd+wwToimuHPzvnpXXDp8K4tOY/zb6
w84BBz1LCqL533kQRfZplNyM0HmTgsgPDd83Z37eVuvVIaTPCe7vlXdleFQk
9xfzAwH/EVJbKK+TyOkzXV/wSzP3+/wlY0vzJPalyS6vZ5U7JHCHme4TuNb6
1UOKfvLcH8yfjXRl/8z6s0GiiHP8ldczn3iXmtV1jSZvODl2fgK+b/beLger
qrkOpb/9uLCP0tcZMW3ZXVF+E7r3L/3kdrC9f5YyPxasF/s6FA0L8Y/heOZn
C57Z2+Jvjygfei/wp14Pz124FUHzObhHt00y6ZUNnC7zT6D1yzcsZdsynkM/
BE8qNosVxt1CMf/2LObf/kpM54dnOj9NYn7s5syPHf2TdHImrpKvbo3k77D3
Qv/Uklzz8VFFMo/vSDqrWgVVlf3T6B4ZvEv3kmEbpN9yssyvBry36hUPz+q7
tN+g9bHJaZH+PFuycyme8en33mb/ONJ+EvzgvEFdTFdHUhwlxoV7xvkzirIb
aN7D8yPmvzOP1IvhxXXODzOdc3F+jHH0Qzo3i5O5IzkmmYe+IvjZQ0caTYdl
0HkynVPtvZQQ8Tqbgz8wnXcdMBm8epQL6RKAz7es0Ru5pJHuoej5BnO3t5J3
WL6At8QvxCcOVupwiXQywQOy8yZMafPh4W+G9dHJR7rvkdpgah/wcqfeJrk6
nrRPI/2NkOn5wy6Zc1nMjxHzyZW8v9O8FCIpThA8+2NIcM6xDFrfSTfVqc8C
iZkRtF/FPLPV7UWT4qeXNN7BR76R9yl/X07jCLxXwBllrZBaak+Kx3xoOURe
tZ78LsBdohJkdjTX0rgDd3eYNll5zw1a37EOrr87/mQXeScefq14fvuUzbN8
nf1pHcfzCZHSocMT7Gjfi+c3v1KdpuV7kfZj4DM/q1ieHSvKp4ZybO2VWo7u
buC+bt3spT8vlcr/02XLvskVUdxOpvsELm2zfat7QhjFv4Mr53zyOZsdz/Vm
fsXgXVVm7Z5QdptPZ/ps5P/wI+1eREMQ3ZeB/zDQqHo77Do3jt2XgQ9J3Oou
u+Y2O89sJG6WcSP9p7kn9SvMt5lWw9V9t13g5rN9Hdbx6qbAlB5GQaQ/Az5a
t/J0weUY7gC7RwbPszJVC34Ywy9i+z3w3XE/9wv5FI6z+2XwtsrJKsZjRPHI
WPdN7v801Q51I90YcHWpdQeD2u39rmK8osdvHlzR+i7JKo3OAb7/sC9drV3L
xYrxT4zju4Bf/fb03IX1DZQvieIflY1mPb6Yy//Oc1xPPFTJ85BskWh+I7+1
qNl2yQcSWR7ld6Jz1xjpKdkuEezcXsR7Mo5+C74jcNa3xd7xXBxb98F1nuZf
sKmP5hPE+FLGYZeBlx8ZVXFaL5b/qfm/eUnmsrwkKUzPB3zJ93kdZxwO59LE
uBbjsMvA5889unpGczDtV7EuL7GZMDjxYQX3g/lLg+8J9NrpkFrJRbNzb/C3
5rODhXPvl8w/mfJ0dHndT9DzxHchf7wXElsFXYi5rN+C3/EbOl2qvd/iu4Bz
1ueVBL0I9H/whWuGZK8b6MHBjxe8ZudZPaGff2O6oOAmxhNLi5b6kB8F+PHb
V6cI/R/tD+6xX2+OoC8B/wpwGeUGdaH/w7+C6m9pWyLogqKdyY8xSa7rAdVQ
zklMJ8GN6SSIn5OfZOfksMsoLuzDWa3x57w46QDnKx5JIn0A+YZR2x68C+Gg
Qwuu2t+15YT+bdIPIf92yeoh6/c50r0M5pNXCx5unLGcp/05+K1AhQX+JkFM
P6Ge5oGStdn5A52jaR8FPunHN2OVa7fJ3sH+Ks/mhVJDu72DfRF4pG5H9Z5t
fjz86+h8wFbx06q3dbT/B7+Vt2pPXYgvB3uNdBsCO1sfvpHCp7M8RGQXGL27
3SsnlPbt4I9fTXzgcDGY/PpID9xVf3XrrBscygHXk6rSuPIzknS6yF/95dHK
hlIfqg/WI4Ouo+5bujRwX9h9DfiUNxvNe8QH8snsXh779n1Kee7CvbwVi/8C
9zY3KBLyJojnEWgz/Z1HQFxnw47pbIg/34HlHcC9AOkcDj3vuLNXCId7BPCR
xc8+nJgcSP0QvPJBhd8+2XDSbaZzkowSXf26AFpf0D4OExpOzQu8Tvsf8Fky
jxWsnP3ovhLtU+du7F5635tHXhXw8PsLx1X2dKNywAsLJs1JWeDHz2L37Gg3
+93JMfbSz0nPgdpzfKpB92+l3ArmRwHe9iZ/ruBHUcjyKYCPWfKofJ78W06B
3Tuj337cckWyINed2of8wRYltzzaGkT3m2RHPAiRrK6s50yZfzXaU2Fd2aJL
nzPIPxPt80M54biRci3lUyA9/JPmcnrXAul5/K/Bsqf2Hb8Gkb0JPiSM11mh
EszDDkJ9WhXOJTRcjyNdOHD/Vo3NDRaBHOx31NMrw7FniHcE3eOjfSITEvqP
OOZI+SPIz0o3J3ig9RHaJ2A+MdZT3iCcn/uxeCvyA1ztdvnWY1/eiZWP+pf1
jM0Z1l4+5n/yh4moe3RovD2POFbKK1SYWnuh3X5G/AjmvVcqH3VuhWRQPAj4
8q6tL3qs8uGQ7wB8ZfqJsHQdC7qvQfuffKIx0NzIi+JuwAfO3FdcXe9A+z3w
kL7eFYUrHGmdJd2P+jw3i06vuA9sXwoeO9MsPmxPOWfE9qWkV3/m6sBdmqXU
nzHfKinufzi4XyFXw+Kd8fzXL++sl72vouex7ru0pF9V2/aEONapHq/1JIa0
l7OR2aGU33OIX6H63msc/GPRH9ysg8IXrosif1pw9+4fpDqdDKR7YfDJ2+Qf
2q+4Q/luSKflqpxrxbwKDvGb4EbujvO9JpTQ+Sr4XtOTNQs2VXHPmF4x9snD
w8Nd3Qed4pC/ifxpPZbf9izw4M+K5cWbz/LiKbN8E2iHoLC5q14aOXNyYjq6
G5mOrri/0JMOnX/5C8mKPb+FPY/1mu5JZcuU8ur207wBPl6xaK5wbwL7FN93
2q75i+x3B9K5JfgGBX+JE12cSD8H75WxPCh3y6owep7u17YljStudaXn8b5l
c9eEXvtX+bSvCxxgZNJefgDzu6C41G2dDJXl8rie7L1I33uxY3Vh+3vtZfsQ
8Kv37o7VGu/KzWT+GOhX/ew8GzUXBZPfJt2z2AR8fKnMk34s2rMwM8K6/PJr
2v+THlSfHmZpL/NJbwq8uW/skPzvB8guxvzQoLsz7PKc1xzi2jDePwx4s39v
UwH3kfmjkp7S5hSjTj8dOSumDw++Sn9En5h9ZjziFjHed2is+vwssIjGF/iI
+NU+fGsq1R/vVd7FWGZ3Ugn3REz3W57pfmuJPV/Fnk8Se34Eex7jC++banPZ
K3tYPtnj+L5qnrXJqlueccdYnCO4bY3fmNK0ctK/Qvm2U01dvXrr8+I6z4lM
51mcpzIOv3d8lwlxR9f6j/Dk4SdP52DPfjyz6uVE+xbwbfpbTxboBJI/CeVx
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
1RPt722/L2G0rOg8geLv3NwlS5O9+P8D46xR4A==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxMnXm81dP3/8+998z3nHvOuWe4N2MhQqaSsWiSITIPlUiZQpLKTKbInJkI
RaUBlUYlyUyUDIlkCEkkmTP9Xs9e+/P4/v44Z6/3eq/3nt77vffaa9rN+gw4
5vzqSCQyoDESqVE6MBmJbCcEuDbxSKRjNBIZoYt9CpHIQYL/rYtE1tVHIlfp
fs9iJDJS+Nt1/61sJPJJOhJZoOfbiu4P0d0k/KvC3yb6ewQvEdxJ9+4SfL6e
H1kbidwo+DTB+6iszrp3t673F9xF8H2CPxPNnUr7i+a0fCTSQfi/lPf3yvMS
4U5QHXYV/QHC3yK6A5XeqvQs3avK6E+/ccrj1VQk0lt1O1b3n1E9uyl9UnT/
6d6/+j2u3xeq36NVkUhFaY2eq9ZvgvA1uUjkEdF+JHxS8FOCVwveXeW2Vz63
6XpSg+qnMuqU5lTPo4VPiLajaI4UPFE0cV1PUvqVnt1PuGGCT1UVDxDN4bp+
TNe3qT+vUDpXNK2Eu0zwsaJJJdRWaKpcJ+pwk/Cfqy1fhXZNEe5W4R6DXmU9
o+s1yucg5X+87k/V9ZF6z3fq/s/qv8mq53zhfhPNU8r/RNGMUf4369nZwq8X
fptSJHKv6H8XfY9YJHKSaB4XzZcqd63KfV50XwheLfhZwY+pbg8qHaJnYsrz
ENE/wGASvL/gGwSfonL3FPyT3uN3yvcc3e6q97i16rmH8JeK5lvhTxe+i/Br
6/3+jxDcUjT7iuZ60eykvtpH8C/K52Cl9ws3SHTbi6aNrq/S9V5Kr1baQ/gd
hd9b19fo+hblea3SBWpjM+FbC38513qHL6TcR2N0fVfEY/0Ytf1xXT+itm9T
7/H5n8r9S+3dqN8o/SI5t3Wp8vxH13/Xuj+qcu6T9+ln9dWhevYhXW+s89h5
U/jH1T9jEh7DjSX3CX3zZ53H8+ui2SHufqNdXRvdJ/RNod7t3SDatnF/p3w7
T6T9TfHttQ5jlW/1ZY3R79TGg5VG1aejlc9+gnuo3DWCv1X6tt5RrSaE1srz
WuX/Ot+K6nCK8nhN8LOim6v8e+n6VV1Prfd3/TZtr/N3vFjwPsr3StHuq3Tz
kvuS+WOvuL9l5pYt6z3P/K3nmoqun2iaKf25zu/qBeVzYtLvjnf2u/r0N/3u
1y+hbzSu3zOCc+rnl3X/b9EvUF++oN8CXa/N+rtpVPpr1uN3M6UltbGn8qzT
c1n9For2T+EPVd26C/+irqPCP6F0pfDHhW/sUdXvmYS/J/ouLZppgr8Tzay0
vxG+q5jqFdVvsur2o+7NFG6d0hlpf8vTdT1d+cwiH9VpC/XPLcrvM6V/6pk/
aj1HPpb2nMp8ukvcY57xv5noLhb9R0qb6LdQea/XuKjU+xv5Vf33e53n2Jd1
76SYv2u+8VrV+TnBG4Rfrt8o4UpKx6o+T+g3SvfuVJ57C79n0fMF30RT4Tqp
Dsco/8nVnueY027UvQ7CHxXmuh9U70M1fqJ6fpCeSSgtKp+TVJ8DhD9R6V2q
TwfBi3XvHH3LV+nZbVWvuNob02+J8CNFc7xolgneTvc+VNpB9XxY+GtE/5Gu
z1Bex4imr9J7hO8q+D3hB6g+9+v6KF2vV35dNOa7Cf5RcHvBnQVnNK6uUD7v
ir63nu8iXC+lh6gfd1GbPlG7H9VYvEN0syoat4LvU13bNtF7ETxS+BeFr1Ib
9xX9l6L/Qe3cSfDHgo/TGOuh/hipOv8i/B7CrxT+MNXtZJX7ku4dIrhHGG9b
qY0tVIeDVIe/Rb8Xc7zo7+P7510Lbiaad1Tf/bMMPn2XassiXXfVM7vo2cOU
zhbdzoIPEbxA9FcJvpY1Wb81oj1Czw5TnbcXvLPKaaZ23KI6fKvrh5RfT/2u
1jO/Mp4FXyH4dtHvqvt7iP5V5TlCuFuV3zPq45v07Ne697BoB2v8fCf4dvXL
foL3VDqWfhHuaJU7Uf12iugySu9WnjsKv4vyjAoer/vfqe8XqI8/Fr6zrn9S
HQ4TfXeV94DS/srzFd1bx3eh67bC/y7cxfSn8PcLt5d+l+h6pxr35/fqqhtU
z90Evyqa1kr30O8X4W8Vfj/Bbwn/r/K5lDmOuqptryttozocI/gNwXsJHq22
bCH6/YX7QXXYV2Xto+tHlU9PpctFt7vuzaRvRb9a9N1VTke18SbBFzB/si6r
nRpGkTeF+1ZjoMS8rWeO1/XW+n6OU/qX8LsKP1jPXKM+P5Q1Xs/eo/tDBB+h
5y/XuztYcBf9WqlP1d2RV/XsB6rbMN1rgG8TPFz1fIB+U56Nwh0t+s1Fv6Xo
3xH998KXhX9QNMtFP0nP7qbrlYI/FDye711tPCLqdbA653XsQ9XnU9EsTXpt
+7HefEg/tffRavNOl+u6nfLvGvXccmTMPA/zzqiCeZ+PlU8273V2RdY8GXPv
NXr2uJh5Nvizderbi4WfLZo7683HfQlvWTCvFVO91qjsbfTce7p/jPKsCP+x
nhst+HDRj2CcUR/Bh+lXL3h70fSDh1C5zQWfDY+lPM9ROln09XmvCxnl/6ny
Olb4e4XfTrizBB8ATyyaHXS9WvfjGs9thftKdWhUPjsL/53wW6isloIvZD5X
Ooj1XHSDVe6OuoYhr4imheDz4JXVt/sp1aORJsLvJPwA+kVlt1F6ldIvhW8n
uK1+l+m6pdJLlV6j8ZwS/Z3qt8tV71rBHyij1fAJoums33Jdd1A6DP5W+B0E
b6/fPyr3eo2Z3QS/J/g6wSn4EvVtc6Ufql0jlH9eed6r/C/W+z9QtGpqZLjw
Wfh51hr4K8amfoerf+qE/1BlPqV3eom+l69E86Lyeo71Tuk2+i7SWjebKb0r
4THPuH1AcDfBeyr/G1XIjarMDUrvyHrM1mU9jhnPXfTskLTHM++7GfyCaHbV
vV/z/iY+UR1WsHbo/j169vCkx8mR1W4bbVyrtj6kco8Xrp2uu4mmiWiO03WD
3u8l1eZRO5a1PgjfROnpatd7gmeJ/t2425/R9c2hT7YW/rrwXlTNyKGqT1rw
+6rLjtXGRyN+t9DDWv6qdn5EW/QOB8FDqh71ul4edf9vJ5ohwn0ed/8enPSY
yEW9n0tEvac7UmUVWDdV1i2Cj4LHZW1S/h8K31X5r9S9E4S/X/ibs56TMkq3
0FxxvPLYUmlJFd+gihWV1qofThD+G/XZmjqPzWl8y8I/rfT7Rq+jrKdt9Gyy
3uN/rWgruveL8ikrTYp+gujXNrpv+/L9Kk3pN0n4lCbLkuCZgrsILgqeLnid
6I9UezdXnicxVoQbqTrn4Wvy/i6uFbxHvcfgFYKvL3g8X6f0yqzHaRp+lbEg
uGnEfc874H11Sbpf+Q67Jj1XHyL4hnp/n78pnw5qR/tafwcXpv1+OoZvjLVb
wyTymug1RCJ7qB+W1fl7uT7rNYC14HnhB+n5j+P+Vi8V/E3ceR2W9HdbZAzp
ub/07dwEH6DxxoC5TfAS3qvS+Urf0e9mwb/qnTaFL67xvU+V/svaLfh33auC
/xHttqKpYR8kfEeV9adohjPPMx7ZOwjeT2VtrHG+cdX7DqVP6ltNxF2HS3X9
hdIt9Oss1DXqhy8Fb6lfC/XRVOW7g9Kmce9v2dsuFfx91Hswvqfd+QaF3050
T4t+W6Xv612fKdzB6sS/Rb9t2LP9qfd7vGj+UPqAyloX9T7hX91vHvZL9wv/
Q9R7pA9Llj10Uz7zKq7X80pbxL1XZJ94tcbF32rnT/AE7BkD3F7lrFd6ndr4
hvAbhf9R10OFvyqMiStU1qdRr6851TsLnfr4Wt2/Jun56CLR3JswfJXgK9Oe
UzareAzPUTpUuM+ivh4s+OOo879JeQxPOv/blN4a5qOVPB/1GnRzo2H4z42q
wwrB3VSHR+GbVfd6pdfpuZEJz3dL4p73k4J/Et0vatMbjB/eqX5/6HoftfVn
pTfo+e567i9dr9P12arbWfptEHyy8FWi/11wJ+V/qq5jyvMceKSY8YyxeNTj
5m1d/6DfNYLfrHPeM5V+AN+p34263rLa8CDBlymfS9Oeuz8TXU/de5h5O2Ye
+yHRPAufKLijqr61aJ4Wrrlo3tB39YaefVBpJ42BLXXvVH1wL+n6Uz3TQWlb
4d/Qc3UaGxPhifVcVDRdhH9P+C+UdoVn1rM/q4+/1Le+SGXN0b3Jot+WOVL0
r6ndbws/VmV/KPgM1fdTXb8q+B2l44Q/UPksgrdX2pS5T9/Q1kq3C+MaGdBK
tXuFfmeIfoHKLAl3Lvyw2vuAaIrsG+Fz9Vsqur/UvssFfyz4FdE3wjuIvp3e
xfEq+9sa8wXMM0wZ6+ss83hONLl6y15+FK6raFeJtqJ7B6pdV7D2Kv1GuNf0
O1fXe6vt81XeqSxUeuYJ9q/Kp6Dxs4T1RriXdf9Mxqau71O9aviW+X5U+DZK
X9QzNXyzutdc1+3Yq7C/UD6TlM/2jCPhtmT+4vsTvFjf+ZaC2wo+RX23Dn5E
6SjR/KFyWrCG6ves8mmhfI7Wvc9F8zXvTf1bp35urrSF3vefaucV+tbO1L3f
RfO90rWq2/vKP4e8Q/ebCJ6vvMYq/3q+A+V9r+BPdD8veKrq87HgnOB91Ccv
qT2nq81j9N0tZS0X/gXh+sB36foDtfUM9UNfXb+n/JcJ9yRrj+jGK91Kdd5V
+fwlupLKK6i+ef1eFO5K1a1BuOfZv6n+n6jOtWrLm4LfUhkjlf6h537Xb65o
jlN7VolmtdJZyn+Wnh0N3yraY/QrqOzWqstdqktc8HjdSyjti2wTeZ7oq5B3
KL8B+k3X9UY9d6HgeYJ3VT/U6H5vZBoat1+ofm+yd1W77lGeKd17RnnWKj1D
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
YE+sfFewtheta/tC+Imq2yuq91mincR8pLymIh8Tzee6/5l+M3V9oOqfRkZW
sQwSueJqdFfIEoT/hvehfNYqfQq5p8pdJbgRebjwZ0ctU35QbVot/ObCf6d0
jX7Po8tgfRE8D31/nWWcrTQWphUs55yi9BLhvxD+EOF/VrlHp8z3rMib72mh
vC8oeM06jzlTbSkyJ6ktj6u910W9lg0XvhHeTfjN9C5uDPzfpJj5TPi6W+Eb
lG6PHFd9Pi7wWpfWmcc7Xen3qkPrlOWtgwvmCS9Dpqu+qhF+vfrq7pxllvXY
p5RsY1itPPM523/9i82V2r57yjLKq1XORVHLcy+NWZY5T/BaldUyZVnqPch9
9RvIN6O+3Uq4F6os3928xvzQG+qTweiTVM7dot1GvwR0wl+AniVnO7UUa33E
ctK/qy3z7aH2XhGzDPd54TNKP2KvmPA3jJzsO9VnR+WZo0zllVe6t9o+Te/9
Td2vEryL2lujdInmtMeRG6OHU5+sQu+XtA3c9siglfd/eq6uzrLejNLVrL/K
/0e+mZzl/zHhfxNuo+pRgOcWXNbvZ907R+06B12PaJsrz4eU5z/Kczd0o4KT
vGtst9RPu2BrV2P5H3q9l9Sm6rjncfR06AfZnwxFf6jrAbz3nGUeF+vZ+0uW
RbyvPKeojBXqo2ewNRL+D+GXCn971DTH6XdJ1nugi5SuEn5ykK+OSVoGiw3D
6Kxtlv5C96Xv+tRqy1rryqb9S/C16pNHk753r+q2pTK9Fx4X/k+/fsiMRNMs
zLe3iOZVwbfQHqUja8z/PSb8NmH+mYj9Rpg3PlDZbwheqrb2Vn6n6ne68qzA
a6KfVb/vofwXimao6DsJbir4UdZ7tb9BNEcovU3t+63Kcubhyv8lbM5E00rv
aCvBZyv/WZofD1F7WynNlS37/U9tnJPxGt5G6VEVy5VrSsYho2adn52yXALb
kc+jlgugu3oI+bvu76hnrypbt7WF8siXTbuX0lcrthvpzJyQ9Dvg+m7V/a5a
9+9WqvNTUfMQryALYL3CDjPud4f9SUPZ6QHs77O2T9tb7TqsYtn/Dcp/puo5
g/0Be+Gy6/hT0fYttCWmdG7F8vXfhf8q6nLpixGqyx3YBKs+Y5OWq2OzNCvl
fHvpOlW23n49c5TgEwXPVn5bVXz/OaXT1Rcd9NyuSg9Sfp1rLU+cgjw5ZXuF
qSlf8/xfOffpkUpfq9hW6iD4K/TsevZIpferHz5Al6Z32hKdahhj3bLeQ1+k
77Sl3vUMdBPsP0T/URh/twluIvg2wU9jqxP4nxtrbPvWnvm9Yhg+dmeNsXnM
ibo/omRbuPnIx7Ch0O8ijcnJqtNywZOUnqK0l3691Z7TlfbVbyDfRd661Itz
1smiq0UXMAeZg67fqrGOGln+9SrjD+EWh31Kr7T1tqy1b6LvDvrrs5X3Wfpd
pfz7pa3vRp/bOW89+HqVtazG8gzkkqenreeFpzyJ+TPwitGsZSHjMuZVmXuG
6PpO0W4umjtFc63gOYIHw/uqzHdoJ3Nfxrz/HRn3BfqBg6m/rnuy3iq9q+Q9
8RvqtwkZ6zE3V7qr6vm88nxN9bxL+b8dytpP+O0Enyf8m0rvEO4fPf9nxjzy
SKXLNVe8p3sfi+YePbtE8N2sX6rXUOQAakdX/ZoHXuVG0VTCvDEZWynBM9jb
RC2fQZ5Tr+cK+g2Ch9OzxdDeHsJ1x64PG0lkg8KfIPwNJe+JZqtdt0Ztg4l+
6MeMZTA3K91C4/NJ0R8t+uuxFQxjqR18cqhzG3TjYY7aTvB0wX0F76h+eJp3
pDa2xCZK8KWsBcpnKjIBwc8q//+CfXxJ4+9B6q10pvA7B5vjnZRPXvSnIVvQ
72Q9d66+kSEJy2paVnm/SX7bCe6mdo4Je++tkM/FvP/cXfSjA7wn/JPe4yLl
3SLtdsG7YFNK/tuy79O9IfS10l9L3ifehIxcz26m+9dlbEvWAx5b1+cg86/y
frar6vBIzLajzdHxBRlTldbyo3QvrfnwGKWtE8Z3aLRt7LRG72XPrLF9Ku+S
PeYOgvsr33rWW2zQ0CfD/8Ozqb+O1/sdoHSrpOvDvnpp2vW/NurvGf1SG/oq
aTrqdqvyaQ0Pi69Jg/vzxpLlcoydVrQzbpkd7x2Z2UD6UvgdNG62VHqN6C8P
az08HvMX8xiyMuxw+wu3W+AF4QkPxPZK5R4oeITSNgmPMZ59O2o77pF6N/Ny
5h0uVj7bMR8lzEvtpXRm4CvWqN3fYg+Rdjn9Qlm/lbx/v63kdR24o/Ani7an
ficKNz+Mx73YpxX97tpjf533t9MHniXtdu+pe1/mTX8VOveExzZ2hMPiHtvA
l8Wtgzs31OW8UJ+OjbZBfrbR3yIyzxZFv5OLw3s5IeVvEz4Yu2i+oRbC76uy
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
sT/CXxsbpM9ztm1+IGNfDnw67lN/9mm0z8fjyNvKXk9n6v5zdfaBxv/zmoJt
6dfk/E18Hr6Ll+rMR+DrMSZjf5DBol+I31nMPiSjM7afWlewrzd2nRdX2Uf7
sxrXAx8Snr0fvqjO91urrJdK9kmhnnOFP134u9WHhyRs74Rf+hllp+NK9p/G
vulk0bVJGmYexM8am8peVbabIyYAuvI2YV66VvApZftkP6J8HlXdXo/ZJhN5
6gs1thvHX5p2/5XxD/jhjOfVF2vC/BzwxLh4QnXuyxxbcLwL7MtoQ4e052vm
6s4J23lS9tV526J/hk17yjEIqMNeact+0bv1Vj0nwBOW7NNN2cQZwDYMPHrw
Kwu2AVuGzUvZtnPIdZn7Hw/1vD/jlDgJ+O+OCW3slHAcA2xWu6SdMlavKNh+
dTE2U2X7oI/iGyxa9oD97QT129KY+3p+vXmMg7Epwp6AWJxNHEsWXcaDbP3V
P2+yX9O9ErZLMdvB36lnPlSa1f3hjEl0L/q2vq/YJrm1yn0x4fhUxPQ8ouzn
DijZF+NLwW+x11YfnhWzPXy7kss6V/W8X/l/JVyTOsvmkNGBfz5tO/nZoluY
cBmUvaZiO+qdS7arfx+5esS2+m8F+q8q1u91r9jWmpgqLZWWhTstanv6D9H1
ira30j+QJaJrFH0sZT0Ltv4fZCzbPCVj3QY6junY8eZcVrXq/Kxw02qto4KW
WKbTI7ZpB94BuVPF7e4guI3652vBQ/QeZqIzwY48ZX8W+mGRnp2h+lwYdRyS
3gXbSJ1asDwPPDI9YhEwVkYq/T3zf+Pokort39cEuSY27ejCN8kdo5Yf4suC
38riiH3w8MUj9uC6kuU9l6v/fyxZ3nZ10fI8bOZX6foj1WVZyvFKknW2IWdc
Ha36FfFn0Pj5SHkuEL6v0l8rjteyn/LbQW3dHn8G0X2Mf55ozlT6CTY67CMz
5osZAzOUtlZffSR4T9pSNM87tmi/CcbkC7reUfm10O+DhOuF7QDxUw5FtlBr
u4PTle+Lou2Xd4yU5dWu3y34lSHfTNvG//yo7fzf0zOvh7F1CzpLxk/Ffgcb
0cFF7I8Qr7HsbCf1w0p44Jz9ib4XzVJdb6E8BsTsj4RsGhn1RXrvo3N+tpWe
O75sfQF6g23Zm8fsj9BM8FYJ38OHE7nqgnr7NUSF+xo+oGza7ujE6k0/QG28
Qm26XL81KetE8BU4WDRHle2HchDfX8J6E3xMiim/E3yfjim7vkeJ5gvhfhL8
fsR6lneVnqf+31ixfwrwFnX2TemDv5ryaUy4vK4q/zD98uj/8+6TpvjzCncr
umRs3ER7Tsx1mpCzz+tA+OWSbTgvxNcs4xjCUzW+Lo7ZX/ZbXedS/p7RUfVt
dIrOqh98seB3RDMuZ5/RARnHrmHcD1Sep+l6ri4fyDm20uJqzwU3l+1PsZPa
93jB778Wfz3V9z39VqjMeJ3tHXog56k4LlNceY4W/e/wUDnTURbf1xsJjyXG
0IUx+79+KfwFGX9Pr6tvmop+UMy+Y+iVSE9Qfb9PuU+QtaKf4HumT+g7YL7r
E+HnwFesj/uCvEWTVJ9s1PNHay6ZV2tdz1a6Xptwn0C3peCBKvdfXR9bDmnJ
/m3o9fgm+2Xcjtmq50Vx29xiR4sPXb+o41jxnvFj4nv8WfPghqRj0c5KOAY4
/TWPOEbBt2WB4EUJxzD6XbhfA34njeGlwk9jryNcOuG4xuvrbadwi9r0X952
Bv8qnal8pgaaH4Vbl3SsZGwViE8+hnpjJ58wfteKfY5+RFeYdFyll6lzxfAv
Sr9O2u7kf/HPidGM3cv8nG2yd1K6smR7ktPRg+MDm3RccuJw9Y76e/iu4lhW
a7EDShhmbWK+IX4Xcr8fKu6DdRWvSaeFZ18N6xRjtKpo2xrWkefStp2ib/Hh
wZfnmEbbVRF3GvkCNhc9gtzguKRtw3ryroNdUK+I48xj63W24H30fk9U2ivv
eObPBnpi4KOnw1aJWOszBfeO2HaE/SBxErvkXIc6PftIwbq8gzOOxYod1BUR
x8IgJgZx0VuGOpwCvxHs0yj7HWz7Qh9uH/AnsTfIu54HqpxE3nZ07XM+RwBd
8HmiaVm0XWRv9cN65ZFJOKbqJyXLQnrpfnvV4VzW+rzPBSCfAayhBescD9D9
jvpdEPGZAvsHW74LI7YLZE9HLGziz2MbMzji2LPobdmPVeXdb+3oj5y/i6LS
6Xpfz6Y9lt5L2maOeLbY9ROvYVMs7ITjLGAvi/0y+J2Kjl1wQ9Q6J3zw8MXD
9hqdNHbf2DTflLFf84Wak5romazg99Dh5Cy7fk/12l5wU8GzkaUk7fOMv/O5
Sce7Jh/0CeDRKWyrfBqqbCt+ftK+gcR0xucdW2Vs00sprxn4lb2a97pZQbbc
aNyX7JErnhOIcQcfd1YY/+hd8duFzyGGGuvtAHzQUrbnwzeTeBLETCamxN4p
6zvx+V1fsuz/WtFPa7Bv7yr47oqf+6pkP2z8rvF/RlcAzDPL89ZlbKN6ntJo
P8WpjY6Nzvd9tvJ8JWk7PGLcY+d4WNS2jp8mbV9LLGBspog5zHw0Vu/256jp
9477LIrzhV+hPK+N2LawXcF2pW2VflqyjLAvc3jSNqPE1t8aHTw2tcSxL9j+
r03BcdCJh8439rTuT057/ExL2waOmOnY+xIjHZvXzinrY4hF8FvFsfL+UFop
Wm92dclxDK6O2r6/T8XvhZiBryjPs5J+5sUGz1H4uk4hNkLUsZL/yds2929k
KUnb24E/GRlCwvGX30/arg54UsKxne9R3T4X/rNQ56eQBek9ZLQHOS/psciY
nlB2/ImL0eEHHx/ihGA/jr0je65fM95D352xbTU2w9hX/x78Vn4SfHrO9kvt
6m27jw0/MVPwA8EfBD/WU3OOA7Ft3n4A4PEFOCRlPRr9g/4XvRXfD7orYPz6
bw31+b7KfgPkj68BNu3oQzsJPqlsnf7gon1UgYmhh54bp0d8V0/MOfbeZnnH
5QCPzcDxyOuRURWsr0NvR/z5wwOM7mlDsL3HBp/46vgLrK6yHwAw8sQdk67P
2irHq0f/9X6V9YHA6AfhQ/+Jmo/Ff4b1nTgOG9L2zSHOA3J65DDI6psFGF88
5DZfR+0/iHwIORG2VsjvwSPDJ04e8VqJEzo50CBHIp4ocZQ22XtVO54PsYMm
BXp0Q9hfgN8qYr0TMaTQPTUG+OigayIfdE/IhokV2zniOKfEOyVuL3zvRsFH
lu1jgj8Lfi6/BF8qYtT8EPxu8L/5KfjO4EODrwb296wxfQJMDLcrgl8McWfG
h7Laq9yZQdaNzHuLUB/iiLIP/iPqvfCKwFPBW50c+hy/JHTG2H7gs8y+gPdy
XNm8M/VnT4G85d0w5tvmvcf/SOPl8eCn9m+VfdbeCTBxAoHfVzo6bhk08qhO
jY7Xldc3uAJ9v8qIaj54OPjG/iWak7P22RxFHI+ifd1qKvZrow48MyKU20X3
Pi66zD/1/X6Ys28CPgpv5uzfgP/KVXH7P+I70y5hfx/excUa69Ni9nvCtwIf
D/w78CkDTywj/Jbw9UNf+wo2nTH7PO7cYN/bt4r2FcMfBH+x3fOOGXKU2vF8
0d/rH2XbLcwK3yk+T7NDHd7J2SZ0Td5y/Vdi9hfZM28Y2f6SonF/la2rR2dP
zA1sBND1o6PHZgH7BPT9vXKO80+8/+45++/jx78uxPAh7glzHnYIrN/7BZiz
A9iL/cU4L3vfCczekzhCjJPLirZZoA7YDHB2AOUShwfbEWxIiCsyMWPdBXGq
dg94+IMZateZMcelXVb0Oyd4BL4bxFfsKfzeecvfluQsH3st9Bs+1K+FcYLM
860wBvAVwq95cdEyMGRhjBvkH8h/JldZBvZnzD6kdwQaZGW3xi1/I//uWduh
rdS46JmzXQjnJzzKvA3vih1x0Omg2yFmObFmiDODXfYpMdsTjy46bm6vivd3
4McULeMi1gMx1cepjL6C78lZjgWe+A9d4rbzJp/ryrbHvlZpk6zPfOHsF+yz
wXMGyrCy7cCvV3p12Tq3sr6v2QnnA03TrONJVNSWI+Luf+aE96Ouw4Qq6+7Q
I3I2AXbyxwu+TzQji57PkmXr1g+NOSY5fsrAyMbR8UHPmVPjio4F20r0R6qN
p8WsW3yy6HL2RH6Qsp4SHeWWWceMJXYs+9beMcvWpuQNE0v2Bj1zv3B/am09
E34gZpvtpwSfHHPMXnSFnWKO8b5Lg31azyxbFolPPbJfdDXg0b/8G+wTsFPo
n3PMj/bK76kG++z3LNuHA38k5LSPpAwTtwjZLD77yOv/KxvuVbbslGdP4JtP
26/tfz5twOjqiPOJnQMxIbEjOCxmWwLsO8Hfjk6tYn33rdiMZB27/uYQM424
lIPLjktJe3eOWFZ5chhXm2cdx5jAgtihopu4qej4tMDJasuh8XdGFo3Mf+eY
9ezoy/ABP7tsPTx44nWivwKPvuzpBj97Ttlxm7H9IO4nPsXPhjkTf3/a9ZDy
fLjotahWuKXB3h67e3g4eDzG27IgG0FG8lbA876R67J+HV6239MvUfOx+GGt
j1onhQ8Cequji94PfRv1XpKz1KDZdJ6aaNZEHR8A/dF3UccjYl8Inr0huit0
WJxlxblYlIVfFf414LvTh8FuBPsR9NLEM8feAz3UN1HHSxwV5oTthJ+W+T97
mVKg513ik4dPHzHm0P/zLDYAnB+1IWqfHXxwgNlLwuvD83MeFf47wL2L3rOu
jnrfig6UthPLkX0zbWTvTDzstVHHdOV8B2Diz09M2CcHPT06fHT5nIcyOeCB
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
1OeAcgYoZ4EC69HIpUk/C3xY3mdscr7thqLjO3CmB3vWv+P/t5cFZg97quj/
idvfhFjEwMQBxEbpp7hteo7QPWUX2TZjmSv9yf6Uczm/jPv8Vs54/SLuc1sb
K7bx+YDYVqL9Pm57F2LA/Bi3vUql4tgPzZtoTFWM53yQfMVncb9R77OJV8d9
PvFlScO4jXF+LOfIEg+jtuBzY7vmfVbvZwFPXagTU1dd1DBnx16UdJ1pD/wS
8lZkYoyLZmFskHKN/S/2tdhLntVoX/OxcfubMy89EWDWbux98THfN296bDUX
BRpk5tCPC3MX8xJ6PmTM+Kjjq85ZvuiKkDdjP8y8Pj7ua+Z1bIWZ278JzzIP
oEfCrxg7PmyFWQ+RXWODPDHgiZuAHujlsvWIrKXYsMUqPiMYO0B85qk7ZwSj
y0Kn9T97QHSH6OyI1cA5KOia0Omh58NWbn2Ai2GNnhLW8Z0CjO8/8xJ6VvgJ
8NMCDWss/c86Ozjpd6ohFmml+izV/T1Un3zCMVmIx4LdE/GRkRc34Juteq3N
Op4tfkY7VOy7hF8QPkGdw5xGDGd80vBfm17tmLTAzdG3Kk0lnFdDmGf43neq
tT/j//zAgLHDOz3vOLfb6NltK5arbai3HxLlPlBtf1DGEHbj+GDhfwF/+Wu9
bcqwWf0n6fjCT/ANxtxO2ohfK76JO1dsG1uXsF3go0XbLvYU/omi7UJPrdg2
FttZZD1n5e1zRmwbfK7oE+QhZwQabCAjKccIJj4wMpP6RJAXNRjGt/fwUGfk
h3sVHZ9/geq8Z61jYGErsSHEO8eXDJ8V/L3xJ8K37uWE68r+C9tx9FTv6jtt
kXRMFeL0g0cPy/kL2PLjN4bsGRk0cmvW0h4J7y9uypsH50wc1lXWV86vuRH9
qdLBOa+V3RNeT5F5kw9ybM5boVzi36zK+0yCtnoPi1Sf5kmf28s5ArslbZ/G
OUGcfYCPBrEQdg94Yuxztik63wPTxmOLz9mX0K/Oe0+Kjwf7X86d4GwPbOOJ
XUpZnD3BeTHg8XH4XM+crnv71/vsEnzM8C/DzwyYc3JjUZ/5R8wqzreiDr8I
X4/9sPDDWCeJbZp0nE/ivhH/LcreNuXzcddHfI4u51r+hJww4bOciauL/AF4
r4h5D+JVwU/8lfCzP/IdVZwfZ+8SH5dYyvi5kR/x5Yj7Rmxl8JwRw5nF4NEF
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
PTZ9QynjiRHF2S6c4TJUeQyt2M/jWOVzQ8W8JXi+OZ5lbP9LXL6k5eTfcPZB
wr4Si/PGc25OBp4qaZ8U7PyrkrbV/z7tsprDi+rZNGODtQHBYJXPq5mtcVuL
PCprP9dEWGtYcxJBtgM/kEx6nUWe+Xeo240V44m32T48Az24VKD/X17sVYhr
xfkuxLZKpQ2zjj6nOmSTjv01vOJ6Ei+rf8nr28Mab9dV7ON7XIPbVx3aeG3F
18T/7Ffy+S/9Gh3jkDiJ+FAz7xGfjrmPuRE88TWYU5lb0ROgTyDmITqVxSnT
o8t4P+DRd5C+EWBiSwDz3DZZ6123qrNuBF0szxEnb1HIn7kbmHiDxBh7J8DT
2a8lHMOW+FWMJfZ98CfE/WTtOSPpWJcvCt+m5PiixBmFB2X+Yb93WdR9yBh7
umge/NkGxy5dnPB8RKzMdwP8fsp1wPcPvhX+lbmvSYDhi+IZxyglruxxBcO9
hFtW7botEH55iFNKvFLWKtascRGva5xxyHo2q9ow+Kcqjr3/viaOaRXLOJfV
W7+LnneicHUqaxvBw4itWO9v8YiKdaXoTKcI7qR2DVN7j1Le6zRh3JR0jCVw
N/AtR10GZfXXeMgX/Oz12JVkfdbeCuKpKa/hSecJL4DdOTbnI5TekXR8jNn4
Tot+ltKZyLKEn6G0ecZnFN6n/JpEjUdGTXtoFzQ3C3db0veL8JDC3yT6CzX+
bwkyXsq5PZR1cMxlA8+pOCbUlWXrfollgKz4OeF7qZwt0QnrXZ8g+B296yHK
8+6k7eGRFxFbcj56xozPYHmMeqoOj9E/Su9P2vcAv4NRej8PJS1XJ0Y5MbOa
4eeH3E/439GtZX0m4Cr12/MVx8nauuLY68Q+f5G+VNtHJn0+W1m4awQfXm39
9rVJ4yhnZCirono8SLuIB1xteN+Iy7w3tOUf0dyHjFfp1Wrjw0n7p+Cngr8K
cezvrnW7BlY7tv0jgaZ1xjJ72otPw6PCHxLxM9Cxnm1WsM/KmKx9VvBjIW5+
q4xpn826zFEhT/xdiKdPvoP0/Jik/WE2D/mQH+/hnlB/4s4Qj+TTis9Qwp8X
u+ej9Y0ck7LMqYfGaHv16yil+wq3X8pnRbVVun/K/m/sPzhbiLmbc53aBjy6
LGLooUM6ptZ4YjRhm90u0JxAbNuU5d7c3/R8jc+iap+yzJ/5n9gHxIgCR1mc
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
L9gPwcavBS6i7jiDN0M5mGWwy8R0wL/dVft2LpszfLkunh8SzwRueAlmuGGe
VfhWsV3Aywo/68EN87LCzwpu4o2csROsW9GM59u2edX2vyGMIfIYsNlxLzMG
/GSvhb7ACcMb3E1jeLsWdONzvkenJz4nuaLx26xbeCf3LzlGhmf1sZJ5SNHS
PKxoTtOHVTai6JjalXVcwwLuDvwd15Jrii4qmshdw3XjO8f3Di2sD9oc44HP
HXsI/DRtDePtWeecpvTYgJcDN3eWnqOD1NeH2neR2p+A3Vb1v8Oujh2kYY0l
eIbhGz5DYztd9VcpOZaF2Bhi/T4tm0cFHpdn9FuZeZ3SkUVzbc7GJqS+TsEm
gM2jbh8P85yNG+Y1WZX5adXcMVWVTcxbb3Kw9v0X8zdwA0prVevN1BuONWQM
xOZk2Dvwryvt0O8X5ZdiHqX+FsL1lBj3Df4bTDr4B753xLbAeQ7X2+KSv1kr
cD06zLuOr2KzsuNliOvg3vgo2Pqw+S3CZpzz946U/8QDwu1cJvayZB/aJznb
zOGATbp43bG+9j9J4/wgc/we8ybiCjszPw/lUcW2x/3qxsC/HPJgAcAEEJsI
z0MpPMu8m8g3K7+zjmE/8HBZ0CnvZN3yn9ocw0nMIlxbnJ+s7jEuCOO8PvP/
zTJzB1W0z/bgfKvGd5zYMAb/45zxIfCAgc/IJ15jFeDRAnve5nhFYiLQ0Fnc
ahsXuif4qDYqWxsFnruXarbfLMzZ7onuCRxSoxLbdngHb5VZPwV+qzPK1r0l
5vmtxJz/S6nfN2uO05+mvnep29aAzYG1M3wOcBrsVrfv4qOcMRvMIf/SfTsj
cywq84mhdfu+78ffCiaww3Mj5h3ov8CTclrZ+jj43uYnjsv8Ppzb3VT/FNV/
O3NsAu/9FTLzDFyt/E5188ItCvcPXARXqnwHlW+rPr7JOUb0zsT31h1Kt+vw
e/xutbMgtc+d+rz7uSd5/+9YciwwMcGsteAN2UJ1ti7b5w0vGnrlN+h4x6r+
OO17Y2S84qTM+LuLMts/wQ+el1mHCH7GuG59GXRn4Dz8MPbciHkRHAjwLMB7
sAJ8xyp/HY7DzNjMM5Quk7r+0qn55Kl/YuiPfsHSsN/NkbE5E1W+PL4rXdvT
MmuIbdlhvnjwovurfm8d02WROf5z2n5uZGzkY2r7cf1OabKmCTyPz8GXHnsb
5dh30YaHD2y51DoG9PdOZJ139Mum4HvGNlLwueCcoCO5gfq9PrI+xtTEfb1d
sN4E3PXEkZ2eGf+JzuaZDR/3AI3/qZz1YsFWTlcf16idUU3mmYef952aue7h
zXmvZq1LOHfg24Hnn2P+qGasIvhO8IroTaAxMU/lt1fMobBSZo1Z+gILh13/
6sh6Weh0wJO7QOmZqnelyneumA8c/+L3NetGwS/Qpuv+nN7JE9X/tnnrT8H7
NiuczxP0ezRn/Sn0pOCUQ3cGfZlc3deeewAuC3Q9wGB9VjP//BbKL1J6hfqf
Gpk3qEPn6SzmYqk1AjjXX9XMp91f+YU1a5CeFxkLC075qXA+L1DZ+ZE1Gs7h
no7M7w92A/wH+I1vdb0OUPk32IBT6yQUwS9XrQXHenyCtl8YWWuMdTracc/U
XTYxlMMVu39kPtNJoX0wU381rFuJvXR45ra/bRibBl4NDc8+zMMjc1A/X/Fa
Zy/VXbHod+zhZWtEwokA/za62PBNwCezhI8jMgYAHTc04OC9b9K9BXhl3YbX
oRtGxmqgS4gWIfzefzes44vdBv35vpE16OmbMaDNje4wWsP4NDt3WG94A3x6
sdcqrFPeZn0cGZ+8Kxi6yNhm9FSJnwTPjM44OubNOm8vVB1/gq2GmGdilHkP
X61+z1b9o7H9BzwzuOZnquYox1/wXuTrC7YTLTmu770aUx/tc3POOBy0Wy8I
1/3FqjVaeBbSquNVnq7btwUmfZzSV6rWFTw2s6Y2tu6/auaPgEcC/VN0eAeo
/NSataPhxAHXhLYy+NSxSps7rB+8fsPa63A7Ps6z2+HYoS2x32TWCdy8w7rk
8IDDm3dyZr0d9FLRjEazlbgn7ENHNVlfEcwwsdlwyKBfxnwPO8e4cCw8s2fi
r4vM6XpKZL4wcFAnKx0ROdbpoZzfY6x3WPc8FPJgf46PjP9ZL/N7EZvqX4lj
k97Fz6L8f1Q+WcdzItc/snYFbdMHMWjvtjhPX8QusW2S6r8Xex/qf4iNMGf/
L9xdcHiB8xqj9IzI8VeftDgPt3lnnbMDVXeN1HOlOTljHTjWseF44aSBvwzu
GvYbE/Ylph4+tf8q/3ti3riJBXOnUU6MGWNjvTM8Mn6M80bM2huRx0ycHThw
2ry2YD4teBPgDnhF+92b81p4HdZ42IRVd0bOOt9ofF/XYmwcuLh7dC03Ubqa
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
hnMPJ8Y1DUjNU8p1h6sUfQfwHd1Ltm99wDsYPHLRNtQDVL5JbH5kMBvY6feL
fe7xs+FvWxLXU3AccQ2esdQcI3CNgJPt1mQOZrhYqI9vbprGd2tn49IXad+Z
ans79ZXqd4CO7U5dl6tU58bOxvyw3/6hL+KJyNPeWTXzWYARai065nJ71s41
6xqArZpata91P2wONet+nV83DwM8C/AulBp+5xAnTZw68eroU+B7Qcv03NTf
k2fDN+WVgrnNIKlfvmJOVkijOjX8XST/vOpMVJ07tO+PGtt6Oq5VE8+9mXf/
3GT/DxyizWrnq6J5gpdOHHt6OnYD7fu1ynu3GJ+PzfnU2DaZaTqGQ5l7Kz+8
bp0UdFTwX7+qOi1KZxeM1fu16JjO85S/LDEeBMwKsRXEThLfSxxlNeSJ8wWT
AjYF7MrvRfO6/aYx7Fqz3s2/M2NYqAN2pV/d/DvopD1esD7hT0XHcNAX2Bj8
24x/t7DmejL2N4D11hMh/3FmfecPM8djjYgdn/VzwRoXaFUQ5818hHnL6alt
IJOVVirmDf4bv3DevBstGsNbdWMZsbE3Fx2Piw4RvC+sEbEpMUe4OMwT7te5
+zjvmEdw6YyB8eRL5sL8Cx9rwfMr5ll/p547/6w63xfNV7qyzvN3RWsz/qL6
D6n+acyBC+ZJmhXuAdZY5FlnkT4d8vAnkafum9pnqvbtXHIsL7ybReYAeXOT
lJWfX7DGCPodzRpH/5xjnJ/NW1f2CnAFDc+bHq2YN57v4EL2qVsn41rVn1h0
fN5zJfPIwCfTQ8/QO/o/lxiqsr9zfJOeafI3lW8t8dq/YnOPXf+XzOtwzsnP
oQ7f4gNi8yJh852msY1Q2avq80mNbYqO4QdwfMpfUXCM+cKSNcY2KXuef2/s
uTvz/XtCnvk4fTEnJ70j5AfVrOXcScf3MHbUvGNsOe4B4djhAHlP6Y9189LD
NbSrrueHJWuMra9+V6s6Vgd78m55c8931pjvVp0L8P+VPUd4LDaH3sWp8XRw
CDH/nRm+3aT3hfMGBwzjZ81LzCPn5KhQdncofyv2nJv5dpSZ/xk/8mP6naXz
87nOz2uVgGvQ2J5V/gflJ1bNzwy3MtzM8GbDjw1nNu+n52PPvV9MjIfZOjXv
xMEq+1HpPjVzjf1ds10P+x73DPP358K+2P0YW1+VDy+bUxs9sXO0/yHafjZj
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
OAz0C7gf8GEcVTavzYFq5/++cpZw
            "]], Polygon3DBox[CompressedData["
1:eJxEnWO0ZEnTheuadVG+Y6PHtm1Pj40e27anx7Zt4x3btm1b3/P0rrW+H2dV
xkkeVJ7MiB07Jt1kh1W3by0UCvv2FQrt/L4+VCiUuwuFZ1sKhVdJt5ULhYs4
f1qpUFh/pFCYuVYozNJVKLxD/j6VQuHteqGwA3XXoMwEpGchv0LeZIOFwi+N
QmFKzp3UUyi8Qf7ylH+NNku0P0SZA/oLhbGUnxH5hLZC4a5qobD2cKFQo/xD
lN+GsitS/xfkt5BXIH0t5x6m/6cY9HH0cTHyFcgX0F69WCi8S5ndGM9WlJ+E
9NQcp1B/Jy5uT/pal+MSyo5P2Vau5xrq30f9ayj/EuO5EPkM5NmRb0T+lutf
k77eHSgUHuB61qT+xeQfw7nJGO8fyOPT/hOUn5/ru43xt/QWCk/Tx1z0sSH5
l5OekHQb/U3FeE6mfBfXO5r6l9PfTbR3K+1d5rVQ/y3yb6bO1NTZnvveQXv/
0f52pK+izL2Uv4/yV5I+n+M05BWQzyM9He2fS/3Taf9/tL8H50aRX6C9ZbiG
jWljUe7PypQ/hrwpKH8i5bfl/lzMWI/k3NqU/5b633F/pyf/PPJ/o/4L3ItL
yL+S/Iuo/zbjW5fxTkj+k46PvNVp40Ly9yJ/hP6XRz4TeTLyv6D+NLR3KuXv
or3bkD9HPozxzEX+B4xtOcqfQ94wbZe5X/vQ5lzUn4RzU5E+3XeA+3E27b9C
2UWQ36G956i/KPd/JY7fyTuXsb/G8xpjm7Q/RJnRjHU/2liY9uakvVGUWZD6
r5C3Kdc/o2OnzHPId9Peazz/Dyg/Ge/nKMofibwY5T8k/yf62Jby91F+iPEs
4P0mfRblj6X9Mylf5Bru59ww+VMgf039l0q5FxvxuwbX9wy/EyDvx+9ayGdQ
/yjqn0z5HuofgLwM8orIc5A+k+MYx0//+zH+C2j/WcZzNfmTUP4d8idgvKsw
nj199v4/Kd9G/rSk96Gfrbkfh1DnUOouxTXsTH4r+Tty787l3P3knciYnmS8
y1Dna+TPkJcmvQzl96b8wpSfl+e3LOduJ70GY/mH+30n9Xu43hc4Nz/jWYv8
CnIZ+VDaX5j6W1L/JdpbEnkHjukZ64u+y9Q/lPEdyPiWps47tHUq5w+m/InU
76K9Q6m/DfLf1D+E9FK0/yXj+xR5Ldo6kPLLkr8m5d9lTOfTxoPkX8j9uoi8
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
9f0y5L+EfBVtTkz9Fcm/xv00fd/WyDPz2a3pM6bsfJxbl/QVQ9lv18hfA/ly
+v+A9BKUOa2Qc0e6/uLcAqSnJn830mMY07OF3PPzyV/WZ0j/43VFPzAX7c9A
3mJDWX+cQv6mHSlj2YMZ16ctuSf3D2Y94b3Yk/uz30DmSedL67ie37Ca76/f
4X9pbwV+36Kt0ylzrNeL/DbyiozvTerO3cj32e90getbjt9XyT+J8q+Qvzzy
68inqE/x/UTeuCP33Hu/KePu4loupr0i6XPI3578P5FHUb7s81AXwrmz7YM5
Yr6erEXPpe8W5IWQxyCfh3w0c0Yfz/KO4eynjuB61qHuxfQ/A+ljB/M8Lqap
b7ienznuoa/nXF8xXx1UzbPzGU5P+kvybyL/d9pckTbX8jtP3ds49wLpFRnj
LK4v1CG4fndNSN0JOPep+2XGsy3X9yBtn8N4PmXO2p6+HuVaz0YuFbPfv5pz
hzG283wnaftW2juD9k4qRlexJ3P8X8gXIW/sfMt4xkP+A/lB5FbKr4z8vmsa
5C/Jv4c+L0bexLUc7c9H+58hX4v8A/lTlfI+nu980Z73b4fBvE/XMf4bubZL
yd+U8pdSvpXyfyM/7NqS/qZF/g/58db8J/xvDFLnTeRPuOb7uca5ke+h/b1p
81K/n84BpOfz++3ajOMh8g/j3NXun7jni3fkffuU+fwQ/+PI07m/JD0r5T8h
vZvPCPkAyi9HembOvcN4jkf+gP5rlGvnfRzh9yn3LrY5mP+p/9cxyGcinzGY
9HPU2ZjndQTyas7H1FnMucP9CvKcjHdV6q5mey25hpusT38H+f8m3Ul/J/gf
Qr6K+r+5NkLeHPl25FbflWLKT0R7CyDvTp+/FtLHdd5/5A/VRyJf5vW63yA9
OeUXpfyZ5XyfzuD8Lbw/O1H+80LKXEn5UxlPlbLzULaD8cxYTFvr8L0YT92I
75dzr0pPykxLGyO08Qzf1FbSm1Omj2d3R2vmry94f//i2Y+mzLW+v8i/Ip/K
vb4a+Qvau56yH3JuBddh5P9Lel3S16n/pL2d6XsN1wN+P5D36MyeZjnqjmYM
C7ZFp7EXddam/nXqL0hfQ/1RlN+T8lNS/hvOTcf1PeH8Q/oK8qcgfyfyXyF/
Q+cm6n9D/6uSfxX5Ddr/yP1gb9aTUw9k/Vp3DunP9+wW56r2zK9+Z/ze+E1z
/fZ3Nd/qozl3G+n1yV+S9LO0t7drk2J0eVsw5uMZyxzF7NUblNkVeRPK3Kvu
jz4n8Ps6kLlhN/rbw+/NQNZKW1N/F+S5nJNd29H+dshv0kad6zmL8U7OeKZx
z8d41mvL93VT+utyPkA+3T1MNeuDiSl3Pdf/Xzn//w9dxyH/S51h6i/EmOYh
/ZM6I9c61L2R/P1obzbKL9wR/Vsb7UxE+V059zVtFJAbyEuSnNfvNfV3ou+j
qX8z9Q9H3qItusKbkM+kzhXIc/ZmP+B6yP3e2LasT64g/0HSJzOGc90vID+D
fBryeeqjkW/3+498FvIFfmeR9+B+nepcjPw/5EV6s5+ZmvHtxvjWck1L3mbF
7HWvQn6f/rZBriDfj3wO5V/hfpUpvxrX8zhj/5MyReRVKPMW9XcqZi35GuV/
dD9fzN76A+SL+vON9ls9f0f0c7vT/7SMbSb+T2tTf12Oxduig1YfeLtrMsru
Qh9bkLdvNfPbYPP/vCtjmIPytw7m+TmPOZ85h6jfHMuxHPKSHdGvHs2xFPKi
HdHnvOF83po1W5l0wzUMfd3PPZ8Z+Uf6Wxb5IcrMXM0axLWIc17VtT/lt3Dt
2pb5bRLkzZGfoP76rvWQN0Keoi3ruVkZ4//83pG+k/TEjPcr2tu6I/rEbYey
VlEHOIXvPvJ6zkVtme8mRN4Q+QHaWFubCXXupf7a1B8hPRF1vkR+Uh068viu
qSl/L+VHqxsgv839DOVHkT9C/lrkl9ryvVmNa/ybd2c1dUuMb1rK/6HupyP2
ha/c0yN3d8V+4pzs3HxAR+6Xc65zb1tHxrcU8ijkIs93NvJXcU+B3NER/Zzf
CL8VnR25X5Mxnq0ZzxuMd1G/3ZwbIu9H3tdtKbs6x7yUP74j9pIZ3JNRfjbK
/+B8h3yA+i3K3DOYPYB7gfM60p5rdNfq2pS0V93KGuC/nujs5iH/Na5/vM7o
sJ7m3aq6B0G+rSX369JS5n737O7vh8hfkvzLKf8i/X9D/SWQb3Q9Rvp7jqV9
Xq7/q1lDupa8riPz+V3l6I6P5vxd3O9vfb99/yg/I+maNhLk/1rzfdvCb3JH
9uDHUuduytyLvJrrMurXKb8GeZ1t+d5vwlEm/2fnX8r/hTxA/mKuyRjvdtSZ
nPQcnP9dXShlFuL+zOQ7TJu/lLO+cp31MPnj87343u+Tekj36uSvS/57rkvU
D5Sz3voA+VG/f/xO2Z459Cra2JB6/5KenXMbaE9iDAtTfiGOQ8h/m/IN11Y8
n5OR30EeQd6P8f/Ls1qPOn9Sf2rOrUt638HMve9wbln/uxw/kZ6VazqR+h/5
TSZ/PerfRFvncdzMvRnh+W3g2o5n+FZfdDzqW56j/KMd2SOf4bvKNbT5LDj/
P9Ir0v5H6kd4ZgerO+B+rEP+6s37cTN1XqT9LzuiD3qPeu+RnofruZK897iG
FRjLhPS3Bfmz0OdLyC9z7IM8ZyPfp8vdm6krofwO5B1K+V+Ho1/rV5dMmYOc
vyhXci1J+z8yhh3VKfPffI8yNddHfo+6sidwbzCBz5i2TqX+i9pyfAZdWVO6
tpyI/L/JP4v8l8nfhfwpyf+R+tdQf3J1WAzgfsa9AeulfRnDrJQ9mzHMTv6h
xTzLI7TZMt6jkJdEPh65jDwZ9fuo/5tzLv+v2RrZb7vvvld9C/2NT383cW4a
zk2ijpDyn/iNpfw5w9GVqlNf2rUf7V9B3uu0v6xru3L6s9/7qfum+gDkB/0+
UndiznW7fuN6/mIvVHf905n9WSf/pZXp/wvkZby//n+0aTOeRdzzkp6U+r3U
f8dPO32Vqf9lZ3Q6HdQfQf62+T3sQj5kOLYzbSz7cs9mpo3jyD9OfaR7a8qM
Qr6vGP3sT86H9DUN5/7Hue+RZ0WeBPlO5Okb0fd/y/mnSR9H+8fT/liO40lP
znEd92J2+vvONf1Q6vq9nt//Av3Ng/xcMfrkKSrZDxXJew55kN/16O9H2viL
MmXGfCbv35scP9PeNxwzkn8Z+beS/4Vr4vascW5Enq4Rfe9R1HtS3RXttZI3
ifp6yv7mmo7yd1P/IcrP1Ih943fXMaTnYPwPactg/H9zrtc9e2d0/gvT1j/u
gdpz7lnqz0/5Jyk/J+X/I+9CnunrjPVL9x20NxHjuAz5becPzn3vGpX/4068
X7eoP0RemvaeoY2XaO8z7s+ctH0CY5qK9E3U/7AvOlb1m59wbrbO2ACmIN05
lGfl92IB2nqTc5Mh31WMfv8Rv8dt0VnvRP6D6he0ZaiDocxu7pnU3VDnMfI+
pP4MpA+l/UlIdw9lLt5SG6T6ocGsnV7l3NLk7e03sDU2uQMY34S8mzO3Rqdw
Feke7s/OXNtC5HepA6CPG11LOieqa/OZuP/piP7vbfqcojM2nvGr2eO511Nn
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
mZHgw+7ifh/RGjy1uB3xO2KsxVrLsSDXgnuPZSk/vu9wb+b0d8Q21iN7frmR
4KXF5l3OuYlJT8JxRW++aR+Jr3A/rr67EH/el4sZrxhqsdRi4sQCiQkSL6T/
7I29wfSK7V3ONVMh5/SnXbkcbKDcM/LffF0JVuOj/vhHTaQNhbpfFfL/VL8k
940YJ7FO24sv4tkdxPGZXGnlpLVZby4WgGtaqxgOmbnJ253jFfIf4Pi3Hn+d
x9ujo/ia9Cqce7UvZbq1N4m/6sue372/PrbavyZDvh95ymp0K2JmxqfsffXk
TcrxFNd3b32cm3dhEuT/1XPOvJ053qkH3/xoezBaX4p9LAcbY58PyFWB/H5f
ODR6GtHP6Ou3nfgq9TPkP0vecxxt5N9AnbPas4a+nvSs5Xw7nm36q/ZxfEL6
557w482kjrA9+I+ruL9Hc+6DvvTZ24h/g74d2tBKpDfkYiZ0T4fcrq8Kx8t9
4VSbmevvpf7TXjtHC3kdHC/1pYxlZ9WeRXub0d/dA2nDtizT2Qj+/uH22PQ/
reb+yWUxA/KTTZ1LeSD7RZ/Hl/T5bSE6kVuR76xH97FlT/jnbkZu7ct/UD4t
8fv6guxLnY9J30h+S1/KWFb86OuFnLsJea5y8KF15Du8t/Vw380r54ncWtyT
Ad7HL3nfrqyHz+528jenjdVIl6vBCqypmku+v3p0OX90hc9uUcr0I/dx3F6P
v6G6P/8jP5AeqIdr4jf/g/X4kz3THozyd6Snq4R7ZS7qP0b+i+Vwx8yK/Gg9
/vz6qp9O+cOr4T/raIvO4WG5wOrBks2D/IR49XK4a2ZBfqQevjyxUqOQH6pH
Z7VJMfgkdVnD9XCD/K5OgPS69PEn9f9Avta2kTvUtyJfh/w3492c/PFp727k
u+pJqxOzPfly/JZ/pg1G/6dK1to+g1Mr4UM5pS+cJnKb/FkJXvyP/vhn9dPG
8W3R+V0lllQ+H8rewPE78s61cOF8Qf4V9XB+yf31k/gz5DFypPDutLL+W4ex
r8a5f5D/68r36bd62rpefxPex7M5N7o7HFdyeQ1wXNKeNeDf5ZSxrHtY8XFy
YsqNeZPvgLrEStI3c/yJ/Js6yb6skSYjb3XfX9cS3eGv25Zz7cjtYpBrmc9+
LoTDzPlKfrxudVli6snfnvy3C+HElBtzN/L7yT+T67usGn+Eb9riQ6y9boJy
+AdLYsLqqe9c8ThtDJJen/o/iYdTf0H7y1Pmh56sOW8lfyPy//B+cQ/Wqsb/
QV/gXZxfSN9ZCbZDTP8lpIep85vtcaxEW8txfEu6TZ1rPf5U57bHR6NRiw5L
O4/2HnVbZeo/1hdM8y6V+KTpm/ax99/3sxF89gxt4SscQv6iL2u69bQllIPd
toxlJ0V+kvRSfmPEMzYyl3nOvA9L4d6R40G82QD5n/elTds+ux4+H3l97uL4
pxJfbTH7H5TDufR1IXUGG+E3OrEvnEdyH/nO++4/pc6Yuq0cm7WG80fuH/sX
6za2L/w/33GcQPpIdb1iAdSf9oUTSLz9T85ZfeFc0r9k61r2Wscif03eL+JV
++LzJ17fd9B38Q/3GPT9H/LjfbnH3usTkY+yP+8Z6c3KSS8lZp3yezjnIB/u
Paln/I7VMTrWb8QTOte4ZiDvZ+Rz++KTqL/DV/WMzTKWXbqctrQ3vFLJN9tv
txxXUzdif9I2JKeg3ILXcH2L9UWn+Uw9/kxytY3hmt8iPaYevJu4t8V5V36s
hGus2pLn/T79jXY/oZ5uJHwCYo/rLcGfvT2cb6WYSfkm3RO5N5qoJf4J6hPl
l9LHU1/PberBa4rbXIL2NkZeFvld5EVG4pOqb6qYSfGcnwynf23S2qbF5IvN
d35aYSD4ffdyYvZ93x2P3JePtuX7bbu2r01L/OH7w8HurdK0kWtfnrQtnLNy
zzrn/cX/7ZbhzIXyv8m9KYfs7cPZbz7ckjlFjhjtTfrWHFEI/t32tb+rk1Q3
6VzqXCTHi+N9bThY8Wkp8/pwfGT0lTmwkPWnPij6ouxdCD+hazbXbnJBLjoS
fYT2NzG3Ym/Fy4jdFFMptlJ7odhXMbNiZ18aDvZ8NuSXh6OvEdsnZlns8jFi
9tTHtkVf8Fkl/hHa9icaid+I/iPu0dw/un4Xu/ERda4azjfFb4t2pTlGwr8j
1vqTntikxXeJjRYzKnZUfalcrmsh7z4c/+JL2oJJF5su/5JcHWJSxaburT1C
PKprxFLGq25jA87tNRz7lG1pI9NW5v2dvzeYCbET+ofLjSyGVCzpUxw/tKSM
9/9p3u+ZST9PemHG/yK/n5E/e/N+/cr9OLI9PiTHyxdXDt5gl4HgNZ4bTn1t
rNpavd/W1QarLVZ7qr6tYmDFwqqvkwtYjLJYZfGFcsuJgRYLLd5L3/bPuKZr
hqMvO0ysYkv8X35mDIe2BzN7GOmJysFXbDcQ+70+WvpqHV7I/kT+Yvlh5ZSV
W3aGgbzf2ly0vdzIue96gmkQ2/Cqa2ztH5x7VO5m7skW7oU59zx5a5bi+3W+
OjnKz1EOlndD8l/TtlJOeiOO113flLI2+70Yf9o5K2lrGY4XyH+WYwnSY5lf
v6PuHhwrOlcznk0p+6octchLuqavp4512xjfXOT/Woqu7Ydi/B3lm168L23a
tpy7cu/ug/yh64lKuDDnYswnkv6gnjw5ZD+qh5/6fvL3os4atVyD17I5/T1b
DuetPKLyicqVvQN9PtAebjPty/LHyr2qze+tevxX/9ceH5MPqlkfyS26A/JZ
tfgU6Fug/7bcqOup0xc30ZrxrM+xlngw8j+px3/07vZgft8h/XE9eXL+fkp6
gmqwvVv7qeb6RtPeVqXc0xed60fCUytfrfutl+rBRomRGuH6XkYe3Zc1j2uf
x4eDrRYDLRZa/Ze+Z66Z7hkO/lu+0cMY80K0/ajvrPvB3vBHbjiQtDY6bXU6
Kvpt3KUQ/x71cZ0t4bSV21Z8ZTftfdMTzjTxafKZyGErl63vq/YY10Q3qRtx
jmnJO6x87XBsQ3IaX9eU5QaepC32Ijld5HaZujd4bq/PtHOMc414JW2Nci4/
5DexmLWf90Mu6iHGswHjv5k+XuE+nsozXEX/Pttzrenz6ss9fMW9M8+jrr85
ZZ4U+y8GviWc13JfrzkQ353B3vBfm29aDo5bm/1rWypz7sHh8JMWe8P5IfeH
HMn6b3YOxP/YNarjfYCyC/I8tue32JI68pk+Us5c6n/c//qGjfB5y+tdGwmn
n9x+cmqIt5efUC6RBTm3b1M/JJfmQ9S/oBQ+ot/o/2HkC0vRGak78n3zvfu8
GFvB1cgnId9Of5XB7LH2aISvQP3cZeSfWMr+U65nvznuN12z3kXeA6WsZccb
CPfBbZw7k3PnckzNvboP+bxS+Jrk/rylLxirf4qxdbnnkXNq9Wq4S9zzrUG6
VA13r8+w17VZKfy0l7pGI31BLdzWYyhzody1xXBBXET+8eqkquHyk2NnhWrs
qZu1Zc9/SSl8v3J1ugY9phR+YfU7rvGOK0VfeUhffAYGhsMPu3Qha+CjmvpZ
7bvHIB9RypzgXCXvtXOFHKVy8MmnvXMjfGrasvaizMGlcGTIlWEf6kOdY+RD
fqQ/c88O5XDlb6cPHde/SjVcE3LcrFoNZ++LxfjjyeX7fTm+1ONTfjz542vR
DarDU5f3N/J0PeGEkM9ip3L2Hq4pVq+Es26aYvqUy24J92TU/YtjQ+SFauHC
MubB9dSdEPlH/j8ncX/uIr1XPbZ/19SurR+hvdvFIDGm3+W64NisEB/Iuvgb
59vucIbK9/lELdzRJ6mPq4RTb86B6Czk2lNf5dwoZ4D6rNGV4Pnk+JAv9uR6
sASu+V37G9NAP2T9kY9W90P/f7TE5ixWVYy2WG35LuUS2opzxxais56A9r5G
XkP9INc8O+19pc9Fa/Y0r5ZymJYzVP+S22v5Vp7AcQfpOarhHpPDQz4QOSzE
UIkfkStZjuVniuGHlntZ/abYCHVa6rZuL8bf8DRl+nqkGP3oOcjHqo+sZy/q
Hta97Ma1cOVvSZ+bkL6APk7Rdswz2ln/OeQXyHue65lDX/9yfFlW537USc9a
bfJlut9Gnr0arOEmyFd4v8rBmh2qTqYcDrh+7t8rreGGm6UarsVB2p+1Ek65
loHofOSae6AcLl51HnfKleB+rSec7/PVwwn3L9f4aGu44qauZC1zgTpG9+PU
/5L6C2ljLYcj7mvK39Ia7jjtlT1diZkxYSX+lUvS/hO031qP/e9a9dmcm0jd
di17xz+1v6proc1b6Oux1vR3QyOcj330t34jfAFfaV+lvTfkzlOH0BrMzcvV
cNL9ynj+1xquOvkKPuvOGsm1Ugdtzkf78/tNqERHrq78JOSVSf9Wzn9lQtq7
x7GV45vonPMez/t0OZk6wpG1OfUfrQXLI6anVAk/oFyMa5O/SSV8eI8VokOV
03nsUPbzcirLWXmvGBznQtc3xfBPV8ir+m0p5TDtnnpB8oZo/7r2cPZ30f4m
tD9+S+rIV70S+de2hCNsZfV3g7GdtfeHf1P96Yu0dXkpuln5Oc3r4LivFI5V
ORzV4W3ayDnzrlXnUIyuxP+6/3mxvA8hD9o2+XMgLzMc2++/feHHlC/TtNfo
tbr+/aUlPmquh+XnUx+rPkXf+DWLsdNrr1d/encjexL3g8c1wl8t16Ac0nJJ
P1EOF/Rp2kTK8dnRd0cdqFxX8nHLXSdHtlzZ6vTlb5LHSV2/fNpy58nBLRf3
YeXEOtiO+7t4LeszdTtyfsv97f5A7KA6/yu0jVD+spZgLo6uhqNvlWJ0onL3
1fVn4HlNyPswXAmn803k79AaruezKsHiOybHVq5HFz2Go0L6HvJfbgsniPqw
IylzsWsb92jlYPxPG8j/0flU/VI/+fc29UX3VsKN8S3v5PPq/yuJpbBxb/wd
b6oE+26b51TCOaKPlTo4dXF/9YfHTz6/G/V1qgSbq41cfdwx5XDfy6G9XTX6
b5+dmFv1r2K0tTF/WQh2+xTK7CEWVf8w5F3UH1L2T9dY3O+NOVdpyx5MXcPJ
1XCRfi9nZfN7WWjLmse1z1i/GeS/I+cS+TuT39MWjID97VaOLkTM+trV+Azp
OyQ/3uak961Ft66OUl2leyr3Vv7HT6P8tuVwS2ozXJy8vZDHJ39Cji2Rdy2H
66rcFv3lrX5TSX/YkXgAp7hnawnnxi7aYtSvkn6X48FK+Jflal6EMczjXOL6
C3kBMQW1vNO+23KIux9Tv+/ecxOOQd8P90+U3xR5qB59tnv/DTmKpGcpB1u8
dVv2535/fVeOQD4d+YhyuLv1udyC8g/T3mvi5Xk+V1Sir3dvJyZMbJj/N/eG
+1HnpEq+QX6L3OPo3zo7Y56Xsc/n9430SRxzMT+uoT7f+bwSXww5y9RvykFw
eTFzstwEchRcWQx/gtwFD1D/LOqfzfEg6Yk5fmZspyLfS3pSdezIZ+gDTPr9
UrhJ/CaoT/cee6/lNPlILBHXt7RcP5S/k/JvlrI2cY2hP/sZHPtyfR9S59FK
OFDkoZSPUm6UhyvhUtGH5eZKnudeLeE8kQt+S9r8QN8P7tdSzf2ze9WverK/
vtRvZkswgT2kT6iGe3klrmEJyl9YDReBe7qLSF9aje+RPoXq310v+C2cpy3+
rxeUw00upnK9Wvas2goPKmUve3g5vuNy2Om/qQ+JvrLyA+tbcgPHYEswGTfq
K1EJVkTMyFG0t285e8PJfIfIO9j2WqIz0V5wE3WGkRf1fri+r4S7xJgxxgOS
o0xMuPgLY0uIyRCbsR3Pd7lG9uf6Ps/d29y/lxIfQ47An8vBOIh1UN+3fCMc
WWLKxUcYG6NWTayQ1eX4oe9HGNMt3YkBYDyAH8rhIhdDN1c9HBXavLV/G9ti
QfK3pP8q8sekN6G9/1qCqdyU9GYc+gbLgbU56VPL8VXQJtmKvCbynoVw9IxX
yftjW2O8p+XcM+/dITzjMylfcf/Qnj1vfyU+YfqGyfe5BemDysGW+Ax8FmPL
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
pD+bvqra9LTtTV/J2k8O5A7KnldOrB8xwD+XwuHbNhA8sNy+Z3u0hINn/2pi
WqxQjI7b9bQxG+SJkS/GWA7G0NhsIHsGY2toLzinNXuw72j/4Gpij+pjcgjp
J6rRxcjRI1dPvR7siRiUMyvBm77QGp2oeFJ93PV1d09lrLiXG/nu+k7PV0mM
uKsHgp+5ramPc6/nHlL92WPUeZf+bqK/WyrxD9KXZ4T+9nM/UQnX//Xc33V8
d6tZu6nDKKjfqicWkTGL/y0Hz20spEvJ/qkU/qzDuoNZEru0SDm+cPr0G19j
lvo4N+xxa8ZZ6+GElONJ/vt9G3me7tXFRNxSTbxefedocpw/cn043HlygskN
pqxvw/kcs/XnMC1nn/x6xkgyVpIcYfKFrV6K/kHM8hqk925EdyG3if4fC7o/
bA2n40LVYASMB3pff7ADi5fDNSannNxySyDv1hoMp/HsFq4mVoo+vYtUw09m
W3KWyV1mzEhjR6rD1+4lR6JcieqQauqRh8MVKefmdE1Z31vnTOdOfXLV58vZ
Kj+qHBpyabjH1J9TPle5LeVQlUtV/lK5IOU4levU+OXuNfWZmYn0Mo3w8cnL
N/VI9rdyvWjT0Lax+UBsP/pE6r/qPOB8YAzNa/vDgS8XvpiNTbifozh3MvLy
rYkfLh+auiA5oS6vJqarsV03J//O/nCad5TyPZDrXD4QsY/aDA4hf271p2JN
xfT6bpQTm1QdzGd+rzi3ZWs4ROeqRmeu7lzM8EuUfaIRvz/9/wYqsa9s0RqO
UfV5Ve7B151ZQ7qWNAboMcXwxRob9NNSYtfKQSbe2RifJxRzfcb+NKbiPQP5
nqtfG+bc5535ZvvtnlcdbWs4T+erJgaPPIPyDW7vXFPJvZhMG3Yt8526L23+
V5E+qBHdl7HixQPIySI3izot/YdXLcc/QU5CuQm/LAWbLWeb+JHVy9EliZkU
O6n/kbFs5T94lfwVyvFfX5s6X5Vif91T24yYTnGnpaS9Z9qjnJ+N9a1O7jrS
i5Vzb+XMN77I/NXYDkYhL9DUPx3dGpvu19q8G9nL6rslX6/8gWLbNmoLHurX
emw5YobFDovpepZ37OeW6B/8/hxciI1fe6hrEn2D5Ih2reKaxHWO6x3XKq7J
9C2Sg9e1mmswuRvkCHdt9oMYh+7Y4OQLf6cWbLlrpHdruX+7FeIDpD7O78tR
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
z8pvI5fNC4XgVXdrxB9I7I18nPJVi52VQ0O8zDGUH+gOBuY8+r59KPydz6pT
6g9mQezCF23hW7uV482ucM6dLtdgI2t3sTDyhcqf4N54heHEr9fnSN8j/UfE
hzufiCV7sBA+nnuGwjf6ciHYG/2VxJK7ntyYNsbQ3vUt8YnSN2rHUmxZo9vC
V65/nrpc9/ju9dXP6ft3f3/wMXK2yt2qT5nxmjcvxV58U2vi8YnHUPenDtBY
H+uVwyWiTkrd1PalcDEu1hb/5t+G4qs2upD4ZvqLObeKURer7vswR3c4yC6u
BG+jblAdobE+TqkFKyLGzvWinLFyx8qRqL+v8U/kdpQDw//gUqXgJ/Th05fP
GLTP0Pdb/eHHltNNbjcx/8bvlkNNLjV9BK/U97kW3yE5HOVy1O9f3/ozm/aQ
7+vxv7qnP/FXt6f8V12xma9aiU+VvlVyZMk/tVct3A1iusV267Om75r6Vu3x
+sToG6NPkfgD9c2nFqKjVVer/5i+DgdxbpHh+LTp2+aaTHu5PmX6ll3WGn8I
fdj0Zetv4s/khZMfTg6kq+WiKcUX5J7W+CdcVgq3zfpN/2f5vOQGF3NbGozf
g7Y+Y0pO0OTHM/a5nIpyK8ppJ7edHIXGA9XnR9+fK7qDd+otJ36k2Dt9f/Xp
07dPTO6n/eE/0Nd+W3FOI9E/6utjHevKXyU3iBxQ31TiI6iv4ExNfMLFpfjK
vNwSfw85wYeHwvctV7h8MHeRt3gpfL7yJxor/etCfEuM6XHgYNZkxvp4juOr
zsQclo/HNYZrDWO2ym/gmtC1oTFq5bfRhq4t3Zinx1SDz/++EB80fdGc053b
t+kKtucE9wOMZ1Xk+Wvxf1M3akxA7eH6U7STvwP5S9pXKVx3K3F/vyjHn2vK
Qr4p2rd7a4llo4376Wrs3cZKu5dzfbXYvLV9z9iR+GnqN/q7EjPtr1Jiphs7
3XPqO/RJEuvY2xX9sfG3jc2zbEfszZPVEpteG4W2CjE1YhPlWxVrY7w0n72c
GvKzqY+2LW0S2ib6ke/rDEf6s9XEnDpqMDZoY1GJoRBLMTP5O1cTf0oukEuK
sQeO8pnQ3gYd8R/Rv0pf9t04t3QtmKuDaW/O1tjPxKjsjzyqtWn/ov2enmAy
f6lFB6IuRAynfNrjdBA9KSMeY+FG4lWKwRWLK17gScY6vj5stcQTNHajHERy
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
z9jF9Z44EI6AJ7nWx023Zc9q/HZjwtxWjE1b27Y2bm3d2rDE1/m9EjspPlTf
0p/VGVF/d+r/RPqfRniY5GNalrLt2lwHwgFyVTkxxYwt5vVuS9l3Sok3cTZ9
PtTI872uGBvaU017vLGUxbiWK9n/6XuzJPPRPtWsZ9SBiOE/u5r1kLEH/Mbv
08j+UF+GRcnfrZqYnsb2PA/52mr0CcYaExOwYyP6AmOBGp9z92p8cuQ6kgNM
Xx3fBbGP4gOMV//HQGw32sCMl9MxkphwP6ovbGQ9o6+EPsfvlKOD089MzJy6
OWPa6vfinsa9jesZY5G5XuqpZP9s7OY1Gc+B1exH5OpWv3VNOXHsxaIuWEj8
D/EGm2qP5JqebiSuvdjTlQrBv7qefWooNlttt66nHxuKzfizJj5hD8o+RNln
GvGXMAaLPqTrkm4bCc+8eyb3Tq0j4bl3z+Pex+/91sW8D3IRGq9Y7sRpOuJf
q45oy1IwaOp/9KnbuhSfOn3tjKGzcVMnom5EPmrbMia1/NSvcT1D7eOW/YVD
iuHsUIclJ8FilcRM2r+JoRJLpY+wvsJySm5bz/tt7CPXn5VK1htyS8ofuVU9
eBZj0Yh33b8RPNTyw4nRbiwVdXYnl4IZVZenD7++/NN2xB6gznWHUjjSXmru
7y8qha9EXdg4mwTlp+qI//Q1lcR+k4NX+7Y+pvqaGuPdWD3y3Z5eCkavrRwO
J7mc5CtbqzkXivVdXHt4MfzO2qzEXIxuBM+kb5/xb2vuj4eCJV+O8q1D2VMN
DycmtXstbZ7aPuXklW9Om9Exg+FA1pYkpkVsixz+2ofEvIh90QYo/vy/RuIu
q7NSd6Vhf8fBcGzItWFMqqFSbOzaU10DbE3+VW1ZG6jDMzaXHM/q9ozxrY1E
zK7YXdcfcq0f6P6lEX4U43TJWS13tfzK2sz0R1y8ke/TeKXYA+Ry9/ss97v8
6gfWw9kvL79rXNe68tkaL3Lv/vDPyp+6ZSExseRjdfzG1jL+1t716KzEshtD
XV3W+Y3wfMr3KZew+G59MsU3LNHINXqtcvSJl3E9PIq8a3rin6C/gulpnU9K
4cuYhXflQePL0f4Wrkc7EpPV2Kz64/suXYXcXou//pQdWcO4lpE/2nfTb57f
Pv3d/S9eR/nOWmJmG49wcs5tpK6wkrW6fcrPof+TsaZcQ8uXYvwdbX+3NPkD
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
eNFelvc4X17/DyLhROM=
            "]], Polygon3DBox[CompressedData["
1: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
            "]]},
          Annotation[#, "Charting`Private`Tag$50960#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl09trDnAcx/Hv5tmRnQzhgjBFDlFKbJhM1iLnaOJCVpMcLnaxLZvNeWy4
VCsNM+7ckD/ANFNkJRG7UFuI2RxiSLye1PP0eX++p9/peWbsPbzlUEpEfPI9
khmR5MaMiNmpERNxz/iIuXTjpIh28RX4Ch0U34w78Htcha/hIVyHO3EbrdR3
G1/FicKIuzSX9tJ7YyPycT/+kRVRgD8n96E+zUYaJ0RsGBMxj5/C16dHHOC3
ql3AX5Zv4VfjtdkRxfq34wdi65N75ffz3foGxRr0NfDFzjnAN+L7uRFv8TFc
ZUY3/57fob9JrEfvB75zXEQzP4TP5EfslD/O98oPi1XyN9ScEBvhT9KvBRHV
Zn7hd8mfEnusvtca38RO84/w9+RM/ERuFLeYv1v9WbGffJe5Lfg33iN+Llmr
7w9/Hj/Ff3Er7sMpCXePb+q7QBP8LXwRp+Nm93AJr3EPafxRvMpdVdMSuo3W
WWc5LsU1eBGej4vo5OQ9eLsELfO+B+VHvFsD/oVf4zx1D2kOvUNTaQdt9R32
G6mlH+k++o5uogO0hL6kc+hav8F6e/TMUUEL7dWYOJNj73LKolz8hTMXyLnu
KBUvclZXGF3OuZIfcK+zxPLE1qnPUzuT1xbF8m/kjYx2TW32v0ysRp2SaJJY
yjtuXDdvCa5Q16/H00YfHWfedMXSsV/hNKw9Fqt9JW9kjFo8Cy8Ue0l9okzR
M5vI1p/G11prnnwi+V8ybA4ut9ZzxZ43ntJMyanmS0VG4v9/9h/iM3Tk
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0LdOXFEUheGNBLhCgiHMDFQUuCX0RjRAAxRISNDSAxIy+R0o/QRjMCbM
EDtCRbTJ0cilDZgHwCXfLX6tfdY6e91QPzjSO1wUEaM4SEU0pyNasG/ey0Q8
V0Z8qon4iiw/Rw9ln6sjxpDNRvxxp4JfjiPZPP2GOeR0tOOYv21/B7POA/Z+
m0/4u3QPf/VM6BxHSv5DNmmeQjEK7uTxk98v/2V+xAPqcMrv0P2GEvcrPT+F
M/608wxq7T15TjW/Cuey73QRC8l32u3EBb9RZxNK7aVlNWiwfynrNvegCy/6
rnh9yTsn74cl/gqWcS0b0vkfV7o+JP+Nn8GNrEBX8dF+nv7Td8t/pa3Jf7S3
Tmv1rtE72Sbdwga+lEXc89rcf6DvvzhJMg==
        "]], Line3DBox[CompressedData["
1:eJwV0Mku3nEYxfHHGKoqeQ2lRWvVCzAl4gKIheESXICGtWHvDlBhxQ00Mc/T
zsrKPC1EzLO2ysfi5Ps855zn98/7lrX+bGlLiogOOk5EpOdFpNGR+bQwItXc
VBCRgs24SAs0/DliJDviEpNlCd0L86G7JPuszo+iiHr+nHmeyihkOfkRr7kR
a7I2OnBz4vY/rx1fcJW/z/9n/qT/FzfwuzfaZXne/sPL5j3jnu4K/8k8pfOI
0zhD32jQ3oC57mr0Ss2TVEIPso/eucdl2a637sy3tGTfsffIf9mzcAC7sfj9
/5B/xRveB941VvsN225qfavKXElb9jrdUcrUu9L74m6Cuuz99gzsw986neZx
2RgNub/kr+MFLsh7adOb5/Zy/hlWYKP+GyCGSvY=
        "]], Line3DBox[CompressedData["
1:eJwV0DdOg1EUhNFLRU7OSATRAjU5BxdINCyBBYAEhooSNoAE1LAVgm1yEKGg
JUgEwQ44Lj7NvTPz3v/s7qWVxeWqiCjgNRGxmImoTkW0pCP6MYCi/TMXUUOP
5FPJiJL5QVbbBnOreRBDKNt39epoouLrdGYjutCBdrygx50DsjffrddN6u45
V+Jv4oz3yGugKTqMEZzbv+SN9Fh/2nve3VHmNfFm7Bf0SXeet4O0eRRjuJTt
O9dMM/beyrfw601JmkKL7ERnlXeAc94WrvjPzrTSLB3HBK7t3/I13YT51NlZ
77gx//CTNKc3iSnc2gu6eb8/ZS7qz+n/8dL6mcqb+SX+tnlB71C2jjv+Bs3Q
srxPfoH7ypuQd8+H/+Mf5cY9eg==
        "]], Line3DBox[CompressedData["
1:eJwV0LdSlGEUxvHDDVAQ3IDALkMr1LQgLjlrQckFQEFBlBy0RhhAr4ggDTks
oVtgBgcqO35b/Oe87xPOO9+XHRkbGC2JiHEUyiIGP0QMIVUZ0YxcecRxRcRL
MmIyETGFCRTQxjvhXchdYkMmbbagnVdqz5XzNarQlIqo0+vgZc0M8himd9Ie
vZ+076Pstu4n++p5O843tDyq8Rld8rO6Of60OYM9uW76kz2dur/Q435q563O
HTZpNWYrennf9Xb1fqOW9p/fR3+lJ5yT2OfNuTc4t3lv3vle9gEZfEG/zhK9
nb9gLuJAb4B+5v1/uikzK/uHPkhflVnGCrb4h8V/T39zTxX/Jf7SOuxco33l
/TTX8QNHvMZiD+d2p/FN5tn3vwPG/0MT
        "]], Line3DBox[CompressedData["
1:eJwV0MlOk2EUh/HDkm5ImEmBhElbuAG5AoYWFyQoUBksOLCRhItQwjxJiwly
S4CyQIEuZBKjxEQ3uOHn4sl3zn84b/K15GcH35RFxBx+VkYM1UY8QWtNRA+e
VkUcV0dk6yMKGLZ/sX/jJRoiZmlt5l6M8Cp0z80XaMcdf5TeXRfxCCXk9HK0
X95LutUht6v3T/YZ/aP5knaFB+jDGP2r7FuZjP6iOwtI2Md55b4DKGJff4J2
In+t+x079Ie+/ZjkreguYRkH8ik3n9P/2JOyjTikr9rTvDxvzXyj/wMpZDBF
P/XOb/kN/ibW/+cwzTvjPeZ9QFp+z80X9Pf8LWTdfsf7RH9J/0trsjfjM23e
t1PmFa/I20YBR7wu+mt6yRuNmDHf+qf3vM9FNg==
        "]], Line3DBox[CompressedData["
1:eJwV0DVSwwEQxeENLQ2DUyAhhGSABG6CFUjJ0CJHwCkouAE1dhbocLcKl+Dy
Ufxmd9++t39JDo31jCYiYgRFZRHZ8ogMEvre6oh1DFRGXOAcQb9Ur7Bmd6a+
VUW84rc0oln2mJaviThVT/BDf6iIeEQHvuR68E1P8zdh0/xlvrO/Rzuyshl8
0sfti928peeRkvmgd9NXccB3hEO80+d45pFDQm5WncGb3R7PPnaxKJuzL/x/
g12ju0ls0AvmPp5+1NGm5afwQq+QmdBPog1L/sszvUtuBQ38T+ZO/TJaeZrd
SeORnlKbUMs3XOK5+gf6trqDLWx6pzbPWZC/t7t24wYtqJcb5PkDA/xHuQ==

        "]], Line3DBox[CompressedData["
1:eJwVzrcyhGEUh/FXzpVcKllrZ+3K6R7EQhylghmNWxCvQQ4NnQugodzFBejk
nFV+imee95zzP+f7aiZneqczQghzyC4Nob0yhE504BJZeqPVIfx415aF8Mt1
vMlXFSFcY75cviqETLlh9aqdWr7DLU5kI3ZuvPfl+pEjU68XRUqdqx4xX/v/
Hq/zgrtpszr1oveGXpdbmzyml8dn5g1uxJCvPlfHvePyjRyRq8eSutMsyz+O
q7dko/yIByRk7/lAZgAF5ttotLfDy/yq/yTTgG7/kbST0G/iCb1CuUH3U2bN
emlu4S1+Nn/BrBuH2JVN2t3jFX43e8Op7KB5zJ1Xdav9Ipkj/TbvY+4zG5Lp
8f6S+cYn2s0/uIMvzIvtTaEEf6f5Q8Y=
        "]], Line3DBox[CompressedData["
1:eJwV0DsznXEUxeGdGZJCjhSJ25ARg16jcT0OSUicw/gCxv1OQ1DwEVxKqYRh
xiUxmJEPkEp6agkdKhUaj+I3e/3X2mvPvG9Z71TX5IuIWETu24i6dxH3+RFj
dD09XRhRXBSx450siGjPi0ijQbZkZsl2ZX06PejFhawRVbpneNQrNT8gya/W
m6Ezuluyfp0m/jJ/z607M4MTO31IyZrs/UEV/YqXjZfIQrc7zfwHd8b1W+gB
uoS/753S63CvEx9lK2ZlImLDzjp+4B//E5L0Nzc7dLf1Br0/84fMn26NmMP4
bWcW/2Vr9k7RSt+a17jBqL05O+/danv+huf/imbZuPmFNy+vkZfzfrl/bB7i
CJfyO/lX89H+hLydrpQd0I28BXmtfgVv0/tK/p3+izSdkL/GOVaRg7Qsg0k3
3uAJnj5D2Q==
        "]], Line3DBox[CompressedData["
1:eJwNzTdOHFAUheHLAggSYKDBGrJEAwtwZTBBFjCBnCSL1gw5Y9FSEjrogQ5M
EAugYwHYJSCiW9Mxlr/i13nnnnvuS3zLpibzImIDRcURifKIKnSVRLx/iGgp
izhAK7rNbmRbpRHHdv/SJFLokX23/0m+h0c+a+eBJpGTNVVETJml+En+xPuL
uxP2L5F2Jy3bpj9l03aymEKl7pMsg2nZu96YWbVeDXrN+zFj91A2S/v4Hbca
8yPeaAa9GDBvs3OFAd0Rd+69b3GHdnTg1D+dNGenT6/Ou58O6u/SM/mCf+Yw
j4/uPMuG8I+fkQ97/9Jf5s/5r24setfTJfoi35RndK/NRvgivgCFyJnV0joM
Yh+f9VZwJFulozprtIG/8McF7XHvjJ7jVT6GZt3f+OP9w/44baWzOuv0P3UH
SmU=
        "]], Line3DBox[CompressedData["
1:eJwVz7cyhlEUheGtYJRy6KiEUq8xhkKBX6aRc5yRc069nC7DcBEKJbcgVXR4
/uKdvc5a6+zzfcW9U4nJlIiYR2Z2RH1+RAO6cyLacyNmed/mcEFEamHECd0r
6zDnZD10Qr9StqnTSKeb87JfuoQuRb9em84zb0HW53xqxxkG6AGdFyzKmnQ2
8uzDu6yC/4A3ehB//CW9IfopI2LLeZjutGuZ/2OeI817I+6NyLZ1VmQfyR7v
BuGdVd4o70L/EmPJN2SvWJM16+y4u4sq3Dvn27suq6Nb0Ipx9/bkG/x9s0jn
yr5rTMgOkv8j+6S77L5FintbvEnekfwYd/wp50N6W/ZFX+vd4AqPWb6Hn6k3
LavVK/DWLm/GuUynHDX8PV61+Q+4PEKo
        "]], Line3DBox[CompressedData["
1:eJwV0ccuxmEQxeHR60rvfNiraxdhw4KNpQWJ3ktISJC4Ab33HheCHYlbIKx5
vsUvZ+acmff9l0TfYOdASkSMo7EwYrUoYrs0YoU26KfLIurLIzZKImZ5bbQV
9bI8c+2yeTO56hQaSMhmzH5jWP+LFjt1/CbajGnZB78Dtfxlfbczlugnr4b3
WBzxhCneA71HNX9O3ubeHPPZeMMrqmRdtEO2aGbS3p2dW1TKrukNJvj5Zq7U
l6iQZdrLQgbW7bbKX9TlsnMzFxi3d0bf5f0ok53oTzEme9aXold2iwVeiX7d
+yacN8Ub5R2bP0Kx7IAeJp9LNiLbV++hSJbm/nSkYjP5DZ3xpy6UDZv9wg+/
BwW8HXu7GEr+Q7rm3i06p/8Hjfg+Qw==
        "]], Line3DBox[CompressedData["
1:eJwVj7svg3EUhh+DunTREpfG0sSt7otgKptVE+LrJyJ2RKIpOjRtQkJt1q6a
hiBtOvBv2BH+Bewew5PzO+e87/udL7l3mDloA0KZ74VqF6z1w4vvOfkchKs+
+JVLmXW26qwpF/bP9jNy4zsYgPQQ7LqbdpbshJFuaLXDSQy2zQ4lHoWYrKud
Uneu90eWOyDrPq+2qec0Ag1r4GxLjuJm6AtlUt+Tu7yaVA88+l7S/2Atm/Xh
DSuSUrfvHa/ekVNbULuo7l7dsf2dddPsnN/csGbNDmRC347+hnybV5Lx/3/V
+2bGsJl1vQv2NWvR/bvatIypu7avyJf9qH1CfcIbbtWe+d0/U6Au5g==
        "]], Line3DBox[CompressedData["
1:eJwV0LtO02EYgPEXHFgsB1tAR0YCi9Ijk3FjZWAAEggXAJdA4g4iATR6B8BG
otAWWjkUUA4Knna9BikCCb8OT5733K//nqmZ4emmiJjFYDJiqCviB79JRXzn
Av4+jngvf4e8fPJJxCWvyC+41m3XXoqT6Mc39S0eSURsck6+bL6OJfxxM6tW
7Yz4yjd8zhXOuv/ITgfWcab+m0/5F2f4pf3n5k7E42pfuI937Be8ZZtb9D+r
L/q9Y07jtfgKXXoTbuTNttsrmz/S/8+HXNYridv0WrGGmvpPPuCS/hwGxKNq
+zzGe/zKzaLdHNfaIu7Eu+rX/KnxXThh9iFWG//HW6rqD9yrcC8345n4BW9g
wZt35AfmNxvfyO2PvK1W5zIn3LkVf0BGP415lBpvsl/koltPeV7+D3N4i3ve
OFIi
        "]], Line3DBox[CompressedData["
1:eJwV0Ekv3XEYxfHHUCtBYl5K17pRNmyEVZe2hntdwy0SfQGWErXEToIaYorZ
UrWCegtqqCkp78HsY/HNOc95zu/5J/+K1Lem/oyIGEBtYURbacQxTdDm4og1
2kIniyL6yiLyyiNezH91oiSilX9FG6Z0kvrtqNc70bnj/+MWrfihM4MXtxLe
JDFt3qen+llupu3yvc/g2+Wz9gc003ymc2+u0vmFOX5Efi5PuZ/S68C8/DQ/
4p88275T1oUF+aj5o/sXdl/4IbooP7RvcLPA7oO821zpZpou2f+hl7qP/Ge9
33jgl7GKavMtVvgj3SvdHHe+8j3v/1J+Z9/p5jhfSr/rdNNBeYPvXpvT5l79
ddr3rrpj7nwyN+o16e3yO/iJJ/sNbOExN2KT3rjzTGv097DNT2BYXoc3DplP
Ng==
        "]], Line3DBox[CompressedData["
1:eJwV0UlOlFEUhuFTMqCkGRCtAoasAgiNidENsAMgJjTV0CTsQQVsqhCGgI6Y
gvR93yMsAUjQDTikeBi8ec/9zjn3/snf0JXvyCUiYgRtryIOUxHl6YgjXngd
keFUbcRHvR5+Vx9R0C+ipP9J/siddRHTWFRn7XyW/1Yfq1+aPeEl5xr7OXWL
bNRMkk+dzxD4744x+bLZX1hBXt4oL6HC/LlzJV/wqv4Ap33buL1+fu+NXu5D
Hb7IuzmDLGbcs2Zv0F6re77qV/Gl8xVm9RP8Tb5ubg6b+Cv/LttQ/9G/xrZ6
iJv0wrtbz9/rjQHk8ICCnQ/8Vv9WvWNm2E5RXe3djN2k3o2sDBPyF9wl/4k9
8z9ku3zHB/xPPqneV8+j2fkB7bL75/8om+I3eAJiREng
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzz0s3WEUx/EjIl5SVxFRNRQ1IAYbdhESQbo2JS7GMhCJxCAs2LkGFi+J
G+7EZCIddNI2JEwkEqmXxF0sJj6GX77nfM9znv/zr02OfxvLiYhp+fwhoqA0
olDyZbAsYkCWPkYsFEccfYpYxHKzJD8sx9xVIiLFL/M7eKt/5NPqWq5O6uWr
ZM1K7GXNE1gsJ8698L8xxXd6x4U6tyTiErvsNVdFjDg7KkX8A9/Lr+h/mKVw
Tl75bvMvWOHOarMD79+XSv1P/G5vDBv0685e+OYut6Zu4jYwqd/ENv02Vjm/
hXnua+f21BNcBnv05+pDO2dYwz27s48fkn6Z908TeMM3mk+qp6TXOw+5JfWd
3f9yL6fOzLjvD66aJXz3n7rV7O/7u/AKZ/Ea085k3/ftdDj7pG7h9/hjycgv
eQPMyUaS
        "]], Line3DBox[CompressedData["
1:eJwV0bsr73Ecx/H3KTG4/kzkUga3SXKZsMlgQkrSUYqROmdx+1Gumz+A325y
HVyykMWljjLglEuxOCcLVoPHb3j2fF8+n9enb9+KobHu0R8RkUR5TsRkYcQU
FhIR85hWJ9FXHDHDy2ZLqHV2LTfitCjiKS8ipa432+BX/Zv5prrS2SrUoBof
dgk5heiQWcAN5o1oRhO+nCkzL0WnMyX8ICsjP+KRu7zzzn+8kW32oe43y3Tv
2ixhlqUeMivldfcH5ZSpB+Sv6VNYxQl+2h1zvX2drBa+KpCPNvWWvGH3trlH
v8sVdjvcq7/35p56wmyfR8wOuVJ/wFVp1FOoTtv+XN4FzjCJX97/jSNZl/o7
3GLF2Rv3k+meU/q/3CLnjlv5mRf5hXft/zn7H+2+65XnMC57ArPpf4B3fOIb
cRhJkw==
        "]], Line3DBox[CompressedData["
1:eJwV0b1Lm2EUxuHjIoqfFUotiF+hi6IkQbAdHAKixFEd7dKhKQ5J9oZC/wBt
wAwulmoLbZdWURxE7VLQgAXBSZcU1zpUKnT1eofD79z3uZ/zPHkz9KI0X2yK
iLdqoD0i2xPxuiMigxWc6Ir43xuxol9Vk/QG/uS9x/UHEd+xTm/jMzsO8UjV
eDn6TL9j368kn3jOvKOrqpFk8TceYt5s7HHEmr6m/vF/4B0e46z7WzojLuzZ
km3Vf8KPqk3/rdt71LB8P91nV0r/1fyAP8j7YMdD/Qg/TY/iI3qTn6U/Yy+d
5k/RGTynv/Cb7cvxdvX7dk6aLdJPk99BF1VWpuStZVUweyL7CpdVw7vzshX9
HJ7JX9v9hj6RG9cvJN8i+ea8xeS/4J2aVekrvHRmib9Bp9z1XH8jU1Pz7lxQ
L3kNuUIyw037/uCeM3/tmJYtmc1gGW95dbN7F9pKPg==
        "]], Line3DBox[CompressedData["
1:eJwV0DFPE1AUxfHrIpLYVk0ERJsUFhYLA6UD4NImJuqiRo3d0BibkFgjCTA4
aCKwEBPTbwBsOLk6gVUHrRLUwbFV42IciLbWOMivwz/n3PvOve/lDd28e7ly
ICIeYfhwxJ+jER20sXIsYhlJfoZePRFxg64eiagmIv7pr9HXAxHNZMQ6P6h3
Emmcwg/9Q2Z+yvTSHpzWz2IMo2jJ9On345w7jtNJ/SmcwTT+ywzr79kzRDP4
6r6DqYhv9Iq3d+iO84TeX/6iudty1+ws02fenbJni15Xl7DNp53X6As8RkG/
iHHZd+rPdtZpTn2P3rJ3jhbVT921y2fs2OTP6s2ryzILtKR+xb9EDXfUDftG
ZCv8E5nz7rpk/gL9IPMJH7Hk/I3cfT7v/C1f7b6J5szVaRYT/APkseG8Kf/d
HV9oAw+7b7F7sftnfMGuWf/zXPaX+d+o823awnt+H3RBTTs=
        "]], Line3DBox[CompressedData["
1:eJwVzk8oHnAcx/EvDhzsecwcuChxFEpqbbVaHkuKIheSLRfKvx0oJzU7cHBj
F5kLOTiTHChP5KRwFav50/xJDrY2UXs9h0/vz/fz/fP7lfUMtw1lRcQ4ledH
NBdE5L+MaMGJFxHfcUY9j3XJiL/FEf8wKXvE40TEb70n9QO+lj3RM+2Z/am/
6M5bdbZ+Dt3K7vRW5e/k2/hHdi9L8+9lhxh4hHPyFH/B52bediNBHzJv6T3K
E3yR7BU18r3Y6k99uGamwP1v8mXZLDZRv16HegAr9N+UROzyK7IdnKZu/hN9
pBI77WZqCiOqqYpS9krlDbjgnT5zg/IhWuc75V10otfgn8P8D3dP6TO/bXfM
XBq/qi/lh+oLrJRNys7szuAUjeuNuD1K53y9/1xm5mlJ/5edL/wVbqhvMn9z
6xrzzNbipnyftuiA/gMo8E0Q
        "]], Line3DBox[CompressedData["
1:eJwV0UtLlGEYxvF7XEVkc6CBcVN0cCQmyjRbla2aGhwDJ7BFHpj5AAq2EFxa
6VLKqZXVQlv0AQqlIHDEltEBosyVkIuYlUgLC/rN4uL/3Nd1PQfe92RtsjKR
iIhZOnMk4n57xLejEQ8wlY5IU74jYtH8k1/Hf7xjlKUu2QpvR/YS2zIRx/kn
6LW5yS/qvLE+LOvmX6SG+Y9sA5/mInKyfv41+sJLJCO+4ml+2f7r/CL94h2S
7WJeNsAr03mdA15S9hfPyir823RBlnbXKC+D83iOCtRpztqz5w1566r+M/5z
6jM38DIuydetF1IRN7FEve65IbuEq/a90PksL/GmcY13RXbXfBW/8065a19v
xnqMP+KccXyFH/Q3W9/Aex/yCrpz+Eh3UH6Lhp1T593BH7q/ZU/M27pb5ir/
Mdaw4pwhe5o6i/RWr0fvHS57w3uc0vuI91r/Q/bJ+j/P5kZo
        "]], Line3DBox[CompressedData["
1:eJwVzr0rBXAUxvFj93ZNZJDIomQhDN4WJsVyB4pQusoVoTtYjAjZvORlIO8U
7mRlYbFYSPwBZDfI5w7fnvOc55zz+1UOT/al8yJiBgf5EdNFEVN4KIxIF0R0
Fkd88ws0TRNlER3qCXU7HTXzqd6wO07/SiNSdMv+Jtb1z0oiznGKQ/TauTG3
JPtBxly33rt7mdztRMSQG9XqQVpF2+UV9MpeVm/e3gC9M9tPe91oMDNjZjb3
F+8k/TVF99Ai36cj5tPyetkHrdOvxZj6DS/ub5gr1Rvkb9VZ3OAaefoXZpKy
Z3x585jvUT9ix/1XvV3axf/K7ukW/6S/TVv5NdrsD6t0BXeyNvcbZct8k2yJ
LuJc1iqry/0Hm/yRuzXqy9w8f8CXq08wx2fwD8IoQ7g=
        "]], Line3DBox[CompressedData["
1:eJwV0TtI12EUxvET0hJaJoRKJgQNLYGj4CI4hYRmJtjFKwotKlgEKuEVKkIH
FbwMEuTSZIsoEoSQJbQUaYtDEOQgmELqvwTr8w5fznnOc95z3vf3u9zSWdNx
KiImMZ8dkZUTsXc+4tG5iA9nI36JT3MjdsU5/gn+FURUqHWqvdEzJB/GIKb5
GbzVM8vb0PMV42oH2DS7nX7BWxP7nHmfNG8f1+gWuof/MN0D3Rjh7aBNvRUL
5j+hf+JlXkSZ2mP5DyzzisxYN+sjutS+o7jQm+h83rK4hAfqW6hRW3TuojnT
8jo7p8Rm3re0g75Jn+aPiZ/1tjs/Kq/nf0EuXU3v+YbPxTb6gp3P5NX8T5hX
e4UtPTliK7JxnXds5lqK9F8c29WcvgeaUM57hytm/qEz2NfTIDbiPkr5KziS
H6b3m7mt5678Hu6ghL+Y9rhXFWbcpVZ9Ve9t8Rau8hcw4d030v/RM5Dewcuz
v19+if8av/VU0hv29Ipn6B4xg/+cCV57
        "]], Line3DBox[CompressedData["
1:eJwV0T1I1VEYx/FHSJc083bB65I4OKijg4pLaKDkJVEHb9CitviCmku0iUNt
DqaTSzU4OdhddPGFpkB8GURIEBR8gUAFMYco8/MfvjznPN/fef7n3FvVP9Y9
WhARs1gojnhQEnFRFnGFS3zRC72oiBgvjVh5FHGufngccabO839wmon4yn3G
nP0tsqmIbTOeObur7mBa/xpb1gPOT8lvqO/s19WP3AVqze+zH+HHubcYQ71Z
k/w5clwv3luX65+obb65JJfHN0zoHaOS3zQzY+a6uoZh/UOsWi+7f5obss45
N6i+4X4mdzEzb5/iP+FatlNmxvo1v4f//B2K9VLqC75Mfei7Pfw2/tn/RaFM
K/8cLejgauR+JPf0rae4865GrgkNaOW+o10uzT/BjUwtV4caNCdvQRFXiE33
/CWT4SpQnvx+/AoK+MARnzYz516v0Is6Pp/8r/Iv3fVAplu/xL5atsu6il/E
b72szL5MNnlv8h51HvcNtVIc
        "]], Line3DBox[CompressedData["
1:eJwV0LlL3GEQh/FZjTbReEFQK4VERbTRNRG02MKLkCViFEUQRLBSEjwqm5Bi
YRXRENhUqUR3i5CDNLkaG/8EwRSCdmurlYjHx+LhOzPPvO/vaJ57O/YmERHv
UKiIKKuMWMWO+qw+IqHefxSxID+bXSGv38Mn9ffaiB/4hq+YbYiYsrvNXWDd
Xlr/011Z/Wl1xAn67C5xu3K5JiLp3Hu+iFnzGayp//L/8Ae/MWK+Yj6oHsKo
cwOysSqi03O23L3Il7uzDH38B9nCpexNq+f5UlmCAurc+dreJD+un+ETMtBr
du1sTn7xDWmzCb5N34rnKPIf5TD3kmt311P9EzzD4f17yRQ/wDeqX9hpkD04
4DdlF9/PV6gfIm0nKX/xG7Lp/j/xD9Sl6Eaey8rHXAd3K29w7JtyXN471+oz
uPBvzvGfy3CXZq/0R/o7/yFBoA==
        "]], Line3DBox[CompressedData["
1:eJwV0D8ohGEcwPEfg1KcI8PJdCRKRpmMFrLccJMMlEIo2WwGspnuJpOBgUn5
szAopUj5c+VPik46w02KQfJ5h2/P7/t93ue5e9/sxEJuviYixrDTEFHXGHGb
irjBFq/lHxl7fJP/4pRv80l7Rf6NIi/rBesG/8IrX+Tr5ip6miKe0xFP6GiL
WNEqeOSd9maaI2YxjWU945l364g7hrFkfsODe9s9P6DN8RcctkSU9ANrtz6V
3Is7rZWPm++Rdu7P/97V8/waeWfq9Yo+ynv97kXy7lpJGzKf4cqZH3eda4P8
BJdaVTvS+vkxyvwz+UZaH99Hwdxl3cOqeQ3/Hms8hw==
        "]], Line3DBox[CompressedData["
1:eJwVzzsohXEYBvDXZHGfGMjZJBmODSlSyqIUQkoMZCDLYXJZlKQok4nB4BKJ
MjjpUBJSSqGYMBhMBmUQP8PTc3mf9/1/X2JgrH00KyJSMJMbMQWzsJ0TUQ4b
xRFL/HpBxD5fCWv8ufyITsIBP18UcSVL87WQkS3ITulveRO+lS3KLuiKkohW
/CJblt3Q7bCl+yXb8d4d3wu7spy8iDx45AehqzBi2F5CVovb3Du2k4YR8z7z
RnnV/326Iz/ix509upMe19nEV/pJnSZ3uvlSvgc/6U7qHNJlsjqdBH1PP8ID
TJs3ePfUzTNo1sngD/kcpOhx3zDtdj1+tfMGi2aXbnXoZ9tfNh/ik2bDeMX8
Gdfw/TrV9Inv+Zavwrr+EfzS7/I1/Pn/T7rX8hTdYncCz+M/zjNIVg==
        "]], Line3DBox[CompressedData["
1:eJwV0TtI1XEYxvE3UbzkrQsnDwrqZKGhLUFgiQ3pYoqbuomjWotYSw1JQxYN
4gUCPRjYQcklHZQmb2Bj4CBeRhcVdHWwPv/h4fs+z/v83vOHU9v/qnv4RkR8
pa3SiIvyiEsaKonY4AfxrCxi2ZypiFjCRn4RD29FHNHY7YhevdZ0xDHfY97D
v3rjelvY5GaXvBFL9DrNDeZNu1Gd31jPt8lH+Bd47Pf6k/fut/Db+Ay/4zw9
cmfQ77zUqfa+A3/xT+UrmNV5KOvDBnztfkpvB7+5fd+tB/I6zOrP2qX5aVzV
qZXnupWS1ZgzOlN2OfwX/KlTJQ++EnN0s7LPduf8gvkHVZhP6V7y7fwAHZjn
cc7Nu+Z9ukMfvX1ORW4V2v+RXbm/iwV8i10eTvj+ddmF3VrynbJmu3+0xBd6
f2K3aL6WPaExKudnaMX7Mvwge0zvqZj/RDdp2r20G++S/4d/i1OyguT/oXya
5N/I2/E/RqlLug==
        "]], Line3DBox[CompressedData["
1:eJwV0b1L1WEYxvH7YChax7dDkoGJppBCg6MHUlFcVEgcHEQUGiJR8h9QfAlR
cPAFBF/IE4KDhpGJDYq6RkP9AU6CDrVGOAl+fsOX67mu637u33M4NW/G+96n
ImIZP4sjvuMHjtFUEnGDnScRI+mII9k72loacS3P8Ze0hS+tjBjWbcuGaG95
xGus6v5iRr6EaVSYnZQ1unuOHvOT8m7aID+TjfKn9AXfIR/h22kt/8j9E12/
7Lws4gJZ3TFtpmO+O4q3/EdvbzNXZb6VHsi+4IN+0J7nsgHnWvqSjtufMbuF
B+bq7avW1dFdflOe5lfoV7PP5EXJfppn32fZsu6W33Pex1Pn/6hEysyivhML
qJBd4THm+Q48dGfDu3/L7uz+lXxD1qYroGu6C9m/5PfTfNkrXYqu6r7J/ugO
aciyujmU8zmUIeMdn3T9WEn+N5pDsfMS0thM3m5u1t2p5D+iG7Ki5IxCrPMT
8i56DzaZR/I=
        "]], Line3DBox[CompressedData["
1:eJwNzj0oLnAUx/EjRjwY5G3wlJKFCXlLNhbqQd4iibp1xUC3HuXl1i2KyUBK
bE8peRm8JGVisRDXcDerAdPdlM/w63t+5/zO+f+TE7OpmayImKfn/Iiugoh0
XsQCLRdFrFBFbsRQacRvdR/107FeNW0VRrSabeMZX0dr6ka9K3UjbfA3OKzX
jjv8LY7wnbjL32MPHZREvHv7gx75Qcr2rwf9HHzhx6nfzo5/lOk1Ybdb5/5+
QT/M9xMRNW7UmV/a7eUP7fThrHkGi2VrZcpwgC/HQfwn/0vmSF2h1yCTcmeU
r+THcNE86c2//LW7HTJV+m/6f+jUjUk7afrk1yktl/HXlGy93Tb1pJ0p2jR/
whGzJjcT5j/5ZvU0LuErtuCUzLG7X3b+e2cPT/g7mpOZp1W5b9jHPzc=
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJwUm3c81V8Yx42MSkIisspKFJooPSpCKUmFNGT8UGYZZWVnNMxIQvYeyZZj
73Xt7XKNu28yyii/21/39Tr/nO85z3mez+d9z3MOmdrfsmBiYGAwEWBgYKb/
3p9cKX/IiYMSnnGDh5wNKKuR3YD7MgE2XCNKDjIQYP9CntFBhjakpqbqUvB7
FlQEfxz68/kLqlgtNv392Qd0ncRDRjZoQGwOv/hjkIxE082qaYOd8CVZrPpT
yTA4Sa4vXF2gICa1GferC11wP+2g4AclDLQUT7mQhEloM9xAjSTcAWz8Ih/T
jkzD3WB9k3I2IpCDXXrL2NqR2Z7AVRGHGbincatMDUsBvVRDTTVsF3oc1dFO
MMdAwK7wsFh+CoSUByrH8neh+5J7WCPuDoH90J/Esu4OcIkpeVLenYMe+jfo
rsnTwGnyT5pKPR6NGysqqdS3Qozx62zpGzgIv9S5KuQzh06kTrcJ+TRC/m3J
XYuseHAatbFg5h0B7ry1JibecsRWcP8A2YsCvhH6wu+fz8HTXgfcu+eNyF50
jePoPjzQZNlyNYIboXqd56dGcCpqCowQOfmeBtg1pytXmqdR9kpMl0Yzgn3K
nsbbniQ4NX5Uec5xDNE89wnOOVbCffG8su5lMtBOCNKir3ZArbGyePTVHHRF
ZDai5CwNwh6pCzo2TsDPiLouh8ZqJMtyyTnLmAxWQumavgqVkPx2kOKrEIdY
1Ni19fto4C7fHmXANgS/N5/ICZkXocMlVylavyggT4pdKDhPAD9vFZ8QcgPy
4eB8kcCOg/MVZDd9rWkoWlgvvv+1HAWmsoXP1pCAnX+B8899EhK1iopWi2sC
CY78XZhH01Aq3cn6Q56K9NSHXRgGW0C/NlkyOBIDPB/MG/MuUVCL+Y3rRQL0
cUzn1FXFYQg12C10XGoKFLavrF3rKkPLbCofBrjJcHbV4JvkKgX+/GSN+5De
glxvSLA1iPfDt8iu4kM/KbARrHLmdGoLchStz7pzth8kzNgPRLfOQ+iZ+pCw
E3WIlqiotX/3Inx4we5h2ryA7AVO7KZt1EF4s5y1CesC+OrK8jHOLqJinOCR
kbF6qAth1RFqmoNKLWZsl2geLPQ310v9DUQPNI9tnv1JgwEy1+1nWXNQrEAs
xOrWIrGxR4Nl/HgwuphyZ9N+FLjuk+N37v+GxPt9BhMuUsB9QvGV145RtLgj
yf1YbTE8EuYgZxhR4H0F+U+AJBYFM6jf/OxVAXl4cZmXjiSwirz1obkvHDxU
ZPPuSdigDf1QSslfGlS0f7wRGzYBzGy2XgJvSxELl8LuY6/IMLtTLuVHfi9k
k18SPhhko3p254nXo1Q4eiyolrZUAKkMjc8/ePki8hSX+TcaDYqnTl/ARuJB
YilgVN+5Gg0ydd57cnwO3G4pnN73bh5c4hTPGa2WIy1ZtgmM4yL0GV5gZT2P
R0eotU5xe6sh9eauxcaPc9Ap/uEHXouKlK+lewcG1UFH7sdrgeV9sJ9Q4Ky5
l4qqAyS5ZCzrQNLjbCBBcgCOHChYNQnuRGI/a+rsApLguCtzreMxGnwdmj/2
oZECArIHW4jn6lD1NuxxHxmEY5MxvhfMqPCB+9O7ppg6lMGtLf2LtQ/IewoM
NAKJcHbdYuRJaQ2KvWxhy+0xA2vnZSJ3JMyi7MEZh9B3JXDmxJFgHhwBbDvu
m4VLEZCpzbjfcdHvcD3TTNr9GQ7uSZWsSF/tRugkrzcEf4ETxrJMpjw0eJqm
G7mUhIOY/bnv7lWWohqbe4YDQgRILYw7sbsWCxasBHFBi2LE6I59bH+EBCn1
6u2eUr3Icjd30vXiZLAereRRWaLCHqXh99myM0hw8FRy2Uwx/Gjnv/USR4Tw
3h1tZon16G+O6vzhsGi4Q01d3k6nAav8XBKfyBj0tWZ8blXNR1wOvBky0hTg
7q5OX0obAkuLzJtWytnIw+8q1WqWAvWPiXOZ5XXISxIXGyccAjuldHPtC+nx
FXi7UyyMHrc95xvK7xch64+aDuMh8xBMHB3WyV0E3SmNN+6ORYhX4d7S56fz
kM7QzmGWi0O99kKCu/7mwkS9T8wlOQJoWQ2niVymInYWYuN/OqWwFJAQzbJ7
ANSjTz587EhFT3uP7fe0KwXeAB7SMXwfFHTaBksDDuFcpyO4H+SCTtonqUlv
AuSMK57485ACz9LVD9xILUEFwiwdKn0jcEL4A0UjiQq33Xe67wovRd+Ld80+
zsVA7E6i9NHzZEgPP5zC3P0Nwbidcmj2JLgl/hc+QR1FI1rlIu0HU2B1/9nr
AucocDMxJygmgoAiEPOLruGv4J7l3vqSHweDTKyuXn5jyP9S3iPd4BSw+KVd
ZSlAgVF+fgGPg7PwS26t4XxBNmq8MtYweJsIZqyx+W45s3AyiNTk4JeD8s3G
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
A9byfZUH9+DpXGvnLcI6j1aFy3Lc4nLBJXSvm0o/HlbHRTvlLeeQyr7x/Ih3
2RArt6qwjmbggsF0Qfa5SdTnb6ZIFv0MHFj+jyM0ItTnOpSqsU6iEjKrQeGr
FChazOP4sovuI64IxK2ITqAvn99jgjKTINpa2CGTQgK2xUqT2Yx5dEtgR/zt
T77AYXVnUGs/HsTyqtMCjebRifPukRlGYfDywRjb9gA88HO/8yCyENCFC+23
ihU/Qg9n5DsFoRlQTM9wPHVwEmWsqTf59rrBTMIbu4PbSdDesitxBz1OKwXr
250sQYDbyjB87wcR/LW11QUEcWj92nM18pEAqArcbx2RRILcMwsWb9Pn0f3p
TMKJMwmIzff1NAMfHkw7Pb9sxPPDPhNlG4Uh41Ey+0Y8LAFTzhvx6N96cbVU
8SMqx0uHbsTj7t9ps3J0EimZ6TddyAlD244MXPz2jwiu7xriN+IZCB6KwrAE
IViO/k88A16iyhvxxHm0y9KOBKALxGs2G/FcMIohXkigQnyyo/mOkGLwk3ac
vpOFgQN6DWu3A6lgnbm+76RuIYh4JrXMWGPBhw2m/qpSgUl19szAgUIosdLT
FlPuhaAONd+ID/PIHcqVOwcKED/L9xZn+nu9YRhz3sj7ZdHQUx5xuSik08dn
I++7OnMrNvL+OP0Je9S7bLTtPEFnI+8Y05exy3qT6NWF7YemPNJRuTZTi+0E
EW6OHS7cyPv2ye6rX1+loFdrg3s28n6dF+u5kfd7Jz2L32UmITe17+4beT+Y
zOqudJcKcZLn1hsiauDpPpZTqyxYWPhefUpNjQrZn/6kMo3Qm2d8eO2MXA/I
rWW5r/fTuXuygoftEYLPDLPFjZV9sGev1ZsMiUnkpj32r2SyEH1WqTJ2xhNB
xT3lxsa4OLolz5Q+LpCVxL3WjXGB0vdMitPHxZ7DA2T6uEAqlx/82hgXicWp
v50t5qFUc5xk8rUWwjTHuPcQp+BhlYfCDJ3vcnQaELdiLWgUDtu9bcQDu9H0
hM4sBXlJhE3pzHYgk0tFB8PlMbCTduKSI4mCXp9VP3T1ejuSlZXlWynDAE8V
T3pLLgURhX3D2wXbkUp93d+oSz3AUudjwGc3B0u/LirNWrSDIe+U02DYNDDe
+VWfaEKA5u0CxXjpdsjR8hWzf42H2schvQK/CeBr4i4xQW6HPYVsD3RTpiBc
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
ydW2xVkU0mpW0DrWh3yK/nQXjsxBE01P5Ke2fvR0T5TaC9o6tPYvo8Pfjghc
epvx8laTKLnvlerZ5jaU93FiyMERB80ib7zExCbRcO/fv4EiXYit6kEveoqD
PxoLPbO362GJNVKjiKEA7sa7DqtZkuGvzqVxLEcnitK1WnmsVYb6vuD/BQ+T
IInlvF3zwUGk2blHL4KrHolxGDmTRYjgZsJ/fjCkCfEObOw4LULBm6/+eRHl
yMBzyuFUicsA0l+48Ifo0Ihivxq9TRUlAosft0yQGx41rW4m0bmPoJwKp+wL
sd2QOiWm8jkDj8ytUrYG00fQbdeVphK1Lrhix79Hh4RDuh0fWY3UxlGj0IlZ
zrgu0ORbDIxixqMTCRyG1eYUnPShudJeohN+i+f/7VTGobYrvzBGfmMIkzMy
322BgRWmN3RoBAdhGM8fIRfG4RHHykkG6AZfCfez40kUHOPnr5LN1w8iXAav
F/PmwZG+yohtegDEfo2xDbe1wPCnXVYnKfmi2cRKZI/GCND0H0uM0W6FnGoh
mWf8BHhtrqkvQxyCFz9KlSSV2oH38vrbYG0CVAYqhZ87OgrW19n1iAmd4MHO
+oA3Dg/4eZnYnX+6kFfRMuoQqEVlB/N8C+xJUEPffILhTih0o6i2+1YfgX3M
hm9ugwx7vtvn6ybiUOyJLtqetTFE9lTofTTfA5JnnkI7zzBMcy/Xqmp2wZny
1t+nWAhQ4n2sR4WpH5ka4Hd0tjchc84rOTeeEkFzz2qjP00/+mmhk3Krtgmd
aZ7bmWpChIHeyPN5ub2Q9CXwytGoJjinU7nlQOkzxM1sv4yJzaM7jhJZuLwR
tME+pV39ahoknyuFOiZgoSnaIvdl9zgwBmHYlxqH4a7ziyqDGzhgFtDLE3w5
CXK13AkPCjthn1Qhs4nyIvzO8rgd/GUCbMsM121UB+CE28LkoTM4WGfN0/t4
fxLG534P/u7qAuPXlQX2y2VI7c7jP/H9OejAhxcvf1PwcmJ5vGN55TzaLbaU
UWc+irqYRzd2vpmCyJL5nsUn8yhCquzdz6ZxSuqxZXy1MAmxMsZ9ym6TqO3M
F8/1yD4EzcxMPMaL8Pai2+zUhzHw4r/avIPSNw8bNInrDeAAxxHX5HZrGgwV
lOuOTPSDatMcQ2TkAjBW+/4akwwAFxaztS8X3MFkMC/IcpMMZrdvVqqLUuLO
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
UPCD
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->Medium,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.8285271807553738, -2.1648139367815578`, 2.4651822102769363`},
  ViewVertical->{0.26040517237546923`, 0.680398615111782, 
   0.6850159638680483}]], "Output",
 CellChangeTimes->{{3.860421677868903*^9, 3.8604216968875184`*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"0c7ba6be-6acf-44d8-9fd4-8569c43f265e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"4", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], ")"}]}], "]"}], "/", "0.5"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "0.8"}], ",", "0.8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "0.8"}], ",", "0.8"}], "}"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<X axis\>\"", ",", "\"\<Y axis\>\"", ",", "\"\<Z axis\>\""}],
      "}"}]}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
   RowBox[{"FaceGrids", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860421735258544*^9, 3.8604217512060843`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"fe13a84a-4663-48d0-b81c-ffd36b4b630b"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyN3Xe41sXRP34rlqjR2MXYjdHYexS9LSiIvTeMNYi9966xxBa7KPYSu1Fj
ifW2gQ07YldEEUUFFVA6v+/Fmdfcz5nnOVd+/HOu8z7LfGZnZ2dnZ2dnF9/n
sO3+Ot0000zTaY5pppn+//08o8f6Pa+55tumn4Nn3vXCQXtNav7nl12/+MtP
QxO/atZOS7/w7uTmyFuO6bXUZkMSP+jBIe+ftcaY5hY3LPH+uxt+mviPp80z
67wLDW4+MZXOe4kfPmHMySOOHtDYemr71xO/+oXJXa7fYlhjh6n404mP/Ptv
Vn78jz82ppn677an4LP+Z7Mltr/ip8YGbe0btf0mbfQTvyHoP9LGT+IPBD/d
2/hPfHDw/0NbfxPfJ/r7aJt8Er8i5BO/N6o8/U6u5Ol3P//y/V9OXrDPzyln
+Ka/bHb4UWs8lnKGz37jEV/ttvfwBjnD591+qTX+9swvKWf4ftf8e+j6r0xI
OcNnef6Ambb5flLKOdvv1XfAcSdMTjnX9uQM7xX0yRneOfgh58SDf3KG9x/T
1l9yhu8c8iHnKs/Ug5Af/dQOTp5+9/P70B9yhs/d7LPxrt+NTznDTzn1tW5X
bj8l5QzfYMe3Ntpi1JSUM/yqd+/f5+NuU1LO8PWH333SU0Nacq7tybnSJ2f4
acEPOcPnD/7JGT4q+kvOcPIn5ypPciYn852c4fTT/4eTp9/9XPDbSYusPWhK
yhneCPmQM7zHUb89bdb7WvoMP+bjEb/pMXBsyhl+3EZzL958+teUM/yoaE/O
8O5Bn5zh6wU/5AxfKPgnZzj5kzOc/pNzlSc5kwf7Sc5w852c4fQTXTh5+t3P
vTY5/5iTPxyXcoZ3vmyNGz5bcHTKGT7jtltced/IkSlnePfPbt17rinfp5zh
00R7coYvEPTJGd4z+CFnOPmTM5z+k3PyH/Ih5ypPctZv6xE5w9lPcoabj+QM
p5++BydPv/t5/ardDl5t/LcpZ/jGR/y85H7nDk45w1cevNm6nS/+KOUMXz/a
kzP8yqBPzvD5gh9yhm8a/JNz7S85w3uHfMi5ypOc0y6G/SFnuPWFnOHsITnD
zXdyhtNPfMDJ0+9+Dt196UX3/ferKWf4NZ+tO/Hxp55IOcPfjfbkDF8n6JMz
fNw2bfyQM/zw4J+c4VdEf8kZPlvIh5yrPMlZP/hL5Ay3vpMz3HpEznD2M+dz
4OY7OcPpJ/7g5On39j+v+TM5w4+J9uQMXzTokzO8S/BDzvAjgn9yzvbRX3KG
7x/yIecqT3LOdbvoM7zqM7zqM/yoos8pj6LP8PWLPsPfLfoMP6bos5/PFX2G
r1H0GT666DP80KLP8KrP8NmLPld5kjO+bij2Gd6r2OfsR7HP8O7FPsMXKPYZ
fmWxz/B1in2GL1rsM3yNYp/9vKjYZ/jcxT7Duxb7DG8U+ww/uNjnKk9y9v0H
ir8B71z8Dfhpxd+Ar1f8DXjP4m/A5yv+Bpz9JGd4l+JvwOmnfsLnLv6GnzsX
fwO+bvE34KcXfwO+WPE3qjzJ2XcGF/8Z3rn4z/D5i/8MX6j4z/D1iv8M37T4
z/DDi/8MP6L4z/BDi/8M71r8Z/i6xX+u/JNzyqH4z/Dliv9c5UnO6O1T9oNw
+x1yho8q+0H4/GU/CD+t7AfT/pX9IPyKsh+Edyn7wdqenOGNsh+En172g/DO
ZT/o56SyH4R3KvvBKk9y9v+uKPEN+M4lvgEnf3KGdy7xjcRLfAPeu8Q34LOV
+AZ8/xLfgM9e4hvwg0t8A75YiW/AlyvxDXinEt/wc8sS36jyLPG6RgfxukYH
8bpGB/G6RgfxukYH8bpGB/G6RgfxukYH8bpGB/G6RgfxukYH8bpGB/G6Rgfx
uirPRpXndYsNWOTkfsPy52cvz7PKvVdPbg4cMOzWDX//VeLrd/r62+u7jvJ7
o7b3u/+n/awnTL/sTMcMTnzrZe/ru8GnIxpnTeXjw8T77/zm7EeeNK7x09R+
vZP4tu8v0fPcNSY3nprar36Jv/jdOfN8/PSUxl+myue+xI+e/phph06a0liz
DW9U/KE2Oon3Czrft3038e3ju37XD/z73c9Jva767F89J2S/4PjUL/iMjx0+
oMuRU7Jf8L12fHNQ9/MmJZ/wPQPHJ3yGoHNq23cT1y/844uctYPj0+9+HnLE
DnfOeefk5B++3bA9f91tx/H5XfhB0X7mNvqJV37QM774gZOP/w/3XfTh5PBO
G/3EdyjjSN7667tw8kcfvkfg6MNrv+gjfdO+4trT09q+4trTi36Ff/iehX94
z8I/vH/hn35tX8YFXvUN3qOMC3z6Mi7wnQp99PoVPYTTK/8f3qPooZ+9ix7C
9Rc/8DdjXviu/9evzF/4DGX+wvco8xfes8xf+PRFnnB8+t3PGfdvszP4hx8U
dgmf/r5DsZ/wfsV+wqv9rLh+wfsX+wk3vvoFJ2d8w/FvfYGv1X7dyfXHuqMd
fK3/e51q1HWKfzHTiC8/vnnUlPQr/P3JTmvP+ftfx+Xv/g73//0dHfPI32/8
dL1Bc38zPu2m9i9d99Oq9/xjSI4X/LUHX77/ik1+Tj303Wu/3vHXGa7/OcdR
+9MOfeKi32z/a9LR/uvLNzi/75Pjsj1+vv/ktPtG3PZ9jjs6r8e4aI/OZ9cM
ePzsRSZl+4xr7jbndX9f56fEtT9zhZ1XX3aXyak/lT68tqdX2p8Z/YJrPzj4
KePerONex5ffU8dLO+NmvPiN8D88c8bVs64zJu0Vf3Pfpw846bkjf0m/Pde3
P889Ycw+E3Mctf9m9aOefrrfpPQztT/7tjWWnHO9lp3RvlP3Tdbe8cfWfkp7
uPHSvvHQ4mudfkdrXuP3rcNmGDvzfBPTL610jIv2b0Z7/qr25wSfxiXP9eK7
7AB8pqDPDqDzWugDXPvvQj7GsfqT2uGT/LUzbsbL79qfEfrm99wfBG4c/X3e
7hfsffHY1nqk/QEjFhi6zMet/a/2tx8/44THzmv5S9pPv9sr+x7+l0k5Xuht
fvKLd8w7aUyOCzqdPuncdau7W/KH3xb07Rcqn/QbfXbG/IGzJ9rjl/0hZ+3p
LTmTEz3XT+3JB395fhd8+j395eiv33McAqfP/n7fVlvtftMRo1JvK04/4d1D
zvQTvnX4D+wJ/LWyTlX+yZPc2FvyNM7sM3lqb97lvij0iB0gT+3pT+5Doj19
8z3tN3h72MqznPZdyg3eZdOZX7lg26EpN/i6gZNb4kHHPIVvVfwu398k5Gx/
qj07QJ74vzX4J3/4uSEHckbfekTO+md9Yc+1t96RP5ydJH/21bjQA+3NU/2B
kzMcP+SsnZ9rzjHPIbO9/WmOC/zo7fad5Zl73sr2uV8I3Hj5++GBa+fnIpPf
n3bO5t05jtovF99FR/txk9q3h+8f9M0XdNaI/sK1XyX6Sx/gd8R8pA/orBfy
pw85jrHusP91HqVfG+NFr6zvddwz3yjo8zfoCZw/Y37BrZv0Ac7OwMkVTh/g
5he+0bn5589+/fjhZ5Nv7Y2v+JL2nZ5d6rzbm9emvLQ3jtYRf/9H0Ncu4yJl
3OH7lHGHr1TGF/7PMr6+u9Yvz841++TJOY4dzNNGlb95jb72xhFexxFexxHO
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
KeloX/j5X34L/4vfxY/xd/4Mvxe9m4Ysd9uYvVt+FDpz3fP7/U8/aWLi8kA3
m3GZWboeMblR5NAkB/4wOst8fvFzJ80/MXF8XTj3JzMOOHJKlVv2y7rIzll/
rUPVb7EewK0L+M998ITzez5+3aTkJ+NAsT+iJ9W/Ml/S7sa8tu6jMzLiP/wP
+Ao3373r776emO39nb/EnmjPnpADv+bWtXe4qMtjrXtJtT37r/27Vyx39e92
Hp98w7fv9W3/O85t3SeCkyc+8cUfMw+rP4M++/dmWY/yHk1ZX7QnT3pjfu8x
3VaXdf24lZcO3zn491248UI/7UTg6JsH9JNewi9or5/N6ldkvDLaO9+hh9oP
+83Tl678SL/EM04ceMaVgs45j07z3ZKPPdCKEwV+SuDa+3nRlp2Gv9o8P3H/
r2vg9NzfDwo6cO33DjzPP+K710W/yBPe/9BpDuixSCt+lXYl5Ma+wZcLObNr
cPbHuOBn7rA/xh3O/rAX+oGOcdHefPe7nxO2aJOP/sKPj/b6C3+zx/WzPfjt
5OwXfL7gkx2r/iR+rM/in+ZF9feMk/ZvhZ6gC38tcHzCrft5LzTWbfM680oL
Tg7syh3FnlifN414Avrw34d9tr7Dbwx7xa+C41N7f698as8fwCd/zbkYO8nf
6F7OtavfYj6id2yMC7z6UcZFe3oC156e0Evtxd/gWScq5pF1p/p7xkN/+c/W
I+355+SoPT82z01DPp/FusAuw6se0vd5Qs/xn+eKMd/h2pvv9LvS11/te4Wd
L3Gh9KNKnKdxZfE3tGcH8Kc9v87vvsvvKnGh/C5/rNYl4N9aP6fdrf19h1xX
I6/euIgP9C55+NbTeh9ZntElkX/ld3+H+x6+8GMdpy/i/9pnHY/gBx/wej9L
P7Qv9Rwa5FPOixvOhUs+cFM+MHuUeRkxX8z/mu9hXuALn/S+5nXgO/MZQz7a
sxPWO9/D1w0Fxxf6+MAXfvhV2t8c9hB/vo8O/rLOaPDJT9LeOOIbjv+Ub8k/
t27WuC4/ybjxu+BZLz38Lut39fPTPwh/ih9l/dLe+g6v+4sSZ27is+yPmmV/
1Kh5CGX/le3JH5/bztrv0M5bjs1xEdf514ujv9x/vgk5jtZDfjXcesivNi7o
b1LWI/Q3/vzF6VZ6o7XuaL/VOz998/gCrXVK++G7Prjc95+28hPg9unsYcX5
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
9ts/9I8Ff0574v/dufDus7y7wAdphzMvYN1vLrh21kGpt/jdbMpHG9z5p5bf
nnmmUVeQvpq/oyO+ih/9+8um5882bMzYbJ/3O77Y7OBFdm/FY8m15zyfPLfu
yAmp9+jpL5ye3LbBjOP6NX/NeQ0/7aqHRt09YnDa5Yz/hxzYc/iVIQf2yzxl
x+i9edCjnPsbF/yQr+/fHN9N/zu+f3t813ywji935Qtzv7J06z6J8e02zTGj
dj1tRPJtvE68ZL+7V/+4Zd/Mu+8PXm27p3/5KMcv7WuMo/4ah6GRV1/qIjbV
RYSbxzdHvSPyMo+fWXFgc+2FW3XM0NllyvT3jrnqzeQDnV122n29419u3etA
55UBJ691zAw/NFY549GVe/X6OvdxY1bdce+PDhvd/CL4zzziVw9efNGfBzWX
+HTLf0+Z8nnGA2Z4b82ZDx/7beLaPzP/TK/dP+CzxpmxLqd/Nd397z007rkm
XPu+0d82ub2b7Tf76bWjp/nLR42/xfjCN96mMabf2G8b5079/fHEz/nw2PUn
Hu/9uz7ev2t6/+6ktvYpn/c36jbbKbO5N/FK4rcu+OzWQ46a2Pi8jZ/EHz1r
3MM7ThzbOC3GC/0R07b167QyjjdFvxZtk0+2/2Vgm9zYKfjp3eZ8/7U5xiaO
zokh/5XbxqtVX3zYItcdsM2UpnGkj4vNPv2uX/d8M8cRvsqUi5c/8KxhDeOV
9ytPOeaQYZf8mvKBr3Tz+0N/t9qUlE/N89df+PCoM4Z/+NrxXfzDZw8+8W/e
rfjxTV9/P9fQBv5zv77+RT88+LuxOe55L6D35fcf/+DYHHe497L1K98tj/an
djDf9avmJeIfvmrwiX9xgxF/vmDS6beOTv7ha/c87OZNPp6U8wI+S+S/0f+M
P5z5atebH/w19R/+8GPb3tVzrlEpB/h9G70/x7WXjkw55Du08T4vOcDvivbk
AP930Kf/8CWDH/KBq2NGPvBbbjqq97m7jE75WIevWmKZd45YenzKp953oJ/w
rX6d6boBb7fkluf/Z95y8dFf/ppyg78+cMWX5jmsNd/hva668h9LvP959he+
4LDNH3hug2HZX/irQUd/87tRl0+/1Btb8OoTf97mhonZL/gbs5+45QLXtfoF
H9J3zjVff3hC9gs+4YweB83Za3TyDz/3ue13fG61l5N/+Nhdnj55/M4fJ//w
HU/acvybT36b/MN7R/1A/PMHN71vhqem6TEp+Yef2GWuN1c4osU//IVrL53w
mw/HJ//wP0UdQvzDu33y5TWzfvVw8g//IPxP/MMbB9++9Qa3f53857lb0Me/
unFV/vAqf/gXRf7wA0M++M9324v84SOK/OHbFPnnu+0xvvjnV/Qp86Led8A/
fMsyL+D/Dv00L+CvlnkB36HMi4xTlXkBf6nMC/i9MR/1K+9HhB3QL/g6xR7C
Zyz2EL54sYfwfxV7CL+52MP6Xjk5wK8v9hB+X7GH8EWKPYSrq0kO9kfrl3UN
fmusa8YXfuAn04y897HJKZ+aT66/8G3KOljfDddf+FZlHYQvftbWs/xtyPjs
L3yOZ5474KzmpLTz8I3KOijuNXi29n5Ivsdd/BD4cq9t3GWPIb8kn/AVih9S
733wN+BbFH8D/sBs7f2NrDta/F54r+L3wj8p/i18p0vvf7fPr635Bf+4+Jn1
/Iuc4U8WPzPP0Yo/CR8f/JBDxrWCf/0V11or/Eb9hZ8V/mfx8xv8/OLPN/jz
xW9v8NvJAX52+OfkAO8W/jw5wHcNOsXfbvC3i1/d4Ffrr5/bPjbL61+v9Uv2
1363z+3DFxvz2FfZX+dWz752Y9+nr7osx9c+643Yr+lX6Ffzmm1O/mrotJOy
X+jvG/tr/UJ/6Wv3vOStfUdlv9D/IOjju/cK7zzyp2eGNA/8atTFt97wfvLv
5+EPvjD374Z8mvNo940u2GGdO79sbrRotwve2PLn5BOdn6Z76vYhF7fmETrq
59CffrFP9C48ftb/98fHDPnTZ82Bzwy/9I2Xvsj/v1LEuwbf9djLE5cfk99d
L9r/fYPR/R+/bVx+d6VyTmeeHrPAgvP/fuAXzfP6LtfpkNWfz+/eO1Weg5rf
HPHniz/Ya1R+97qIq8u39917ov2sq7614maDWvp2fbRfaaZJS5z4mzE5LpdM
jQN80Hzn1OE77bvm+ORnl78fsHa/nT9pztn5tQmDxg7LcVl9Kv9vNk/9fOzO
O/Qel/zMWuqa0p8fI+61TbyHYr74+cGLLxzyfqeW3FYN+id/vdbsIx7/Ivn/
TdAfdsbVW93w1PDkf/LUeNHbzfkvW+OGzxYcnXrlu95hwf8cU+k82/zDD5O+
mbxJy18aGXEkdZbo1QdT41gvNoeuOf9Sm+0+sexf+jU3i3dY8D9b0J/jtNNm
WOq815L/H4P+NsefvNvwwz5P/gcF/WV+mqbHqn2/L/uLfs1Ngz7+r5267lzU
fOLsTxY8+cSWv7pdxGmyDlXwP2AqndubJy7V/cxfprT81Z0ibndvvC+D/xOC
/rE9bhg14vFHkv99gv6Hcd6B//5Bf43lV1rphy7Dkn/07wz6+D8uvtMn7Eb7
dadVvw7/X02V20ON/8w6pcs1m7T81fUj3lX593OrK+fa+vzPXkz+Hwr6By90
2x83/vSD5H9Y0B/SfcEu84xr8Y/+HYX/vabGpV5rfPX6NE9t+E7LXz09vsOe
4PPhiCd3K3qyb9A5c8qNd75++SfJp59Xx/kvPvtMnb8vNX68/eXV1rx3RPKJ
fteiJy9MtWPvNV458KLtu980Jvl8p9TdxecPES/cuszTtnOltxvmF/5fDPqb
brXuEkt3/yH5Rn+Xp3fo++D3Pyb/fr4T8x2fO7XZmcZ8YWfw+deI/30Q8VLf
1X79//S/8caTfs3v7hft+/16wNxzvtfanx7dZlcbx4ZdRX9CnJfdssiQU3a9
emTq2xnT73X8HMMHNzpNGrTWbhtMyO+is8BPV5964TUtfwYd9fHYzy5t9r8x
ONYL/Kx38KRLdz55aOPNh569ep0Xfk5+xIGtO/jZfOeuo7pf9lVjwKafrdDt
mR9yvMT/X433bvC5ftB/ffgtnS7+V4vPWteO/qAzIOhYB/28ONZZ/MtzWWWL
0wef+PTk5P8fkX/03u5fDZ5zvdHJ/7z3/PHQs9b5pjH24sUWvX7LQc3iVzTG
Xfz+hps3Byf/6Hdds/OBO/f7OflHf6lvFp7vvpN/Sn2aL+gffuDEH+5b6Yfq
VzReD7+Cv7REmx/SePb1Nj+n8N/Ev/422uTZHBTjpV9bto1L85kyLs6F+oU8
zaMtov0tWz3zwrJPtvZ3PcNvmThnl/nOvXBy7u9qHWB4rUtMDvjpuua+l/Xf
ubWuTYrzlCuKnp/VpufNY+cbO8MzW7XsqnOnF+MdeXyeGe2POWyngxd8vIUv
FfReenqn3XtuPiX5rPV74auE/3N1+D/4/1uhbxwrP/g/ds9fx99x1kfNkccd
cfMGL7Xs7d/i5yFH7HDnnHdOTj6PjvbXHvq3Ea/eMiHxy8L/GRT+j++ic1DQ
oT/o/BjfhaOz+Qn919/+3f+xfsV3+od88Plz+Cfbhb1FZ0hpD5/m4jY/5+0h
x6/29P2Tk/7NbetC86TlL3tn+9knZfsbAz++4B+Fv3F23wtv/vcRE5POG214
46vwc7R/K/AhBb8y1qPjgj461gt8kud3sb70KP2dEO3fivbwT0MvXgw5oH9h
m5wbW4ScyfOU+M6BMV706oJo/3oZX+17l/G9KNobR/hhbePe+Knom3OnfmW+
LBb/zzjCT4/15ejQc/NihTinujzmBbzWk9ev3wd98tEv/PQPfvDv57J/2emw
94a0xhE/p4UdYPfxMzT2NXD8PBT2RL92a7NjjSlhx+A9Yv3qHnZJv2r9Unit
b6+/uwT96eZqo1/XrzfD3urXrtF+i9gPwvHzSdht6/X+bfvERpfYb+Y6Huvp
y2H/rQv+fsK+Fy47+eox2Z/Y/zYui/11rqPqG5T1xf6361qHfbDBohNqXKIp
LkHfro/2L8a6Rs6xzjaPjHUw7XPsuxeOfTc5O//9Y6yncPv3nrF/R8d53L8j
PqN9ve9f+tvU3yKf5g0l/pB1UPfccPCJX/yY34WPH/nZ9F8+Oylx52jfHXLA
Pnu914oHav/a9CO3nH1MS6/q+Z32jdinXxT7dH5IpSOuuGWcfx0fcUX+Sa2b
Sj/hL4d+0pvw05pvh17BD4h4Re8S98j7iMve9NUDP7bOi53H/S7ik/q7f+RL
vBL+MPzGiAOsFnEA/UV/7DTz/dTl7InZL/h0+w/vffrMk9MP3C3iAyffMNfY
EQd/k7h8tAtv+mzRx7v9mPjLbfuF5vNlP6L9LpvePPTqm1p+CPzgso7DT/vq
4levHj4+x3HX4Gej2BfA74t4yBwRDzGOm4fcji3x4d2DzsZBR/sn41xv84if
s0vHFb+CnXEOeP0y3V8Z9cqUlIM8oD377vPugp/9mnKAq8NpXsBf/HzThzb7
oeUHvhf3KXvGPgs+u7p3ESchh5dC/tvEfg2+ZsRbzox4i/4+HvxvWs4LXgk6
2wUd7beN88HVB2+2bueLP0r9eT/43CP4NC/4P/ab8Gci7mG/TJ7OH7eIcx/y
lOfT6bcvr3jHPRNSnvBptx54+30PtdZr9HsEfXp1Q/hL42J/DecvrRzxGXhb
3tFDzeERN4APinhIl4iHGBc/b4p9vd/HRFxoj4gLwZ+JfKsTI14BPzPiMPJO
jcvBbfGE5qmndv3PjL+04gn9g85RJe5xS/R3TPQXPiH6NbTEQ3qVeA57XuVs
vEYHnccibgMfGPI5LuJR7N5cETdbJuJy6NdzZOMu72zetR85cMJiLf9zbHz3
8RIv6lXiXfAVSxzJOLblWd3eMI7wzyNe9E3IxzzCzzz9Lrh2zKVP5nitGnl9
X8R45Tob8ajrI4/LPEJn1ngP0fjCpwv6xuuG4HP1En9bscSvyBOdQROvnWXc
KS15yh+r8rwt6J9Q4ocPRNxp0zKP7Bf+VObLFbFfGB36lvYnvjttkdt3kRe9
XZkXJ4Ze92l3P6LPU+g8G+9F5rhEnO2QmBfkqf2IF9u+a758Hd/tWuK0A6Jf
S0S/6PO9IZ9jQz7wwaEnj4Qekr/vvhfyh9fzevOiLV/v2cYfY14YrxkCX6bg
8ldnLvYQXu2hfdmWYYfJTfuVV/77TG/vOzDlDPf+JnnCl4v29JCebBx6An+o
4OQG77fflBnXvLdlB+DTFTvj/L1HrAvkpv2sIQd4Wz7gm42z4vwC/nzEM18r
/ok8SvWW6eHMkUc5NNZZuLzXnWO9I0/fPSHWWbjvdi3rabfo15KxnpLzH4PO
kWW9flheQazX9LlT8PlZ8En++rV52Y/Dnw9/A57vNoc/Q27a9wp/xnhlvkHk
OWh/Z5s/1hgZ51nwHSKue3n4k+QvP7Rn+IfsiX26cyu4ffrMdx65y7+Pn5Dj
4l7PiuH3wveJuPGL4ScbF3zOHH4jfMfgs0vxDx+N/jaKv/TPoDND8T+7Rf7A
4WUf0Sf4XK6c05HD8eH3kjP8LyEf4yU/4dDljpuyyLuTU87a9wn/POtgRvvb
Ix+jxplfL/HMfF+17L/Wjbj3ebGfIueat0AOm8V3jyx++J+Dztnl/LTW5cA/
fM7YH5GD734QeZ7sZK/Y728R+yz8Zzy87B/t6/eOfXHZRzfso/GPjv1j+/OR
Vl3xPBcJfHLsc+Hi1X8o5+bav1HiHvC5Yx+tfd+Ihztnpw/yJb4teSB3Rn8v
iX16yUNuyEPWX/H2u/65Ro/OX7fyauC7zHfD7y7Y9JfsF3zS6f13eb37T8kP
fMOIh5Q84cbpJR4ifvJqiYfAxwZ9/MN3Cn6MO7zyLw4jTwMd++4/RL4Qfa7v
qpMPvMvFO48avsLopJ/72Q2u/lenaVv2E75bzGt82g/ec3yXc7vNMyy/W99P
9134XdGeX8dvfyXWWXLjb/eM/D3f1X69WN/JQfvpdm3LA8SP9uPCT0BH+8si
nxCf2q9d/A3t+3627sTHn3oi9Rz+eeQx0h90qv9T/V79zfzPyLfUL/gVO6x0
wuUvD0z66MwXfjL6/LpKn1+3c8gTfbj8VfKBnx7yIQf4cSEH/PgufuDaLxR5
oXD+Ut/It/Rd6/hNRa/qu97GC35DtEffuv9L5IHrr3XnpNBz34WvFfPCd+u7
3tqz82MiToU+O3Z73F9Ap76LXexVznft67vY7BV8Qthn/IiPjQt+0KnvYpvX
4kJ/Ln4RfTZeee4Tevhs5BujAz8h8pPRgXeLfGZ06MNnMV/wWd+hznPYIufq
Dwwo/gB8UsgH/fo+dbG3jSr/+j619Vr+2Oldf7mq97BxzXreKr7aPu9oSPOb
uJehX85bl13v3EsW/bK1Lnd0rhrnGk3nGnBx2l0223KGEQe04nV+LhXnLH6X
P9bruTUXumyvyR2et8LFmQ+IfFd25qaI36rDif4lHZw/yh87+o7uQ+/9sUXf
T/FVv4tzzhp5vL47R8nvQl/+1TvlXFKe2C0bv/Dq+D9PTjq/RrzLe5Twy0r+
EvyfJS8IfnyMm/GCvxH7L+8D8n9+KPud9vkz7+V768b3yNhHXBVx3bxfEP7/
yGUev23HZSYlHT8PCHn6nZ+/f4xjR+eG8O/DX/0h9JZ+dnQOeGY5T4QfFfkq
vzy2wS1Lj/3f54O+234/OKQxsny3o/O4yGdo3B75DHDnZaOXf/2j1U4dX/NG
mvJG4M6tuvZYcNAyW0/MvMAN4nzk26AD713mXc2X6FHyJWqeJ/tzQMkLhe9W
7AO75Jzrr3v1HXDcCZM7XC/g7M/6w+8+6akhHbfPOG15h7ri8kDoyQh1lWK8
yOfYyCMdE+MOj3ykZtffTr/MsRu25CM/xDu8vjup5G/Aa16HcZe/St/YAedE
b/TZ9cH952nx0zPwMTGPjNMH5R1k+MDA7w4cfedKW3X6aumzL27ZgfOjf9U+
nNkB/mrEyaudeaIDfLqI61Z7tVEH+FB154rd+yHwag9njLiN90zhsxTc+r5M
xIVuCHsLl6e3ZcgHLi5xVKwL8J3Dvr1VxuvoYk/oj/y3c4o+iANsFPrGzmxW
7KHv2u8fFOuj79qn71bm++f/JX9A3QPz2vn+j2W+yyuo8z3mV6NLmb/Vn+FX
4HNk0Ifv1gF9/mrvYk8qffOu9hde8yjIf/8iN/5h3l+JewF+F2c4PvyrjD9H
Pt6KYbfh8u42Crtd7lk03bPQr9MDny3uI1f//Nvw99i3+o6q8a3vpbbPJ/+y
+e1Oc8970ZItHJ39NvlqqdV+/e/+Hnx40IFXOuyPugTd51ltzZFnTfmveXTw
Cf2+7PHCda329b1R8/2Gkuef+Xvx/27582+uu+qzFj/ar7Lv1r26/9TC1d99
esArHw45pkV/tg78OvhJvQf0HH1cyw7X99NzfS3+mHmt3sDxhc5bxU9rn282
sPFk8AkXv9UvuH3irSEHdqa+56i9ugKbx3i1z3P+orFvjC/c/Pqu6AM/anyM
IxwdegLPdy+DTkf5WvD6jiH9r+8YlvnV6GB+NcwvuHia+gDlfn3D/Xp2MuxA
s0fk5cLnk3c08bt7lvpNK34r7+jR8dc/Meyvrfxtft2rkZ+c99Mjf/WV++a8
8ZIHW/NiZPFztOfndI58bLg81W2P2Wpkvx6tOGrNF8o80qBz13N7v9v/w9Y9
RPG9gyJ+jh95I73LvuzAsAMDI18d3ivw9wvObrwXuO+KD9wQ5yzaDyr+D3t7
YJz7D477CHB5oYtsNfsfhp48IXH1QnZ7uO/yx67Sio9l/bmYv9pfEOPsvgbc
OfsOnUad+M5arf3+NhHHuCLiVHDn7wuXc235AG9suecPh8zZur/x4fVT76E0
joh7KHDnrc1oT2/p47XBJ3xS8LlT8In/8UH/qbhHA3fe3ePgJ14feEALV59n
xV2WWHufY1v99XOBcfOu2X/DU7r43fn7I3EejZ/ObfdrGk/Hd+F947tbxHfR
6Rpxm1OLPJ2rfhjxVeM4Uwd+o3Mlda3LPbKsjwS/trRvfx+zdc8X3r2DfS4/
6vsyf0+PfetWZZ7WcyX0R5R9MTryOV8LuwFfKeR6fegDPOJIjcfCLnXkR8Gd
g+wf5z7lnmPDPUf05wm/6Niwh8bX/vHnOGfRL+t4zTOHH3rwPd1X7Nfix7n2
ttseMu93j32RdkM89oU4t4V/FnLtX/KonTvbN8Gtp75rHOEHlny8jOvGuWTJ
a23Iay37/Yb9fjn3aX7/9d/6zNVjQpM+kMMpQZ987ilxLfJ03rF1OddeJeJR
N8X+SH+Xi33TzQV3/lvjZvYv7D850P/fRh4mfO2yD6p5tnuG/rBfq4acrg69
hYd/3nw89BYuj/S1WE/hW8V6+nLMixrH2LfsO8j/h+InaL9ftC/7gmYH+4Km
fUGtd3R93OOu8duXIn5L/vzkHj02+HmWtVtxVH7yERtOc9ZKz7TqJ9T3nsjZ
fdsrS159fe+Jvi0e3+kX8wUuT3iTGEd49efp2yslLgGv/jnc+v5U+L36a31f
ZP379rvgolY8n39+YvjV+pX11aN+BTzroYXdYE/guwRunro3WtdB9cBWiHWQ
vj0Z90bPj/Ua/kLQ+SjWa7ife8U9Tb9br8977pNjL3qmWdbZe5/qXdZZ90yn
NNv7Ff8IensEfbi8xIOCvn65Z8qfwc9R8f+2KXx+G+0PDzpw6/vZRQ7W9wEh
B+PCnu8U8oc7p5s3xlF/u4Q/cHjxB9xXfafIQR7aDsEnveIn0J/2+6PXGguF
vuW5Z+DfhJ8Jvyby+pYMPxN9+7iqz3Ufx27n+5Ilfl7fo8Gn/d2xxQ50dB+n
7tdyfCOuNX/sI+Di6tuEfwKvdTnIX/x83RIv8t2V4nwN/kOJL5mPfyrv0cBX
KPWB8z5a8P9A7F/gvrtN2E/8i8+/UdYL8fxXY70o+75GB/u+Rt33ifO7v1n8
oia/CB1x44WK/N0H3CHkX+JyzfWKnNnh1Yqcd4n9yC1lvrhfP6rkJ8hDXjTu
78Pfizzw7bbZ8PI3h72d/ZIfvn3g2rd957andou6T+3t2G1PzbDQ54e+teEh
Xcwj9vOpsi9gPzcPO5zjEvmfvyl8vhZ5qpsWPqeL9uNObWsPf6u09112r+6n
2L2dip3092v/b7+l8WT4LeTwmDozxQ+Rp/RDiQduUc5D0bfeHRx1nNCBrxz5
k/AtA1+h4O4FTA59gNd3RqwX6qH2envXb3+3RGvf9Hw5L0AHvl3Ubzev5ZNs
cOaM//n1kEGJy/P/KPLG4fI91i3tfxf70/dLe/nnHwSe+a7BT+/C/xLl/AL/
+f5b1MPPuHHgK4c/gM635bwDnfreh3Uh61BF3KN9XYLWvq/9ee6QxojA2T3x
n5PiPiN8yfjOOd0eGDHXSS37yW7c3KfT6hd3bu1n4fWcdMsS/4Hj96CyfjlP
VyfQuMhj914GOSwSfP0x8gfQRe+gcl5fz5f1K+dL1NGCu9/0ZpzvwO2bjv3n
m6cfM21rvbaO3BLyMe9qHdGyT29+V86RVyl+OPrmV6+/HvTlR1u0xpdfumnJ
Dz8k/OGFiz+Mzn5Bhx91Xvz0TgR+4DcU3P/rW+4X8HtfDv1nB9TjZQfa5zvV
dxz65DsOncMOkAM/8KXIx4NfHf7VieWetTok5AAXhycH48Wf3K3YSfiixR5u
HPjCBVdv5Kuwk+SfdZXju+wDfK+IN5KP/fISkT8Jr/5P+3z71jsIpf5tQ/3b
Unerqe6W9rW+q36N7OC8vr47wL7RB3YSn+x597DPmWce7YeUe0Ds9uBin9Ff
qdhV+mN90R7OnrMP9V0AcnD++FHMX/2F7x/rcqmz0VRno+T3NuX31jpg4htp
lyIuMc+EK7796McfWnYp8i42jfva9f7sqyXPOd+lKXnOeW832revB9U6R/hv
dr6+I+C74gybxfmRuKH2N8e9ePgqpT4YnH2+KfLtjaN7mv3jHkrmeZa6W3B+
ztWRzwnvHXbyq7JfuzXOBRaL/ZrxdX/258jHYE8Ojzwo9S7gO5U8Afg6Ee86
IM7xfVdca5v/+9y5eVKcO9Of+p6R9tapfeK+CTss/vnXwOlzrfNvPygOvEjk
1Zd79I16j968eKLcf1+izF9yUH9gs9BnuPO7OUJvS156Q146XPx5vxJ/Vq/m
26jPD3fvfmTg5jt9uCzqTcHpw3zHHv/plE8GtfK7Qj9vX3677Wb7H/4VO/lO
3KeAO0e7J/ah+Dkg5sueUbcf7n76HoG3j2s923z/s1V3eXS6lp/GH/j04R23
eP7J1n036+Pi5ZxLXHfGQ3oeduaLrTxS9Um6D7/luQeeHpvrhXomk45pkwN7
u3fEHz6Oc7r2cZtHGjfF/U14vvcUdfhLXcfmKot2PWTzlz5O+ta12ePeCny5
WAeHR/18+Iqlrn6to6jeUa3Hfkupnynv7t7mBbf/c+i7WU/Sue1NE47uPO8Z
V2Z7dJa6c5G3ztp4cCuvOOLPP6877z27jG69t0Xe8kCyDnvg6rTTM7j65/YD
cHV0+Q1ZlzHa2w/A1V/Fd55zRl1QfGYdgrhXgk+4uvHoZ33lwNmFPO8N+r5r
3nsXwHfh6ouin+cSUQ8231UM/JP2dBqVDvrWf3VKrRNw9cPlncPV3/bdrBcY
9V19t9LXX/ZSnRD8wNVHNe5w9Sucf8PVgcc/XJ3zrCcurzDuWYizwN3vkAcP
dy+DHwxXL5oewtVhpodw5z7klvXs28uh0ZEc2A/3icgBru49OcDF+ckB7j6O
/sLdN9FfuDiz/sLVl873Gq17waf+wt2/0F+4+2L0xPpj/2jewfnn5JP3L6Nu
M/lknY+oX00+cHGhrCMf+GXt7tfc9lTm/0a8jtzg7uOQW7YP+uQGV3+b3ODq
VJvvcPFk8oTzz8kTbr9Dnvwd53TmnfXNPoic89wg9jv5rmTg3o+AZz3+In/t
vbMA1/6uMi7ai8sZl4z/tYvT3pb5FeKlxiX5jPbGBW4/a1zg6p/D8Xl9GS/t
1Q+HZ33RMo5JP+RpHOH7tx+XVtw68q+MF//IfUPyhHufAv9wddrRSb8+7Aw6
WY+52FU4u0ee8JeKPYSrA69f9bv0M99haL+OJK6utfGFey8AP3D19n230vFd
fsp7Zf2Fq5ttXuQ92vBv6T9cPI3ccl8b9QfoM/zzdvetbnsK7j6X/sLdz8q4
jLplQT/fMw7cvWb6Bh9f/ITaX/KxH/XODjnAvV9DDnD7VnoFd6+NHODqWpAD
3P01cqjt6RtcPQHzEe7eetbft88uflri7f3AxN0vJh/7Tnk75AOfvfixud8N
v5R84N6FyfOJwO3fyQ3uPiC5wd3vI7faPt/jk18W9MkT7p4mecI3Kn413DsC
5JnnQiEf8sy4Rfj/7u3wz/eOe/fuxcHfiXq57q3Bh0e9CPfK4OIh6nrD1fdW
LzvfKYrztX0ifprn/xEnUTcZrn6yeAf8/KhT4fw135N5auFHXr7m2azzC1fv
N+vnBu4+lDyVrHMf8SJ13uHywNVbh8vfVscc7vxFffA8p4q4pXrNcHWh1V/O
ezmx/3XfA65+snsXcHWM1e2Fq6+rrrr9i/rq8k7g6parywxXn1l95Kx3HnUd
xXGyLlTUH1YX3v5FXXrnwZnnFecO8kvg6kSJ48DFJ8VxMv4a9Y2NN//Buwnm
Bdz9FO8HwL0jIO8t6/ZFXRF18+Hq54unwNWlV+c986kjX8W8gKub5B4RXN1v
8yLrT0ddFPMCrm62+tRwdarNC7j8AfOCnyMe6D2DfFch6qV4JwDuvQD19+Hq
8IvLw9W3Ny/g6pmrMw5Xb9y8gLunaV7ku1txL8m8gKtr7R5v1gWJ+jaT4p4t
XD127wfAvSOgLj9cfX55G3DxfPOCH7VVmRfwTcu8gN9Z5gV8QJkXcHEq+QEZ
T3qjrS63utvmjfrb4p7VnrivCFfvWl3sjMOEfVD/Ou8BxHmxutL5TmDEveXT
w9VbVjc56z2HHRNnhKuHrH5x3jOI+9rOLdgN9cOdT8DdJ1KfGq7e9c/Fvqkv
rd4xXB6v+GN+N+g7pxGvULfc/fm8XxX34p27w9XxVh+81rVWRxuufubpYefz
3mHQcY8O7j6+/O/Mw406w+7NZr2WmHfud8Hlezu/gbvf6vwMbl7zFysd8x3u
3jQ9NO/UaZfnlPdoo7/qVsPVr3ZfEa4eMj0xv6qe1PwBdd/gPYqewHsXPYG7
r1TnuzrMxte8dn6kjjncvFCvHK5uufwq+Jcxv+QtZd30wMXx4eqTqzOe98zi
u+qM533Z0E/1xeDqKtBPuLrZzntyPxjnPvQTru40vcr6dmGvvPubdZSj/pI6
U3B1leXz8bfVqbZ/YT+9b+ucAC4/3z1tuLq+8u/h6vo6h4OrZ+ucBq4uq3Px
vAcQ9Wqcl1RcfUO4OofyJLKuQNC3/8p7k7EfNC/yfkycs9iXwb1Pqr9wdYn1
F65Or/1a1p+IfSs5wNVddG+K/VenNN9lLHTcR9JeHU5yqPSdg+Y5UvApvxau
np7zRTh9s8/1Xe/kWqcyjzjOMckf7t4cOef91Mjvsv+Fe+eUnOHqHj9T/HP1
e8lN+y9K/CTfU51p23WO+3JS7n/h8s3UVc91NvwT8wjuvWbnZ9Yd58XOz+Dq
rpMnOvIQyDPvoUb9HPLUXt4jecK9n3tW8QfUdYGjr252rw72Ne6tVdx9Mzg/
0DqSdWtiHan7I/UDnU9bH9XNky8CV39eXWb8j436sdYFuPrM6jLD1WdWlznr
YYQ/rM5vxdX5hav3m+9hBK7Orfq2cHVurSNZJynWcXnw+qsupfhkPTehJ5nn
G3UFnaNrr967OuBZ/z72QfJIMs899onqUGuvHrU61PDb4rxbfipcPWr5pll/
JfB74rwcfnTUo1bnF67er/xIuHq/6q7C1V9VX1W/1Fl1jyvrh8V+2f09dNR1
tM5W/aTP6KgPKW8Grv68e8Li/OrMy7+0z1VnXv107dVRVwcWrh6sOrDoqAfr
fqb26pGq96G9eqT0Ck6vrJtw7wLI57BvfTX0zTqovfeaXwr90d64s9vae19Y
/WXt1WFWxxaunq1xqfzbJ9b9NXsO9949OWSd0bhfTw7wNSL/0D6RH/6bqDdL
Dto7b9VfuHeT3cuFq/sqHgv3Li0/PPO7gx9yyHcbgn/x2HquZN+N/z+UdQru
vrx68XB149WLh6sbf33YVbj65OpoZ33TsJ/6C/feLr8Frv6tuDTcfWFxabj3
ZMkn342MdbZviUuoj0of4OrLkQ98eKzjP5f4ifunz5T4iXcNenUQP7H+wu8o
6y9c3eyH/gtu36GeNv9He/e4vy/7QXXS4OioC228tJd/blzyPC7kY1zg3vOt
+0f1bOG+q56t+3tw7wuoI5D7vvCT+eH2Tfxk+xG4up3qC2ReW9Bxjy7fH47v
2r+go647+cPVLafPWY8//HDzGq6OMX+p7vvuCX8pz+PCb3d/yX7Qvsl9Ibh6
8tZNuLro1k24et3ieHB1et1DhnvXhr9qvzYizpv4//CryvkX3Lv2xivrYYSc
yb/i7F7N76IP/H/1b68r/r96wvD0P6OesPM47f8UdUrZ+Yyz3brbSfcf3Dq/
hnun3nzJ+y4xX3yXH7JTu/zqD9M/UU9Ve36Iupr2U3B1g8kBrq4vOcO9Z0HO
cO810PO8BxZ02A24urL4h6v7Sv/h6o7av/Bn1FXWL7i6x/oFHxv3FPQr8y6i
Dol+wb0foV/wz4OOfsHVxdUvuLq1+OefqP+M/8yTKeMCX7uMS97nK+MC954F
/uHLlXGBq99rXic/oT/45z+c1l7fWucjoZ9ZlznW2R1LPl7epy/5ePBtoj36
cHXC2Y18RyLmke9m3DLmne/Clynjwn6qs23/VfMBjAv7NnOJa2X9gxLXqni+
qxG49ymMC9x7CvQKrm6/frGTm5Z8gGo/tWcPT4y8C/4AfJ2Sv8FODil5LPAX
Io+l7vcHlHWc/VQfmF9tvqufbNyrHWPfzC/1gflpcHXz0Ierw8zOwNU9xmel
g5/6XfzU+YI+nB3DZ76zFHJQ19h4qW98Uzn3V+93jg7O/dXVhasnqa5uPfdX
VxfuPpG6urVu6hslT0DdNvkb9EF9Y+eY+Y5xxM/ldcDVV1FHOO9JRHxevgdc
PeF6XsY/dz+zxs3cw8z6fOH3dnT+9X0H67LzL+OrrqNzJfaQ3Mb//zwXdk6k
/iw9cc6lHjFcXWL1iLPOWdzfUb8A7hxNvQO4ep7u/8PV9XW+AFfX9+Gyj1A/
uVsH+4J6flTlDFd/OOsFlzwZcdc8v4g6M+rG0k/1YwcWXP009WGrnqsDW+fF
Ex3g6sDW+bVRB7g6sDU/54eCm7/qwMLV9ZqlA9w5Tr7rG/ez1MnNeHvUpRnR
QVzavQ52Wx1m93zg6gyrLwxXZ1id32wf+ik/BE4P1VHNd2Wjfmk9z+3xX85z
J5XzXPWNJ5Tz3PZ1a//7ee5WZZ5ap9gBdVfh8nmc29b2NX9bfemO1rWOcPXR
4PKQO1rXan6yOrQdtTcu7J46t87lqz00XuybutYVdy5vvODO3yd2gBuvam8H
d4CrM1LtnjrFcHW6jGO+AxB6uFkH9k395azzFOuUvCm4OszisXB1mNVfznPq
mL/qI8PVSRbH4x+q36tuC1ydLvk/mecZ9pNfzZ7c/sH9r477ekrWpar285wO
7Kd9btbvDzozdWCv3Kdll9TRVScLrl4QfuDq2fLn00+IerDqZGXeTtQ7olfs
njrD7p3C1ePtKA8Hzl6pA8Yupf2Muq++C1cn1rxmZ9Q35j9orz4tPYerT2v+
oqNOrPrL5rU6sdWvVif2jNLePQV1Zjug06h0xEvNR+8vi3vku1iBdzR/ydN8
HF7kCSdPcqs4+hk3Djr8k6zjG+OozpT5rp6wfZn5qP6w7+Y7XaFXHeXPmBeZ
9xL6qX4WXD1k54ZZ1zDmhTpZma8S80g+LX9JPTf1BeDquamDBlcP7YYO8pBn
62A/MqrsR/g57mNXu/FWB/sL+pN6HnF++gMX/6/nyOoPWGfh3itHH171M+su
B04u1nF1Gt1jh6vTKC6a57aR76o+I1ydRusUXF0seWL5jlbUxVLfyrxT5+qJ
EgdT50qdKXTU61NnKu+dRZ26hdrat+6dRXv17PI8NNq3fe/evLelXt9OJf6m
Xt/6Jf6mfp19Cvrqs9nX5H26kIN9Clx9M/sauPpm1s2sXxjjZd2Eq3tm3YSr
e1btp7pV9i81n1kdtMy7Djr8cHTUN6txDPXNVixyU2f4++IHqkdX4x7q0fUt
dhv/He1n+e3sjLpz4khw74Q6J4J7j5Ie5rttcS+DHsLVPVOPLO+zxLxTjwyu
Lpm6hHD1Ca1TNf9N/C3jWnHOxc7D1cXVr6w/Gn6g9jXPFs5eqZfLXyLnOeMe
rjghXL1feUHWqTnjnFTdUrg8W3VL4eqXopPx0pJfBJ+p5BfVPFJ4jm/Ix/6C
nEdG/qG6DOSp7q7zphoXolfkOWPws1kH8seP/qob7N5E1k0M+uLw9dwWnnmh
oQ/qusLto9UXhqszzD7U8zL1czvwz5vVP1cHNusbxH0lfjhcXXd5hnUdnzXs
OfzJmHfyDKufoL5J1mcIP8H9mhqHUQc/3+2Je0O9Cq4efu+Cq4cvLwKuDvl1
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
q940fq1Ti3agD/nOQuCzXPLXN99ZofXOSL7P+fSE2ddecmTrfDrkfN6Bl/71
0qVb9VXhix+z+f6j/zg6vwt/+9lZv3zyHxPK+7CvNDY8dbvJC8zyY67H8PUD
b/8O4CuN409brfMmP/5S3nlvvS+DPnrfPDPrPP3/3novw//7OsYx33EOOTwf
uP4nv3FenH5Y4OjjE35ytEfHOnhK8K8dfKMiB3ijyCHzkOO+VY5r2JuBIWff
hS8T45L5soE//PgD79ywUOv+QL6zV8YXvnbcU0t/PeyG+z6+C3f/EX24e17o
w93Dynho/P3Z0EN42snQW9+t+QbmiXmzRMwX/MPXn37T/ncOHJV04Orh4KPe
z0Wffh1c7Ebe5yp8wp+IfpEPfJWwJ74Lvyr2ZfoJHxJ6iz94z+CH3PKdosDz
fbfg96iwM/Qk7+k8cmPfw7ZsvTekH7uGHDqqe6Z9zc9EV/+Ml3bwE2IeoZ/n
RMGnfvr7HtEv/On3xSG3fHcs8OnnmOmIy5dpvU+K36ODPr3POMBNi3ee9vHW
e+L+37sx7/Cj/QHBD7ngix3AB/yi4JN9yHe2Qw5ZnyVw8xo/8HVjnua7geiE
3SBn+MnlnW7fXz70MONi8gHCLuEHfn7YDfO5vrOAHzj777u+I1+FHKteGW/f
r+MC3yX8LnTST4j2mf8dOPuZ+5zgl53ER95XDf79/3zXJeTg/8Ota7nvDXzV
kDM+6f/uMb/Qhy9R7HnOl9Ar9OFXh15lPkTMI+uy8ap1yP2edbljXmS+UeDs
Xr4vHPhsZVzqe6C+W+/La09P+Bt+148LAs/6jIE/HeOV+6X4+38C1y/t3yn+
Se4HQ2/9//Tbd1jphMtfbtlz36nzDn5/WWfzPbrgP+dn/L9TYp7iL/2CMr/q
vWl8GveTCx24dRydeg8aHeM1XdhJ7ev9Yjj9Vb8933uNefZe0bd6X9i4+Ds9
pE9w9PEHV/+81lXuE/rm96r/5I//3cq8q/Zf+3qvRLsa9yNf42Vdy3vUoXf2
j+hU+wbXX/e1yafat6xHGd93HwEfWQcmvut76Pmu79X6/Ojg67uyvpNTlU/W
YSv7nRqXw3e9T6GfWSek2BP92D3ON7X39+6BZ3128z30J9+bC/3aM9Yj/ar5
tFlHz7yL8c33Z0MO/By/o6M9OnVczEf87h786GeNS+R7PCX/MOsrlXgFOuS0
c6ybxlu/9oh5QT41P0d7/bN+tX//us9TxoV8a/1z7fy9e7EzNZ+k3r8w3/Hp
/zm3ynW05G/7HX1y0888vwscXfzTK3R8f7/y/im8vn9az4vxWetz5n4mvrNe
7F9yPxB6tFL4FfB8B6r4vb67TOR15D4k5LpFxHPoD3zloO/33McETj713DDr
M8qrifa5/ww+31lnthd6/ad1LoUO/skd/kK0zzo48ffXAydH/R23+NF7Tzxu
dMrZdy4Pf+n/AyIf2/k=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnQXYFcXbxs97ds/G2V3swEYRCxX92wkIYouYGCgqoKjYYiGgqAiK3ZjY
goViK1gIBraCXYCBYIP53T/u8fqu6z3vzM7OzM7uzs48cT/P0+bQY3sMqNdq
tdOKWi1SOimt1dZtqdVuSWq1M/NabTuVpc1arZ0qHanyjXV8hso7K01UPlD5
LZSPlH9ObeYrf6zSU1W+pfKxypdp1GpL67eW+jgmq9WOVj9TVOcgXfA3lX2j
494q/0P1T1D5ZhrDkio7V/l91M+aqtNbZYfo11/lk1U+SOU7qX6u/ksdt1d+
pK6xsfo5THUmqewx3dObajtUaV+1rav8NJUfqzqnKf+e8vWqVuuktmerv47q
62SVvaKyD1V/qOrM0PEWqn+W8tOVf7ms1XbmWqq/icY/Wf330blnde4Qpc8o
XU/j+CLWtfVbPPFzuFxlXZoe8wi1vU19PqT6sa4zQuUTVe9SXXdNtTlW5X/R
RuVdlTY1/vOV31r503neyh+v+heq/o/q5w21maf0FJU/qPJnVb6Rxrm8yv+n
9FSVj1f5RJVvqePVVL6F0g+V/qx7+Em/m9VvX/W/jOo8qOu9rPs6U+kjqnOx
xnOizm2nOhvrPjZTOlbnnlKd05VurL5+UB9LK91Mv7nKL6N0I113E7UbpvRE
9fGP8rvrt7TGsofS29TXVqo7Tf0cr/Nbqd5JOvcp41S+m+osq36G587frLLW
zAnl71TbddXuVLXbS8ed1M/bOj5Dx5ep3suqd6/6uUL57XW+0DgP07M+Reff
1LnDlR+o/DvKD8n9bC9Q3ZuU76P8A02Pk7lxta51g47f1vFY9XmA6nThfSp9
XX08rd/5qvel+nxD+RWVPqlz16tsVbU7XO+mlcoHq/0Bep6vKl/q95LubZyO
z1J6uNJJuodZKn9N7XdT+rDq3970sxql/tbVbw+VP6Ly4aozR+WHK3+iytdR
/h+ls/UMpqpOod/SqvOy0qWUPq5zl6nOiurvLB2/o/LVlO6p+m8pP0rn9lX+
U+VHK99T+c+Vv1H5/ZT/TPkblC/VT1P5M3XdxzXel5Qfr99huscJSlP1+Zjq
XKi6rXWt3XRf96v8LB1vnbj8RT27F1X2IM9Ex2+q7WTll1TbSvVL/brp+Hq1
76Lz56q/9qqzi8oeUh+pfivwzaqfATq3vPI/K41UvhhriMqP0fFyyv+kdKLa
9tE9nKf+d9fxWqxFSo/Sb3HV+U5pqmuOU51Ousaxufv/Rem1Ta+Bw5Qfpjpz
dM/bqs4imgfdVX6RytdX/wep7CldfxXVeUH9HMw33PCaeqLSsTo3U/leSntq
HBvo/BjlJ6nuEfr9pHP/U+VnlN+f+aT8kcrvrPyd6nM15fdU/jG1+UF1+yhd
X3WeVPl+vGvVGanjfRib8q3025G5qPMb8V7UZjmdP1zHm+p4BaUbKlU3tbd1
shfzWAe52mX6deW9qk5f/b7l+aqss343q/xa3fPBKltMz+Ba3fuNKvtdbZ/R
PG6t8meVHqPntqzyW+i72z/1tW5XnXWbfkd9lPbTbwnlj1Z/+6hOpmvtqvTM
zOM8V/kDUo//TrU9Sukada8pp2a+twOpr/KLeA701fA3wrtfX+NYUmNeT2lb
jXWaymbpWl+XPs8cGahnsqR+rZnjqvtY3fPs8bq/Qb6xV1I/h/OVrqcxr6yy
49V2cupnfL/GlvE+VH6hrr8e36PS9rmv36/uMbXWde5Vfn3lD1c/b6r+N6rT
S/eypMr3Vn9dK89n5nWn3PPtaOZX4f2zLDzP2/Bd6Bp54W8ka3pfZa/cVMeL
NzxfV2He595HblSdR3TvD6vsRLWboPwE5U9W/vbYc66Nju9Qfrjyq9a9T65X
95q7tMY2W9fup3Qp/WYp31dpK/3eV/5QpSNVfzPVP4z1BBpA+QG6r9NVvkXd
a+tBOtZQarvp/GIa5zm63ko6V9c4llb5XJUfqvpr8y50fLLy6yjfo+b1uz3f
At9LoCmgP/7VM+qhcxeo7Gb9dlXZ5io7UGVt+QZ4XpnzvdgHdH931f3eT1V+
Kf2WU76hMaxbq3mAyi+pZI7G06L8Usr/oPwV6n+bmvfssvJawZqxftPv5QTl
x+ncbOV7K31J191IfffXdTep+xnxfNaJTVe06Hex8lvr3DXKv1837QG90kH5
c5T2Yj6rzijmjvIfq/wq5Rv67a/x9NTvW52/LPe7ukVj+VB1LtX5bzSGLrq/
q1lvWd80jsuVfq/ySzS285T/HNpG+Q1Zj1Kva6xvi+r+HlDbe1TnLv266Rp3
s56wT6n+9swl1b9S+dEq+4X9W2W3K/+n8jeq/AHuUXUO1xgP029F/e5W/wPU
//Lqf4jOH6ffATq+Jve9Psx3pvxwlX+pfq5hT1C/97IWqPwY1XlEde7Te3mW
fZ/9XXW+0/ll9PtV14tUvpPSXfRbXWXXqJ+f1aazjl/UdXfS8Xj184nGM1fl
4/jW1fcL+j3M+1HZfvqNVX6qyg5puv405acVtYWL+61KX9Pvb13rZqVtVPZQ
3ftXU+PZTuksVe3Q9PpwstoeoGeyuOrspXH8ofKpKv9C5Ufqe5yv9ssrPUJ1
llDbYax7Ov5T5SsrfUfpGXwr+i2icSdsMMrHSv9V/VX021l97apzOyldoGs0
2EeU5qpzmvKrqs5uOm7HWq7+e2sMk9TNDNXvkTj/ldpfrjo/qM7W0N0az1rQ
Azq/up7dSzw3vlPV6861eLfq53mVfwStobH+rjZ/qm4/7ldtz4HuU/4T5ddV
nx2heVX/ZbX9Rs/qPY3tpBbv/xu3+Hubw5xX+dnQK6r3kY6XZUy6l3dUfoLy
R6lsgfJzlB+k8s1bvMcVlfecHSrvh5u1eH1hP9kk7Ilv6J1tQR8ae/+mz7H+
3JF4bzxV16z0+0P9z4X+0PgP4JtU40egufnGlP9cbf+n9Ald62X1+bvKb1Ta
R+P5R/nf1PZ0jeG02PPyJKUn6veHyvdQ2/t1red13T91bqB+yzPvmd8qf465
oTG8q/qPQj/p+E72bT3jrhrkBOU/5dmofnuN4TaN4Qtob+hQ9pPIez/P5Uz1
cUbsObGm2teVX0PpCpHX4C1V59zY+wC0BzwFaV3paF3rOV3ra11rjOqcrTZb
6dxEtd9G6QD4kob394NU97zI9M1OOvdi6vQBnque29kqH62ycwPNswPfS+K9
/RL1sXjsfRga4rzYe9GuHKv+3WEPvTUxfXUgdHndfCu87JFN0xus1SurYGvl
la0N0XX/xz2p/8GR6Rve/bUaf03XWF3pnSpbVr+1VX5a2CPYF27TuyyV/tM0
7cI9/gFfy9qo8vaqv6ra/6XjVZQOVn/fK1/RVuNT1dpA/Xur8DM7GjpcdQbp
l6rO7noWa0DzJv4GoQ3mqv409XW18k/oBqaozXXKt2IdYK9Rm0f1fofCZ+pa
rdTPuypvCw2u8ltYD1W+iMpf0HXnKL2+8Hd3C/NH/X/c9FyaqP7fg/9Rvr3q
PKBrZDp/v9Jdm67/jOqsob4X1TjPVh976/ceNLbqrQ9NX/cevLd+v9W83jX0
zJ9W+TS1W0T54ewNyieFad4W9X2Oyoexfqr8bB3/CO3A81b5uSq/VeUr6z6e
UH579b2E7mt3pT8zF6FbVH44awr8iPL78m1r3L9AI+g5rK3y51Xenedbut1o
pZ0S3/u7Gvubuu4Kus7NrG2MTfVvULqzyq+BR1H9XRKve7NUf7eG18bJOv5M
dTaAx1LbJXLzREvouLvK74ZOVtu3cn+7Hyg/WWM+kLmkekdqbC36zYeGTr0+
X6n0qczrejflj9P5NKzvV6Re469kT+e5KH8536WudQn7l9J3Ut9rB/XxfNNr
bKnrLpOaLzxL9Wep70kt5uVmKv8s3wjfqeoPV/1HNd67M/Oqy6ndp+xfSj/R
Pb6t8t2hDXX8beA3l1X+K+UfZ91VfqLqN5SOZh5m5vUixl6ZB4RHfEZ1Rip/
p8b2kI5PVr6Nzr/aNK8Kzwq9s3ndNM+9helyZFXXlabVByr/h57n3vo9rLqf
pqYTTuJ9qJ+z1e4c1f266TW1p9IH1O9JfFPMd9X9vcXnlqtMk0CbdMtM5/yl
Z/Wo6h3L9VlPKtMe0CD3RqZ/khbTxshPkKOMU/mdKrtDv9nMK2gb6Bn1ebPq
P6GxHcj7VH42dFjTNMvaSldX+xtU/qjqjFP965V/RPnLNI6H1P9Wyt+n8rra
f4+crPR+uLfappqT81X/Q9Yi1blF+aeQASDj4f7Yv0qn+6r+oSq/UXXm8f5U
/1flZ6r+wSofDd8HHaXnemtkGm6Myg7Rr63yPVR+R2QZ1pd1z4dM+daVeUN4
xB11/imVPcGz0PUOUfl1Kt9GbcdE5hu3UH7z2LTj9Zn5y/m6189Tz89Fle6t
unPV/wc6Pkj3uJfyb0MHNs0TXKw+27G+qGwI8i8d367ydlxTfc9Q+WLcY2Xa
Ehrz49T09nFKt8lMS/+gtl8r/6jafMn7j0zHXqbfipXnDHNnfOR5/ph+K1We
t8xfeCL4G2RIi6jfZ3S+FXLH3PwPPNJDGtP+qnMl80f5r1R2v9qluen7S3Xd
z/W7SPW/1rklK9Pz0PXbZZ7jifo8mnVdvwXcm9I/WXORFSXmc+foOd2j+rN0
rq/SnfWdVKpzqNKD2Jt078/r+Pa697U1ucfEz+detT1efa2m/HzoXrV5Redf
V1lv6F3lp8G7l6ZR56v/rmrzXIuvkSj/Y931ltK5H5T/SmPeT2O5RvnpKr+/
bhkD/FX70rTyOkpfT73Grwt/H1km05HnrPx9yndW/vnU9MJ9Gu82DfPpyB1O
4vthX9aYP1V/r+uX6PdgoMehJ+9RGz3S2lC1W0V9nhXObaDrdVF6XsP0OnQ7
solj1eeqSn9Xn2c2fJ1Xdf3fkV1Hvv/LS9O3W6vjQ5Gpqs83dfxh0/Oun57Z
PPZr5a9CVqB2Pyv/o8p+Ud33GRtzW/08qfQF1nK1OZ6xKT1ZfR5Ud/veGsPO
De8Bf/NcWkyvV5HXsV/V9l3lD1b91Vjflf9V6S8qvxXeN9D/K+p+I52bA12G
rEi/sSq/QGXP1b2/Hlz4nU5W216Fzz8FjYxcWb8rdHyx6qJAgA+d1bTcfi09
hz91/pu672eQ7nkYdB10cmFafgxyNV1ruuoM0vFduvdWesa/qO1FhfvsovSS
up8Da+zIwtccr7ax6n4HLa10g9hyhkjnHmXOhH1tOZVPUXnPFo93K3hbvmHk
WJG//z0j00W8r12UvyLsZyvBA6vurXpOfQuvPdN13T0zv6939A6ejjzPOXdn
5m+kNXt35O8LWfBzhffI65Q+GfmZ0H9D7a+se399Tf1ermut1PQ6Rz9XQNuk
/lbWZC0JuhKO+Z7ea3GbQyLvF/A+q6rexdAbeiZ7oqdgDui6X8aWnUFbf6Zx
3qY2HZV+rfTdFtMN2ySm/d5smLZkfV0d2XXha72v/Laqc7PqvKU6bzctN26r
dJXU8uNFdd0TMj/L75UuzbqqMdwPzZhYDj8aub36nNbi9fkN/a5i30cHEvnb
gT/sXDn9hPmse/lY+c+UHqm2Xys/s2l+n73uNngn5V+MvGedXHd96DZ4oo9a
zMt3SC3bfh3ZfWKe6yPlVygt915DddZJ3d9gZH2pZfivqc53gfdnjz6C9bPF
e/Gs1NfcIrX8Gzn2UNXrX1iW/03TtCTjXDv1fsS6eKXqHFF4b5qhOn1V3ic2
PfBc5L2Y9t+qzUylH2sML0Te39GXHV04/VZtv0vdbq/M6wnP55Zwb9zjoypf
PvU1z1D6YGl5/ppq+1lkuSEyQ+RpGyI71/EEPZ8VmV9qu1dhufJg1T+zaTk0
8rGLVLcD/LTqTKxbbt0WvkW/vVosC7sw0O20fzc1bb6h6o+KzBcgu15W971M
7HMbRNYr8c3uV7jPofDWmcs+UHqlrrut+n4ffQsyYpU/rvE+od//apbvwSMg
k19DxwtqrsM5+ABk3Wsq31nz9SvVgzncpLTM/jz4kablhug9L4nM13CuSiz3
Q/4Hf9O7xTxOVlheif5oicSyR2SQVWbeZAz0W+BN0E3uU/i+h7A/JNZt3aD6
q8bmY7jGW4nlutc1rK87QuUduQ+17af8qKZ1l6eo3oFKL4+81qGLnFp3nQ1V
f4DGMIAy1du28LtFZ7ppZB1fXx0vklg+fL2uNT112aZq91Jife/FzL3EMtRR
yl/atC4YmfNFmWU2t6r89cR64Wv4xmPLbaHPlmeM0NWseZF1sozprMJ6vw+U
LqZ+Rqr8rtQ6UOQ6PMeqsGzwKl1rUGHd6GC9r6tZu+qu90ZiHc210DyxZcTI
h9ErMrbd4P0L6yCHopuqO48ucv/Cz+wi9qPE8pYP1c9GqXVfbzQs20EXtpbS
Gyuvlb+XXptYo+CRb6q8Ps5X/qrKOuMZhddN1s/Ryl8d9MrDlB9TeQ36s/Q+
e7nG9LfSa8N+wb5xa+Ux/YEMoDDPdo3SSwvT3JcpvbIw/3YVe2PleTOa/aTy
c7mOOVx5nv2ofq7IvQ8OV/3u8PZ6XsdBd6n8L43zH3QB3AuyP7W9A/248j8p
v0DnHtJzP17199dvH96T0gtzy6m3Lf18ebaDVfeyynPiGrV9ku9Kz/NBnZ/A
OqL8XbnXcdarPmq7W1gr4b+n5Ja3IfPcpek9GhnGNsq/Ck+k/FRk0xrbYdRH
561r/aL67+Xmo5F3nqrjmzXOp5WewntS/inkJ6pzKtfifgrLbO/m+yisoxmg
dFTlb2Ou6h+LTIT5qfTiyvvZPHh55RvKf6v8y/C68Cuqc0ph/hQ+dcOm1zR0
5rcX1jfdofTUwM/C10Kf/Uev7aD8Byo/T+WbNf2dopPv3PS3A64BOg8+DLrv
LV33p9Rt31R+Xmoa8wPd47M18wfwBsh7yb+v8qcDzchzeLxmWhB6FNqQtjsp
PyPMk3dzyyKQNXfX8RDlT9d97aH8UOXPUP6G3DqNHZVfWeW3tZi/Zs50Vp0V
2EN4l/CPyFWUP1H5HZVfie9B9R9T/a56P11i813b63qX1s1Lz84893ZS+hTv
SeXbKb1HZZ/UXZ+6J9TNd/+oc0fDLxSeq9spv6Ly16vv62LTRrnGvD28p/q8
X/18VjfPP591Bv4Emq3huYq+e8PUOvBpKntCvzOgp+BFVPe+Ftf7V/UGKT1Z
5fPVd/fYPPIO6r9b0KM827Tee1GlYzWG45TfWO+tnlpPforSHqVlJsurzr3I
J9GZKP1OY31C/eyWmb+cqN9pOj0xNu0Lz7wfe2lsHhW8ATT4eewdan+SxroT
eoqG++F93AfdpvM9db6Xft1Vtobq/FX4ee6g9GHV/aLuPplXyCwXhX5XPlf+
Lfa3hmlJcAVT1GZF1T0Ieqlhvp17+AvZV2y5AOtPJ7VdXnU/Vb6F9Zt1QGWP
tlh28wnvTuVvIO/RNb6rmydZqzDuArpxyczr532p+RhkWaer7fGZedzn1X57
/eoNy+amNk2v8mx3rZtug2ab1HS6Pjxi6md2eup5+kx4znuwDrVYbnVJaRq6
QraWGIdyu66xLLJR5e9Q/vzCOriPWTfU10D4R43r8YbHiHxgVb37ptK9KuM3
eEfn6twrqnOt0u6qP7S0vOU71r3IeoendK6FbxG+oGa94VH6HcQ1cu9lyLvu
qFtnNKNmHpC18ZXwzbMGsgZcAg8V+30MKS3z+ZrvuO53/XrNayl85caF3/tE
SCf2NPhglcfMibrHND2sL+g6WG8Yw2J1661Yh+FDN2J/DHIM9BGsTVyL+bVp
YTzAXxp/Tz3Pj+HB9Tz2U/4j5X9TfhPVSVTnT9W5MDVvh05zM5U32U+blvnM
VdlhSs/X/fVX+UjVvTu2bBka6aLI8ucNlN8yMh0C/upu1fsb+h85TGI64hZd
t2NkvMG/NeNVkCGg632ncH5Bbt0AOgL0IeAxBkO3Q6Okli8M1Tt9W/UH1S1j
uSk13Xx2ZhppBGsjtHvp/IGqe0dqfB04u4tSy52+SyyT/FvpEZX1wvDOR9Ws
82Wd7K/8ejq3vfr+sLKumfXtaJW3h89SX69V1kFO5T7Q2ep659Uth4d2Jg/9
zP42D/Jfda6ILM+HLm2VmCaHNkf/C88+im8nsoyp0O9k9towV77WtV6r+f22
alhWiS5sQJCHI89CF7OMfp+p3n7IoKGrE2Mm0I/8qbJBej4faSxzNP4xhfuo
Qc+gDwkyEWQk0DaTdOqP1DKzfdVmv8zX+UFp/8h6Os7dUlge/6/So1S/t9pN
Vp1Lcn/jY5lXGvPw2Hr9a6HZ65YLL1FZbtensjz5R+WPVLqK2nZkf1J/x6eW
M3+qc+Ma3jevy0znrl+3Hrxfajnqx7RPLTtFRw8NDS29teofo/JDlX8xMw0G
PXtb0/p89PiM+/HMcqKuqvs231nQIyBHIp2iOjur3xeVzlTZzNzfOt/OEN3f
30Gv1KmyDOp/helBdOUzGpZNQRswb/ZSP+8q/VHlJ0XWSaH/2l/ln6h8fsPf
61L6fajjr3StV2v+fhfVubNjrxF7qv8PoCWU7pH6Xd+gPl79T5YFL1n4m0LW
dxzzOfa5VyLTfcjXJkfWiyPfnvqfzE2/vpH1rMyNBU3rYeYr7RdZPs+7h/5F
7z9d45qduo9tlN5UWJf7GvgFXfOY2P1OiUwfIWf/JnXaMbV8HTr2CfU1vnQe
2vY11S3C/ayUW442NjXOCPrqW+i22PTVd8yrzHrwe1VnOT2LfaGfNbZWhWXL
4D3OLox/nK5027BGcbxqYt3EA6pflMb03BxoTLBT4KY2ib1WgA85LnP5B2p3
a9MYHPivzpExlsjrZoS0p851Ko1p4bs4tzB25SOl62jOfKTxvloZ64Lcj7m7
UuK5PRY+nr2uxfqVlUrLsc5TuoHKh7V43ncsPac/g7+vO8/c3kvt9ww83y2R
vy/wImeq/gVK74E/1bkL9dtU57ZX+cZKF9fYWofvl+PtSn93i6h8d5Xvz16g
/DmF8TkfKl0lsQ7qPrAOpTFOS8JzqY87I9O44G2QT84Bn5VYF3C/6k+ITX8i
01+qMJ72fo1trcQ6hUdVZ+3E6/ljDdO/x9Wtd1gaGWiL8ahTSuN2HlR+w9hy
T2gL6FzKj1T7bwrf6xLwlJnf62WZnw86FmjNLwvTCZ0Kt7sytG2XeF16WGO4
qWlsLZix1ROvbeNVPg8cRWws0f1Kb4ysO1lWfV3XYkzO9bnfz1W67o7Kr6R2
bZTupvHvpOuuqro/QeMHHVAb6HKli6jtpaEcOmQ3MEnck9rvnfm9zMmszwKD
8aTOvdCwPnGx1HhU6PohNcu5kHfdpfprF6bbkVUid+xRt8wR+hFa9/yaaW3G
Bl3O++lSN+b5qti4R97fOoVlAshFz4UeVfmw0u+na93vEj3RAo27v9JN4cd1
/e+UfqP0EehtpatqzD1j68zWiIyF+L5mPhJ51fmsk4llVMOVf5+5CE2CbjA1
JhH87zaF5TNgM7YuLJ9Bn365+t469pw8NfXzGIMevmH69g3waBrTDUpnKn22
Yd48Q87cMN0Njvds3dtdyLIL67n+AIukdOWG5fLoPmeqj7Gq01Xp6io/JTZt
tx58dM0y1XYqL4NOYkuVt2PNz43LAJcLe7l+4fV2zSCv3aduHd7gII9FN7+h
6jxS81o9N/V+NCw1Loi58ZjOdSi8NyGrQba9d908yVYqX6vmZwjvyhrLGDZX
+TIqn5cbI9odGl3pUw3zcf/onp9GhxRZr7yCzv0MRkPpauCcVDYuNcZ5x7r5
N7CeYD7BmIK16V03rQPW49BASw9HTsH+VBoThF6VvfD8gPGqs4bp9wF7ttLV
KmNjT1G6RsPYjsPYSxPj9MbwHfAOVD6COR97/WcdR3axWs06vTizHANc4iGJ
6VawimBnwNB8qeMzI+f1t1AesqjS/rn3JjAzPC9kJsh67yzMT8BXIDsA54Ms
5TD1uUxkbMwXqndoYvo30vX/jayTQx93TmQd3yLQqC3W8XG9ziH/dc36EvQy
YBe2TMwTwRsh7xkBPdzwXGROoidqm5i2fUjlzxfWQaD3RHeJzmWVpvUu5MHh
N2KP4aua8UDjw/77Umy6dCLfTKANkKegD2U8K6ufZ1JjC8EYPhB00OiioXeh
e9GrYlPDc5iYmiZFboP8pn/gfZ5RnwdmPjc/NV2ALAiZEPlf4FeCjAeeb0Jm
HBdtuTY4Ingn5DvQPrwHZDnTAw32ds28OmOHt4LGXiwcr5L5HNhI8Cd8p7+l
ppHg35ATgVurwrjhI+Hl4ONmRM7DV5bhft9S/oTIWAHqT4k9N+A3oeWh6cFW
gYW+O8yN00Me0p01ogz3jwwqhnbS8/4octvPasZsg8taR+c+CfnPVd498Xf2
XcO8AXQj9OPxYW7AeyNLQk6EjAjZMJhD+DroFvLddM3tm8bkPqqyt+rmw+AZ
t8osc57BXhPObRfoIvSY0FGjI9NV5JE5v8E+27RMD/3kzaXlePCO25Teh+Hb
wfp2jZyHf78msqyPa28b6C76RN4N7hHZeBFbt7JqzTJG+LL7WeciyxXZJ05C
XsC6XlneyJ5yD7RZZJkkPG89sx1Bv8R6GfKsF9A/XKtr07QeY+Al5Zntngag
H4is1/hdp9pHHg/j2Ciy3BKeEBkSz/zUmvUbr9St42gb9LPwtBNS41juV98v
xtZpIpdErwcWBewL+rJr69anTy1cflRh3Rrl7BOPp8bbrKR+ToiN7wHb82Rq
eVQbaJLE39yXDetVwSSMqZlfgF6HVj86dr41a1rhOn2Qg6XW1Y9FthQZn/Ng
zboJ7mtrPavNMsuo0U8hv+XZjC+sw2E+dKxZzzUlPH9k2sgbLgx6mdfCc9sm
sg4DGcQJav+S+jsffGnqNXiQrjOhCPXhoXT8et02bFuEtszt4xLrwJ5X2juy
3Idn+3bgj7jfKxJjCsCXgT+FP+Lbh0f6MzzD+eE5ocfcPzLGlXunHPzS5qn1
0QvCu0Nv+VfdOkj0m+CdHlB+WmS8NPlXC9cBH4Wuk/JR0BmBH+ddwm+R553B
P/0R3hF8FvmLVH+FzNcdmVgezD4A/hx5MvKIU2rGLUCjs6agQ2E9eASsiNp+
VDevwlrxaWgPDgGZ8IWFZZ/gm8C2vV74XpBtopvAtuswfcs9Iuv9OUaOTFtw
8rPA9NQtZ1k+83MbrrG1j31dsBM9I+v3l2Y/qoyvfK8yHXdFoOXgM8hf2OJv
6urY6xj0KXQqMlxk5Feyb7VY5k476LdVc9d/NdDPUwKvCj4Amnl35PGlZdpP
ID/JTAsPDHT19UFmjuycPDZfKyReq+5puD/6hSZnTk0O82poYrwouNF9IuMl
wMSAnQDrAM5h15Cn3gvhOTDP9oqsDyKPboh2YGrAbIATgA7IG86DvwGXgf77
lpp1SuT5VveNrE+/Ffoq8TNurfvbLYyHMSAz+zi8i01j55GhdY+se+Ja4JTb
RsYeYZsH7mh0oHfAEoEjgq5pE/LQOtA80EJglWgHDvbRuun+78NazJoMvY9u
iP3z29zrd7vI12BNBf/Kugp+Ghz1m6lpL2gw5I3IHVeLTM9lyPhU7/3KOGRo
ALD7x0aWrbEOHha+fb75XpHxhHzLlySWlz2RmZaA3kCfdnhk2RHvFAwTWKTV
Mss8eOfoiMhTDtYJ2RKYVeRL0Orkr06sm6L+eLUdGFvXBL3yb2p6c2KglaAd
wVTfHfLQCeCxsdNh3wdLg6wcOTnycvLQh9+Ca6lbL3N54fMHlsY4UQ7G9ZvQ
rkydhwYEv4qugO8XmnL/2HhWvnl0ssyRScgHIutnabN7Zn3EF6l1EuTBv6GT
vQD6EX1aZJwD+yk6XPqeyDcXWW/LeNA3tg73eHfIrx/uHbw7dBG0MBg4aON/
Uj+Hv1PbyYHtBy4MDQtmDlqaAspOb1hWwLrXT8dvRrWFoHnedb8wH6ADsQ2g
n01Dunzo89/YemfwVGD8mbvMW/Sb8KoDm7ZXpRxc3NOF5c1PFqZloGmQBz1T
eP+fkHtfwu6XfQ0anGfK80SmzByHDkFPhr4MmyOuv1Nk3RbfK98tGBr0gNTh
WpPCO4ImRxfE8+XZgl3j3aAfLzJjy49M/E46RMZhLKSDIu/FfOPYYVLv1cT4
BDAJ0DKbRcZGMH72V849XPg+2H/Bx4BzwSaabxZ6iGN0C+uE/sF8cE3sldA/
rBdZBwENBX4dWgGMCph18OtTwtjAvrBGslaCD4OeoO4alecj2LWpYWzQDdC2
6DHhW39HLl54D3xYz//Xwrqs25X/qbDsZ4zyt+Ve89jvNo6Nb2Yf3DP2vsKe
Ag9Mn9hhbRsbS8Z+tKOe7fFq+0rma3Cti9VPl8x6GfQzcwvnb9X5HVR+X2Sd
BPT7aeG7XiMzjc/chtbGzueEQItDk0OLIqdEtzE40KTQx8g5Lwp56GTyHUM5
dbAP50O6KXJb5ijXhZfABpA6nUPb6SE/KPAe0As7Bn34dqEcehb9NHMa+mvT
MDdeDnnoN+bVhuHdQT+yn7GXgSMEM4h9AWvGHpHXDfYZ9jb2mjUr4+YGV97f
KH8zzAHw0OyV4ALBA4LZ5jtmfUefMbnweehV1njWeuTX8+reC9kH+Y7Yjz8I
ax60C3hF9l5oEfqFtt0/rBV7Nk2zTKuMaQObhn0TtEyvUIe2+HRgf2W/PSBy
PbBxYOTAqyO3g04Agw69Bj0KrQi9f0jIv1K4D2j7BaEcufA2QQ4/J8jVwa9D
n7MvYSPxb9iT2IPYa6D12evYC+F3B4TnAx9/RGQ5P8/tyLAnHtg07flGZdk9
9NEP4dn2C/WhQ6FN0RPBf/cPecrJQ6OObBrnhf8Evmt4JI5bZf5m4ZvAT7OG
gQt9q+lnj20O/WAzBt07PshC+a64Fpjv1cP4+4V1G5kB/Da8NjZ+6FGfTq1j
Q9eGTrYl3Dv1V89c3jYzDmVg+O74FrCJ/Vx12mXm6akD7Y8sAF4AWvvwQAMg
Fzkmsr4Nvh89H7QLtAa6H2QOyAxoCw8BDuJa+LEW4/+5rxHK35J7XxpR+Lvk
+0S2jEwZ2TL0GPJq8LpfKP2ksO7rh8r4XcqxmeWbHR2+XzDGtP2ssL4WHgie
HRwfeD7kgPDu8Njw19grXRoZ0wdu7uKwJm+SuRx8I/p7ZO1gcrbU8bWR7Yuv
blpvB06N/Rd5Fj4EsPHCPg7dDbZ1QyLb172JTiGyvBE5E3Zo8HL4N6D+Okr/
adju7YyG+eyLwt4xPeh3hgZZxfWR7w0e/brIMoEtgi4EPQh7HPz8ajXrtK8O
ayl0BTIX6KsXwjMB38hcBacIpnPF2PsQexD4TM5RvmbkcmhW/AaAFX8rNV6c
PLZV7GnY5PIM28R+7r9CkmS+3tGJ8YrcG/e1VKjDezki8d7LXs24Xgjl0N3s
zZxrqbyH71YZH7qQLmduR8ahtg1r8lVhHQZfyF69dmVcI+s0Nmhcn3GA/5sS
8owHucuVYW6MCHnwivDW6Lw71uyzAdtG7A2gx8ljz9Y/cXpeFp5TZFus05tO
sV0alnmO4ScH2u+MyPQeNg/YPlyXWv6KHLZDWJPhi8D7zg959hHouOfD2sse
MTHsHeCAwQNjN9RD+WcjY0hYMyeHveClsNaC/ZgUm8cbUnM59r7HV77uM+Fa
vZrmC44oja+mTzDWYJUnhT2F9Lmw5rP+PxfKL4uNXeHb7xT0ZdAM3xZe28Zp
DCNj2wSxJswsrNcejb1hYr72kYbtccB7gfWaU3jdYP0Ak8+1z1PdrwrruMYG
Ox1wS2CWsJ1Bl9E5M39MHnoG2TE0OTQ89CUYqmbYr58J++C4UA5vDHYZnDK2
itB44JtXrXmejghrCzobvg++C2zweO83pvbPQX1oQuxNOO6buGxk6Ad6nvUB
OnzNzDbKpzUsk+NbhnYkPyx818x9bGiZ88xBbG6Zk9tmfoZgBPAjgm8H9C7Y
0eLbAVvabgED9kiL+Sd4KmjIXTPPBXRH2HBNiIzXuj7Mk/GBDoeHh+aeG/L/
0RLYP/BM24TrYj8MvwKNhy3tg2GN4j3t0jDW6IaWYC8SmTfDpwrjXC8zTck8
uSYzVgzdIDgo9Lrod9H1Tm7YznH11NixryLrsRbVfJ0Z2WZ2hup+wbrN3lTZ
/1MveOXS5XlpO0n62TTxN4U9D7IF7F6wf9m1NEYHrA7vDqwZmDN4jbEhD66L
dKdQvg30BPhapdNi+3P5NDKOjLGNhG+J7TdpM+U3bnrdxYZ1k2ZYO5XfU9d7
R/l5utelSuPzf1W/2zbsfwkM/ysqnx3Z5rRPZlkU/oc4/1mow3U+D9e6rOHn
gd+trXLX6ZGbHvgkvC90XDvElmV9nBsr8m/TZd1COXaCO8d+j3yf6LDRX+M3
ZrvYum902pTDG6BP7RzKKesayrH/6xxkWejZaQumFHvD7oF+AKMIhnAZjaEJ
7iW2nQ5zD9s27jnLLTtjzjB3qY8dIraFXKOTyjvGXo9Yi1h7oEtYf36LjYvm
WtAsu4T8HqVtgpZrWpfN/YLhxMcFddCn7lL6/Y8pbR/D2MAa4h8HXTd2N7eH
a3GMrJF755kx3m3DeLqVxgRdqzkzKvZYKUeGwbxirmGDxrvGJvxK1f9G+cWV
Phfb7o9yaBL0W9jQxbHz6Lnwr4CfhdmhThrKSZOQx4aOY+gZbPXwC4S9Hti1
WUoP1j2tXXrdwk4O+3rqUM7aiH6C/QyMG36F6KNbuC66v5Glr/UbmPSGx8d1
OV+FseG3AfwccjT8N7QKeeRd1KE//O/gh+f0zJgg6nOMryh8CFyfWnaBTwHo
Kvz8kEeOsWPoE78Q2ItgNwINs27ptRy9MbQJNAq27Z/HroPsYyTyhMg+yz5Q
2bzwTe2eWJf7re7p1Nj2eOizvmiYjkafh14CjBq0Mbgm8EBggZChIUtFRrZD
4vq0Q0eHDhIaHuwaPAd2xMihkacjSz9R5d+yDjdM238cmbfdNzHe6tdG0HnU
rGcE3wZPg98S8KRgpMBHYbsHbhiZDFg6aHz8nCAPBF+FTBC+Ev0BPFeEPYCu
fU9lXoxyeISW0nq/L3PjgyfWjBuFlwH3yTgW6g8j477gHdBZtgpj4Vpgq9D7
of/DLwNyyjcDzUOf+C85obIPJXTlB2VuNzWME5oaHBV0OPaV4C6WbtrGElz0
Fcj0CtNwJ6P3i60DRv+LrwjmOXagSSudS+xnbLfCstwTA0amQ2xcYI/CdPBp
Tdulbt2wDu6RuvkBxrBnYVrg7cr4efbjuPB8ZI4yJ8HYs3dGhTHEYImT3PwH
mB/0iNg7kocGwpYSbNUFqn9xZn9x0xLbeWD3iPwCG2t4A/gCyjYK5fBJ6CHg
s5ARIivkOvhdAbPVEq65YbjWpbnHc5+ueYue53qxfdOB1SJ/SM2YKdqC9aqj
V1I6rOE9nzGAQ0Keib4f/f4zmTHMV+m5XNy0PhCsK98U+xR+IZul018y68nQ
l6FraxebRoc+/1/uPf7PzD4S0Xnho3LzyPwAdH/HorZQDoTednZsvgieqFPD
ch3OLZ7ZRugejeGSpv0WosPFPph9v41+eWJ+CBs45LHotvdNvb7GYb39LDd+
aVu9611y46LBNOL7Bxwk3yT8ODr1q9GPILOHlm/YHxj4Z7DOS9eNZwYDjSwc
/g3ebZfCz7Bv0/wCvMKXqjNb13qDZ6brHpAYN7tAfa5Vmu5ISvtrAu99RWbM
1ZZh7+tSGrsFhgt7AewIlmqahiaPzTvydGg0ysHKD60ZW7Rv+f84+gV8E7Fp
bPwzYCt0a4v1V1uHvWzz8K555ycEeyJsEGbGtnnrqHM/Kt0qjG2Dpp//hqqz
V2lM08+6x9E6v0e4FjJ77B8YL/K03rHlZtikY3uJDql3aVzYr/gqKG1Hiw3u
krrnXrH9Y2CXSX0wZKwZ6APQBYDZ6hny8DQ9/qMNYstJGQM+PbH5wFYFmoU6
HGOTy/Fi6HmbljfcUHp/gU+GB4cPRS8OTzorNp5nh5rlmWB6wA2Aq+MdgU2G
x4RXx6Zxpdh0JHvQ3g0fk18tsVz3wYZtp8EoziucshYgk0XmAq4PmSp4SPKd
S+vB0IddFdYH1g3aoWNFRox8GJ57hdi8OLga9g5sJ/6nax0FT1bZvhM5At8M
NnzY+CGvgNdeI/b3y/dIOd/2wMT3+pfudWuN48+aMfBgJv4N5y/ITCcjT4gq
+3b9sbKsgmvBp2HPyXPFHynzhvkD1p7njH0484+xtQ718RGH31TGjf8W7Pvx
c4DPvEVj7wvo3ZHZnKF0o4AjPV/1rmzavhI7y0mZ+bDlc/vwwxeftpCF/vjI
40OS/Q7fPejmlmrYPgGZwwBd7wXWmdK4MPBhyPeez8zDrZDbrxm2FT0z+xka
HPoBewcGD53a36H/VmFvpQ54bNZbsNZPZ5a79o8tXwV7AQbjAt37A5llq+jT
mw3bPIPB2KtpXT8+S7C3PjK2bBe5APIB9IeLBFw4clh8b+Lf79nM8i/y+Jhi
v2cM4IjA4PIM4Vfxe8P4n8x8f9w7tBS20f1iyzXAREFXQVPhHwfF4Y/IhEvj
aMDwnJ54n9wv95xibrHO873x3fUsvPbPDvMN21t8CYFPuam0L73LkU1ic9Kw
Df01fA+xfa0UiXmpS9Gvac4N1Hi/rIzRnhP2TWgx6t9ds53EzP/WtMjfNt81
drnMfTB7yG7BC4Jh6h3yyHuRo4LBisK7HRjeL8/m9DA3wBaCAwMDBsZwUMin
IQ/mEBtX1hV8/7IXw4eDmb46tx4f+SrXPDNcFzqN/H+2OfRPf31L69XBwoCD
IY/shXcEzgNalH0GPhdbcWRd2NsgD5ye2SYYH7zYSkE34QNlRmabXfzx4hMX
TDfH2HujP8EHFLYeY2PjugeXtr3Ad+6HoS19XJWb7kD2e1/svjh3d9Pf6Iel
/c3eEBsHiy0iNnB7l96vRoc1nD1nZNh3wIqPCN84fOFlYc1fObHtBjYcYMqZ
x7PQ/caWS4DDRj82Kux3YLIp26G0/Q12OMiup2aWhVwReMNLw3XZk8kj71iu
4frgGnmud8X2CUvK8Uo12/RxX8hz3stMe6+h5/EY8pPYfgD2bxrLgz8k7EWx
nYDvQB8Pz/FgZpobuwZ4AXAAfNeXJrYlwWcdeWx2yEPTw4P0Dd9mj6bnA3ME
fC7rwNSa/ebRJ/1vlxrT81jQ44C1AtfD94V/v5dz4wKwr2As4B2h5R/O7M8M
7CtyEPCv5PFv1lZtboyNt8Z+iWu2y42lhldDjoRvwFtj67qRS+HzlPUUeu22
2DQbPv2wJeFaK+Z+l9jXLJQzxZY14SeT+YBN0BlBVo/cnudIW+xTzsq83p/T
ME/xSWy+An4avhq+F1wk+EjWbPzG4RcMWxTSl2P7CLuqtH9v/Ktjp4T+Cp9O
+zbsX3ztmuvShj0DXnNqbBwl82JamBsL7TPD++pQmU/6qDKPyvoK/wZm85XY
ew4+fdj78EMJDQ4tDi0xL+ShxfHpPj22/1XkZcjNkMMhQwbDh3z5/tw4emx7
/0Dmxfcb6Hj6wO/7qNL3cqHSnzLLuzYAm13Zr/nu2KPr+D3Veb9hv3Tk71K9
bolx35+r7IrSPhIvxWau9H0jW8CnE1j9rzLbKr4WWz+Gvyx8iLCfbVXaD/oF
uWUqvwb5CX43F0TGsiOr+yXI66iL73TscO7IXI5/73szt8XX5UmZ7xW/afgK
+j30+WrDfkXw7Tk7lPOsk8p774DKzwlfoLQflflapybmJaPY/ORpmeUW/2Te
59nvoQGw40JGh6/O1UrLWvBfi29U7ve2mn0VUh8aY0TivZ49n3nEXGQu7dN0
+YqlaR/mMfRPu9K0z9OV/TDjO5H97+7EMpoXwKnr+J/IfpuhT16NTXtgC/N4
bPnfZpXfydzKPtqQ1y7etC+gf1RnWeWr3PJ4/I6/3DRGBx8I2Fv/HdvmGr8z
yNjwN4cvOd4PbW8vLceG3r61tF0dNC2+aPFndrOufVuQ6SHbG9e0HRP2TPix
hU+9OvBJP4Y1+Y7S9iLIHqFzkZUgR0CfsCDsHciHkBMhC4CvR96EHIo5/kX4
ZvENQDn8/oa5y49JjB3+PjZuHx4aWgLe/sTENPChmWWev8f2p4cvMHyC3Z6Z
f4LX4hhZOmNDhrN3KIf/ws/Y3NjyBOypsKW6JOw72OQgZ0f+itwW2Sx+fOCf
8CGGH+CnYmNzmOPIGZnP0IHgdKEPweSShyYE5wFvAQYEux1sNPBrh/7n4djY
xDUTrw8TNGdvzG1jhW0U4xkf9j5wKE/ExvivW1mHM6OynRh0K/5yXw/rKrJK
dBTotLD1viP3ngkGBj0Dcmpk1Mitf4mN00SOSzlzYrtw78iIkekiC2avHxPk
ukXTPAk8CN8jcuOHYsty8fv3ZBx8/yHfiv/fP96zsXlH8KbgTtevrPfieYOd
Qb+EDT86JnxyolvD7xG+nPDptLjSLXBcpvTMyvYAvwZbAfxP4s8Hvz7YK2JH
gy/acdj2JvbTPim3H9EFqvMS9tjwVqVtG8FYgJ99M7cv2b9L+8PEVgpfTfh+
xD8SfpJ+U18XJvYfCCYEnAZ4DfwFT6rZF+V92BIrXbyyH0j0RfguwF4U2xz8
0o7XufWgI5qOr9Cp5pgW2MIPU358bj8ynZV/MrEfnC41x3XAz8t2zLvEtmTY
bW1X2eftFy32lzJBxxsnjkGAjyZwKmBvH8SOIrHf6QfY/xLHvLhTv+sS27Pj
DxpfT/jSfVjHHRKvS/hkQJ7P94dvLvA0y2T2aYmibu/q/21rwVV2TrxHvafj
TRLbIeEjAf+F+EPgveITgTz+tvB9gA+EcUp7KT24YVoOP+r49z5Dfbyra3yQ
Wpf9jn63pcaAEdegR8M+1T8vjbv8PDffAv9yVOCF4Ino52/GnDg+ArwO/fet
ObbFgdhT5fYlS5wIfN3gGxZ7KvzbPJ17r8ePLL608Km1cmpftZ11/FtpvznY
yuGLlngcxG3Bjwq+M7DFw3dtQwTSYeqrC2NRfvvcsjL8PTAG+vpfYizlpIZ9
TONrGttgZLX/+RWO1bZX7jnwmX5bJY678YKutwF7YenYMO3V7tHE+xr7On61
8Su+SsO4to8r68wWKa2DQ2dGbBN0pG3Cu2jbsL0ZfDJp22B7Bq0JzQnfCn6a
77hsWmaFfGGD0rQ4NDn2NdCt2HFBx/ZV2gedccP6voV6wNI6COIHEMcAup4x
wKtAI3Nt6B70sMi2kGshryIPruir0v4uVmh6TYaHZ30eW3ot+beyrop1EJ3m
/EAPQQuh9wRXjW+jJ0vLcpCZ42sfmg96D5krMgvkFdAUtMUOY/em9aX4RPy8
Mm2RVtYT4eMRX4/Y4mBDyDrYoeE+2dteryy/QyZPPB7WBGKwDAh6FvQt+N3F
Rhffu+fn9in3U2mbZWgkaCVivuDTDH9HyKDAY+Bv+JTcsRu+Kx1bh28CHz6P
6Lob6DpLNO3fCjtK4ujg9wr7SmLncE2u/bb6WJ7n2rDNMnb95PFR/1hp+z/s
WH9NvM8cnFu2gb8A5Bvk4SfhJUeEPHwjdBr0UtvSz2OZ8EyI3YOufk5p/g8+
ENzT8xrzzpn3EfzSMpbHVWeSjvPUfnSfq2y3AA4Tv6uH1Lwmv4A9duK9DNvr
5cO9dM/Nm8Oj4zeb9QQbzR1Sy66RYeOzCZqrQtZVWh+DzAebFGjTKal9PJ1T
8/NkHWc9X7Jp3A64IHz2Y0eJfeU9uTE/YJXwFY2dFXMKWRjnqMMegewLP+Av
ZJat4aP8OaXXVJZFgh/DRgY5HTEukMXRxzeVZYNrxfZPhX4E32SN3DaJ4PWh
V5EDI/s9pLRdJP5Jn1N598rxpRpNyw3B8uKvetfKcWj+VT/dKsd6+V75DqXr
UBebI3By+OIlthHvE1kmskvkuthrHlvZrzR77vmZZbbDM9sV4nvl2dTy6oNV
fmhpn4MLbaFiy+JIZ1Wmdfje2WvRG6JT3CezDxN0Geg0wCYhq8V2AP3KBfCI
qf2owPNhZ4pvF3hH7FLxzwJvii0qfs+x8cNvFb5QkJ3hsw1dJzwncsj3S/sm
/aJ0XAPmDP4izmVfVPmPej5DlX8otY/QYfr93XB8Dey2wDXiIxnsEfbe8JGn
Bh0GTltP0++mxHoN7NqIXUIMk8NLY1WRR6ELxK8H/C66KnzqQvNiGwh/Czby
5Mq6ln9Ly3DAkUxhfqk8TuzrdQj4wtw+Xc+qjC8EA3xSZb/n/6ht/9I8Lesb
MnZs7bG5317HfzYcVwg9BboB5Ev7V4450R7eoXLMGNYiYsUc23AcketU3j7x
3kEsmH7qY0els1RvQMMxifrkjnMzmD07X6iirQ1R/rjcPmeID7NO7n6JRbOn
2m+Y+BvsWTkO02pN93NMw/Gkrlf5uom/a94hNAw0xGYN6xLg/b+uPEfxqc53
xfd1LDRkZRnTJkpnlPbJcFfT9Ad9TC8dxw06ZO/cMjjWP+oQT+dr1fkGmSvv
N7MvLOY0c7ufyr+ozE9uwN5eOa7OLpXlIvs0HPtqbuZj4qH1CDgWviPkf/iJ
QJ4IPRWFfZy4LffqfneqHPcBvpX+wV2AtUBGt0fl+G1NdIiJY2kRU2tybroO
OQP+3umza269DHJDeEbWV3yL5YEeOzR8F8jcfk7ts63eyvTNz6X1aMgf4eN4
BsgZ4U+jVqYdf0WeVjn+GfvdWbnj0DE2aKj+7C9K39G5HZCPlI5z1TfQFYfk
C8PZ1NaEJgz7FPvVPupzs8Rxwdo3PB+IP9QntFVxbd/K949/Wnw5EMeFGC5H
V/ahD08BDXtEoGmRiSMb513jXxMZOnQoNBrxX35Tm2Mqx66AB2GPZK+kHCwB
dvHYx6NPhHfdr7S9ddywjQ8+avFVu3HqOHp8X0XuuCQ9VHZi2APRVeJXi/sD
E4Z/A3zX3qy2m6b2VQsfi8yG2GP4bj0wd5yDWwJ9i497+Db8NhAvgXLiEj6V
m+7lO4InBa+EHzXioIE9+03plIZ1i/gkh2bHJhTbUGIKYhODL5ePEuvO8fOD
n2TuDz/9iwY8Ij7N8GUPfYqfAewP0W2yr2PfCG6I/Q8/5tAF+JDB5xjrFesW
/gHQX+MnFN+hrPms/fhgIa7Qh4nxb2/HlsnhAxwdCvES4c/w6YEPI2ylngxy
hcuCnA15G/6UwKZgRw6fhIwB3+n4l8B+EF930Fb498MvBj7u8LVBTABih6EL
BqvF+oTPQHxMEE8IXh+fEvjfh0fHRx8+RrFrQS/PWoUNCn6v4POQB+GrAf97
+GKAH8OHPzYm2JrAix0Cr6VrLZ46/ty0zPGAkNfi3xI/umBql8ssO0OWRiwP
4tpgx39o037dwfz1VD8dK8fYOa6yvzj8iRAr4cPctufE8YD/hsbC1xN8CZg/
fJW8kTtWDnsBdgfg/YkVgO9R/LYRo4iYLvDj26eOT4Q8Hp+c+MYHB4atG77t
kInhOxs/q2DRiVOJL3t0tgt9vyT273BN6vhn+IdnP8XPPPEdv8iMkwQzBu9D
PDYwL9AzJzccu4RYdT803JYYJcQKmhTuEd84yM3wXY+fXvQ9YJyJD/RSzXvl
Lw1jG7qp7NPccTPYf5ETgEkh1tO7AZONfflZDe9rh+e2zZsa5h5xGInbiI9T
YnESj3JyaXv/JXTdv1L7pIXea8kdSwa/18QMJc4mfnrx13tObpwM/AUx/vBV
i59SYg7iPxa/qcQymKfzh1f2Ww2v8W7i2H98NwdX9s8/U/nelf35ox/A/xC+
dLvWHDOSuF/oqvBThl8gYlrQhjgd4IbBxSOTwAcOvkXw74SPJuKUEnOub6Cr
jw9yZuTNxOjCx9ceuX31MK4rA/0ys+Z4g/gk5Fn1Se3LCZki/tLxB4XPKOIS
QKeAGSGGDnFe8F/xQdPYnh9iywgnNkzDE0fy6NQxzKCXTsrNU0MDE1MMvNGW
uX34g1HGrwDx8PCRTFzU03Ruq5ppaXwf4WeHGHLEbkP+iRwUP0j40yHOXLvK
vpMHVY5116bmuIfEV2sT6Bx8wrP+wQcQx+EGPZ9PMvssQreG7z/8GuGjjXd5
UsNzmziMyH7AqOJDDz/nV9ftSxb9Ezz2q6Vj9xBLiBiGvYLOGx+5b5Xe6+Cv
3wt7LvGYwBCDJW5dGv+GLxd8uhAPBhodv53QC90CHYJdHjj1PwvHFCWOArZg
yxXWzeKDcdfE38tsndshN6aI+C/Y8SGT/a0wtgedEphKbC3BbT9bWPYErQJt
sH3iGDSfNYy9R0aJX8nplfHiswPWkVg+6GCw10P2ClYEO0Hkmz8Xxucj90TX
+WKQsRDnF50denh80EI7rBXoB+IXgoEYnBmfjxx2SOBz4f/RIW2Um44bAe1S
2CcSNtHgsjo27Gfs3KZxLsSZxS4ajN2cmvnCJRvG0oGNaFezz4vlcvsWAnuA
HhJcAliB1rn9Uz4d+MglGsbbgdVYvWY/C2A0iKGIDo+Yi8g+oHXxt44dBnQp
+CVwSsTUBTcFxq5raWwPeILNS+M5uS5YiKVz65GIFbRsbhs4fBfAI6JPnVgz
Bq1TuF/umzyYtEEN+xMi3iu4Qu6dWBTYtjJnkJEhN0NmNrxm/RnvEJ0C57uE
Olsk9os/tWH9LdcF34kMCxkHMiXid9I3/Bo2COhN11L6QWXbpNml5XH0h5wQ
WwxsM35Q+hxyK537O7eshP7ol7gk4BGIO0d8I3wGQQcjcyXuFfGvwDC/H1v3
+H1lHfbA0n4JkNOdpHTXwnhifGcS6xn7rIV2Wk3Lgy9Su6sa9rUBb4tPZ+zz
kRMu0LlNc+8X+GlnL3glsd+K/2xr0F+DY8AfNQbQ2G61ZI5/h+75KKXzKusp
LyqNwTuzbn+f8Kb4tsFHJXwtMV6J9UosOeLKEcv0rsTYa2QLh6aeV/jdJ44p
8Ux5zsQoAR8EfwKmEGwh+xrxa/GXtXbm2KjYijA2Ytnyra2dW7+Prv/o0pgH
+B/iDN9XGsuG7yP8uiOPPVh9jEhtH4JcBR3rFg3H7WNMYJkYI3FIt2zYhuGn
ytiauLK9APwhsbypS+wAYl1TFzz3V8htS+u7mA+b5JYdbpxbTogelzhjHwUe
mPjFxzXMh8CDrJ/blxZxjxdiqwMfOpVvrGE/eFvk/lY2D3I28FjstcQBBa/d
ITfmFv9p+FEjTgD+TN9D/pHajgs5Ev7+kCkyV89qOsbu96VjAaB/GMHcr/z9
IN/GDzh+tI4r/Ky4L+6P+bWT8jc17LcZmQyy2M3DOImdvUnDdAtxgIingEz6
gspxGPkWfld6SGXegPib+OTH9gz/LsgV4cHwq4fPZPQE8Ib4PkUWh0wO/6Vg
MvBTgq6mVJ1lcstHkJMQV4q1qAjl+LTEBwu+WPBRSf2HS/tBwgYbf/X4sjuv
Znkw6/LC9Tnzu2DP/0Pnz6kcIxA6GTkz+xy6DHw143MP+RXx1NjfiEd0duW4
Vgc37W8f3c3ZqeVD16n++NQxxMHjE7ft+4ZxUcjEiO0FT9FO/axe2I8zfCJ7
JbEviYGJD3B806F/3DO3rGCv3PLMPZTfNbdfU9KnKsdmwh8ifhaRY0BbtbSy
zzF8iBHPBH00uulFcvuXQF6N3LpDmDPMnTOannvEHUaeic9h7E2Jaf4flhlf
k/ic/JQ+VP5li2MBEB8T2zrs9lYK8iXkTMTAAF9JPHd4QPCnXHtQ07E20C9g
07RDzRiGN4KdKfamc5qOE8dzBueA7PHq0vFN0OsdmTneCrzRLZXtjL4Pax1x
XtDt3IBcrXKcG2SkxDrHdh0fGNgbgHVbgPy2cpyMH0rbPWGjhK0S/NSLNdsP
XZbaxxDySXw88t0RaxRbWuxqiZuAbgq5BfKK59X+rdjrLTFc0HUOSe0zCvwi
MdPwzU6MhqGpv0PWIr5L9iPWgN8rx0+E/1qutG6IdWh+ZdnRvmFugP0jrtDH
pWOsoDvB1xTxXPh2kDUiy1w7rLfEBsJWEB9RxBgg1gB7Fj6XiMPBOoPMau2w
FhLHBb9IzG3iEBCPALzSjdDh6KczX5sxsMay32EP+lLluHtgnMA60Ya272b2
1YNfHvjZxQr7SIUOOY15E3m/JlYaun58qeKvH7+yxCyAtwIjgA+JLSv76Xyo
csxi8E5goPD3NKZmXzz48yH+EHG98B19dM069juCLmHRwn5WkYMhD8PnP3It
5FtdmqZlwOCfXtk2ALkfPkvByUF/ElMYP0X4KyKWH36T8J8ETuP3oHtFToG8
gmcF7uid2PIWfFjh24rYVmCHsGsDU4S/GuxSsOUHt4lMitgvYIeQY/yd+Xvg
u0A2D9YCOwLsCYhtDcYHLCjYI3BH2+TGiswNsmX87SA3ICYwtAs0DN8CvNMP
QdfwR2Y6F9sE9CWs1cTxAwMD/gGcFP5ywWGCxwTTCNbx48z4fnD+xKQAAwAN
DC28Ttgvj8xtm3JUw/wyelR0pfDaxBFDVoQuCF/6BzQsbzwit8yZtsiQkS0j
a46DTQoxwYnNgO97+Iunm7aDhQYjfgdyoVUKy0Cg8aD1mD/wLPAuyEiJWdsl
yNE3b/i5EVcAn6snl+ZH4Jt657aZAS9DPEfiwkM7HdF0rHbua2bpmH34y8Jf
F7iRCUF2Qdx51orXlS5T2DYGWpQY9OiviEuLX26wJWBMiHGJP39iCkC3Qb8h
GyEmK7gq4uES4wSfJ2Az8MeFrp8YLsT4hr8+TukJTdu3Ebdu58px6aAHomC/
Q4x14gqD+yO2LHYX4GJfK+2HChtp4i4ObzqWEPzC+ez9yqeFfX6C28UnN7GM
sb1DiIsPWOiZNLOfRzCS2GYRTxrbkoMz++YCi4zfaOI34C8MfhDMGDgubOW4
BtdirSYmEf5oxvFOm/Zpg28b4l//FzcSTCNYSfg4fHpjk4K/VPxUgn0swvPi
uRGvA3/U7Hv4ShwV1nDWcmy6wQBhg0l8DvwXw1did4yunRgX+BIH14k8Fx/d
yMDuqoyRAxdHrOyFdm2R7xf/9kfV7MOGeMrEoSMeHdhsMHLElscvc7+a7Rjw
AYgNHhhU4luhs0N3h19ObPLwq0GsAex09lad4ZXjE6OH3b6wLSs8O37vifFE
rCd8tuDHA38eyC7w+YEvEOKHIttpXTiGOHsxezKx/fA3Rxwf4k+h+9u0tB0U
9lCs7WA1X6vZX/6XgU6AXiBuEZjyhwrHosP32YOp/WMgA4GuIGYxMjFkY8Ro
A2NyZmpcIpjGkzPHUMGfzi+F4+3hB21U4Th2+BkibmOPwI/DlxNjDkzIoNTx
YdFLLqWxnVHZJgqaGZtiMKM/Z447Bo5ordQ2Ttg6vZ85LjnPGL+n6LHxjYyP
ZOIjs2exdxGLDV/AW6aOFYuMd83CcTdY81n78TWGnxb4bHyygytGDzUuzGdi
8UD/QQfiqxjbPWxHidWA3R/2oviSZ4/7MPCAxJvA9mqf1DEMsEvGTvebxDZz
zJ+DCmMgiM+AHB47GOqAjSSmNrG10eNhO42fYOLzEmeEWCHEoQH/iO9oYmBh
m4YfR+KdEWeB2Av4sMUnPL7hwfjwromfTIwo/FsR5+j/AKlNxlc=
            "]], Polygon3DBox[CompressedData["
1:eJxFnXn8F9P3x+e9zfs9yzuh7GlVKktCSVKkKLKEJFEiIpUW+xYJJUtFlpQl
W5EskT0USpRCtiKJKIXs++/17DXfx++PqXvm3Lkz71nuPed1Xud86vcb0n1w
PgiCz8MgKOr/2aUgOFA77sgFQWPtO6gSBA8V9L+Uv0teXg6Ck6T7Q33PlTxT
/Vur/zjp60q+TVt96U/Wvu/VN9HxLXT8S5IHSNcfvY49Tn2eVfviOAiaSl9W
v/eqQXCr9tWT7nCNe1gUBLP0fxsde6P21ZduT/W5QMffpLHnqf2t9G9K3ij9
kdI/Jnk/9b9ecj3Jp2j7WvqttI2Q7skkCK6T/n4d/76Ov03nPUDX/qO2n9V3
SdnX2kDX9Jjk5tJvp2OP0Hi7qd1cxx8n/WXq96yOX5cGwZWSJ0t+U/KD6nOy
xpqn/kPVXqb9u+r4UyS/p/Zp6l9D7f7SrVT/x3VN++v4i7Wvgc73o/TnqD1I
+pulP0/ne0b69RqjqPYP0g+U/lSNdZP09+j/q6W/QdfbUscslPx01v9atTeo
fzf1f1FjX6f+92nfiZJbqn+q/h203a92e13zb6H1o3X8dMkfSbe7nsFuusbd
te2p9ofSt9fYk3TMftJ/p2MGSD5AxwyR7m1t20s+Uud4R+0LdM3PSved9l2k
Z91dx7yiYz+T/hi1t5V+gtrrNM7jur4R6tNF8ps69lrJS/X/Kzp+Fx3zuPos
1O9ppWvppfGeVN+NOn56wWMw1psa81TpWuqYBWq/o/5t1X+N9oVq36xjBqjv
JO3rrfGvUJ8NOr6G9JerfYXGWKxjO0i+Ur93YejnsUp9DpDcUtueOra79v2n
/ntLbiH5L/Ufzvun631Vuq7qX0v6NtruULuZxrxH/epp/Dul30N9n9L5z1f/
rtI9oX15tR/RdqXanXTM1jr2AsmHS3+nnsdiybV53jrXQvXZRu17NeZt6nu9
+tTSmOdpXxe1Z3F9kudIf4jkmyQ3lfyB7kEX7XtIY6zUvahI/kXtTRr7B13P
ofo9XaX/SPt+1v/rtS3SuadpjKN1/OrU3+ZC6b9Q+ywd963OP1nyHlyrjj8y
+ya7qX97jbkg8LfMTZ6tfU3Uf07e78dA3iHJTXV9Z6vdVP1rqb0f90Ht63S/
PlHfE3X4LRrjKe2/U/LjXL/OM0zj/cm18A5IniH9CB1/oOStNN450v8sfTPJ
Fcnr1Oct/Z4PJB8l3Q36Dcsk/5T9/po632gd/xlzm+R50u+hY5aqz41qr9H4
i6TvpuNr65gHJJ/B9UreQnJDyTfrfMfrGi9njtCxndS+WX2aacy3Ncb+2jdd
fRbo9xyorU0mf6j/79UYR+pclwd+HwbrmN/U3l3jR8wJ6t9K450j3Sxd377a
zpX+LX6b2sN1/bOlX6d9BbW31zZZ596kcZ7IvqeuyNKfrX1bMh9KXs27K/0b
ur59dB3Xat90vR/zpD9G566j466Q/i6dp7Ou72Hp/87Wg7d0vpYa7znJ7dRn
K+nOVL+Ral8s/dHSv6R9VbV/jDw/XKpzjJb+aY3/tvQfSfeB5Fjn/1LnO1R9
2ur816l/D7W319gnS59k+qk6/hTJZ0k/RO3mbGpXpf+q4Gfwmo6/UOMeofGf
175uuqZddL77dC0tNN5sHb+r5Mck7yv5GcmXqH939V+ifTuyfmmMi/ltGn++
9M3U/1jpL5VujuTGkqep7146/mnJD2v/UMn763xb6nx76Xq21f1qoTEu01hX
SN9Dx69Qn+bMl7rmCyRPUPt1Hd9P/fsUfb+aauwp0t+j9mTmEek7Sd+m6GfG
s7tH+7tJ/lVbjm9D5zhfutPUnqj+raSfoGs5jd+o9u3Sn6f2El3vBOl/1e+q
rfOH2npq3zU63+5q99fxj0p/o45pprEv1THnqt1V25Ma71jtK6rPJ4nnt7ba
P0n9p7NO6PhzuX/MN9JfU/A7d5TaHXT9u+vY7rofD+laHtBxx0n+Q1vImsz3
p/6HsZ6rvVzbGL5Vyd3VbqvtDI2/SH1f1vlO1zl20Fhnat91/GaN11pjDdS+
hvxGya0kX6HjN0reoOvrp76NWX+wJzReT8lX6tjnNV57XV9T9T9Kx4/TvfhR
/U+Tfgttx6l/G/U/neevcV9S/7n6n6mtv/a9ovb6yLbGMB3Xuer5bb2u/33t
O5bvQ8cPUN8xOt9c6a9kTZDcXtczA3tF+xtJ7i35eWTWR8m7qX2n+h8o+SzJ
Y1kXJb+ke/iI+u4u/WTJ0/S/hgx2ZM5Un7/4XqRvrfY06WuU/T7P1b4t1L6l
4vnjLsm3cq0ab73abaW7X/2bat9luv7W2tebdwK7Q2OXeB/U/l3jf6D2Lmrf
XfX6daP0Oe37hLlL+vdzngunSj9M46/V+e6Q/AbzkX7PFRp/f/V5l2er862V
/JqewXdqz1e//aT7Vsf003hXq88HGv8A6W7T8a9Jv6/030jfV/ojK/7WD9VN
2Fq6ZpKv5P1Un2skX6LzH5OzLfObjp+hflflfM076fgVidffT8se/1PJl/M9
Z+/3SPWZqHMtxz5Wn43aShr/dG0d1P6cb7bg920LtTfpfD+rPV66B3X8P/p/
lY7fVuf7V+0/dX9W822qfZ/072v8Y6XfTfrT+W3S1yl6DdtXY43Xdewp+fTA
9u3T6jNZfefpnMdhy0guqH2qtgOZm3XM6xp/K7Xv0vijdcy9OvarbI3dKP2P
ao9S+wHpv9b/v2i8E3T8rmp/py2v9ik8I7539f+EuUnte9R/LHOqrmettrew
BaXfS/p/dF+vZr2QfEHOv+UWySdWvPZeqP5dte83PYcGup5r1P8a6WdL/6Lk
83UNT6s9GZtcciT5KOZybWXsd20vs55oq2i8CzTeoZxD24V534NbdGxb3b9G
+C4ao42upY+2urqeQ9TvKp3vXz2j19X3SekXsxarfwP1P1Dyder7Utm2zzD1
Obxs/wR7hnNwrg91TEHtX9ServGalP1ubGROUd/WGq+exuujfa3UXpR6vW8X
eX1cpPZ56jtJW9vMX9la43dU/0fVvhl7RrpE8mWSb9Q1nan2PLXH6fi/df1P
c20V+0MPa7w91P8i9dlBfb7X+c5Wuy/fpfQbJfeVPFe66yW/zByo852a7dtD
4zSRfDLfiNqHp17vm4de/3pKPr7oNZS1tDP2vdoRdq/0T+n8Q3T+29HrmCtY
n9VepPb4qu0l/K9bmFM0/q3qf7r012pfDWwUyYPynrOZv/vp9+4q/RS1R+n4
IzTe0epzDP4h70PFv/959bmIZ6/9rdTeR9uDmb+5kW9F22jpIl1vY43fB1u7
6vnlCcn/aYzpof1Q/NEN6j8Fn077WqndJO97uLd+/466tr3xD3Rtx+t6Wqu9
q/Q91J6jPlPUfl19NmispaHXuuZ5r8ktdP4T1b5K7Rd0/jWsF5JPUt8ZVfsI
+Ar9dP1b69hHJA+UnJdcR/IrfI/Yg5JfVfsovhdd77uSv2RN0PU10zH/ZfbV
1dLvULTPt7faT2h7QcefpEGeVPtZ5m3eb/XpyNqjfZ9Ifwk+F2ucto8lX8z3
pvZEXcOrkv/OvqHnmQeke1fXcIL0//A+MH9L30ftF/FRpH9D42/EX6p6Lhuj
9lfYb4nt+Scze/9X7Gt8Re37Te09pD9B7ZFqPyf9b7rnTTT2nbqOh7B9Y/v3
xdDzxwsa960g2HyTXlT7em2Nde7BOmYwtovuC4AHa1gjHbOf7lf9on2gVhpr
a8nrCrbHj5a8KbJ9cZmO+4f5QmN8hq2l7SK1t0rt/+AHfYY9ov4D1TfBn8z8
kzZqr2ZOxr/EH1H7a9YMyWXmIenXYKNJXqPxBrCAa3tE7S1Sr4czMrzgVI1/
lnRz1KWzxnqX9U3tN/X7lqo9Vic+U/IG6W5X/wmSv9RvrUh/qNprU9vLAzRO
F+m3T31t/XTs58z/4A8l/+av1L5Q4/wk/af6vX+rz0eSTwi8D3vwNW2jpTs8
Z5vmJ427o/RXaIxQ/t586a8pGoPAZrldcjvJE7UtUvvq0L4j93BAxRgEWAR9
7sjuF3gJmArYCjYntucx2u6XPJDrVXt79emh5zW67LU+X7SNdp+2o9Repn07
S7eD+s9X+wCNu0q/t4/+r0gfabsSW0dboWgMZYH6z9PvuD7wMwPP6a/j+xft
f36t850NHsO3zvip7c1JOdug2KLYV23VvrloH+1BjddC7QvVZ7vQeMVYyfvq
fAPLxtjA2joUbfMfldr/Bwf4Wtd7k57h+Tr3jZJfwz6X/IX0Zb5HbFP1P531
GH9a8rmp/YO7M//wrNj20sM6z2HYp6xffM+6rkMlr1L/ldiTfLf4w5Hfxfe0
rx42Uep3YRN4iNpbSp8r2cZrIP0/Os8K6Z/VYYdis6rPF0WvKedjS4Vey4o6
ppaOnYx9WvQcu4+ubbbkVLpx6verzr+j+mxd8jv2qsbuLfkUyU9rjFr4Z5J/
l+7JnN+H17X101jbqU8d6aYnxo4aad9QfD2NX8Lnke4X7BH9f5LklzN7+Eud
dyfJO2qrG9nebaf7u4PknSUPkzwkcJ96kldqvF5qr+Meqz1I2wi1/9R403S+
B7XV0vmbS/5Xvy8fue8ZgfG+ker/RNE2+JrE/uy5JX9DfKN7ZPjbuZl/y/rS
i7lL8i6SZ0o+VHI9yQ05VmM8LrnI2q3ft7vO+aXG+ivzR45UH+0Kmko+KjKe
069kzOdDte/S9pP0L+naLlX/NyXvK11H9f1D8qDQcyUYGFhYQdv6oucE5oa3
K8Zn60rfQLqPU2NFV+s6X2R9k1zQvbhYfTdJzqnPt0VjNjfo2Jy2nTJ7nW/5
OOlPYE3Ef1L7L9ajojE3sLdzUq9dO6p/L/2wfSTvJPka5tKq/0cGQwTveEry
4KJtxh/KXg8HFb0P3ZNgImpfVTDey5zA3HBZ3j7Lwoqx7jE5YzDY9dj3Q4q2
V9vh1xRsH05kbtf1zEan6/0ks2/pe662ZyrGUMBSHsNnqXgfuljyprK/X+aO
g8Df1B4VGl/pp32PqO8cbUPVXqN9K0rGG7vpXt2Z+eT4U0ulO7XoNWSWtrOL
tlGeyez7ddKfpX2PVewH4A9wT7APfk5sj2GXfYo9DwYt+T7wKt3voann8oO1
7w/pVuv4sYFtEmyTvqwr4AUa85nQ8wrzy9yC8d8xqfFFcMYVGv/4srGIj/A5
pP8dP59zSe4NBqIxlhXsDxwp3dHsC4wpgy0P03iTsGWk75XaJsE2qantT75v
nWdxwTZPF2wG7JmC58xH1febxHj4Kt4zXc9q9X9H8ttgEqExBHw7fLwDsZU0
5pE6/+SCfdIROuftRfvk+OZcH78VGx9bHx8NX41Jd72OXVIxtvtU5qO9X/K9
5ZqO5d3VO16r5DV0XsX+3jfga5JnVvz+8/yf5dozfwxbp4n2jVP7EukfVLuB
zn+MfttFkqdJPkB9lmXz8SlF48nbsj6WjT2BQU3X8Rer/wNq1+f9S+yz4bsl
Bfs8s3R8zaIxRzD7+0rGTsBQ+J6xH/4LjCGBJX0ERiv5dx0/XPIX0vcFO2aN
5NsI7aths2K7godga2Nzj5Z8nq5natH2fpPE8Y8T1N5e+0ZV7G/trPa1mX15
R2p7DbvtS8mNJP+rc58veXXVmAbYBsGvCyvGd/Hd8PG3L9v+vUq6mrru7SP7
mPia5xdtX4L/jFJ7S2wm6T+X/HjRa8ZKfJ2Kr+d4YgbSDygbW2XNX5CtV2OK
jqENku581sXANslI6Tph00seLvk5vt2y5x6OeQObk2+6aJuD97Gs3/Qn7xv3
Vu2V+v+xojGFT9UeH3os1qjnJX+g7W618/ig+LOS75FclHxb2fvQcQ+w/7Gv
+e276Dob6/d8rf//1vn+1fkPDz0//SL5m4Ix4IdC3++d8HHKxmCY27ln4GUl
bY2k/zFwfHB4bOxvXtnr13CdYyfpytJ1k7ynnl9tHdsUHyj1Os56/nbO7yv2
8JSiMd+XSvYJeVd4Z96r2GbAdqAP9vIeGqNW0ZgQ2BCYE9gTv2EYz1L6qOQ5
9yjwSuzyojGNbbP17jbJw/KOSQ4H58l53zvMIdpmcP913NG61ic1XqL2o7r+
nrFjbMTabirYP5slfUX6h6X/TPqLmA+KxuB2lX5x7PjDQ2r3JBaa+nnx3L7L
8LBZeb9D2Hh8L+Dv4PDrpR+l8e7n+RYd7xqsb+gR6Ver/xmx/YEfmevAXFLb
GNga2+W8Xgyp2PZjvQdfmBT5/eM93AgeqWMaq38fjXlh6vjiVB37ZNFzKvb3
rzr+Th2/MPZ7yvvKnDBC7RdTv1un6PjzsQ0rxhqe1fFfqT1a+55j7VSf76v+
f7OsbVddTyPwJOagvJ93J22dwf+l/1rtK1J/D3wXG3T8JxU/z0eL/j7mlo0t
Ldb1fJfZMNgyjMHz3Ix/63peVv9v1F6l/pew/kheVzEewbnnSv5W7bo631/6
fY/weyPjk2/gu7PmVYx5g30/rD4dK8bwwfKP0DZVco+K1x5sDGIEBTCzomNE
xIqewCbP1mPWjqWsP2rvz3fHekA8T3LrzH4rpV5bWWNb6dk/kNp+xo7+KYvv
TNe5fta+KLK9t7roGNhekX14fHnW4J5qd9G+I6SbomN+Ud8f+BaLjumBd3+U
2lf9AhtW478ruaPa12nf63r+nXR855LvydZqL5a+Xckxopd5FyuOvWEDfq/2
L6zHPCveQY1/sI5pXzIGk4TGXMBesMGOr9jfHCrdJmy+zF6ekPlLI1g7dA07
4ItF9je2jex/8Ly2UXtMZntyD4j3Ntc1xUVj2GDZu/E9F41hNlO7hbZtJPfQ
mMfp/harto+Lke1d7GViKd9l+/Lg4wXPsfskjh9PVDtSn5pqp7Hfr+dLxv+L
6r+84Pl538Q2EbZRCftL/ZtFxn/agdGq3afie0X/48rmOMB1wCcF78ffqnJv
1f8ptUMd833RPiq+6tTU9jl2+o9VY7xgvcwR4CnbpY7VbRmar7BL6rWUNXUg
WE1qX5w5/xzJh2icgzVub20nRf4G+BZGBo7Pgaf1lO5MbeNL5jnAd2Af+Brf
GN8aMfYvwBtS+2/4cfka+h7VfkZjHVYyPrJW/V8q2kf6XP0Hl+17nSj9CTrm
ktBtfLie+BPqf0DJnIGDsvdxV/CY0PjP6ornmhs4v9o/lW2rN5R8a9nvOe/7
B0X7v3dF9kfb/8+exIaTbnjg+epKjf9U0e/oOj3PFZJ7lOzrHMG7E5rbcK6u
/wZsL/xB9U21/2jpu5QdqwcTBRtlfd8Z/D1ne+EF7RsnfTt+J98/3zDrnfbd
VLE/2B1fV+OfzFrPnKXf01nHLy6b/7Cf9D8UzEnBhsGWYR98iDaR+Ritte2v
9hba/sN/0fFVtfumti/x9VmvuibGs8G1jwOvTsy1aajrGZL4neXd7Z75pzeE
/j43afu2bP/vk6IxtT/VXgInQO2u6tcL/E/v2P3q25I4iuS3JS+Q3AbcCrxc
Y2yd+eMnlD0nMDewRoE3zVP/OWrvp/49qsYQwBL2ydvegk+CP4Nf8zf4auq1
iTWqjq7/G+Yy3uWS+Q/gv8RjsQGwBYhJEZsqlDzfEe/BlmANYi0iLkt8lhgp
z+d6jb+k6HM2Vfta/OmiMdJcav+Y9+XdoufHZannU+bV/3R9C2I/D57Lz5Kf
S41fgGM8WbVfin8Kx6tJaPsYLLy2+jRUu4uOL3Lvpbuc+GJm3/+rrbb2zVGf
bbWvKe8PtoS2XQvmPF2YGDMBOzknMN6Kz4rvik+KfXUpOIN0/2hfqr6TUvv3
PNujdL7lJfNV+mo7WH0fxTZQ/1HgbWBEqecT5hXWu1903HtF2y9wBPaLzB3p
kGEYV8Xmr72L31Y1HwO8CtzqL/Bn/f8+9kTOeCyYCNhIZ3CwGuZogA3D4Wiv
fb1YIyQfks1n8EiWZe8nfJT6ifk48HK6V40vEbvvkDd+9AfnKNr+wTdaSYxT
+r2kP7Ps6wd/4RvjW4OnBz+lvfRDy56/wFPa5j2fwceayFwreZz0l2lfW429
lfYfU7W/dQ2xAOnPKntNYG1gTSEGgU21puJ3GlvrgdjXswI/TbqPJH+Ycwyx
G/yryO8KmCLYIjEt7H7sf2JdYPrEGYk3gvX/XjHOC957q/Tl2LHufTTGpRrr
6tixp58yPHBs1XFw+oyCiwEmFjiGda3kbTXG9xqrrq73GsnbSN5YsE0wmv7E
IPT7mhOTZS2VPFfyHpJHwm/RePcE5hwdEzumNhQMNshibeq/Zc4xzwFqv6z+
E6TbIuff34xryDlmTuz8e+m3CRyzPlvyn7qOodr2kHxE4vvVMmd/KCf5nMi8
S2KmZ8b+xvjWxvP7Evvj+DbXBObPwMGZVXa8EG7Oz6ntBbhmC6XrFDv2Tsx6
VGKfHt/+6sDxw0Njx5KIcY/m+4zt6y4seX4krstvvTUw/2V/jd8Q25k1T30v
1TELsFV0/66XPCZ2rOoI9R8Z2cZjDQT/7aD2kKrXZNbEZdIPrRojg6+5F9wf
bf011q+S71b7q9hYFpgGeN7y1N//2dreB+vHBinZxn2FWIjkH0Nz6raDX6L2
gpKfEc9qADH30HhMJ/AOYnY5xzxbxObkwM2J1OcS9f0KflDBNu0Oag/WvjGh
/Z9a4LuSPyiZP/e6xq+jfX8UbOMTfzg+MX8SbuWCqmNSxLYPyTlWNRSbN2eM
lvVuSOxYLzYl9uOYqnEy8LJLpauncc7R2H/kjF8NxX5S+yswk9gxdjCDvXOO
vQPucmxDjV9KHAOEa3VgzrHBg2LP3cMlj5Q+Hzt2A6cEbskFsbmucDbB6+Fg
vqHz7hKYm0kcl3guGCPxyV8ic1fgUNZO/f4Te61DzJJnGztWCQYNFv2J9O8G
juGdin+rPs/lHXOFC1wr9rv6SsnrN5g1XJots+Of1jkHlTJOauQ4E1g5+/oT
K1CfUZLnlszH6oZ9ynoAXiPdVrHjbS+XzP8C52aueS1vfi5z9E+hOXPM3duo
fT++u/pcFZnfXCb2hc2iZ9Nefc7WsddiT8eOnxH/y4WOf30p+TTWLL5zyX30
/+mSdy7ZXyLmAi8ZztDmWEzoOHU9yefiu0l/VckYSIo9Evvd5h3HPqmv7bzA
tiHxd2I6D4SeY5iPX9f+00LzZ86LHU/Ct7xDW0Nsr9jxt7dLjof1i/yt8c2x
9r4Re33bO7R9PT6zzdcU7W9NShzrpc+tib9Rjj8NXEb9b0/MhQYTvi0x3gkf
5YrAfNb1xEh0LydovB3VPj51bO8ubY0S24hx2RwDbMczJX8Tmk+5jeQ12Xzx
mMb7MrZNPLHkNQ9bGRvih4rtI2yLm2Lzf5nT4IP8gM2i8+8r+SnJFW1n5cwR
gCsAD4q5/f7AfL21PGPJswKvFyfGjj3A4YPLd3zsuQKb4nadbwOYUs42at/Y
9uprgTkoyPBv4a6yhhF/LqfmGrOGwffBB9gtMr8R3wAMbKzazQNjY9XY9tML
JfO/WOPvLtnnZ+3fPrb9P79kfuMOkm9g7pJ8fNXfGN8a3wy2M9/LozlzxI5Q
+xbuMVi6fs/82Pj2zJx90uFg97G5lq2wQ2qYZwbf7G7me96DxPgEOMVbVdtc
Z4XG+7DF4IzCHWVNxiaD34y9PiqbA8g/gP84LLB9+l1irORWXc9OfHsa74/Q
HMydE3N24O5UQ/Nb4EvM0Njb6Jj/yl6fuka2z8Emamr8NgVzeD8m5hkaC+MY
+BVwOOFygvHDr4YvekzeMeGXda5TQ8/lzOkzQ3+vj4SeE5kb+R7B4cDjErV/
zvBMYvDE4onBE+djDutUNeZJ7K5hwVgozx9fEAziALU7Vs0XhzfOfAJHjbgD
8Qe4a3DUiPsQ/4G7divrlc7fWcdfGzlnAJ8avkqSOB+ilfr21/X2InaobW/J
vfC51a5WvNbD+YefQ07B+sA5CXAwyYMgH+KmwPHfWcSH1L637PUPnix82RsD
x4/hvx+W9zv7TGzMAL8S/xIsAY4Qaww2xdjYc9eT6l9f+kLFnFZ4NPBpro7M
KYNbBl9udGROKz4U/u2oyJxZ4ujE0w9NzV/qljdn4oTU7yPvHe9fjvmvag4V
+GYNxmb+CJ0PM1vX8xD4e972ITkEt0u3S85rNGs19gJxDeIbIddaNYcHn2U7
7r22r0PnszzG/KH78at0r2rfZdL1rzqH5XTWV7X7aPs0tL9zP7HcyL7f8v/h
vRXzSVmfiY83qZovXqPi/Bb48OPy9tmIzfDO8O7AL2dt2in2s4NzAvcEjjxc
+aN1vvfLxuuIjYOxfJY6jrsw8BpIfg/v82DpqrzTaj+q37Nbwe9Ay9jzL74c
/lAbtf+NPHf1yOYz+NNH5r0mPxd7zWRNh4PCWpqrYdwc/PyT1GsKHJjDMntw
UGSuDWsufJXbdU2XZng23zJ8hr7ZekbuwwxtfUrmEHyu9qf40GrPLJrvznz3
gn5vqnEWVx2Phu+r/zb/s3/ifKB/mT+k31Hb4MC+GPz6GtiUkl8sOb+ju65h
Tclz/qe61hFVYwRvSv5ccr3U8RPiKFPV9yLpv1d7qfSnx37neHfwe3kXL9S2
sWQb6hsd3zFx/PhQjfGi2h+Htv17B+Zfd8QmlHyQ9M/BHcEmAvfQb2qNvSf5
aDAsyftJPq/qnKoFOmyVxh8ueW2GaexS9Xp5S845P98nfoePV/uhkt/tSzOb
inyn/bHdqo7Zwrf+VX0H8j6ExmjqJvb34H7EofOT4CPi2+HjjcOOip2rwDsO
dxoOIFzApdn9HBbZdvpa257EEyLbThsz+/5B/bbXQnMmT9LxYezcNWKKl4CJ
VMzLggN1E9iz9H8HtnEvS/xN8m3Cn2+s9rZV44fgiOQrkW8FH33bwHwhOKXw
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
8a1xDs5FPVV8P2qgUgv1/wBkh24F
            "]], Polygon3DBox[CompressedData["
1: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
y3qsP1buekOsG3wHXf8LclqdwQ==
            "]], 
           Polygon3DBox[{{3322, 1603, 1499, 1498, 1846, 2786}, {2573, 1581, 
            1789, 3359, 2471, 2472}, {2802, 1857, 1498, 1499, 1858, 2803}, {
            2483, 2482, 3361, 1801, 1802, 3362}, {2579, 1585, 1785, 3357, 
            2480, 2481}, {2716, 1746, 1434, 1435, 1747, 2717}, {2474, 2473, 
            3355, 1778, 1779, 3356}, {3311, 1551, 1435, 1434, 1736, 2706}, {
            3309, 1546, 1424, 1423, 1715, 2680}, {3319, 1598, 1489, 1488, 
            1828, 2773}, {2580, 1586, 1786, 3358, 2482, 2483}, {2574, 1582, 
            1777, 3354, 2473, 2474}}]},
          Annotation[#, "Charting`Private`Tag$51782#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0klIlVEYxvHXscGhTAo1vBaBbppoEQQF1SIEW9UmykCKFrUwJK17LeKG
i8LW5jKwtGidCmUTibRIieZMrbatbLABgvodgnu///M857zvd76Xs/bIyX3t
BRFx37+7KCLpGtxEnMUTSyKWyzL0blkH38Cfxo2pBndgHvfiwFLavkNJl0fM
F0f081dTL9m9sohm+pZszNqgupz8IT9KX6LvYD8+wiGcwGHcora1MOKJunG+
Xf88XSl7p+cLWSdW8E/l8yURL2VNeFT2BV/xX/E1fsM3+B3f4v5FvjX1omvT
d8ur+Gk9p2WNiyO66GrZpP4L1t/LV/I/6Bn6J87iL5zD3/gBD+hdY9+M+o/p
THpl6TrZHH5KM8VafhY/e/9z2Sm6LNXxj/lneBvHcRAf4JWUm/uUGV6kh8zl
j/ON8SPqR+zJyvfQN2R3rV2THZf18X30QfoytuB53I453IAl5r7OGW6qy/C9
+k/Ru9T26LlMVo87+evyHt9cKVuBa9RdwIp0R7A89Ucto03/Y7Sjx2HzabBX
FHUeVfIMn9e3mzauWE1v844B78jJlMRWPkuX0mfQL7o8itPssCjdQ4ub7TvH
aBl/Fa6i1xf8v/P/AN9DYF8=
        "],
        VertexColors->None]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVz7kuhVEUBeB1JSTcS+cBxFwo6Ch0xqh4A4npDv+t9TQ8gYcxvABBpSaG
xDwWQuJTfDl7r3VOcXqWm4tFKckS1fakUU4KVjuSBed3a7JiHmG6M7l3p8aM
+cFZZ023zpbs0R7vyuZZNuRPspKst5L0cSkfpap71rXoxuxX7On7qelO5We8
uDPu3NcP6IYYpO7OuXzTfMeFfsLekBccybZlr94fmg844Vf29v9Xru03tHUl
7/aCKf0ct/IPe5OKfZ5Pc7d80vzD8f9bhtnlS7/j/AOBgzBO
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVz0kyQ1EYxfFPhSjdIkw1yQJkB0QTcwML8PLeS4TEmLIFG9CNGaqiCguI
ZmIDbCB6fm/wr3POd757b93pzaSxNRQRG0jHIirjEa+TEd2piKZcKkdktGre
xL75QE74GXtzmEUm3+nqExF9vNtJzRL+BE0s6nOzZf4BH3aOaYpT3I5GtPUr
/CM+9S35wLlMvvBOTktYRVf+srPAX9lp0UuzNh3GGnryG+71HXdtmx3JHbor
N+gTyv55RndwXnTF/fq+c+v8M769VaPzzldRQc/OwM4N/6O/pjV5CS/8r1mO
uvxX/AeH/J5zgRH3/QNXETZl
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0Esug3EYhfG3bnXrlLEdaL+6JrUEREolZhbASLWqbkE6wNBEExugtQMS
JBbCCEmHhn7f4Mk55/m/Xwed2t5d28lERAXVkYjv8YitXMSePj0acYQfrsE1
9byelwV5n3Ujy2MRx9yBfEBB78oP36zLR2zghG/IDjLelnHGVewnbOLUTvxm
EZ/eE3sovZcl+cxV9T4s2S92Tf9139LP9SLu7DYOuUVccBP2TIqelQn/hTl9
Fpf8pJxPtz4se96v5StucIUFbgW3er+7ff/Vn/1mv2OAq3Gr3KBe1/8BEzEq
RA==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzjtSAlEUhOFjIsyAuYYmugQEtdyAiWa+EhbA5PJICKRAGF+EpCZGQMBG
zI1NQKtcgN8EXd3/6XvuvfvN7LK1FRHndJ9EPKQRpUrEuhox2okY4Lpc4zN+
peuaH9DIrIPndCQv+aH5Jy3kaxqbN+wdU13O6b0UcaObyI/ONvg2tb0/xP3i
D8XdeIyf5TIldj7wi7xx30ROzV7xD85xBb/hX/yEd4u3ccr/ys7whPboS3+i
O5Vv7a34Ha9SJn/rp/oznPCu/1wUb8o9+R99SyW8
        "],
        VertexColors->None], 
       Line3DBox[{2432, 2697, 2824, 2698, 3473, 2431, 2941, 2621, 2700, 2622, 
        2997, 3541, 3370, 3032, 2942, 2998, 2623, 2996, 2624, 3531, 2943, 
        2433, 2944, 2625, 2704, 3420, 3330, 2434, 1558, 2435, 3474, 2712, 
        2713, 2436, 3475, 2714, 2715, 2437, 3476, 2716, 2717, 3500, 2438, 
        2718, 2719, 3477, 2439, 3314, 3421, 2440, 2720, 3083, 3422, 3341, 
        2441, 3132, 3223, 1655, 3134, 2626, 3000, 2945, 3033, 2946, 3001, 
        2627, 2880, 2628, 2442, 3577, 3271, 3272, 2443},
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzjlOQmEUhuFDMBpUrhZuwJWohTiUhl5kAbgBxcKJwlnRzikYZ402JC7A
RJYAkrABCymtfCjevOf7/nNy73hxeaGUiog8qpmI98GIr+GIN27wXzbiRF8Z
ipjXffAcl/Xb5ja2MKu7tN/V96FtvsCx20QuIrF3Ze9INyYv4UU+lAfwbJ5y
88QH8qv3R/OK7oFX+Ue3xmV84l7f4jtuciqJ2Hd7K0/KnX7f5D3dja7gfhS7
8ggvoqbfkSfspeVfnJtn9Jv++Rtnug3O6eo8zevcwqm3Zm9Hl+1lvsY/hPcy
fQ==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzksug3EUhvFjhhJ6+8rQuKtQLWrYxAZcZ6xDzat11yZmLgnLsAETl0qo
gZbagJ/Bk/c9zzlf/t/c2m5tZyQiVtEZiximIn5Rwg/KoxFtfqB/4248Yl82
JyPq8sLuS/ZRwC1fwDmfyG0k/953Z1zevIU8d8OdclnzJnLcykREFSd8i1vS
l5G1+0QPj/yx/bv+gQwW3TT86xFf1itI89duMzjkL703zV2Z02hxs3ID93ZN
84y+jnl3b+jigC9yD9gzd9y+yhc07Pr8k/6MKSx4u4Q2/gDr/jEn
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzrsuA2AYxvG3SSOhJ9RhMWidRovEBZioQ9KiEtXBBTDgClwCUztKRWzS
alAiks5uQmIxCrOf4Z/nff/P9335CofH5aNERFTRGoz4SUX8YhWldEQ/E5Ea
irgyr2MDz/a6vqFLm5+4E5zixd7kM/LGe1057Wyby5pvuSlzGQU+xz2494Fk
NmKFL/Kb9mHdK5a4T2xxM7qKHOFb8pvfljuY1e3KxYGIN33VvIc5vuPcKHdu
f5Tz3D2XN9/5U09W7GOybS/+v4s15/bdGedr8sL+zl/KPnfATcieXOa/cGZe
0NflpO5a/gGM4Cqz
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzrkuhGEUgOGjs4yeGTOT6S2VRKK0Tic6KlFZEtsVIHT2axAidjH2Jajd
AC3NkGgk1sKjeHLmvOeb5M/1j3aPlEREH0dlEVcVEdd08stdZUQDBbdl+wod
LHGrL5qHbt/mD+3c6DkO9Iw5TFY/K4/Y09L2ITLaibarNdnfmE1EzJB26zUn
6GHHmzr3B6btr+41fDFuz5dGbHtTtE/ZX8wUXX6PUfS/Rra8edIntWczSfP/
t3Kqbbof+6ZqfV9LsaElzUGq9IL7upa1D9CmffLBml6r3bNgb2WeOVbd6vVH
3u0tXHDOJX+SPTm3
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0ElOAmEQhuFSEhMRXCsOwE5P4DkkCu4YDqBXcaOocWmC81JxYwSD8xQP
oBtvAC6NPL1481Z9Vd3/311sbJTWRyJiBZfjEb10xEcm4gt9jE5G3Mm2JiK2
ca+u8h8G5o/ZiBt1Ezt4MB/IDs2m1C2+5gWzC/m0uu2cgnoVOf2ynQOk5SWe
kT1hP3k3H8lO8INZ/Sf/m53yGY7xjV+k3PfZThdZ/SaWxiIyfCsre26Or5z1
whX9PL8m32WnhjXZm77mznnu8C662MO7rM4FPk/OtV/nBhblxeQfYgiB5DOX

        "],
        VertexColors->None], 
       Line3DBox[{2490, 3279, 3318, 3582, 3281, 2635, 2891, 2914, 3011, 3455, 
        3368, 2770, 2971, 3012, 2636, 3171, 3549, 3087, 3088, 3086, 2761, 
        3098, 3552, 2594, 2491, 3417, 2595, 2492, 3485, 2771, 2596, 2858, 
        3511, 2772, 2597, 2859, 3512, 2773, 3319, 3486, 2860, 2774, 3320, 
        3487, 2493, 1600, 2494, 2637, 2776, 3530, 2915, 2916, 2775, 2972, 
        3333, 3542, 3015, 2917, 3013, 2918, 2777, 2973, 3014, 2638, 2779, 
        2919, 2920, 2778, 3488, 2769, 2861, 2598, 2495},
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzrkuhGEAheGjshdoNSqGBDegcQPDcAWCCSbcAtcgWomlR6JBYyvEFCod
YywxsVyApfEo3pxz3u/78v99Myul5aYkRZy1Jt8dSaUzOdXv25Jbu44tbhw1
bs/eR1Ffl2P8Kqp6Fyb4HvnVkmzIbtScP/C9er8cbk+OuLp+wA3IEe6Ye9QL
GLVP7Cf9x51t/dx/Pdsv+OV2uAtu0m78v7PXsODtqz3nTknOy8PmZFYuOnvj
NuUVbtyfsqv6Eq5RwTtXdr/hfFr/xCA+sMvdySFc+v4fnt80FA==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzrsuw3EYxvHXoM4mm9DYza7AFUgc2jqlk1PrHgzmVgw2p3AB6hZa2qIS
wmyQdEFCYiHq8x++eZ73ed7fYSK/PVPsiogMan0Rv4MRhaGIKv/AP+ER3cMR
0/Iredm8jz38yG7otfyAzvZHjNCiPIV1fhS7GMcGeuQvGOPn7G/SNOruqNBL
fOvndRf8Am3ozmTv/Aea5nPzJ/+FavIPWYZ/RRZbzrblU7jVHQ7YQU7XxiLu
k052hA6OcYclXZ0+63vR4k8Q7jylBVpKRazRZbt/yTlv7NhdMb9hFS1ZVjaZ
vMX/A+HCOfs=
        "],
        VertexColors->None], 
       Line3DBox[{2524, 2659, 2658, 3459, 2523, 1618, 2522, 2657, 2807, 3495, 
        3337, 2521, 978, 3442, 2806, 785, 2520, 784, 2080, 876, 783, 983, 
        2140},
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzEkuAwAYhuGvZjWcQQ17iRp2Ym/VI4h1LdDWCXAJK7VwhrqFRCSK1ixO
oJSnizff9Ocv7exVqoUk2/icTJpTyQX6xeSc9saTD/2ufDSTFPEuN2jwxi/S
Ojbc/7p71S3INazrfnQvumX5DqfTySjWBv9tz7ZL/bDuBCNYtTXoFer4sj+5
K/DHGELZTY22cD2RdO3f/q3ot9y3cGvr6Du0ixtkNtm0PeoP6Z/ugT/g+/w9
v8TvDzb/2vLZWDJnm0cJVfwDWWYwBg==
        "],
        VertexColors->None], 
       Line3DBox[{2866, 2808, 2809, 3496, 2513, 3325, 3439, 2514, 3288, 3440, 
        3392, 2515, 1359, 2865, 3441, 966, 2516, 771, 2077, 867, 772, 979, 
        773, 1686, 2800, 774, 2517, 3537, 776, 2801, 777, 2518, 3538, 778, 
        2804, 779, 3497, 2519, 781, 2805, 782},
        VertexColors->None]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVz61Lg1EYhvFn4NfAbWJfMBgNWkzOOFAsgrBk0DlN82sLgqA4WPMvMCji
BDfb4qJR1hQxGGwGQRTB4AR/CxfX89z3OeflnVjbXi4nIqKA/cGIHvKpiAqv
DkXcYgB1WV02PRJRsp/w+XBEjS94hh85yWV9mh/cuZJlzA2e5Wce46oz9/ou
38jGZU2+9I1TcyIZ8ak/0JfkWW7p1mUf5km07Vv2P/MUzswd2aF51P0UMviW
p/lOt+vtaxw5U+QNvOib/f/CO/bQQs2ZTT7Wz7mfw5M35vlH/tv/Nuede5Xv
2Bd0i1iSvckqshXzl/kfC+0wzg==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVz71LgmEUhvFTYF/U4OAqNORWS7jVfyANgUEgCBFkixJis4FLcxDYlkIu
QUNhS1NENIiz4OLqEBQtOST9HC7u+zrnfZ6Hd/2osl+ei4gcaomI9kLE4WLE
n95YiziX9aWIovmFbNq9m9/ITd6X8/LEfkXe8g/7Vb2lD+Q2Gqj45hV35h1c
u7swe8MshTYv8qGexj0/5l96Bk/8lH/rW3jUX8ymehZd/saT7t7hI96b/Yde
8v4vJhiYVWXZ/tLuQe86s7Ec8Sw/eR5n9rv8Cnu+GztXMzvQf/R/vigtYA==

        "],
        VertexColors->None], 
       Line3DBox[{1399, 1700, 1882, 1701, 3400, 1704, 1986, 1632, 1709, 1633, 
        2052, 3403, 1987, 1710, 1999, 2053, 1640, 2059, 1641, 3406, 2000, 
        1721, 2006, 1648, 1731, 3468, 1649, 1431, 1558, 1444, 3424, 1756, 
        1757, 1895, 3501, 1758, 1759, 1905, 3505, 1778, 1779, 3410, 1909, 
        1791, 1792, 3413, 1477, 1597, 3417, 1485, 1838, 2153, 3550, 1839, 
        2164, 2165, 3553, 1674, 2224, 1675, 2076, 2024, 1854, 2029, 2077, 
        1684, 1940, 1685, 2376, 3584, 2374, 2375, 1524},
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzj0vA2AUxfFLtV4SHdWkGl+gvkFHEgbt2KSSmpCQGMTYoTUIIQYshhqI
RcRGjawV30Cri4WpnfsznPzPPc95bm6uulvcGYmINTpIRtymIsrjEXe4PxHR
nY64599kVUzINvDd/IifuIWH8p7uNt/gK/IX/kjWwiu723hu/sBTneRkxBd/
xndw058H710+6+0b53FP/iTP8cvUl6/jACs4lnarzig17UrglPyGn+Ov/c1i
2w15rNGzbBFn9DJ0bNdANsuf8D/eCvRLF+YFuy7xz1ynV91V3SV+5f8uLNEQ
xU0tDA==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzr0vg3EUhuHzDlUGIjax6CK18gcYrRhMJpYmEsa2YhGDGFhUReJrMUt1
kPhqSKkYlIShs8Rg0sTcuAx37vM87/mdvJn55ZmlJCJmUUxFZLsjRjGXjihw
Hp+9ER0uYgVnXREN3zf0jzzUE3Gnv8emXNNX7Gy7V+ct+YH35VfekRfsvZlb
3kx5n/RFTHNO/6RrYNFc5j382t3lEp7x7cYxnyCxd8SH+NLn5RdzEwPmA12K
+90f5lVc6DLc9E9jvIZL3Ti3dBN8Kq/zuTsVVPHz/9/6Nk/iWneFEbff+QNl
/S3fYFD/B6JgNZo=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwNzr8rxHEcx/H3lR8nGbiVgQ7/gKwYDJQb/AMik8Iq3KKkLFLkx0oWox8p
kcJ13KJL5FBGhcWVG91jeH6fn/fr9Xl/+rZPzI7OJCJiHPO1PsmIBJbrIxb5
oiligbPIy+6wggIudffc2hBxrb/BqvlKflQXsea9HI/JDmV5511ZkTfMk/JH
55K9V7zjR/7GU7oct3n7lqfNffyi/+B+VOzucNKdbS5gCJ8YRo2dfW7Ul+3t
Oc/JRvgLGaTMKf0g/t1p4WZ0yLM4k6X5wX/38BLOZb1ckg3wgXmdT7x3jFP8
movyMm+igj90e/tJ/6175i1ZJ6fRhSqymjuO
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwNzb8rxHEcx/HXKYeBjeG2u8GghNv8E3JOkUG5yCCubrFhUiZls5gN1ClX
isHKLPcvKJH8iCw8hlfP9+v5+vb5lhvNua1Ckprs9CarA0mhmBSHkl19Te/o
4zgh34PJJB7Y/vqTqnvTPoXv+pv9A4/sLX7F/SlfcsIt2x/5pl7CU67Bdd09
3qhgm1vnntxjcqVv6L/uqtTdt9xwXzIi09wCd8ftuUe5ttxzF/jA1/1v33aG
l9w5dnAen7GEXd8f+qbsvuYqeIOvuCgt+7F9hqvhi3e3uVl9Sf/R/wErQi4c

        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwN0KtLg3EYhuFXPE6wTeZYMikoFpvdIAgD/cDB2oKH8ikoOBRFLYonZtU/
YE2s2lYtNrGteAAVT81D8Ao39/M8735fWH9lcSptiYgyttojZjMRc5joiZjn
BQxhBMOYtE9zgveuiE98oGj/4V+Mui13RFTkpn1FPpBTXMv7fIhV+Y+rfMxL
uJNbvW/Dl7drekle5xlOOyMu7M/6C470hp7hbiRyjTfccrzJWe9K9rrv5233
6JW33QbkHb51z9ke9EE8ok/fdcvzjfueXJCf3MbwinO9Zr/iE77kcXvd70/1
onzGb/7bqq0sf8v/J4AylA==
        "],
        VertexColors->None], 
       Line3DBox[{1409, 1706, 1707, 3402, 1410, 1543, 3405, 1418, 2356, 3576, 
        2357, 2358, 1331, 1890, 3561, 1159, 1931, 722, 3001, 833, 723, 834, 
        729, 3454, 1769, 731, 1773, 3480, 734, 1787, 735, 1934, 3522, 738, 
        1803, 740, 3534, 1804, 745, 1816, 746, 3010, 846, 753, 854, 3014, 754,
         1834, 760, 1849, 3559, 1128, 1852, 1682, 3458, 1860, 1683, 1508, 
        1618, 1519, 3449, 1695, 1696, 1880},
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzz8vA1AUh+FjUJXoIrHQhUiahp3qQspSJHSRmMQsOpiQtEMnIelgbVOD
gS/QfgArC7tNk4a1g7bEY3jz+3POvbl3/rhcOh2LiF3UxiMqyYgqTrAxGbGO
USriSG4nIq74Dr22O0X35Ft+mt/nW/yKM998ga4ihzUMdHlanoj4sn9DN93b
xRbO5Be6YOeZ1uUnZ7b5HnZwrnuji3Ze6af5hS6FWTzqZsz6+gf+UjeHLO50
aVrFEvK41y3Td+8uetOh/ME3+Brf/P+X+RAjHOAXP8i4/w9vNyqe
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzj0sg2EYheGjCdqhNRhNYjSatCGRUBKx6FSNxYgSq9nG4idiEGFjNFpo
ExOzQSRsRjGL4DLcOefcz5uvHV7ZXNzoSbKAz96k0ZesFZNVnOnv3Ly8LCf1
/uTNnrHb9pM+pa/rD3pV/9GnS0kLS+jyY3yhkjTtAd+o4Ia/93bUrcSf+r1v
fVbOoY4X92vvRvhD+wAf+qR8/e/uE/LKmyH+GVX7mK/JcZy7DfKP2Oc78ogr
y137Tt5ijyvKFrejF/RtfVlu2V848b8v7K7s4Bd/qr4qjQ==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0D8ohAEcxvGfdLjhLnKZUGJkO1JMBpPCZWS4k9UJm2QyGqVsxyJ/yyQb
mzD60/l3GK5sZovPOzw9v+d5vu/71ttTKhcWGyKiSL+piJmmiEJzxEomoi5P
yGV3zT3uLqYjUtmIeV6iR/2Yfs5dwQ14drrFO2iKbu0j9g73mW0D08W/aVL3
xa8xecyNLac71bXSJ/3INX6J2bX343p960S3Sh9Ux7zze/s5rg/TjTnWLdFb
wmFe+R3mENOJadcd6aruF75jG9VV3RVMTt8mHyTPuR/sz+5h3RPfxmT1GXlf
XrdfyYPyEOVpC5PWrdku+AJt6hr5cvJP9X98Vt6jfxIfNgI=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVz78rxHEcx/G3dOdHYVHqFl0GhdzEqNwtl0XpIj+KlE3nD1BGTJKNK8PV
DUTqykYsXDayiE0ms6ubLo/v8Or1eT2f38+nvtnNnYVyR0QsSTOl0xHr3RGl
rohVfdkXsaJ/uXlu2XmOa8oF96e/uSK3yJ3YT3hef+EFvGpP2W/2jH1u79kj
8oxNY539EWs9EYPJd955lXsux9Wc03hB5+XT/VtulJu1W7qiT/Ezfc0NYy/O
2+7d4D/JO/iQ3sKusPfkHjagj+wNvOF8jPXqQ+xO57wzKQd4ym7gFd/WnSfw
cdnl2vLBjdn7/KN+kIz/+gfjVTAZ
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzqFLQ2EUhvGz4J0iwqJRgzBNtkVhs4gwRdwwOEHFqv/ArYO1sbA2MAhG
09CVWS1aJjaLboJgsA1N+rvh4Zz3eb/vu3f55GLvPBcR+5jORBwkEbV8xNFs
RAOvCxFf/C4/5Lfxi0PdjznWbekG9go+nR/o7rK7uk3dFVfSjeQN+VJekR/k
kjx19hR57p7r69f5MfeBCb65W12Rf5ffss5+xt/wS/ZO9sZcRIJrbpHr6l/M
nlww2/Kx79SdqaHDz/NleyDVD+Xn7H/R0idy4u2e3Lc/mY9IdU3n/8w1d1ex
gyoa+n91bTCH
        "],
        VertexColors->None], 
       Line3DBox[{1527, 1625, 1878, 1869, 3446, 1516, 1983, 1982, 1868, 1688, 
        2080, 2042, 2135, 1978, 2079, 1977, 2078, 3536, 1678, 2026, 1501, 
        1971, 1970, 3457, 1848, 1669, 1491, 1600, 1480, 3414, 1592, 1800, 
        1471, 3509, 1585, 1785, 3434, 1463, 1577, 1767, 3430, 1455, 1569, 
        1766, 3425, 1447, 1561, 3421, 1437, 1553, 3472, 2157, 1737, 2364, 
        2386, 2184, 2183, 3557, 2185, 1644, 2056, 2004, 2096, 1950, 3539, 
        2055, 1949, 1928, 1636, 1405, 3581, 1536, 2344, 2400},
        VertexColors->None]}, {}, {}}},
    VertexColors->CompressedData["
1:eJztvWdQlUvTNgpGzBkVc06YUTHRpm0OmAPmLGLOCXNEUcyiYs4JFTMqWZQo
WZQcFrKWqBtz4qy39nX71LfqXB/Pvcv3z6nza1VNTfXqu6enp7un+5oaE+cM
mpLHyMioQHEjo7z637z7ylzutzVanjmem76q30Mps3pH4Va3UuTXk6COGzq/
lPQRvWxqrHSXHacXSPkqyaLr/CnKcW2IFO90ZutsuwhZfifv47pnX0uLkukT
lxpHS7NGjst6vE+V1IklF0feSZWIYhaDmlRMkfRhdX9uf6yRjrvHlDyzI1q8
zcy2b274Wpa82lDpRC2N1PXoc9g6M1QSRtX7NvmKVtbfybH5ZpMmwce69WnQ
NFjOfY6f5WCmE7cxrdvkHZ0qzYZZDC/ZPYjO9wX9xaBfG/RjwU8G+GkBfizB
vwX4jwf/yvfWwPfa43u/QD4ayGcn5KNWnperLqvXuVKoPCtqZrcn6YVkTFts
XP/za6n9l0uzHanxsti5Y78fBTTSM3B30drb48W2ZI+Ly8tkSomhgzKKOqdL
t4cPS7fvECp2xoP/npmgE5MiLTbOO5cgRs/9Gg5zeirl14XG2NbWSb/MqkMn
DAqX46fPnt7s5SOzK1wLePpEK3YLqq68uTNA9prlt+oU6CUVS80ZOMJVK+Y3
GvmUuOkvvb6MMa/U14vONwX9HqDvAvoKP18K/8PPt9B/+JkN/ouC/y7gvwm+
dym+tx2+9yrkEwP5aCAftfrJ5BkP/dkI/QmB/ow8klprnLVOsksedFq4I1Ja
vrww2Omkr2RU+OpRdbtWUmpG1fjW3UeqWnYcVmGTp/xVY0Szg/P08vHo0jhP
YU/x6N//R8WPHnL8Xj7rUo5a0XU1Tola7yPmLc9se7jLU541enf6lYtWLn4f
EH1tl59Mrzph6jadJ53P6DN+RoD/DPDfFPwn4nvX4nuf4XuZ/NXud6afTJ47
ljhstFuslehJjR3eHveUg/ctf6wuweUTdvlzeeOGOmnYuMizz87hUvzcVjfj
BB9ZMKq0p819ndhPcDmyMitW8p6fUvzZoydyp3awX+MUnXw93cpKczBOdgzZ
GZHi7y8LMX8L5hfAfIV+K9AvBfqMH8Y/kz/Tf7X2k+13pg+M/7nV9+112aST
Yb4rM7r1j5HHXUZtLn3HT1wOlMy3OFInl8p2fnd1R7IkjNsY/eh0gHQObjG8
xBGtfJrWtEebFWnydHbZkW8HBItX46NdhgRmSv+Uc+9/lk6X3r1T7vZdGCJW
mP8F84MwX6F/BfSTQH8e+BkPfnzAD+OffS+zP2rPI2Y/2X5k+snkmeWXHmWs
t2cblr+YGns1XTa9b9O3m3WoJLWzsTv4MF1SlrrXHnBXI8X7pW9v/StMEu5m
J7ZalSZhq672XeGnkba9HtgvXxghCZifivklMV8H+ptAfzPoK/zcAD9p4Ifp
P/texf53gXwOQz5qz3d2vjB7yPY7008mz50BYc0DspJlRFDNWiPuaWSQg8XC
1dHR4jK487zvl5Pk07XZPdtu08iGXzadLExiZQfmD8f8IZj/CvTTQL806LcH
P1/BTwj4UeyPI/g3Af/se2dBPiMgn12Qj1p/iZ3vbH8x+8n2O9NPJs/E2bNq
3bRNlBZZG7/ZjdKIw/bTZgHtX8kRg/mbMP8V6IeDfkfQ9wA/1uCnP/hR+M9/
5h/+d4P/QHyvG77XFt+ryKcm5NMD8lHrf6rVZ3YeMfvJ9jvTTyZPB4P5wzH/
pQH9Mgb6/B38PAc/i8D/HvBf5A/rM/Pnmf+Zm302tG/sPGL2k+13pp9Mnpmg
vxn0txjY55sG9jkc/Av4N83FPpeDfCwhn4OQj9r4iJ2nav0Ndr6z84jZT7bf
mX4yec4HP7bgxx/8KPbhEfi3A//p+N4X+N7K+N6ZkM87yOcL5KM23mT+IfMn
/63/bKj/7Dxi9pPtd6afTJ65+c/x+N5G+N75kE9hyEcgH7XxO4t3WHzE5P+n
4kF2HqmNB5l+Mnmm4nuX4nt98L1WkM9yyKe+QTz43+ZDWPzO5M/0n9kf5n+y
84Wd72w+s59svzP9ZPK8AfnoIJ90yOdP5Zf+/3zdv8vXbfD7UqHLuVhZM8A+
o4iLu/QZVvqkxbhkcd6zVufhHiKjmg6ZZL45RmLbDjJOLJSpev6CeTnbra21
cjMk+Y3jjTTp6Fp/9Lb7wTJ687Rhckgn0481zujd6YUU/7tIy/ymT2Rx/8eJ
xx/o97XJy9hrZZ5Jh83JG/y3esn7C/fGL12uFa8Nw25MquYl05esrONSx1O2
ZBQ9FzlHKxY/JrTME+4hbYbt7bFC60HH34HOXdCZCjrK/wbjf9vhfxn/g5pH
BGvb6qR6wp35PjMipKlDi4CazXwpn3s7zZhVcLNWjFa8qJRwzluOrTlSq5ut
/vxqXuXy1Bit+DxrdSZxf5A0k7mNStTzpuMKncKgcwJ02HcxOTM+uyy0qn/4
vFa6W1sPa+X5RGoZf3geVMNLdBOc25ebrROjAV2cl5eIlnYhB8rlaef3e/4o
zK+L+bnJ2XB9mXzY/zI5KPR9Qd8yF/3JTf4vMG6BcfZdavXwT+ntv+X/CuhM
yUX/mZyzsC7lsC5dDdalLOafymVd2HcxvWL/2w3zJ2N+AwM9NPzekdgX/bEv
8mFfMH6YHJic2TiTD+NzIOxMUdiZerAzy2GXrsAuWcAuqZXzv9VDpj+G/8vk
zPg/hnNkxn957qid7zw59OyG2vGyr2R02bMvHsjMbHMrm8REqTt3xvqfX59L
k1PPDj/N9pUPfb8kd32XTscZnfbl78x8kBwmveKqdCng5iXnV5ysObJuusyt
//fZH0s0Mmx8yq0rDhrxTZ85evvYMHE86jTNc4BOGj09d6FdQopse9bq9qyI
QGl32uGHka1OUi8MeXj5hP6cjrt2aNyRQInvsffy4SSdFGjVc0DBRfFSwWxl
b9fKT2WIh+utrdt14mpn37Lh4RhJzdfFqmOkn4Q9Shu04GamxDf4OaRRnXRp
UvvFausD+nMa6zIE61IA62K0/efwz6+1sut+1yehD0IkZGadu6U3e0uL2CKj
D+Ro5UitsVMsD6dKllmHtGOrg8TmVeNZibe0kjovZNrbcU+lUOHqL4fbelH6
bL7yXb8s/vmusviuHId/+FkJfgLBD1t3ti5q12vo6eE/br7QyabQjIpzJidJ
r2URO2Z5PZOxdy7N6x+vk9FN1s2Or5Eo3bXl30UGPpXQucXjqhTSST+PXs7n
fZ7Ll5LLvUc095G6JSo9aB6slZhd/qXShweKy/FeU7u91fvh3ts7vNqplccx
S3++euAj9iabK2xz9pTwW2M6mc7Xiv3kvyKnVPSUdRnrSwZ89qDjOWd8o5rY
a6VZj35VZ+7xknVHG2963dZT7laxXZtaTicLFnX80Xt7mJT36n6yyRIfSuce
5i/B/IqYz/hk/8voK/owEvpQCPpQG/LxgnwOQz7Mn2TyZ+s1GvqWBX0rDH1j
45ahB47dnauV7D6eU+9keUjsK5d3g995SIOpqSecF2mlwdrdjaw3e8rpmKo3
8hXxlPp7CmWE6P38ArIhXjPJX2rXM37RxcpLNq5fGDIyQSvFb5lsKzU3WC63
2dq+aD9vGefobLTnlU4c6mxpLIcTxTJ8VKI0eCYtUlzWdvuplZJdi/9YW+S5
pGxdmrXnnTelz/hkdobZE2Z/mN4yPWfyYXw2x/fmx/cm4nvZ+NApoWfDL+hk
a9aKEcZFU2TL2iL9ypQNpOOKnHdBzu0gZ8WfLAD/oSP8B6afjH9mb5l9ZvuC
7S+mP0wfKn+f/3DIxExZPjC82dzx6RJT6Fzmw3yh0sPV/1n8wgzpUNx2UfUB
+njTtU6hNxuf03Ez0FkJOi9A5w3kVgRyE8hNkfNeyNkKcmbfy/i3gxxuQQ4r
IQd2HrHzhZ13au0V26dq5Wx9d2W/rGrpcupqhw6HfDSSbXMlOeNKuMy3j1xT
eleKlKu3v0OzQI3Ybn9TtUtwFB2fi3FTjNthfOWuEX+7FkmSc3um2h6er5Gp
f99f3q7GS+lr8L+f8L8rDObPwPw5BvRngX4FA32Ixfd2Mfje+vheZT/uwH7c
hv3I5M/OHbX7iK078zeYP8POTbX2h+nDF4dXA3b8TJKzrUtNyL9fI5bGV9LD
Vryg63u3bfcxOfcTxf1WoSvPpmpkx0OncuFXXtJ1/Az650C/Heiz+bMM/ncu
/pet72B8ryO+1wHfO/3EmP6DnbXiPK5E48w8frK75fChj8I96T5l8lfrNzI6
TK+Y/rDzl50jzE6y9WX78Q7W9wHWdxfWl+1Htr5sHfsY/O8X/K+yr1cZ7GtF
bishNzPITe36UjmT9WL+v9q4IAJ2IA52oFEu9p+dv+ycYv5Ds+zrHZduTpWz
mbOsBz/VyLyS97fZHI+Un4tnbjOWFBl2pVykqa9GLsWdcXrYJ1qaGMxfgPlj
oW/7oW8CfauXMCNvx+U6MbtSa/T0K9Ey432lQp+X+NHvagD+K4P/+uD/F+Q2
FXLzh9yU8/ci5LAccmDy3AW/sQ78xk3wG9m6Mz9K7fnCxpk+b4IfVRt+lCv8
KAvsdzPsdw32u1r+B8EPPAI/8BX8wBD4yW3gJ7+Hn7wY/vkQ+Oce8M/Vxkdq
/TF2LjN7rlYPmTyZ/Fm8wMYVOVyFHA5ADsq5EIJzIT/OhU6Id2IQ7yxHvDME
ceIyxImdECey9WXrwuyD2via7V9mb9XaZ2YH2P8yObDvYvJn6zUO8bs14vcO
iN/ZOMvzsHiB8cn8SbXnF5vP7Cc7v5h9YHaV6S2zJ62R1xqFvNYV5LVqIJ8p
yGd+ySWfScdJfob54ezcL/DtvYOrh06yanZ98KjTS3mz4/HwEgncP1TyPKsg
h66QAzunYjD+EuP1MM7kwOSmVj6MH2Ud14D/v8C/Wjkw+oz/qbAPm2AfHGEf
2DjLi9aF/S8C+z8J9p/xE9698bZmu3Si/eY6tHrPFHm3+HCX8N6B0iH/yPJX
o/T7YpVRt66WydJd82byrUkBsmXNhrd2KTqJql0iu2i+OHF/VGFu5V3+9Bxk
8kxrUqyXed/X8mPwqfDdlTQyvX/AC/ugUDF5fHnwTPMM6Vtz7a5l4zVyU/fm
6w9vvb9vMH8G5iv8vAQ/j8APWy8mH8ZPS/iB5+AHzoIfyMZ/GfiTF+BPsrij
uQGdOaDD5jM/NsmAfzvwr6xjHvt/1rEX1rEl/IFy8AfS4A8wv53pIdMfto5M
PiyOZvEX89vz4X/74X9v43/DwOc78PkBfCrnYyzOx4I4H9n3sn3B9JOtL4sT
2TiLR9i6s+9i+4Lta2bP2f8y+bP5zP6zfc30ma0vs0tM/5l9ZvuCyZmNs/iO
xSnMT2b2fzDonAWdRNBh6156Z4222+doJd/QtbZFnnmI48/CmtevPeg9gpKH
KQK5JUNuuzccrLqymk7utzAe26d0uPydXnnupAs+v+l0AZ0PudBhfLLvYvwz
fpRxH4x/wjijo1aeLM5i8mT85EbHUJ6Mf7XyPBhn9u7sy+cyqVTPZa3G+0mT
TsWi9xXWyNq6H7X907XivvxDxTW9QsQp/U3Zsgu8JXVMuVbHV2jFxvpH1Jqu
XvJoWLmWbxt5SsW/0n5Un6eVpSM+fFj43UMyo0JnOP7tIacX5Xfbslw/P/xH
yoQaXuJzr9XEz3U85UClV+uWLdbb20k7V2486SlDN73/4VfCU5quTztdUh/v
3M8o798q1kOKXvdxf6jzkLtjlhd+4KKViumPr+7b7iev72XcCdN6yreIadbl
bmrF8vBi41MmT8Wtx5us0jZeMqbxI89hC7Ry0zyw5qZOnvKj7veck788xP3p
hHGfn2ilzaiOUV33BUjzkfvHtQ3yot/L6HSK9G1gZayT2nmPXj3W67m07nXn
SP8CPjLIIvFw2BqtrHL92ygzzUvKHPw0eXhPTyo3xg+Tm1o5M34Cknr3OPxK
J8NzOnb+fjBREhM9hm2q90z1uqxqndT5/R6tvD23Zcec9r5S/nj7UbGu/1mX
WliX61gXto5jHx92OPdeKwUXvTIrMixUsp806FDxure8L/rq6Sq9nvffP3lA
T38PefayjNFhvZ67nLhaar7oJKzA2tYO1yPEfu/o8X36+lI6ync54buG47vu
N1lSb/8jrczeX/t9jbnP5EPB3ZnZh7yo3JicmRwY/2r/l8mTyeFpsP0Im8Fh
Ypex2WuGm49sqNGoiPvJdLrubP77nu4djjaKl9bXMi+bxjyQlBzH89ZxiXS8
5/ndXyqHxIrT9NRTPfe5y5KeC92q9U+m42H4337435W5/C+bfwxy0EEOWyCH
e9C32tA3rYHd6AJ53oY8mZ4r67IF61IW68L2C5vP9IfZMbbfU2BPBsKeuMOe
PIBe7YBefTHQK0N+ouf+GD5yiVasWqQdjnnoKbufj7d3LMv1Njf9T4X+l4P+
s/F3F2c4rnbVipvxw/yxd/ylX+3kc+/7etF9xP6X8cm+l8mHyUHtuo+G/fmy
8B/7kwX7o1Y/2XcxeTL5MH4YfcU+lwA/GvDD9E3tPvpT+sDoK/w0Bj83ctlH
avcvO0dyO3//Wzug9hxn/LDvZXaGyVlZl0dYlwFYF0afrQvTH7X7+hH8pb7w
l1rn4i+x71L46QF+7oMfpv9sHTvDD2wCP7At/EDmNw4EnQWgUyoXO7wGfqkL
/NLt8Etzsw//7Toyeaq1w+x72XcxOXyBflaAfl4z8Bv/W7vE9DC3fWFoN9Tu
99ziHUM6bF//2/313+oz1Svid+1CnLgOcWIrxImd4dfthl+3HH4dG4+/36/v
Ws84ab6qaeWZbx/IrZJrSwQUTpJKf62LqXUiTnL2dwna8umBnNj+oOnFCkmS
b1nePW9rvRJvn0nmI3u7y6GhIX2KuvP5zL+duOpCWngZnaSevXbGe2aq9Jz4
Yv30IUESiPmDMf8V5rP/HVa8VnKhj1Ey3WTtYdPZDyVyQpNgjw8p4pyWPMHs
kFYmFroYcvuVr8RUqh1dIshTbnUeY3pavy82mLhFferlKQWd99/sZeQpZw4F
FsuzXiuJo2K2t2roLXnPhc3oNcRT9hQ7tKCwfh3HOu17YNncS+acK3LEvb6n
+A+oELx4q1ZaLyl87ku2t5T7lXJszxJPaTy9buDU+Vqp9NG6QPtanrKh38Xh
6796iFctC/ssvb51rOg6Kki/b/s1LDu7e2lPcQM/y8FPgVz4yQzsWHul3s6c
PFQvuqzezjyZPC/HSW9nFH7MwU9ZA37qgJ+N4Kdmm0VXTHbo9bNih2NbJvlI
b/OHRuUdPKVdRtcrEbu0Mmrtj9rNY33EWedYOeYYHz8ddWJjS/1+Gde4RC/7
MC/xa7M38H03T9G92/Blg35fZC67ZD4jw0POeVY+1Path4wsVHa4ZqlW7Crv
PTE7y1M2R5fJU7wK/65SDx7lOaQfb55Yp+jhAL292FQ/qGmmh8R6nvnQVr++
D+2DNzkl+ko/rxd27vr17dwt3K7FOa1o5h5KbrTvifgnXMupaOZF9YHRZ+vy
p75Lrf4wfWByYP/L9EHhpwb4KQ1+ctPPSPBjDH7Yfs++l76/9Sat/Kw68cB4
R29pPsH1YPAUT9V2YDLmJ/+X89m+Y/Jk8xU5P4GcB0DOucknAPSNDOzJENiT
WQb25L/dv+x/GX21667s6xnY1/7Y14qeL4aeb4Wes32hdl+z8UPYv/2wfyOw
fxU71gJ2rDvsWFvYq26wVwdgr/635aZWf9i+YHz+Kfmr/S4mz06wt2Gwtz6w
t2y9mN1g+5ftoz44921x7sfi3Gd+ArMbav2Zl/CXWsBfuvMv/SXmdzF/5uC1
k7a9Y3VSVJrX6dI+SQLdZn4sc+qZ1Hw2Y2nh/Dopvnmg55cNz6VTowXTSlXy
Eb/pt4veuq73/zcea3Iyzl96+gRP2THYi8rBaO0d3dlyOhlm3s99y5YwMfGI
yB+/yEfyGX859Vavnzfyl3/w+bS3hPW4XcVrhif9Lnb+Mj1k+h/2Kf6McaRW
Bq/6q9Mz8yDJ7NH73Zqy3r/joy6IjywQH7F9x/Y1y/9YlT48f3i2Vkb6VtNN
mxsq3l/Olxt035v6S2yfptuPr2J6Vr8fV5RxXzz/idx2Hfi6YFkvOv/s2CV1
H83SieXYIk1LFImW/iE5bbpb+onR5vP38+fVSUjvFl1nT3kuoVdPhJiU9KHy
ZP5YbnbP0L9lfjKTp9eOYe27bdKJ2/j6xa/1ipGypUrm637rP/z7gP9A8M/W
i43npp/u0M8I6CfzK9j9Tmqvqjl/LU6WJzalNt84pxHrdZmDVl6IoeM5TfZZ
F7RIEu99nWevX6qRctfLTf07NlZ+YtwH4xUwXjHnW8EzuxOlXVnHssnj9XHa
r2ela354KeUx3hbjXTHO6PwwGDfDOMsbxNZcv/fLXq10WpIvZK+Nrxx1Sb+z
7Lbnb7mdh9yeQ245a/6Rcx/IOR/k/KfsD6PD9juTjzJ/Oua/wfwFAzN1bke1
Eri1Wf39dn6y6+fF7Lbpnr/5zAs+O4BPZg9Z/pPtoxToiT/0ZBD0JNlAf4Zi
nNk9tq/ZOONHuT+9iXzCLuQTmH1W7JXRyn/s1X3YK7V8Mn+A3YspeY/z4NMR
fDL6LG+W2zny3+qJ2n3E7BXzn5n9ZH7saZwLFXAudMG5wNZd0XMT6LkV9Fzt
fmf0PWDnj8POF4WdZ/4As8PMDjC/jvld7H8ZLoHSN1oR9fZX/2W9PeuHyoP6
q/6ov7qL+is2zvhh+V61/LD5TD7sXpjVAzN/jOWfGZ9sPuuPYPv0T/Gj2MNP
8N/uwB6q5ZOtI+OfyZnlb9X6XWr9KLXnO+OTxUdM39j8x5+6+dWM1Em1xhEj
J/d+JVM+T9/evYe/pG+4+CC6h/58N3l77XTVSBlRoaFNhSW+qv1qVnc0/lSh
5d1PauWF81L70d/9ZPHJA69b5Ojt58KHDdL2aSVq3p2pi5f6iumQhdpNDzxl
s/9Mozr6fdcw42b+D0s9xT5L47bWhMfpbJzRZ/6J2nP//IJ+x0O1WvkSeu/w
gY8hkt14oVdjJ34/zuIjRudd2YIRO7dq5eOI4xcLfPYWq85PplXWy4PVa+1/
39G1r7dW9te9XNwub4DMKt7F5M5NL5o/ofdifyh/RfWNxHfsexmfueWTDflk
+snkyeTG9Irxw+rJ2Xh+UodcwGC+G8bV+nW/wL8X+C/9L/fdn4pfHlxNNcs0
TZFtZS1MLB9r5FRoes4Bp2gZWOus784byRLXrdLETa4ayX9r18R5nXj8qD0U
adM9Uu/XBBY4Vm2XRkZVv1TNyOsFjYNq3h/fzjwkUYwTdG8ezdDI4t0lq17e
xsczQT8v6I8G/bm9lxzaMDdJBp0qEzF2rUa2vttze8e8WBrX3DH43ov4XrX+
ttq8k1o7yfThngH/Z8E/kw+Lx5k+M/1XG9dXN1jHZVhHNp4B/vOA/3Hgn60X
i0//VD6BrRfbv2x/MTvG6j1YnKLEm3tgP7fBfqo9F9xxLhjhXBiBc+E97H8O
7H8n2H+18TWjw+LBszh/X+D8fYPzV+35wuSsVh/U2gG2joo/cAn+wDz4Ayyf
wOTA9E2t3qrVZ2Z/mB4qfqYP/MwF8DOZvqXC731d8B+/dwD83j91f8H2Ixtn
dcss78ryfiwvpDZPy87leTjvBuO824Tzjp0L1gbnuAnOcXZusu9q5Z0+/lW1
JOn25eiinYs04h+baGz6K1b1OT7yyo9LS+wTZeJ2U883YzSyvcZETa/yr1Sf
F8WznZc2nJgsPn3Lh3qc1shsk4SyGwNjaB6JxddMDuzc6Q95voI8C0Oesw3o
OORCh+Wv2DjLA7M6dquCiyrui9NKlXrz2n3NTBWji/aunfyDZJtVknfFh1rZ
G2jR5EbnZ7LwwpkzEU5edH8xu0ftJ+GH3Q+yc6T23tuBrsFpYnVpxeutvhrx
3PNXm6KlIuj4terzFgwfmypVLvWpH/RUI8kt4lMdwiLF1WA8AeNHIuo/8eqV
Kk2+pVcv/Ew/v9eY3he0kVQ+7HtLG+ihLfSQ7RcbA/3fBv23MJgfgPnVDb7X
B997Bd9VGd+Vgu+qajDfD/MvG8xPw/yDBnJIN5DDGshhHuTA9IqNM/1hdkCJ
Xy4gfumO+IXpCbMDLI7uiDxAN+QBHiAPwOYr+YdXyD/4If+Qs+mfPMx95GGe
Ig/DzhGWH2bfy+TP/pfdy7N1YfNTs998/VUkSmLHmR0YfOKhvL/7ftnJEam/
cdFNgVdsDrxi1q/K6nWZP7ml1c+dpU0yZHfXDtsb6+38jwHDN1dLea76fxl9
lhdVy3++XqZTVl3WSpGxK2P2tvOXWZkxK03aqKfD7EyPV0W8r1+JE1+ndY38
sh9IUsyBWz3LJFF/jO0LpS9sGfpTPqI/RcExKAkcgynAMWB5GJafZP/L9hHL
Q7K8GcMjys3fPgE6c0CHyW079M0J+vYV+raN6CHbR8wfY3ae+Q9MH9T6b4x/
dr4wv4XxyeTJ5KNW39g6snOQnXfsfGTnIIvXmL1l8Q6La9h+VOp7h6PeLAr1
Zux//9S+YOeg2vVl4+y8Y34Uja/J+avIcwPk+TkXeTI/jeU5GT/M/2R+plp/
lfkDTG652RND/0Gt3Bgdxifz8xn+FcMJUe4HLyIPVhJ5sCV4X8AV7wu0xfsC
DC9IuUdrjLxTb+SdWF0okwObr5YfJQ9WC/x0Bz+OvfYNLDw4Req8HByU318j
83KCl0XWj6Y43ow+k9sY9G/mQT/7e/RvMv+E9THtRf/OPPTvNEf/TtTSXQ2O
7Y6UtMNVOuR1fygrm8T7n9ueSvEiWJ6k+ZnTn2+mamX6ksBqQ8uHSMF1j9z7
2f4H5+QE6MQb0DHsP1Krb2r5ZHGTg8E6LsY6qtUTtu5MDkx//pR+qtW3fR3P
OmzropNX+VffbfNLL3/j1wXPvguU7h8qVt+dJ02OzN59LP2JRvqtePSuZuFI
8Z38xirfkVSJOrJmnqneHtbLrHuv5+ZIsc3ps6+b3v6k5tcN0HV/JhuCdt14
tNvr93sBw4Ar2Am4gkp+NQ751XXIrz5wntXx5k2dnL5V4uG3A7FyYGqgSeyR
J7L+48/B7dvppMKz8CNBsyLk/HTjKneb+0rPwnfWplbWyTP3pZOOvguTGtNP
fDQ/4kO/d87Z4ratUnTiNMUq/u7eOGm1YPaovk/8ZVGFq+0PJqdL553zGyy4
ppFuW9w1G+LDpIuBHAZBDh4GcjCHHJgdY/rP+Olm8L8D8L8+Bv/bAP97s1mX
W8ed0+XtHjlw1UMjZ97MuNKwcriEZfhvn9Javy6FQ27b+6bJjfZmzvkSgqVo
ZIFHToP1cjvR1MroTqT8+nA/IO6Gr4S3q2vu7JQmkyZMTbHy08iXKlE1D9pE
0HVU+nFsUFefjLp6hovYEXhHicA7WgO8owp2TZPsI3UyZ3Z2VGeHZBnv3eND
2skA6VDqUdmE7S/l66aGe3suSZdwn5vD6nRLkmBjx3XXh6VJ9XZDpr/R83nr
W4lGK05FSN2FNao8D8qU6mc3XNGUSpcJ/SfftJgfIp51sn1XDA+RFVvNZbhZ
lES9KrJ++rvXsmnH2PYZji+kx4U7n7eHpIn58RWbQnyTZViryOXd34aJzaAN
rpXeJUlmnu1m+xpnyH2XLte+WKdLw7z22QV9NFLX1NW15PxwuVq7fDe/8Di5
Psnzs/mLdKkZNbDNyOcJ0gHfm4LvXYfv/ZV8KyFyQZoEm/uWPqDnP93oRAft
6ghpeXLg5yOfXsv6mQ5mta+ly/Cr23s6WIdKiebBhVb5asV6jmXAslppojmd
9NPtexB9/25lI/8n87y0Yny8QeSNjGeSb2LkvMLX9PH7WbMR/QvopP4Ju20P
Dz4Xp/VLPL7X8JFeB8xLzrqhk+IBE1PtNsdKLasJq2z2PxE3fNcNfFclfBdb
RxvIbTzklgG5NXM8FTm0Zqi08Fw7euzWQHn/tE3ehVszZBvk3xPybwj5z/Is
5rtu7SspOtO9vV8rdzk5anm993uSJOjRqPd797+UJ7bdi2UuTZcTB1+ssbFK
kql+rZY2sHotsXsnXH5TVSP2p5uPWv0iVFzu+DzdkKyTN8W8kmZ8jBN5emJl
JZ2/dMzq+vcGJ61sj8vz4tZbH0nJ+OvE4VO83pLhjE3H/77A/67E/4aATz/w
eQx8Xt4wMbvM2AzZZXFz374hGpltH95mwaHnsmfz6nC3RP05EtvJ627iKxn1
YcagTuv8JfjQsZGdPXXiXG+BaYWeL+Vm2VG275Oe0PeylfkumO+G+Wy/s/q9
q+BzJ/icBT5rtKzuujJaJx6vely4nZMk9gcD+p2zDJBXPnkHuDzTyqPnFpfq
ZASIw+mX2+++9KLviUwMXFPFSM9/1917J6Zfj5MDUdPTpoX5S/TKryFv9Odm
89btIn0HpMjBrPqJTwcGSlOz4x/Kr9PKxCX2lZs5pkn73sXzr1gYTN8Hb2Iw
vyPmM/oKPz3Az0Hww3DMLLKW1ZkYpZP5tdfGFu2XLAcLFqm0dUGAdPs10Xv3
Ep3sOOjUwX9btETZP9k5wdaP9jvs/9q6RPNArbSsPv8v64qBkjJqabFBqV5y
Z8uupAd6fjxur2lVuU+cBDQvsqD7Jf36Fg3qPaaETj4Mb167/WK9X9Nk/7F3
Y4Lkomkpm/QN6TJp197Ks701Mm1e/NAbLcJlY4HLRXvWfS0D9v9cc6a2Pu7I
+drww5vQ33Q+gk5T0GG4fMuzrbt2ydHKrV+Dhx1r+Fwyvy8asfi7t9xv09y/
zBqttBpSa7RLsJdE79jbr1s3T1ldb7/jkvo6aXpqiO+vTeFS5MCFsEbRPuL8
uV+9fXq5Xbbuct1UkmWj+8AozfQAOdd+6L0V+vjo0jSX+ev18VHw+TDrvfr4
KN87X8cdp9Pk9qT8jwvo7WTLB1M+LukWIeUDTNc8TXst05ss6jfnQbpU39fW
fuLoUOkI/MAc4Df2AH6g0bpI10fJWnEakzG7VmywDHZtfOXQOG+ZHWcyx2Kz
Voadzzg+5oq3fC92u267mZ7isXSgZY5+v5wvPOiEo3ukOL87EFLklu9vPEwd
cAjfA4dwWpGyr2dOTZIqQwqMS12tkfN2VWvUWR8rzgb+Zyr8z6anBzXZnZUh
LYfPm/ejuUY6pbcucKXKf3As34J+Nuj/KfkzfMszkP9FyD8M8s9jIP9WkL8p
5G9rIH9lfd2wvtuxvmxfsDpwti+YfjJ9Pm+wL2ZiX6zBvrDGviiGfREEOp9A
pxno3MV+DMJ+DMV+VOzATNiB3bADij10gz3cCnvI6oEV+9MX9scZ9icK9soC
9soZ9qox7NsU2DeBfWPvlTcymN8Z8yNAvw3oHzWwh0PAz1Hww3A1b+C8cMR5
YYvzYjfOtUo414bgXKvf9a8Fec9qZUjW2blN5z6Rhq2nppwo40XPoxCca+dx
rt0zOAcN3w0PxfyrmP8A83/4uharNkjv/8wqX6bZ6UjpGBg2duUlX9k/K3xD
uxCt+G4aVaXt0kAZ21z8tB+8xM3gu6bju6JxvvvjfHfG+W4LfyAG/sBy+AOF
Rj0plJ2g/99NaX1XjUmQiIfls5osevrbDzkBPyQ9Fz9krgH9RaCfAH6egp/9
4McDfu8W+L0x8Ht3wu/qDb+rLvwuD/i3DeDfVoV/W8tynO0IS51U2xF4qbpp
qqxKDatpV+A/fqbu2D9+phH8TJYX7Qk/My/8zKrwMwX+ZCz8yRXwJ/0M/O0K
4Gc/+O8L/quD/zkGfuMJ+I0t4X/Wh/+ZBf+T+fnMn2d+O/PPWxn488Pgzxun
/J90kkGH+dvMr27SxiXL8W6I7I50iZjfLkysU+dmlP3rtfRzyirb52eETM1J
rdP7TIq4p6f2tlmYLh6PRx8afzJRamQHBDedpJGFhU9dvBvzUhYiXhuKeM0L
8drtvi1H383SxxEtm3RsXj9U+r7R1Shxwls8EV+fQXxdHPH1HsfGHa6e0Z8v
P+zm3y+XIr2a3iiQVTmQxoO9PznczjvuhdjHe6059ThNmvS70bNZZrJYr/Vw
lFrpsjdPn+k79evu4nV7y6sL4VLA1MKprX7/dvhwrvncFynytcrTa/VCAuWI
7dwZf+ntm9tg/6ZNyniLx+iArl2sOS4Qexd+1If6dyc204jRmwv3w45opHiP
wp+SDoeJx9WgZ+te6OR4yO7G6fOSZHm58SWvBj6TWxlmhUs76eOgs818ikXF
SOk2/TYO1/F7k6yaQeHZT+Okdp0SNzZFp8vskrEfiscliJl1U9Nnp3VSqMbL
pc/Lp8jnGo6dIqsG0nr7cUlxZquTtLLzRvcFAUmpUutH3ejUx0Hya/fQdfn0
fFY9mlp8yd4kcaz4ziYn/Zk4lnrh1GahPi7QhTZuPC5aqtmZtOg+0k/yJmYm
tJv+Wk62LvEztqxGel4+Yb74Vqhc/djAzeSoTuycgyesmvdCSrnurjaowROK
a8re5TmzSQpnx+ik8UptHTmUJM2M8408lflM2hz8lNe2kV7u8ZqleV00ElXn
U6Pax8MkT5J570vmmWI8NarPmc3p4rpqTqW1DUPl6IGS+RZH6sS1bOd3V3ck
S8q4jdGPTgfQd1giLw4a+6aY3k8eGRATXiJM8h7dPe50Hx+Ks9TkZHDTyYV1
Yl7G7cKemOcydXSlNdaWPvT9qVoPbc7G5tH7f3MvlevprpGfV4rdd3CLFqdB
l/b7z00XN1+d2wW9v/Fp/LgTVn3CJflt8iRv10ypNNz2U4166bLsotyucDjk
N30n0O8A+i6zdJOvx+rPwfHTTq2JDxJfp4xe+1t6U7wp7fruQb366u3tw18F
po2IlM1N8jfy3OFL30fr21k7fu3cJImrOcLmf+4TQ6MtB++ZF0vv46odOvck
o/ZrqWtS/ehXvb8Uefd4qRpvQ+m7NordKAC70R92g+Fitc5vfsTeSiebmg8t
0+xMhNQdWnnB/B6c//stIvxMJibLlcCySQ9Oa+Rl5NunjwNj5OSt4a6x9dPk
zdqKrRY90ccLy1bLzJcRsqHsgufWej2vtOvzg0i9nttYHho/6RbnX7e5zLbh
Q3Wy9Myp5ibBkRI9yiYi/YEvtSdMT7a/+7raLDlNrp85MNXaVyNn3k07b/M1
nNZRmFbYN/pJF620W7Ht/nz3NNnfc9TwA0HB9F2hDW939mj1Ur/vvl1I/PIt
UfLFzY2pMf8Zxd1l+5TtryJrD71cnZgp6xp8sOycL12eeg4b81rvT7TrXK1m
2wytrPNr1jB/WKp8Luc/dPP1oN/7vRX2e2vs93ywMydgZ3rAzpxBvrQ+8qU9
kS+90DT8gEWyTixbFr1lXSNeehdo9uH5D3+Z2NFss8V9ndTcufqTvS5WYh+F
Vsnz6Im8M7CrtrCrFZbPK391vVZcWswfV3BHmmwt2N9W5gdL2b4VTm8RnThq
5yx3vREhTcZZz3rU11eudr45PN8lrVQecGz0jqL+0syvyqLvTTg+3jiD86II
zovFhRp9NykaKiv2ZVz4uu2FTBo9yzjq+2t67liMHFi2krFWTK7b283WpUng
xFX98zcMERu8dzMW790Uxns3d7eH3xl9Titr3J0PD3V+Is2uxzU2ruRF74PY
uzlDDc7ZAzhna1s2O2xt8lLuJ+7PcdviLus+ZS873CpZnI4v7Xq5b4iUHzCn
ZtCWKImOS4lbmTdTat603rLH/YVMdBthfS8+TaZn1alR7VSyDDpbc+6x5+ni
MyxizfqbGrm+O9/N4m/C5OrP6JuVFuv9wPk38vXemCIB1pNNN60LlNYr1xWb
X0Ynn/9eXvGCXap47Ylc0nZokKRmbav++EWmxKY59W1WKF22nfW3tZ0QQv0W
P/g5NeHn2MLPYfwvxHrNwnpNxno1x7oUxro8x7qMhjynQ57FIc+AiIH+S75p
Ja5YqLNXQqgs7TukZfckb6kQdeRj4ytasV8S5FPT2l/2Hp/iEtTOi+JzMjuT
tb6K3Vf9OdVg8dT915KeS7Vb5rKmvY+Ug56fgJ7vgJ4vm6Hfzx30+33BkYhz
OyLk1c4n5dpY+cp7vCPvhXfkp+Mdea+zJw930Z/v102O3Spj6SVtmsQ4vW3g
KVvanxm+codWZpW6PuTcPB8ZWVJntXMH7ztT/J9q8H8s4P8w+oyfScVsXmUs
1ev5yyr1XLL0/3c6a6BpFU/pstCq/uHzWulubT2slecTqWX84XmQ/jxccvrm
ExNznRwsfjR4+K1wydkVv3fUa5/f/s9e+D+V4f8odEaBTl3QUf53Mf53Bf73
nLa9k0Z/frmOcMr8cM1Tmoc82F1dH5dthXyWQj42kI9ib41gb9vB3rL59TdO
mbpav6/P2hZZ5uTyRDLtDnk+0u/rTevf24bptNL1w2GjLYVDpaVPmdSr+71/
j/fEeCuMm16wq3GpgE5mJL6fOs3lueTdVOTdp1o+1M9pivE2GJ+BcYV+P9Bv
DfqMzyx8bzl8b1d8b0PMd8V8HeYrclgHOYyBHJic2XrtwvpexfrWxfp2w/zJ
mN8A8xl9tu7voJ93oZ9ToZ9sHZmeK/uiIfaFJfYF20dMPgo/V8DPFPBTdcvC
KknZWlm/9XK5kKWhcu6E5mCXh96yGHZAN/8fOxAGO6DENc6IaxYjrqkMe3IY
9mQd7IlixxbCju2GHVPsUjXYpUqwS7nhNhvi25cHfVvQ3wX6I2Fv+8Pe5oO9
NUE8aIF4MBvxYFvY7fyw236w2yMQb65DvFkb8eYy2P9tBud1a9/L1Tfu18dd
1zPDrfaHS+vOnSPqrX0tAxFfT0d8fRfx9S6cL41wvsTifBlj021RgQrhMjR6
8DCnj56yZ3RCnipf0mhegr0jz87BXYi78/78J+4egLjbEufpB5ynHjhPWV9/
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
v8L86qgDv4s68KWoA1f0/Cz03AF6ruwLN+wLM+wL9q63kqe6hjxVNvJUSv9C
bfQv7ET/AusLY/udvaes2Of7sM/nYZ/Dwc9p8PMW/LB3qFn9J1svpd74BuqN
XVBvzOqTWT2zsl/aYr+UwH5h71AzObNzh8mHyZPJn61XQl2vtmGZz6XXqK3b
chr4yS6/PHF2P9NpfrUu+jJi0Jfhgr6MWxlHknos1MrPSZnnP47xlJl37hd4
mpfXg7F7Db9Cdmemb9HKwDN5vH6GeUvrga1Tg+f9557FEfcsF3HPcinmWfxy
N60cLHDKopfFU0k8X2DKrYle9H6T1bsyHE52b/Xs10XXgvO1Msjdz8elvKdo
jfstXfHZg+ZXWV8Gq+9S7vuO4P4uA/d386/eOpVyXyvHAsfH7vvxVBp69Kn8
aCN/L1Lte3m5vQ9u+M4di3fYe+tLkdc9ibxuXqd/8rrzamy5skYf37mEJCaU
cQyRsNUvHpRe7U3vH9k6sntDpZ/oHvT2EPSW3QOy+8SJSZXzP9PLZ8rPIaWj
33lI3eQ+Jjf1v7n971X87wH8L7uPe4p6hjDUMyxEPcMX12spP6fo7fm9HLdR
Z6Pkct8BA3xK+tG6EdOchEr3nkVIzLmm1z5pHsr84NS4Icmp8g10gkHnNuiw
faf2/VlWF8rsQ8VScwaOcNVKzRuNfErc9JceX8aYV+rL7duzRu9Ov9Lr4cXv
A6Kv7fKT6VUnTN2m86TzGf+sDqQO1isI63UE68XW3Tju4pYz97Sy5qq/g0fk
U0memdw7294r1/eaDfWNjbP/PVR3X/KR/VopOijWONXRVwJneZgveOwpc7GP
1mAfBWEfsXeQ2bjNevd3Q/Tr+P5r7eVlyun3rdWsOgf+L/W9bJzZmT/17iez
e2rf9WbjC2Bvb8LeNoG9ZfJh5wJbL7a+TB/yQN/2Qt/SoW/MHl7E+bgM5+NL
nI/Kfu+O/d4K+13tu8/Kfn+E/e6Zy34PxP51w/61zWX/qqVfAfakAuzJX7nY
E7X6zORmjr6AM+gLGIK+gBj4V5PhXx2Ef1UZdtsddnsD7HYp2O1Y2O1FsNus
z+I8+pFvGPQjK3gIl+HvJcPfY+9msnt2j2G9dBX2auVkk7SGPTr5yi+b9EY3
r3vKznbGff7Wy+eab+xFz48ecrZsQqOd77nc1NLZan48T/kNWgl8MTcxX19v
MU1Y0q/lKF639vm01cTPq7XyIOB2fN0ALylrHlP6Qlf+Hiir81/bwv26iX4f
LW9hNW71Iv332w/6ml5Qf47vrBH3Rm9PuoU/OLekrKcM+ODQN+uTh2iPLe9r
t0kr9Sc6ln+711uCH9Rr8mGqJ/XrAn3zXjyo18/Vuo1XM+/7i0cxy/Tl/dS/
963Q2QY6XqDD/DSFzxbgMxR8su9icmDy3IL18sR6lcV6Ket7H+t7HuvL9EFZ
Rz+soynWkemJQucg6PwAHVavpfYdQ7X7i+EDsP7666jL/Tnvn7pcP9TlJvQ/
eHu7Pq7P2m/0YHShBLG6dLFT/aFP5fnzkTlBtjrpaBbxIjk1SuzetJnfV29X
lPrkvahPtkB9st3Lhn+vW6mVKq2a+DcZ5yWNKlQ54NfMk/o5Sj12adRjN0U9
9tJha94d1ce/rd+Za2pFBcv2eQXPpY/1pvnqndsnrPrrnk4Ovi7dbUxirFR/
Oeae3HvyO3/ujPx5Q+TP2fml4Hu0QL16XwUfm+B+sHFWN8L8H6UfYT36EV6i
H6GM397t21rqpPW+FqMTTSNk5cSWn4+W8JUZ/Ys/XtFFJ7W9PzXK+yJCVq13
lSc2vH+B9Wtcufr3Ze80vb+aZjF3jWWImExZ/s5srjfN17F77eVxltbPDiZJ
q6kXpnXbrJH6IyecndgolvahLMN8C8xviPkKnz9a/MNn79z4RB9NNfTReKOP
RsID5i+K08p3abvonUWwnHLudcKti7csrLjLa9xLrWT0OhHzNDtIfD4fnzqg
jbckzp5V66ZtorTI2vjNbpRGHLafNgto/4reRyv/Ww7/65XL/zJ5/kB+dSjy
q1eRX2X+IcNBUjvO+nzZvmD4GMo+7YR96pjLPmVx8UzYDRPYjfqwG4o+fII+
9IQ+KHbJEnZpBuwS9Qdw7+OMe5/CuPdhfY6KPUyHPWwHe6jgzKw1wJlheYOc
Efned1qmj6/Xnwkd+1X/PSXO+H+u6int1t/YdL2hRmq/cD/T1EUjv1bnbeV1
PIze27I6ZBYXsP9lfD7CvWQq7iWr4l6S1bWyeH/Mj0qtJnQOl+4umS/8Jujt
Xv6AyR0i0n7Tjwf9yqDP4hdWV6bko84jPjJHfMTyVIw+03PWJ87iIOU+8Rr0
pzT0h9nbUOhtC+jtdIPzdBvO0xa5nKdmiDvaIO7ojbiD4ZIpeQ9zzO+F+Wrj
AoZ3pOSTJyF/WxT520XDp/laldTJ12EdOxS1CBP/spfyWI/wEevTo77M18u5
QuuD/ausDpSI+64jqn/i7x+pfe+J1dWz/Anz59n+ys0/N/R7Ldw0JpujtXK0
ZsLRPSuCpJHlq/s9a3pT/5zhuljBbtSC3fgGu2FlYE++Y5ydR4twDr7HOeiH
c7C/wXkdhPOane/uBn2aMejT/Lv0i8gZr5NkqHHRNaX3aORJSfP1r11e0HOW
+RWM/jsD+s9An/kJrJ+U0VErhw4G8v8J+a81wCEpinVk94BMDgqfQ8BnIPhk
+tMK+nYD+tYU+qb4mbPhZ4bDzywNP7MR/Myl8DPVxnGsH4e9R6PYgXywA6GK
HSD5bRavuSKOqIs4ooVBHGHonzBcDiVf9Aj5Ijvki9j9GssvMRxgNr4D8ct6
xC8VEL8shP3Mgv30hf1k/aHKeVEa50UDnBdq4z7Wv8n8otziOHPIfxvkz/Lq
7L7V0H9eh/3C6hPqGPTvf0f/ftXVLocuBaXIkU51PZYFaMTWMvaH6fooqW4w
PgPjMwxwn84C94nZMbXxCMMZqGLAj53CJ+a/w/w8V//v89XGU2y+4rc0gd8y
BX4Lu09hfgjNGxN8swSD+sm2qJ9k40ZL/s946iz0gb0z4jOu74jxr7VyfPe0
8AkXQuSRxcOhL9ZzHAP2nkiPQn5nJ1xLlYavTcrE+Wuk4q6Kjc7NiaR4C2rn
s3GFfwfw/wD8s/sL9t6HEhfHwR/wgj/A8oTsvQ+W92BxH7uvXIJ+xs/oZ4xC
P+OwZ12fV86vkwNGo+eV3/Rcxlxqc31RJR/ZOsk84GtZnQzp8s7u86owabv6
/flG833oOcL0kMVHDCeQ1bGzPk2198sKjtZY4GiZA0eL3e8E+sgMr0Na2aVr
+K3te1/Zcqud9dlQT9kC+QyAfFpDPgxHlMX7zA+fmWI86y+9nV9omn1raECw
hF9aGZZnjDftL2D+CaPD3olg/Tjs/QX2HgSzA2rfcVDq8SxRjzcH9Xisj1ut
HBje3SvYw3DYw46wh2yc1f/b4X+34n+j8L/TkW8sh3zjUuQbGd6a2ncQGL4W
G2f4rvS+nrw7wOxkLwP7XB72mfUBsXFmV9n5wuw5w8Nn+GzsXGb9xay+l+U3
QuaXjCxZQisZ92/2a5+cJn1X+20eZxoiBdGv3Rb92p/Rr83qu5agzrke6pxr
oc5ZySeMxPxCmM/uEZidZ3Jj90cMT4bhgyn4h9VRbz8M9fYKbo8J+lAKoA+F
4W4x/EyGU8TuBZR6jK2oxwhBPQbDPWDniHKPvx73+HG4x1fw6Pbi3nkg7p1j
ce88CvfO+3DvzM4LpX82L/pnp6DfRBk3wvgkjDOcf9YXz/Sc4ROy/avosyX0
+RP0WdHbOtDbmtBbVpfO3pPdC3z+eODzbwE+/36Mx2J8A8YdgTflCrypk8Cb
epSd1iS/b6qcNDf6ckRvr1795d5RhkbKks7jWwzQ75fVY77p7G30fleeYkvS
9PtF6adIRT9FB/RTOCIOdUQcWglx6H3g9rsAt38fcPsVPP/zGD+I8YC1jYua
VdRJp52X2s99FKb303YOvLfFR4ZdLrNg7DetvNvs7tk6PlTKjdbee5Do/Vuf
m0Ofl0Gft4/51cdvm06+Fy7crvOGGPkVfGp0p0A/Ob9y9v3IRzqpE9j2wpn6
L/Vx3bwGhyOfyB0DOaRCDuw9BYbD72WAw98QOPwXH57rLvfT5MSij8v89PLf
/9r87q8GEb/7Vkahb2UY+lYCgZ8/BPj58cDPZ7j6DO/ICnnXeORd7ZF3veXY
5ufuabHSeWfM+K3l0yX1ZOKyDjWSJeTq5zXmlxJlgLhuXTZZI1bTmpWZ8vSl
HBkU3bPHmXS58nj5vRqPNNL1282SRcqEy19dijRaMThD3BLe1Kk2XCOTjU/n
3XzyOa0DYTjtDP+c4egyXFmGv8rw/BnOBsONZziuDDeVvQvA8EUZHizDX1WL
U8rwwxn+NsN3ZfQZTgjDR2X4FQwHnuGcs74V1t/B+jIYXjTDYWb3Puy8YHJg
/UQMl57l+Vk/Dus3YXlmhi/N/HbWf8H6xVj8yPxz9t4Bw/9neSHWf8Tydawf
h8VTDH+b4VSzfDLzz1lcw+7p2HwW76h9P0LtOwss/8bqHFi+lN2DsLhVLf65
Wvxwls9n8RSrv2L9hswOMJx2hiPN3rNgdo/h3jMcePa/7BxhuNbsvQCGt8/o
PDY4f2vg3GS42cy/Zfk0hkvD+hNZPxfrz2L4BqyvmeGis+9l7+yw92tY3Mr6
2hiuBetfY/MZngDrW2d4+AwfnvUXs7od9o4Pex9H7bswrB+Q9fep7fdkfZrs
XQP2jgDrH2d1pP3Rd78affeN0Hc/0gAvtyTwchX8cxPgRXwCXgTLhzB8b4ab
zfIkDD85EjgVxYBTURk4FS0sz144UTxeDkZ+GVsiRS+f70/cGjskULxf1g+l
5ItckC9ahnwRqwNn9dtq++wYLjTDYWb5LoZjzPB1Ge4owx1i+MwMJ5nhD6vF
H2M4USw/yfCN2bsJvH/k/x1Pg+GTMJwZdl/M6mwZbhLDq2G4KAw3m9UhsPoB
lg9k7xowfB6GK8XuSRmeOcMbZ/1QrC+J4VozfBuGx85wtxg+GMtzsncT2H0c
wxljfeIsT+UPXO5awOWerrw/QvC3mT1heNcMr5vhYDN8aYa3zOwYw0Nm/doM
P5z1EzG8a4Yvze6R2T2IWtxy1o/M6pAZfiajoxZnWC2Outq+V7U4xgynnX0v
w69meMi56YnhujNcblaPx/qVGA4zuz/KDc/c8L5bwSFvjv017V/ik/8pvHGG
m60Wd5rhaQ8C/pIt8Jfu5IIjzXCq2fu2rD5fLa4vw7NluKwMr4aNq8U5ZO+l
Mvxk9j4pwyVmOL0sblWLj8roMH+Y0We4hQxPj+kbeyeX4XWzvjlW38XyJwz3
mOH3snctzStHv+38VG//beqvdnkYIPsjEnr3jPCi/DB8dda/oBZ3ndUhMJxz
Vt/FcFrU4marxcVlfiDDV2F+oFr8+f9tfGa1eL9qcW6ZP89wKdm9CcMVZHjv
DA+c4X4zPGp23622ronhUavF+2XxHYt/WbysFteR4UMy/Hm1OPMMR10tHqxa
PFKmV+xdAEXfSkPfIqBv7L6MrTt7X5jhMDM8W8Y/i6/Ze/cMX4LVH5YD3mx9
4M3GAW+W3beyd5MZ7it9l5bgoDJ8UXavxPBFWR+uWtx4ln9geNrsPp3h3zI+
2f07w1ll+Kgsv8fqnP9tXtEwf8LG/xSeNuvjVosLnVvft2F9PnvPVy2erdr3
BZifzHA7c8N134b/bZALrjvDLWe4zQzHmMV9veG3T4bf/gh+u1rceIaLzvC6
GU4ve9emBu6bPHDfZI/7JrX3X1TODN+V1Hcx/Fu1eMIK3q8OOKXvgVPaIf/I
8lej9HZ1lVG3rpbJ0l3zZvKtSQH0nXrW58LqQhmeKsPVZLjBDNeXvWfB3k1g
7wUwXFmG+8pwRxmuMsM9Zv19rE+W4XWwfgeGi8twaxn+M8NnZnjITP5snL3L
wPB7mf4wnGpW/8/q65qiHq8l6vE6oR7PFPNtDeYznHC2jzpi3+Vg3/XAvlPW
5S3WJRvrwnC2WT0AyzupzWsxOuw9BYbbr7YegNVdsPoNlldR6ljOo47FGXUs
avGBGX6yWnxghpvH+oJZXzajoxZHmtkxJgeGb8zwfv/Uvf+fwtdl+MZqcYnV
4gkz/1xt3kwtHq9aHOnc7oUN74nYPZdaXGK1+MBqcX0ZfvK/xT02jBfU4gar
xY/9/yoeLOvPYrg0LC/NcJjV4gwzvF9Gh+GXqsV5VotvrBZXltkBtXiwavGl
2bha3Fq1OLRqv0strvWfun9n40zfGE4X00Nm3/63cZgZTvKfwu+91XmM6ekF
Wtlg4hb1qZenFHTef7OXkXr76QY6y0GnAOgwe8VwdNXi2TI8WIZ3xHCGGX6s
WlxftXjCLP+sFp/2fxsnVi0d9v4XG/9T+Mxq8XgZThTFZyb6xvB7Wf0Mw0lW
i6PF+tPV4rkxnJ8/VYesNr5geX42zvAH2HvlavXzfxunUS0ullqcK7U4dWrn
q8XrY+Nq8dnU4psxfCq1uGcMt0otHppafDOWt1SLR8f4Z/uU4c6xd0LZe5Rq
cc/U4pIxfEJW/8buuRgurlo8KIaXu8agD7cY+nAZ3i+7J2V1tiwuY/wz3Cq1
eMUeqD/cgvrDGNQfqsXdVfgpCX5Scskz/CncYFaHxvx5hjPM7svU+ucM753h
uueGf27YD6UW/5zlYf4UHv6fwi1nuMEM/5/hDzM8Xoa7xeIOpj9q/T1Wl0jz
bwQnmcW/avFUWZ8Owx9m+Ldqz1+1uJ0MZ1gt3q9aHM4/9S4Gwx1lfDL/Kje8
aENc6D/1XgPDJVaLU6r2fQS1uL7sfQHmv6nF71X7vgDLMzCcZFbnw/o72H0H
wxNWi2fO7CHDD2Q4z6y/mNVlMfxVhmvKcErVvjvD3pvI7Vz+b98HYfiTau/7
/hRuIcPLZTiKDFeT4WQy3BVWp8Hw31j9P8NdZPiKDN+S4V+Z9u/0dcesGGk1
eXWV/pUeiptRy/ITBqf8xpcYAnyJhsCXUIu/x859VkddBv3UW9FPbY5+agWH
ditwaC8Ah5b5AwxHl+LfElxZj8crBrc5rpWf6/K0zPPAT7r8tW3m+2z+vUz/
Wd5JLc4qe5+CvR+hFr+U4dMy3B6Gm8TwbKcZ4BqdB64Ro89wqJhfx/CoPQxw
8MyBg6cWp5qN52z6J493H3m8p8jjMfvP8DxZPwvTE7W4u2rvixmfanHOGY4W
w5Vi9o3ZQ6VedCrqRUvkgkfKcBoVPJlK6Ncbgn49hrvI8ttq8TbZ+aUWF1Qt
bmdu758a4qbG417PGvd6u3Gvx/BO1eL09kKdfHHUyddCnbyzwbmZinOzFfpY
C6KP9Rn6WPPUbZvzdJ5OOvmV+G67M0Xc4otPeeygHr+X4bsyvBGG38L6lXwM
7FID2CWGw8nsObtf6GLwv4PwvwyXmOGUXgBOaSPglFYDTinDcWV2ktVvK/WE
xujnjUc94YHmVas1H5giZz+mr/fQ89+gxom/i5lH0/uOvqg/n4L6c3fUnzO7
5wGchxrAeVgInIcC2L8dsH+/Yv+yOn+GI5Fb36Jh/wXL+zGcDRaXsTw50wfW
d7OB9NEofTft0HezH303IwxwZq4AZ0Zt/0h94ORMBk7OZODkMDyfrJpB4dlP
46R2nRI3NkWny+ySsR+KxyVI3sTMhHZ6/k+2LvEzVs9/z8snzBfr+R9ngO9U
BPhOW5CvnoV89Ujkq5V+yb3ol6yMfknFD6mG/WiB/aiMN8S4JcbV9vWz/Dnz
wxW8piPAa1oKvKZRwLlaD5yrmsC5UnClCgNXygS4UtaYvwbzG2C+KfrLWqC/
LBn9ZZPQf1cP/Xdx6L9T+sgqoY/MAX1kCo7NauDYfASOTXHg+awFno8f8Hys
gP8zEvg/e4D/w3CBLEF/A+h/AX21eEEM78gN41EYL47x8ehn3I5+xuroZ/Qx
wKXsif5HhlepyGEN+PQBn48xfyDmD8B8hg+pjH9Av6cDxpn8GZ3b+N5MfK8p
vncj9CcP9McY+hMN3IaiwG0wA25Db+iVPfSqCfSqLvzkGPjJLvCTWX2LUgc1
EHVQrVEHxfrF2HylfswN9WMeqB9j954M55O9Y8jq6Nj7ZQwPn+F0MXvC3ptj
+UkWR7D7TYZrOhTv2uzGuzaj8a4No8/eOVLsmDPs2GLYMRbvs3fk2fsFDNeO
yZ/Vo943wGlPBE773r4rXi3U+7cxponRdmMSpeRUu1pNvj2VT0s2PWjUUiOv
Ho02qq8/d+o3SG66+lCYdJ62oUv9PNES7j7lwN33en/Q1t7I6k6qJH66nLfc
5FRZWetSXXe9H9Wy9LI92wIipW+dJmlR+jil8O5oZ4/EePnrc87+G389lbEm
Hif3HU+V7wXqvjbRz7d8s/rWrbWRlD6rX1p71W1+X72/kedzy0slDiWLfZuo
9dOvBMjTOlM65xTR+1NVzHtH+GikueZdww5+4fScYvrgMMcnX0VJlWtl0+80
+J8+oCOl5lz+EinLIybZHJ+klY62bgHzT6dJka22w0cfC5YP9s37DnR/LYtH
BGkevEjX+++L2jktC5UZHWvEXdXzea9V5bXV7JOlqP3zT2kHA6R0Zf+OIU11
MnBVztbJ6eEyMyrkxsEfPjLr6O5d6ae0smdm8MuO89PE1Nbt0JyuwWKH8b0Y
r4BxB4dy8+rp5fxtTc+eQZ0SZFOemw262j6l+WFdwqmFibE6iR8df6pZ6STx
+7isa8j6Z5KBdVyBdWyIdWTry/AxGH12j6/wnwX+14F/RQ5O+N5yucjBCf1W
J9BvtQ39Voqc+0DOtpCzsi43sS4mWJeIMMdqblPTJGx+iW8P9XajhfN85/c7
I+RvrO9SrO94rK/Sp3YDfWoV0afG+n1Y/yPr82J9WCuhh+2hhybQQ0cDvZ0N
vWX1Bmy/bO843srxid7OeCW/7eWXLHmtMsfvjwigeDisP7eLwb6OxL5m+2uF
wXcVxncp9sQY9qQL7AmLy9IN9LkR9LYX+IkBPyHgxwrjzzEeg3HFzuSHnVkL
OxN3WHfPXL+/Tmx0CBnoHywtfi0JWTHam+Igqa3PZOul7KMM7KPq2EcKn78+
/cPncvDJvpfhU+XUHVJkXjedDKqi7b7w7wg5N/bJFK8pvlQOFy5sOtN9hVbi
bEbqnCy9xLRw1zP5G3rSfdcV/ESCnwhFH4gdYHwy+8P2tbJPXbFPy2OfMrvB
7JWih8Wghz2gh8xesXOBvbPA7D+rV2F6xdaF+V3K/AzMr5DLOjI7yewzs59s
PtvvzP6wc1bRq0/Qq43QK8VuGEGv4qBX7FymOOTYFznYdyuxL5jdY3Jmfiw7
L5hesfFIg/VqhvVi68jWneltmzlm0Z3HpErW83tjQ/X2dlJJk4vx4ZF034UZ
/K9FLucs26dsPjtPGR12jrPzV7GTw2EnL8BOsv5i1kdcCnLuATlPN9A3Q/+B
6SGjz/hh+Umm/6zvm9kZVufP7BU711j8yP6XyYHtO8bnn/pfGr+Q/2XzGT+M
Dltf9m4Lu/dk+sPu8Vmcxc7T3Pwcw/lMDgo/1cHPSvDD8hLs/lFtvoKdRyz+
oucXWRfGP1sXVk/C9IHdW7F1YXJj40yv2HymV2w+kyeLX1hegtlz9r6w8j7j
EeRzBiGfo9DPB/rdQJ+NM/kzPmv/PSd65+A0afC6z7VP+nOzU6XSC/qdi6D8
1zKY3wXzGZ0CPbNdY6J0kuRYqJWzebJYHC1wLmJUgJjCX8oLfykJ/tL/A5jf
elk=
     "],
    VertexNormals->CompressedData["
1:eJxsvXdcz+/3P04qhAgtI5WRkFEaoi5RZJMVQsqmKTMru4gGirJ3SHYZXVJo
SWkP7T2FjETf6/R27/Z7fW4//zxuPVxdj3Pdz/2ccz/nOVKzcbBYJdGmTRtp
2TZt2onrWI+0CK11pQzXrt6BGx4ERTAf5cCAI/OL+aJ5jhv6hZXxnB4Bi5ou
x7G6p3H7HI4UcsmXw1/pfqngWT9uTWy48ZitK7dbmXknj0vsOmBs/LSKO8Re
3VVRcp/1M2bSowZm8p0Hwk/ILqjhmzrpestuesC+3pi2ZMuhJJ4x+OCgWbdr
+fClG8cEnHzEzLRG2Z5t/5p7/JgyeaZnHV92frtbQsYTJilj2KCbZWrsUJY+
3y6njjt3Cvn6IeUpe7lvhYdYz+6fLDWj9ePNt+2l9feVVBzF/qzzH6/+tP/H
Okd92v+Xw8Tewh6mfNr0KNmz4pfDcbJnc2X7jcJ+li9vNY7sd+42fifZr95c
ukucl32YeT6SzqtdOcaczvvuSrOtwIdFFFr7ET42ZnHHCB+NZz/rBI58U7nd
KcJz34Gz5oQncASuwNNlcpKVx/FSjmuoh9fda7qPWB+NAQOOOxRzy1G93nw6
WM73S9mssCi9zxyWZ+xwCing8j/qdYOOVHLdP6Fvpox7zL5rt/G1t8/hoxet
Om5vX83bNd3MuLrtJZuYcWOx8udknuZr3DiwvIaHlGwu3Pv7DZvt1XvO+VVR
vLri2xo7/1p+6pO3/M3tH1hwPc/t7zrN2NN9zU+tW7U8ZlpqhaLFR1a3y++g
WM/udW2/mtZ3eHZCjtZPjDTbLfZnMh5+32j/cWOn5ND+VUtDQoU9bI9R34Nk
T4zV3w9kj+d1/0PCfhY4Z+Rwsn9r+n5O9hucDtMQ52Uejwa/pvMWfTmzlM5r
/qpwnsCFvbh1ZyXhE9at/AHh83ZO7iiBJ+sS+zGd8NwZ6HSb8AQvwVPwEzgC
V+C5ve/vLm7upRzXwyvOt/DNsmzqhOTwIl4zd4TskeByPvHyRIWIn5GsVn1k
5PqqT3ywRkB+Rm05H/DCK3BHWBYzviSZEZT5lnk9cbZQ8Mphyyo8fU50rWb7
z4SYJC9/y75ku6+K/lHFvsT2nXtC8hPTZDLjeoWYhw9wcPr482DNv58zmOmL
s0vEeq66ekrL+r+uirNo/cRBX2eI/blSqZkt7f/l5fRTtL9atc2gDVWf2JQL
O2PIHse66P1kz/BxJouF/Wx3bNTvw8L+indW7cn+o1r7lcU5meLyIAk6r3PD
r010Xp1v3d4JfNiyN2lqhI9cj7Ut+N/zP/BY4Mna9VjvTXgubQyfR3gizhH3
iHfwEjwFP4EjcAWeev4dTdouyOe4Osb7zlsxoJRdHhC+JfpJAbtZHhRkfb6M
qT96Z074nO6c8ORHQjabO+5lzI+EKjb9Wp9Te6YlMC+FY8VLViSwwe3Wylit
qGXjf3uZ6y6IZft6zS87/2NWuM+r65tSFtexhOBPB0t8YliU69Y+VisSuKuj
XHtaf3jQHTNaf8LQL1zszzd+lI2m/Q1C9L1p/+05C1YIe/iSR5Oekj3lFxrm
kz31G58/FXazsjs6imT/joV5vcn+Q6X2A8R52dUZGoPpvFGWyb9fifMu0ykw
Eviw/J16DoTPuv5WTwmfxMMTjASeLOhJ+FrCs7yr/F7CE3kTeRT5E3GOuEe8
g5fgKfgJHIEr8PzdcXZDSa/S1mvzJnZOxTKOee970zhoYwGTX7bQzVC9kmkH
ZZkH7Ipm32L044ozklnh65tTF76pYaYrD+wJ7hzDrv1RK+/huCB81t3AmdWL
6pjUhmkdb12NYWaq+fViPR/7xsWU1l/P+raD1lccjm6nsbGAx0aFudL+I8YN
nkD7d1e9VS/s4M809vwke2y+T79C9jhvHeIp7OeP9ht4k/3lwcF2ZP9TS5de
mbXlbL5XyWI67w8PpzF0XoMd7/wEPqzGSsuR8OkblhpM+LxUC/IWeLK9ob5/
Rgo8G45leBCeqEOoS6hHyJvIo8ifiHPEPeIdvARPwU/gCFyB5+8dN5YN71/a
eo148Nh55u5YpnIzv48cz2b7x58dKserWFFku2vv131g8cfyupw0XBG+5uDk
hlNJtf9+TmLj/j6aLtZzFd0jqrS+dJirP60vf99undiX9+oxcD7tXzlp3hra
P/LyyH3CHm7hlvCL7Jl3ydKM7FE43vxa2M9/D9waT/bH25+6Sfa7upec6OmV
w78ZBU6/Lc47UWpSM51X3idTclB5DbtwNkuT8Llw6MYdwqfw1v3BAk/21HjK
DMKz8enPwYQn6jrqPOo76hDqEuoR8mZrHv2XPxHniHvEO3gJnoKfwBG4Ak+1
0B338xRKWq9d5Cy7rhmVzqbNNXm/76V9uN+zaTc15ar//ZzLkstmxol1XOna
tXO0vunEkV+rxfpJxsO1xf7c1fprB9r/1QyX47S/hGr1NGEPfzsq/g3Zky5/
dxvZU/mhvoOwn49fUVpP9mvPHDCP7H+0+tEkcV5+7vpObzqvh1PAMzqvapO/
s8CHjTc9KUX4+FVIXroh8BlpZGEu8GSvNbxnEp5H8xasITyhk6CboJdQ11Hn
Ud//W4fMw1GPkDeRR5E/EeeIe8T7f3m5Ihz8/C+O9uHAc29zc0Nz857w/89V
/KtjhzcseyLWc3+efYbW/++ay9bm7P0h9ud/NaSX8RDr8IdpDX98xf79hivN
Evbwi3L5eWRPjlt2801hTxv5AWQ/14osHzps+NzwcZIFJ8j+O3+XvRbn5Qdc
qo7Qef93zWBHlGQkh9+qZSO7Vq0jfFRlvgQQPtkbRy8QeLLRykOzCM8DHpEp
hCd0J3Qo9Cd0EnQT9BLqOuo86jvqEOoS6hHyJvIo8ifiHHGPeAcvwVPwEzj+
F9dclp6y/Smtw3Vw17AiWh/kvViD+Jz2VsaA9q9PkHej/cdmaEwiPrtI9q8k
e7xmDdlE9hgaBUgRn93fJmmS/S7b2Ryyf+H6l6bEZ5ng1Ht03n5t57+g8+4e
ouNIfFZcWjuB8Fnk5Hme+Lwkq3YS8bnbrojNhKez+/zVhCd0PHQ99Dx0J3Qo
9Cd0EnQT9BLqOuo86jvqEOoS6hHyJvIo8ifiHHGPeAcvwVPwEzgCV+DZebXb
ctoX1/7ZX5bQ/lf2Vu6k/DzjrLQE2bPNP82E7OmT1iuC8nOJlEwK2Y/8fHjf
2dOUnwc6B96i8yYn5kh5ifPaHNFuFvgw64PbZhA+c3N2XCd8bsU8GUj5uXfJ
JBvC802HkRqEJ/oi9Enoj6Djoeuh56E7oUOhP6GToJugl1DXUedR31GHUJdQ
j5A3kUeRPxHniHvEO3gJnoKfwBG4As/S/j1J93BcYc/YiW/PkN44NDbJtcX+
szk7yP7+CS6SpDf66is8EXqDKf9xGkjnzXgr401646fGgaOEj//8hJuEz2kF
PU/SG77zd3UnPAc1Nh8mPNFnou9Ev4m+CH0S+iPoeOh66HnoTuhQ6E/oJOgm
6CXUddR58Ad1CHUJ9Qh5E3kU+RNxjrhHvIOX4Cn2B47AFXh6SbOjZDeut6V7
llkL+/WWSnYn/bz3ct/xdN6ru6urST/PUzLUI/2cnPKB+gtmPf5nCOFzT7XX
WNLPoaGWjoRn9fyQ3YQn+nb08ejf0Wei70S/ib4IfRL6I+h46HroeehO6FDo
T+gk6CboJdR11HnUd9Sh/9alDIa8iTyK/Ik4R9wj3sFL8BT8BI7AFXgOlBsu
S+fE9cPPnWvpvF1j9alfZqsklalfZkbnNi4mfNoYXA+jfnDgFO+jhOeeZ6Ms
CU/MQTAXwTwEfTv6ePTv6DPRd6LfRF+EPgn9EXQ8dD30PHRnqw79pz+hk6Cb
WvXSv7qOOo/6jjqEuoR6hLyJPIr8iThH3CPewUvwFPwEjsAVePqqh9Pcp/XK
T7NQwicmP2EpzTd2z9O7SHjGfbiUS3hiroQ5E+ZLmINgLoJ5CPp29PHo39Fn
ou9Ev4m+CH0S+iPoeOh66HnoTuhQ6E/oJOgm6CXUddR51HfUIdQl1CPkTeRR
5E/EOeIe8Q5egqfgJ3AErsDzkZJXJOGI65tt/gMJz0fDrvpKa4n7/673Gobt
OegUw+qs9sscPFvMZRJWfju4qJw/TFLuKnv4EYv/471crGNTm15F0vr5F6yf
0Hqsw+9hfe+2s+aeGlHMjW3urq67Xc5HuuWot1nzhAXk+L+1lSzgao0XF0a8
rOQyb7vmzTkVwZrGFWlJe2TyKTIHDicrVvOVYwt3VtclsqaCIx+McmK57quc
BQYXyvmDdSo7fs0oYs4ar3seDTnJO+lNP/7COZ7fqr+bvGpUHUs00ZE9FnKS
GS4e3HJ/4MVDLfcnN08wNs6JZetSRli07NO4aQvt87Fv5mrxXPZB5rorPdfz
8rPN9FzYjXPAfinlDKU7FqUc18JHDQHbaqJY/JwOGZMX5PGCU3oqwwcWc/kO
u+1o/3XaXvXDvmexrdqyyxomlrOnd5OitdLz2NqnMX9tbJPZ0N+uN3rK17Ce
RUPuT13ykd15PrWTrW0yd39/+hrdH33t5z26rz12ZITYh5dcuraW9ok5tTuJ
9rlWvG27+YI89qL/zj9a4rm79dRm0nOBL/AGzrAP9sLOMzUa90b0LWm9Kk89
/nNSu3Q2fXNtlc+gQraluX+/0esqmNyW5lCpb3GsXMPjlFjH2zzxiqT1mTOC
Ok0W66v7jTgg9md7LpU40P4zNi3Uov3hV/gZ/gUuwAn44Hl4Pp7rc2nWULGe
f3HNNNIS64vry9WHi/Wdxu+9KPZnu/KSC6XE/uObp5nT/uANeAT+AHf4Afjf
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
6kV7G+L1lQj/aMLZcuWyQz1O5jKXzzufyYnzfjbe0oXOe8py6k1hPz9R8nM2
2f856XwM2T9qYcRMgQNTOKP1qb3AIWqGogfhgDqEuoR6hLqFOob6hTqHuod6
h/yIfIk8iXyK/Iq8ivhEvCJOgS/wBs7AF3gDZ815UhMN8kparx0f7g01WZ3I
tjT9vd7QO5m90p997fOtaqY31GTBsZ6prT/j/3Hfs0/nevEzD+lz8Cz9f6/u
qTPovuHXjxIeJQWt17sRrO+bk0VMo/yUhXge14xcrkvPNWVmwfTcwc/9DMQ6
rnLDtNJdrF9z/pgErff59uWO2Jf7hXfxpeeWT3xvTPsXOjXMFeflb+40zqPz
jp8pPYnOm7ugbLY4L/97c9waOu/F7LcKdN6YoRUUn3xUoLM+xWuIi0xbilOd
okQNgT/3L3QZf1Pg//qHXALhv/GzXndRb/iPVDMtUX/Yu+jHT6juPJNynybi
iD33q0quFXHUlsuvozjK7/ZSzSlJ5BnD8pcuwl/5Ove/TBD+6hnk1kn4nXla
HGpPfg/9W1MjK/wOXQKdAn0CHQNdAz2Deon6ibqJvIM8hPyDvIM8hPyDuEKc
Ib7Y5pGyhg8rmJSs1JcxDzPZo3IrwzVDcxj8Cj/Dv8UH/5QOOb81/PG0+nOb
/Er+/VzG4D/4E36cumCkutifd1cLfk/7z1Y60p32r1ZSUqV1uF64G14WJda3
442XyO9b5Wfm0nNHNTM9eu7gD3nTyL8rTYySyP6jHfp0J/v/nZf/3/MeMMv0
qBhWw+t0vlqoLXzKQseYhNhdzmSn5pwYKOKUhUz0T30m4jTLIjSM4nSoNyf8
mXXpqyuEf+iE+rGEP/Qi9CN0I/Qi9CN0Y5sK2xPkx4AsX8V1mg/YBOPihbQP
dAx0DfQMdA90EPQP6i7qMOov6gfqCeoI8iPyJfLkgxv5v8cI/y43MJ1j+DCT
n7s9dRDhjzhEXCIeC2/XPyX/zrRZkyT8y//3cxlDHCIuEY9FR/K7kn+Vp9UM
o/2PZ2/+u1rsD//Bn/Cj3befpvQ8XLcW3r1Cz3343m4qxbVO05NVZH+U2kkj
sr+L1ftuFI9uL93OEG59201+TLjFqPq1+PfMPPlzwr980lK9u+Tf0VU7B5B/
rRrHTCZ/ud3o1+Lf40O6tsRpyTxVTcLZb+eZeorT5Q2V5C/2JMy7LfnLwHdu
i9/jgm+aU7z/PXFYmvoAyTST1RTv6AfQH6AvQD+A/gB9wWLrE+0p/28tUZoh
8gDTet5OgvI/dCp0K/QqdC10LvQt9Bb0F3QXdAN0BPRDobv+zy4/8tmjzTn9
TjlXcO/1Ng6Hkj+yGcMXPx74ZFX4z3GeDzVkarl2mLr2ctk01qHDGznZH/k8
YseXbrTewL7SltYvNdnqSvU04Vf0duKb3JR1LXXnoWlTyCaTGu5iOixDoT6V
v5siOf36lTgWp3qvJa82976tKvIqXzLWKYnO9TI3I4jq7Jvgy2Zk/7JAh5Y6
u7fpNRe4sbmF4SGinjK5kl7XCLeh0sMnUf11mTtBgXDY1NdwH+FgNW401VN2
5Vi0NuFZ9fV4NeVVg88L+wvdyEI2TJoodCN71ql3L9KN0P3oA6D/oVOhW6FX
UVdQZ1BfUFdQZ1BfkI+Qn5CXwGPwGnxe5u+qJ3QUvxO8YIrQUdz4cYMR6aj9
jRdDhM7k0z4maAmdydcOi82geK8M/bKedMvKaM00odNYG6ehbcn+928+ryYd
uK+XdQPZb9fQ4EP2157o4Cp0IAu8t+q+0IHs9FGZHNKBI3Y5ZQmdzAI8wicI
ncw+T1pvQzq5Q5VaptDnLNzGnfQ523PtxzXS5+iL0CehP0JfhD4J/RF0GHQZ
9Bh0GHQZ9BjqMeoz6vL/0c+t+Rz8Ax/BQ/APfAQPgSNwBZ7AHX4A/oqSb35/
npXPK+eFxZUczeELvs5TOCz6BfyM/8f9PwFvsgQOTMPKNU/0I8w+Z8RawmHj
IhlN0cex2wM3x4s+jmX3XNyd6sLP/T5fRL/DJHt1VBP9DjuScX8D9Tt7xxk3
iz6R3d8pESb6RCaffPQ69YnQ99D70PnoB9AfoC+AfoWehY6F3oX+he6FvoHe
gc6BHoI+gi5CHUVdRT1FXkaeRn5GXkaeRn5G/CMfIA8gXyB/IG+A3+A7eI54
QHwgLoA7/AD84Sf4Df46tXVIT9G/M/MxytS/s6s7G1JqRf+On/H/uI/5DuY9
mPOgT0DfgH6hVRf+04nQh9CR0JXQk9Al0CnQJ6hbqGOoX6hzqHuod8ibyKPI
n6hnqG+oa8gLyBPID8inyK/Iq+Ar+AveIo8gryCfhGf7D3ZoU8FWrpe/XnG1
iHRtX9XcF6zUTsq7r00Z6z7/o/q1UyUstrjBj+aZmIthTob5GOZomKthnoa5
DOY0mM9Af0OPQ4dD50H3Qe+l2y/Ld5seyZpmj+0216qO1c8MVH1/9lWrPoBe
gE64+b1faOiTj+zxPU+t6rW1bLFixGXCAfUJ9Qp1ylVy2PC60CxmZJHYq93X
ambW3reK7uP8wAM4AC/gB9zuGx15pyRw6T1ukiLh8Cl5vQzhgJ/x/7j/y0Rh
mHgu1378l57Lv6zrKUU6RCW/+Zmwn38/7DJM2M9Tg+2TyP7LvdJzBA68on5I
V4EDjyjIMSUcoGuhc6FvoW+gd6Bz3Nau9CD7R79QYDTX3NUz5hvNM0eqJFWr
inxy6MLJ8yI/sLnB46woPyxRWT6b8kbgVNmW+6vLGyzpvlb2EWU6/yLNS2E0
F333U7UL4XBt5funIv+z60+rnor8z5xmLzai/I9z4tw4r6+EUuTs9fPDZ2gO
Op21to4tz/2eu3d7NNvyNqv0nkkSPyO36PFX7VqmYSS97NKBaKZX41p6pVce
/7q2x/pZ+lVMbmXWd8vwGDaq+WMd5ZG0j8/CaR7V8fcsN8onwBG4As8hQ5U/
7TJIZ1vTNNafk65hZ+VvOyfMj2OPi+41VrZZEr5mxaaGIsGTC8HxTu/exzNl
oyvSuw3SuUWYuQ2t721psoHW59cN2yDs4ParM/KFXUw2fG8z2QM/wW/wF3AB
TsAHdsAu2CMTaCctdCBb57qoh9CB7DRP2EM6ED/j/3H/q3rMjOWyq8P31m0P
Fnry389prf0k+kv0leVKO1RJZ7Z/20aS9jsYUuRC+6A/Qb+CPgX6FXoWOvaP
9047YT9/dOJZItm/ZkXvlWT/mRrpZ8J/vK/FqyjhT/b29ccV5McEx2uvRD/F
b71X1Rb9FJvn5JdHemCX6YFI0p9DTCOdaJ6zQ37tTdKf4CV4Cn6CN+AR+AP/
wZ/w439xWR0OfP7bP28NRx/9375razj6L+h16Hfodh+7o9/Fc7kkry6n5y5e
lbWMnvvPTv5u0JgbqkssWu380k1eX/StLOLUXieaP+i17S9D9RHxhvhD3CEe
EB+IC/ASPAU/4Vf4Gf5F/495AOYA6BvRR6J/RB+CvgT9SL7LuVXk95OXTBuF
33nDlftW9Nw1q7rq0bleT58ZK87FpHQSW86FPI68jnyOeEZ8I66Rx5HXkc/B
M/AOfAPu8APwh32wF3Yi76MOIP8jnhHfiGvwGLwGn+FX+Bn+RT5CfkJeAu8R
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
T0rcHiXiYtCneQeN+izg4+b8ueP5bB7/JO3SwsM17aq/nF8TxiRU+lysqnrE
OmZr/ZIScYef8f+4f3SZ3lURv6zmjs4nEb9sSvotX4rfnwpvv4n8xbiCT1+R
z1hHc60NlMfKWcEtka/YUJ9Jh0S+Yk8j2PO5Il9FmF3cR/GcmPtA5WhtPiuS
TBlOuN2ZXrGB8vyiFcP2EX7GfqYDWvL8vzhB3CBeECeIG8RL0rDO8iYiz8sF
rf1BPLr9YZQ28Qe8AY/An08Oo9xFPHA9k4emIj545ocXFygumvrHjSK/9vno
Lkd23pYa273Fv/9whx+AP3CHH4C/X3hjS73I/fqsJR8omOxpwR88AC/AB/AA
vAAfgCNwBZ5jb7RdL/Isu3R8xBuRd9nbyKTllG/hJ/gN/kK+QP5A3kDcIo4R
v4gfxBPiqHv9r72i7rOysyumirrPsu16PKa639nr3gnSJZJpU6yFTuFx1k+i
SSd80du4j/KFir5XS76pHZyUS3mj1H61Mq0LlPtdIH6PZ69+sprWj5R5OlXo
GXY7uruf0DPMt+Nn671Cz2h9U4wWeomp3zx+ReglZu8Wm+kn9BLW4fewHjoJ
ugl6CXoL+gu6CzoGugZ6pt9Knx/6vV/wwu413S+cr+OpR5u0JI49Z120dXaX
Kl3lIeWrLMpX1/F1Er3nRvSJZoFys9pXOV7lgY0yGda3anlmufLmCvWPDHkT
eRT50zauMalcIpyltv24uf3EOn545mKzwoy3bHvwn88Bu18yt20JB5onVnPp
TvN+L5P/1Iov8AbOqLuow6i/qH+oh6iDqAeoD6gLHyICqm1e3WLpmY/HbDlZ
yxqr35zivh/Z/i23lM5LRHLr2IVzdyjXsu0jZJOoP0J+R75HnkeeRd5Fvq38
bm96QbaET9S17514pIz30l88mOY/KrHXr2uPKua9JtxT39hYxosjlac4PIlh
0EnQTdBL0AfQC9AJK/khhz1uRezm85XOz4Q+N+a6Rb3WpjPka+Rv5O2zmcfP
yEZU8CcLLp2au6qQF85Psn5Q8pr9mrA/L1C9gn+9aXe7IbOQ16YdvhA1ObpV
J0E3QS9Bh0GXQY8h3yH/Ie9B10LnQt9CH0MvQycjPyJfIk/+ffs5cIBbLf91
JeGNinwSH3DGftDAfq9ZWMjnzu6atdzH3f+qoX8Svzwn6CbZDx0MXQw9jLyJ
PIr8ueP91K3ESzuPkxsFT/meYLtJxM/bg54eIl4yq89+gqd84UTPX8RP9BXo
M9BfXB/0eB7x5vMz5y/nJCLZ7IbPLfz5PtLaqvfHavZhWMVPV9l3bNKet+OG
z8pkeRWa8+h+r/jEFztl3/GYxV66dL+tQZaEwdVEZnhy7Yx538tZVNzsb8p6
hcw90tdD3OdJh8KN6f7SnLUVdF+7YmIZ985ovcaXjNb0yhP5LPPkO/p57SLv
86+8M/g3Q09puu+3+do68fv8qVS3Un3xHNXyESm0z+y1vxfTfWevGDt6zpef
k2PovspTi+niXPysgU4PER9s8oarf+hcscHVitmPqvmfgbOmzh4Twaa5e7/8
UJfFOiVefCRwY21+H/l4VuD2Kcl3LuE23PaQq8CZnenvoUg4n9IOkSKcO6w0
7CnyDpvzJuId5aFrx/s1txX5x1a6bg7lnZBB743LlK4ytTBuQfkn82dAOuWd
tiNsXog8xMJYhgvln0PLzstR/vpU9nGBQe8XrOhrxjDKY67rZVrivNPyn7G2
r27xq++WtsR7gnnhbsIF1yteJUUnBD7ZfQq1xXoeH3h24EqxfsHkL89p/duO
phYGjjX80vnmhY3HbvD2Dp2M4ysz2JXV5+cLO9mCP4srRb5k2y9YyZCdqAeo
D6gL32a8yqb5Z++1c3RpTrPvdM1Wms+gT0Pfhn7NfbNvBvGme230KsEXXt7O
XJl48rGHayDxpssNn6V0/0ieXHe6j3qP+o+6j74OfR76O9Rv1HPUcegD6AXo
hIXVwcfp9dNXmp8O0Fzh0ULPzTRPONQz7xzlZZXtcqepbi9R6+VH+XlIY8Bq
kae4bIIL5S2+/mpUt94iX+WPXpoc4VLCfw/vuP+TfQE/kRjpT3ZCz0HfQddB
B0AXQA9cvvm9r8izzH91X8q7bOr9Dc30uti54CpTen1XNvJxKM09Fn7Qm0V2
om9BH4P+Zb17+kaaR3/6cfU9zc18IlfeI7/8w5H9Xx1V7TlcXfCJxagE6RBf
xkVveEE88Rot7/3r2A12vjm2hS9BQbtaeLL1yo8JVF94u/NTKZ6+fj3SRHHU
713AJhE/XMKwswLFk6X7j3CKI/QJ6BvQL0A3Q0dDP0OXQ6dDn0O/Qs9Cx2aY
zfcR9YDd8As+J+oDc642NqS6gH4M/Rn6MjYlxYT0wJWN0guI7yf33Pkfz9Xn
mlEdP/N94EOKex0JWQuKd9f+d5yo7k/frL+D4v7IhueSFO/oZ9DfoK95fivj
hcjv7JH+4wsi37N1+ff+DBB5HnMZzGkwn0Ffhz4P/Z2TuYQGxf/9e1WkZ1jY
999/KJ9Az0HfQddBb0F/QXdBt0HHQb8tXZGxl963Gmn3eDR9L8GRLvMP0vtX
pUKWjKH32782qZlInx8d0alQk95vr9kx6Qi9r76/3u219DndNp818ujzuVNT
govoffahzGkzfW63xyifr3S/ad2PW/Q+/uOrjfXoc7grlhxPpfeHaHQdMGR/
fTk3jxptq/64kLs1xS+i91/hZ/w/7sMO2AV7KnoG1NLrSiMT735I3ZrHf10f
bUvzXtgHe2En7IBdsAd24xywH7gAJ+Azy2XGWHo9mE/OXEJzwgHaLyfTnHBl
2tyu9H5gPzmXK/R9DwblV/bQ+o3mWtI0r1628Fwb69pKduxx1yyKl24P9AJo
/jx2WuUSer/G1fMBPWj+3Nm+U3/6HMTerN7P6XPMV0xvJJGd3e/2VKA59bvN
0sfpfR0dpHzG0fqgp/7a9LmImk6hs+lzvptWvRxD+MjI9WmZj6s1T9ej92lE
z1j4jZ4LO2AX7IEdsAv2wA7YBXsqhjq7kW7bN27LIsqHhRM+fSH9BvtgL+yE
fbAXdva01xmftjWPhTnGvqS5fUXRiRPkR9iNc8B+4Au8gfP9pPMv6PX69cl3
krtPLWETvvYZR36B3oL+gu6C3oL+gu6CfoKego6CfoKego5CXUedR31HXUed
R32HfbAXdg436jGS+qN5O+Zl05w4UOpgKs2HwTPwDnx7KX+30l30UTsbhwx8
rFjMawdGFNH6D1OfLl9qlMe3615y87tcxQel1PyOGvyK7W57f3BQ93w+frnh
nMk6VVzeSTUxak4Ug56Gvoauhp6GvoauVo++eLIwNo0vPiVz716/Gh4g1fMo
1aONhxfKWNan8VXjZ38+LFPNtR3PTS47k8IiXPbpeUyP4bttTo2SUqrhIsUt
euWSzjxmq68aahfJ21iVD9q5rIS/3f4t69acMnZhdYbKO5dbXHFN0/HH89N5
+sCmvjQ/dJs3rXO0yy12Z45zy33FHtNb7r/cIrVN7M/KjGuH0/6HTfg82h+6
BDoF+gT1HvUfdR/1HvUfdT/p9t51UntKeJd+WnbPXpfyB4tqFg7ZHcvQF6FP
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
/je9dYfR/uoxz8kentFnZwbZc2fYsjNkD97v6Pnv/Y+2/973eDB/29c9ntUs
/+Gn4Yvb5/DXZWvDpHu9YNvjZ5p/7FTLx/hnbWt/NZmn7HOeqlMZyZ78+7yD
8b/PO8j/+7zDgohJph6eVezop3aTMidmMj8beY+8Ayns9wrnafrtq1juqKxZ
51bmMQvF4YqrN8WxjQrDgg6Gl7PeOdcKj00qYgcL207avTiG5bzT/Ln/Zgb3
XqMSMnxDNXMLtV+b3SmRvdqmMvXrtmK+o0fvk4pnylj8gMuHrZ7GsfXuGsFi
H+63r3cu7TOspgujffB9fHb/vp+v67/v5Yu7Wqmfl1zLt7w+rzZiUBT3H72x
i01cHLth4+XW6JnIOjUeVPBVCWbvq+cu359Vyy728x//wqiWOfY9GnI9LI59
tat/kLjoA5Ob9kGuVKmWDTac9lLySBLrk6FrMUL0s2rLk6SuaRfxqEQ5NQvH
UhZhvX782BsZbMFKuV+GNyp581X/5VPLctm+k173vWYksbaBy1dl/j/C3juu
5+///w+VjIYdL1s0yEheQpyo7IyQGdl7V/ZIZCUhJCNbg5JSSjoN0ZIWlZK0
d1YZod/j3uvcXD6v5/f1vvz887xcHpeH8zidx+Occ7/fz/1+vRlU8nV9EzQd
l7xm8RVtNd5GxzE3GR7mc8EP/JC19e6MOmm9m13z8ajpxFEVi0yZvnyS5De9
VDDckMuWXNpi6HFvVFhmsyttfG3KWWbqYu+4XtWsmfmgiQltpobpp7Uvcdz5
4n/yMO++Y/Zd5Mv5ineuldv6bA775/f9n7j9eWGH5gj70ytqtLPVsGqerpZ1
rdPbuWG5F5z9K5v8b45l80NKf9P4y6fqzZTGn/U4oNucxn/GElt7Gv+yjmef
ne7qwxOirRrG/00dG0Xjv32jRrY0/vzvUafu0/iDb7lNhm+5qXmjTzel8W/l
vWyYNP68/7szvWn8jbeyChr/D1vznaXx550+HPSg8edzVRbS+CuWtp4mjT+/
a923C41/2fieytL75eMN2uVI75dX6M6fRu/38jw1Y5oXo5uOcJPmBWu2ydKU
5kWcqHdwEfUOkaLeoU3iW1OaF5vnHGHSvOBTVzkcpXkBjuVQGY6lSc6AGzQv
wrabVUjfMw82uDmSvufGQdqFNC8SPeUDpXnBz1u9nk/z4nlsIyOaF94RRZel
ecE7Jz/YQfOi+V+r79C8CO4woZjaKUkOMqB2Ki5yE2k+8rk9zi+X5iM/5Wbc
heZj2w5786R1gOd56W2R1gGm1qZZOq0D/pfiE2g99Nreu183lsN6LtMIovUQ
+cDKIh/4usgHXncuP5fWQ/cTc9Ol9YebDVt0kdafjG+Bv89I6+FCjztTpPWK
X9u0oz+tV1tW3NOi9TAuPbiptL7x52Od5tP69uHRuTxaD7sLvfK3Qq98/cFh
U2g9tHQ63pjuZ62uWND9SctS2tB6qDXh9Xhqf8KV9jrUfuWate9pPVS7p9DQ
Hz7hQMN6CL78RMGbXyM487WrnaJoX1u2cdwRab9g4/qV9KH9omqofQfa12Lf
tP8l7WvMuzZpPe1rr764XG2XVMjll1glr3+Tz279VLWLTslgoSKf3Ezkk7cS
+eQtMgb8oH1w/YjWptK+xhsFeW+jfe3nmp+6/6UbPm5hrD7tg4f2Koyh+8s7
NLWh+1e7tfULKMngFt8m3dKW7BnrqDX8XqMXzEm9a1pr71w+5GFtH9vdpfyh
56ZPaR6p7PHdGbRfM8c2Onvp73IOW96J/q74QwMHkR1iWTjLSNrf2dqghx1o
f8/Q13hCdoiRgi+T7AHW5kj7YWQPDE5Pyhv4qoDX2ky8eryimL2/cXrYzoRw
ZvJp6XuyQwalPGwr2SG8znDTPbJD/EXdx9+i7qNc1H2oTFhFdg7bbdHzb2p/
7ZKjA6j97y9265G9sZxHjqL+eHimtqf+rHf4oeQj2b2Drj8+Ltm97GWvQaFk
92YvGE12F18e8IXsLma3ptkrsruOHe7ymOzbq1t26Ej2LXtUHGRB9q3B1DX5
S7694xF7r6nXHC1n925eUo9cGcwShhy6Snam7m6jQsnOZDuVzg8iO3OKzPmX
sojHuh2VeztXsjNLVhxq8UilkjUbmlu7SrIzFQQH9bsMB9UjQJXsbZaQ8JTs
bfZp+vrp1J9E55dkt7MN/eeT3c6mWNenUv+NejiY68Xkc+f68/YbrxexZQfW
bSa7sY3XmijJ/uRjFHdFSPYny5oSq2wp2Z+q2/7OJjtfv3JxT8leZS/4vAFk
r96fljOE7Pmi4Zrhkt3LYo3VmpDdm6r5oT3Z7ZfVZ5ZJdjvTzu41k+x2l6Kg
45J9zoxMr5F9zjqf1K7nkn0u92LWQMmeZxdjr1+X7Hl279P+WLLny55X9pXa
YQNyNhRRO946D6ZTO3rXvhmTvW3dxIvsbbbDO1Wu4bnpRtRP1jp4XkM/rbpe
buhnfeb5HSOPFHH87lNu19LENoiFLjr9RuNQAe+/qufMlI0l3N/AhMf+7c+O
/npeVt8oj3/9sOOZ6vQybnE9ZdDM5Q//H33MaqFb1/59xyDLoAhmFHGg79ov
VdwnQ3V87wHxLFwm7hcs/OuwyPtZk8ZnMOeFnhteSn7x4BqTCexuMHv0P/zB
5Ge2Q3J3lnDvqHWmVjsLeHULm7gzTg/YELszA1KOFXH89mtcmNN6YCDL32Uf
wNtJ6w6b5LTTt4S/sen2V3RCCDN4EGf/IiqCl/Pz6RZrS5m/fP/JnhV5LFrw
Kz0Ez/Kj4FherioY3sShkB0Iv3zy2eli7uHu02LlFz9mWzn01UjbMt4n7sgY
//j3fMqpdXoqEx8yecWlLdT9SviGvmcqZ/zI50nxN271GMTZ1KvNBsmPieNP
K8Jub3OsYmsV4317usez4zLndPfEucnC2cv0w2pLWAvv6JSPBflcZ23S5ppK
P2a9LnrAmHkVXMf24cqzBdm8w9fRfhtbPv7DKVUWnNIO/f/hlN6+eNJCTSuZ
q14bEeUysIrldBwS3u9HDOO6v4yjSt7ycc4/7b66lbP66IwPVyJiWEC8u8nV
Afl8z/iTKo1ulTDjpOdbNubEsyDr0nGVVWVM+4L1b7+273m/+SN+l1YEsC55
5t638iq56r6CuFDfNJ6WuNtspWMUMxJc0+9u/3BNdwquqaxOtJrQiY7frvpV
qWvRn9+fh6723qkYz6xM12huUcjgHUYGdXx9o4INtTuwe8ebRKb6+bS5uUk+
f/Gp177ke5Kda9JJ+dfWOGa5MCt43thiPkI+16JApZCtHD381LrKGPZMRhcv
UeiwBFReKw0Lq+Jnh9W9GLD7Gb9ktXLITdt4NlrwVHsKnmqM4Kle3Nl8t9zm
StYuKj9j+IIU9ia7dNjitsnstYwO3XahQ2dyKjgoxjKP/z3rm3XakWI2ZOvw
TnNaprOPta7ucl1KeYjHqOnbOuSxSyr5ljVMsjcmxy/TDSznnZJclm42ecuq
n2Vvb1YUyyqFTkwToRtzU+jFrBtvOvZWm2oeuqz25uruLvzNngnKaWsT2RnB
fbUV3Ndegvu6ZoSOQt/G1ezTsXuGnc8FsGj/aK/Mghd/dNOKZHTTTMvMy78k
lHGnTON7OinhLPmgZfu4b7nsgTiHS5TJV2nT3XHwr4IqPqvTjqfT10UyxZcj
1ApfxLM4oWejK/Rt/ISuDdaLNmL98BLrhong750TvNkRgr+nNVDuwtLnVcz1
h5xys5II7l7wecjMjol/9N18ZPTOJkY7r+l/tYDj99vMO5fWT3/DHlbtOKk9
uYLv0jCdq2OXzqct7j9C0zqFdZ39JWfkxire3mfxjdvmCXzs+W9/N7sQ/0dP
zVu0XyTaf3rsU2js0Cq+bensvkcPprDt49u3WK36lJ0W68hNsa58EesJdMq6
CJ2yKUKnbInm6KyTPzN5Znh6W7VGFTzlgeLi9RlJrFjkTxTL5FE0uhBybaFk
R5W2/z3485Zc3iis707dO7F/dKleCl2g1kIPyPWI0hjjmAr+q7HN4Eg16bvW
vSPXYlgosxLc3UZ//cPdzRLc3W1CP8tQRj/rd2y1nzS/WPvl9xdJ84uPObjG
mebXvNTFIde+JXPTyDt7LBWq+GDVBLl5FbGsfMunXXee5XJt39f9vtmV8Tp3
/cpSk1iWkTaS5jnH7/ENed1pvnvnOQ2T1hk+9OGHtg/avmfRT34qlEnrTJyI
l/qIeOlyES/9y/rrpHqjeG7qazzQ/1wVLyweGqlRGMt+n3P2Pz/hDb91YZOH
k2QvJTx9F3nhTDz74Kg2UFpXefAN/QxpXWU6g041rKvGL8+c73e9mJ+v7TRt
4tJCduvouu0t7wSyoHX+MZ/9C3mgtkJvww/S+tQpzYMFPmWOpzPfGUY95UfW
WpiX9KjknionVhsvyGCdBO/3suD9LhS835mbfNKk/YJNC3Y3lvYLNmBXVk/a
LyxO14W0VSjmu9+1LezXrogd8XQ+PscsgMmZGw6R9h3+wy/GRdp3WM9LZxv2
HdOJf9WMccnnh32NbN9olbLYui4KC3sE/tE/2iCjf2R8zXCMsW8Ei9RN9t96
pZL5a1edTzvxmjWW4QbvFtxgWR3ws0IH3GeBP+2vf34Hdg9MpH02Os90cnZS
AXeTj+4Yu6CYTTXq98XkRRx7XP7ky92z+VwldGrumL6ljF1Xklfq/JB1DZ4z
UPXqe94npstu/ctlrHcn6/nnav2YuqLu1mNLc/hOnS99LJUrmGnmkLS6Cn+2
c7uvwrgW4Wxo9rns8eer2fqAVj9sBgezD7ndS6+mvWT2y/U+HkyrYnKqXYed
ORTMfGZt1tyzOZ0dnTTrsfmNShZu9jG7UVHg/6O/s1fo78jrdayS7BwW8NL0
qWTnsHYXLvYjO8d7VVkp9f9lQEGJ1H/euXX916ZS/1u03uVP7yu54/cK6X3x
McUXHeh9ucoVNDKW3stVr07rpPfCw82829B7uZjt+ozeS68fV2eTbljzZ6rv
GvTCbsRvi9vwho/96mz6YWYFr79/Qq7R9Hh25rr60F/xb/iBV2r2vTaV89w9
1+r+pnwGwVHlgqt6QfBUvwqOqqHgqi4XPNUulRc7XDN/w5q6nTHrPKqCf3gW
ottL6wUb0/rXdfrOC6smGUvfOT+ls+Mgfef3alvNf/ygkN85etLoU3URD4zV
Co98+ZS9mK6UMc7iHc8/+3fX/r0LeFulvetJj14pIOJR4IRElvjpimUnM/JD
HCMGVJezSQ8nPThu9JaZNdcMW2ZewrQSbDf7O7/9w3V9IDivlwTfdZVM/d1e
US/GFmW6PZyQyF08PW2ofZcOyi+pfa+C7TvGW7xjvNfuX7pSf3b83WMK9UfP
J6lxoHw+XxS1V7lw6zueN3HDT7lFBcy1UtN3QJdC5iZ+O050+ja2STpb1MXT
8tvgPFarsCuiiWYpG+zy3GnOz0S2d1UU2T+s79/7G+yf+bFtG+yfIs1jZ6X/
z38/dI6idkrMvFqMk9q53K9yg/Rc5r70pneB9NwJNSZP6Lnb1Ec2zTgeypR6
P7o+YGoQZ7lKiV5e1X/GZYoYp15ifGyEXWQm7KJWwi5K07t4Srqfb9Bd9ZPu
3/vkUQjd/9b2ZEzJk1L+K/Nl7tuCLKa3aqfu1FeZrMl0j6fL3lawPec+b1TZ
84rtvXAoxtIymVUvVA2VrvNxOvwYXR83+nAuXT9pPeeh255KnrV46cDWe1LY
l+wNhQauSWyNn+8OsnPaOg4tlewcbv3B1YDsHDPHBVuk69zozW25EdL1Lp1L
p9P1Lk2bhVD7qT+OnZXa5+fPXWtoP1T1dJXUTxaQonNE6idXV/KrmSL188mx
lg32mIb5S7LH+P2vnNPfG3v1ywv6u2o6ukfT/THms4bQ36WgMPAyjUPRq6BY
aRx49eWoZzQOpy61PJZ8PJRPyTpoNGRqEAvaVZhG49wo8J/3VCreW7p4X7tM
t0wk+zZH9Voz6f3yF1qrt9P7Xfzhkyfdt0j8Jk1/1pXuz5qaUPxaeo+hCyYv
GCy1f9any3Nqv8Dj9WR67w5qgZbS98Y+tl/gSu9987XCjQ3zpduAg9J8YfO3
ztal7xPv75V4n/vFe6y19pgWJM2jbUm21epmWVz5+iO1gdJ3HizyfyxE/k+U
yP8Bx7VEcFzPC45ruRgXjFMpxmewRSuaLz/uWS+l/lRf/6FM/RkQc9H5gGrR
n98vPorfdm1PYHJNXGkdYG/rD4yR1gG2qpHCWVoHZv44pSz5NazNK90Kya9h
Ee1GbiK/Jm617Q1pPWHXLunSesLeD6lbS+tJ8tw1eT+ldcxe/tx1aR1j0+fb
PqF1bI7Hx2tXzd/wgeG+66V1ic32+1XQU1qXagWXNV9wWVMFl9VO8Fc3Cv5q
O8FfLQ/K6yGtk0xZL9mF2ne46ORP7RuK/euM2L9cxf6lcN3ZX/IH2SHXRycl
f5Ct1dj75ankDx5XOkzrNls4IoDWbfa15OxPS2ndzr66hvxN1nWOPfmbLOPH
iBjyN+01xtH6zw5EKlbSfj16xuVTtP5/VL9k13pvEb9V4b1A+mUxKzY6JpU9
ZgEt4si/ZqWR5TMk/5rtrn8WQf71klOrq6T9hSW+6V9I++PB892UaH+cOuxj
1M/wQr7O+6G1T6dinu2e8/n2jnCmFVh0j+IS0z+rpNC5WODTpR/oXMxexh+H
jvzZBc37SPsgV1tlQvsglz9s9Z32wfiZQ8Mkv5uPOO5tTX63m7H1FPK7a3Ye
y5f2U+50Vpn2U362cWcr2k+/ytT19xR1/d1zisvmrsjkzZ9OavpIpZJP01Hp
QOeAqPcPEfX+N0W9/1/3T+bT31voGlNJ++n69ho/aT+9LLcvg8ZH7WzuLIo/
PD46tiH+sN2poE+b1Hx+8EJyQQnV7y759iL5VhBzcdC8qhn4hrdO39vdWK6C
nwyb3zloyUv28GdY77LVafz9dg+FPON8vnLD6YO71xWzcfPn7Nlx7wGfN6nO
4NilbN7/d/+xSw5X/OE9hQn+0wrBfUr39axpMiaOmS+N8SQ/3SVv7wPy0x/N
e1EltcM63mzU0I7SdhNTaueOc9t/na8li/O1AYLneEjwHW0F1xG6odAR7SH0
Qw+1/e1N39XnJg++kF0RdmyjI31XTaeuaPgOlfwONsQ95jtMiKXv8Jv30N0d
tUt4I80FGl1DC7jiSaey1KBgpjS5U3xr71y2+/Z8PdvdpWz2lspXFJ/clufh
KtnDzDR8jK9kD7OzOSbBZA/P7bBoYFTJW9bWptFhigMYD+1US3EA5QU3F+48
/ZwXjtHX9LOqYt933P06eEoS68JSWt8ofcUXF9hfqp5YwWJXz1o+b04aC4k7
E9f0UxnXma68rpHae55+pIubSl4AGxw93vFvz3Ku28d+R8ub7/jO1Jk9tm8K
YovXa00kf8Tr2mo1yR/hsxQ7KJE/svv29hOhGmU8+e/sdlFb3vMLTTRvzVOM
YRdk9vEOYh93elrg9dAjj9XkWV7w+lTClvg43Hw/8gXrWKehKPkF7N13a33J
L2BuzbeFkl/Q69nBgWpayWzImnUxFA8ZvWvuU4qH1OQMrPivc9LB93NHk3+h
2XLiIGpntcO2YGon+93J/zxPTJiRNV+yK3jXGyciya74su3FKbIrfqb3WV0c
mMu3B3xS3dYvnTU6rOTlESD559Na/B5kVck3qb26nCKXwcuaKs+cYBfORggu
6zzBZdUSXNbiKxpbHmWUsDe6pi/HHsxmZj+PxHQ9lM3WNH2/VfKz2NnOvQdJ
fhbzuX/1B/lZumd6jzU3yWcHAnocoTiJa5fADhQn0YqpOi/5a6yk6Led5K+x
bbeKVMlfW1u/vXazQgZzrzbqRfGW/qNND1O8xd9/Z/n//XsVxd9re+xOBPl9
u/c22U3t3PVt2YLaSSk+ruoyfHHYqkPjas4mV7EEx3fKLsOTWdps133kD77+
+LcO9bNN332fqJ9PZeIzKSI+A31cRZm4R+yuo3rHTpRzh4XLbeg89N4iRV86
93kX2aen7tEqbuxls/HGhxe8VyPFsQsynrPu5mozVsnbsed2m0/5+bqw2SNK
r7T4Xc1eibhNjkzcRvtWzS3Jv2auSw/0lfxr1u3I82PkX4/td8tKN7CczQn7
sYniMx+0Z9pTfGboxFt5IzdWsXue3afdNk9gP0zHT6K4wXSXwXq/CqrY67rx
SRQPkb88qzvFQ2Tz1SeKfPU+VcUucl1K2ZEiZ0uKC+1M+ms1xYXW16Se0Z5c
wfSt5w3UsUtnP/LcZlK8QkHkqW4Weap/iTzVEt/7YxbezuRf828oWLaQ5mmF
YYRDB2lfrcl0o7jH6WfGnamdQp/OxtROVZCJF8UTYuas701/78gvW+3o731m
MLeA4iGf3EJG099VML2JIf1d0CfWl4nn7OnvpWEib8er07tND5bGudue7IZx
zl+/wXXp8yq+xW/Ue6WSCFbXx2wuxW1cLr9s3LdxNR+hXLKI4lH5y5/FUzxq
b472p7CwKha63v4wxeWGX5r4+oZtPBtzKbTH9xNJfKRP9NizXX1Y5IkljnSO
Wbxsoen3z1V8VkW7RY+HB3C7eyucUrMSWZdLYy9SvGjiwqdx9Nyh63oa0HMR
7/ooE+9CHOmGTBzp7Kmg/vQet7i7DjZfF8m7me3sTO8xfsvCt/TeHX9X+lK8
aNP9VmNpfHJPh4zVnVjClDWqc650yGaazdtXLo7OYQdFnrCfyBMeJfKEkce1
QORxVYs8rmMnY0tJ7zBQ6CIWCj3En1uSraT2eYdwlUBq/22TpuHUvrZP+QCK
v02YnKND/Vzb5m1L6ifiV7J/1+d1Z6yzbmfz8BLrphnn77DLm+Qtd5+pYKv1
LUxoPPclr4iTxpNVaVudoPE8eCqtCcUPF6waEi29L54dscaT3hfiWuoirmUm
4loRChlzaL4M+nuxszRfeIDR5500X2o+rblC86upj5sBxa8OeHxv+N4i26/W
o3HLb2I0xr1DNq/tcjqF/q6ZWq2O0Lxo7DJ1szQvuLPLcSuaF7L1EWmiPuLA
wychNG7/1o0sZqmjVnyzvJ3JkjpGdJDmBR/ZND2Y5kXjr/sm03hed1/UkZ7b
Td3+Fj03YHLlaYrTrlBJX0bPdUn+NJOe23Gz7gKK07LFlYfo73qm330z/V1r
dW82ou85y8AhncZnmJprHI3Ps5UnztH3XzesvAPFLTtcOjibvkOnE/1saPzf
f9/RQRp/fiotaQGNv1efft3pOzfzNG8sfed8aYeshu+80Wa3apoXKq7GkdK8
YC1DW6bRvHjmt6mY4tg7trVtPFC6vthRXo/i2IaXLLrSeng0sMd9aT1kzX99
GkPr4eA1dXtXS+th+u7eg3x8Xbjj9zXuNE+3i7jfCBH3cxNxv4zE9MCeq3NY
M43mwY9Xl/Eu6y8On3QglTnfVnlEupvfhQ7nYKG/uetqabV0Py844OFF90/1
PDyA7l8o4pMJMvFJXIeeeRtx3WRNbnGKRiXffE/+XuPmaVx5esecuyOSmU5P
HT9aZzwrn996KPX/s+fGhv6rd1LRp33hfnL6BsoHWOr6wYf2hbODkvpI48DS
nS4toHGo8ur7e740DhnXdXxv5VUyd7mF4aG+aexr5xad6fziTP2UyZJ9wsYe
1G1O8dJbp5dkNZfsk96Cj91P8LEzBB97t7/RSNpniwyzTkr7LM9SU25J++yt
YIeNtC/f326hT/HPq0vGfqb9brPy4ELaZ18qz9OS9lleZT1nM+2z2Z7lp2hf
HnNijT3FUZ/sNlKk/VTe/sEift8qbHX2/q/Sfsr9X9f8OiPtp90vNm9P5yOq
I951pXZ8CpRWUDv3nhvk/9/z/Rxxvr+mUdBEOjcxH6/kQP0MMk1qRP0MlfHH
/YQ/rr/FzVyyN7iiVs8Syd7gE5zOdukm2RvFS113kz1j83vBHtt+6byNrxEn
e0arU2AjPatK1vORxinJnmEFuzYOIXvmTouAjybby1jvMb9SurIc1mRg4XbK
cxgwPm7QmHnSerOrx5KzBdlsTG7vo3SeFbIohexJprW4BdmTbGaOuQPZk1uC
Pu8i+9Cp18VBkn3IQqufniH78NX4jpMobhMxTq7Br7+8uPNO8uutH11uPFo9
j92Otxk5r1kpd30yRb9LQBKLKrg+gOzeLyGDye7leyL7NNi9xn3qbpCd3G1W
uTfFjcsM1KLJTt6kMLEf2Y0r2kyNlexGXvsjI4zsRrevTdXIzhw6yWYwxZ+j
7lQ/Jfsw47PZf+ZXGAzzmkbncVrqi59SOwZZhiHUzvJbFv3/Kz9Bw8O34Zyu
bslvOqfjSbn9P1E/7fWO+El2L7cYdPqMZPfyvefe+pLdezagl4s0Pky/8fRW
ND5De71ZTuPTyUxZO6lfEUs+4LjlpInkb+32eTisxWu2p37KCck+Z/aLDbdJ
9jmrXd9Tgezz3dVm2o4GpezblqwiysdYpZc3l/IxEGdeL+LMtSLObDGu35NS
yf+a0yzljuR/sTfBde3I/wofq6IoL/lTj63S70j+FO811ySa/ClwddsIzq6n
4Osa7Y35V57GKDEOyoNvjKTz09Sl9TepnejW4ZHUzj4ZLscHUecVvFxhj+Qf
seOz25B/xFpbl8WQf3Rm2McdVYUFzNJ549uvxcXsS7EepzzPve+z9Ol8OeZ5
v7Hk7wdPOtXg7ytMtx9K/qND5Fk7x0vZzCHdPGCx5Pdpizz5FSJP/pnIk28+
53UI+dH1izS/UFy69+YtI8iPPr1xyHHyH+XSU/ZTO+uOePhTOxMFV1xdcMUH
Cq74hP5pjpKfy+buWdtP8nPZ/qAq/0DJz32e7RZC5+aLD1bbSP47y7/DtMh/
l43bnxNxj441t8mPZhXJ6wolP5qFm33yIz+a/w89+kH95lD+M9tzfD3lP7Mr
c4c8ozyQtauU31KegL6SkjnFMXRNC8PJT6/d46dAech2leNuUd7CMut28ZS3
cOhgU/vmZeGs354tKdqbqlnuC7/GYVnhbHNFmXUn+yQWqx3tuzSgijVP7Dnn
RWko6+G9OyYhPZ29TpuoN9KxkpWoq7zq/SSI6RitffozvJA9szTb4tOpmE3r
ldztzo5w5m7tFkh5wk7Tq+IoT6Nm6rEOlv8RD6kU8ZCOj67HSu3zjXW3B0nt
c7tmZ2uo/QlTWm2T+sMPuD7wkfrDB4UtOUH9qTv6epvUf/79knOy1H/eLpVp
Uf/zesyfRHkaIxi/SnnX+hWLsunv/XB41OmAkgwW36TTPe3TFawqZ5YP5QvF
FRyK/i9d9S586WlulcjdZ1jtnr2jir2U/+uekmMM+zDyyJDptVlcy+NNK/O2
FayrZ5zzdfNYNqJL31s0r720ltRGSn6xUeYMW5rXF5dfu7fyaBo7bDx+YYJd
JZthsrhpgk88i7yg9Pu/9NPbW7lkSvfzxuEtZtP9Wj2t5Oj+lYojP0n7LBtS
WXVI2mdZ3ULraNpnx19zW5JpUMly3m/To/zJvtMiB1L+3qAprslkD6yyrrwn
7e8s7kg7M9rfTxsGVA+/U8a+aalspzzM/ONnOOUButQsn0Y633ZC9/uL0Pue
d/Zd0U29fGamuGoI5XP2t4qyoHzCnUE6LXpJ9sOWz1Pdqf3Gp/eMofbHpj1N
OvBkQ5hryCQP7VYVbPKM0S8OPMlhvZt6G4aOrOK7GvWLozzSfRfeZVAeY7ru
XB3a98eFeHcnf7CiiVwjsn/ue3Woy76dzeoNbJXSJbtXJehz3S7J7vrxZMZJ
q2GSHXTcyI/yLdtr9n5K+Zapz6vP/t5axb66vfNb77E07J/fVObg5GEm2cls
X+b1NuR3HI4Jbkd2slb40ob2Fb4dHia1z+16PGpo37Sbznwaz4/20+ZTPuST
G611aDyPdT2RR+N2PMDAi/Inq7soBNG4eRipptL4HMwNMaN8y1k5FSNofJyM
Fl2mcTiydmGgNA78As+6QOOw9eG1ydSfmlNpW8hur5nq1p76Y7alaOS71Co2
StexA+WFdlA55rU4Pp4VHNSZnNKiihV5a26gfMtvnQ92oHzLcQ+nXafvqm2u
9mLpO+HyB5O/xkvfiaqNacV/6XofPBKeSN9Vr9RXc+l+Nq36A93/qKxjXrZz
Bbuco7N9euNstnJZUhTlgU8JvqYlfecsSd6trfSdc/VIxQv0nevf6GEmzQvm
9fzQfmle8JbJ1vdpXtQr3fH8L11v1a2Wk3eefs5SW5dq+FlV8b7TFqnqT0li
vqc2tNI7k8zjPlY7G2pXMe3zjzWofuH35zPRpHesJXSkJwr96JmX7e/QenVp
3a+XNN991q/SpPne9tbT5R2v2Rr2lNHFvt097DWtz0HHVrSlOOTKyf1UKQ45
+3fQAOrP92sztCluZn8z6RvFzbwnmyf+ly62u/3zJqaSXeTu1PI45cPrrbR0
ILuobkA3I3pf2z9Pzunf5ymPNrh8l97X+jAnz7he1Vy9nV7RIYtpYafHVyqe
2PmC5XTsaDxiQy6fnv+zq+e9UWEWEd2OUH6yj83TgBl1Vaxyvrwj5TOPt6j+
PVg+iXX+en8YzZcmnc43uhMcz73dE1/RfOlkr/iF+nlE6FB/EjrU19outqd4
YOrEdT1pnNt5KarQOJvK2AOfhT0wd2nQbIrTvt2vaUD7l+PkkRG0f924P0aT
xrOj0KfeLvSpT22eN4PWW/t7Cmm0X5gMPtqExn+GasnJ/9Kn1vq4b+umlkV8
TdvXMx59KuLdrppt7JYawi6J89ae4rxVTZy37i7TLCD99zt57klUlzHKacFT
qstI3rpY49bCJdxzfP3qG2sfswED9+VlJlWzll/+ydtIF3kcZSJ/Y8UYTVs6
dyi5v8iGzmffVWZ/pHOHlFiH5T1LXzOvJRc/3Tcs4l4GV+2a1uSz1nnmJw6o
FnH87mq+Y8Lu7QnM80Z/L1fLIm7US3PKhvaFfOyTTjbLY5MZF+etmeK8tZc4
b617VDuC8l1H24yaSvUXVxJtQyjfFXlfaiLv65fQp/Zauccz5Xgo33zjg8Og
qUH8h09SFp1bGRv5RCw7l8lYufuPkOMpbPPGJoZ3U8v/xFfx207EVy1k6jKG
irqMySK/S17oVq8W+V3TfF4X03mfauSQW3Qu+bu7zkc67+OfkxrdH1TOjsaO
i1xr+4YpTbZre648jRmIPKsBIs8qXuRZIX/JU+QvaYj8pbEyOtTDRF7QAfGe
roh8m6/ifS0Q+S3fhK70b5HfAn+nt/B3Hgh/56BM3vIqkbf8I6z7corrpq9w
DGmiWcpXvne/TnHde+4W35qOfc81M3MUK3aW8guLbJ4l7UxmC8U5In7fivPE
ipnB8VRH00E+uo7yli0+z2x/WHqP+8W5YZU4N5wszg1fpYSE0Xc7oD6lWvpu
Wee6qXb03XaT0ZUeL/JMDgRM0w2ckMgPXJyh2NEsixe/zu1K54maOV091HLD
mZn76u5DQpNYUy95vRzXKnZOnA/+FueDpeJ8UGvBrnfSc9nPi9Fv6Lmbsges
oucib+SVyBs5KPJG+rUZvSxuwxt2sMOIqR9mVrCrg156y02PZ85dd7YdmZLJ
omKMy+XfV7DS7u5zG02PYvbFG9tQ3sjakT7TYxcU89RQLy/KG1nRf07zU7aF
fHCsw9h5Q4u50V/FSr8eR7FBim81pHb4hdjUQqkdfuVc64PUTuGeq997lL7m
F6LUG/tJ827T0lknad4hXyJC5EscE/kS4SJfopnIl1gv8iU2rDtk+yIqgvVN
PdSQF1qzWtmM8kKdDmvdv7dwCatWql1O64NS3yMN68NtkwXve+2aNMrx6Mpv
up5VPGXSq9IO5ins3P2eg1zzXAyPiv1CX+wXO75fHtXp/viwHhs3p3w7VMn0
WHPDTvczWDg7VpFy2SX0Zq9/7h8q7r8mo/s8Veix4nqouD5bXMf6dlOsbzPE
+hZ5Ufmcam44d2TjlAaHJnHXA88O0nv/0j492Ewll1mrm3lOHlPK3o9oYvPj
5ms2UeRp3Bd5GrdFnkYnof9qKfRgpwsd2O4yusyG4nrwmIu/6Hv7+2z333rS
c2d9f7qDnhs037i9XE0Br1i/UP7UqTzu5161V+FnDhs/5E21NI9Y+ZMUVWke
sa2/E/xpHo0ROsilQgdZX+ggjxTX34nrFuL6Fx9T98Mn89j9O05zbhhmsDod
n/NGbYul7/if931NvP9N4r2Xi+sXxPXN4rpM/iFD/qHM+sOw/pQI3d7fBv/o
9nKh21ssrg8Ser7h4nozn390eJcKHd5+Qoe3XujzbhLX+4vrx4ROrqvQyW2y
4R+d3HPi+g1x/ZPQz82KzP/gO6icRyjfLpPWW17/ceswWm/bT9MZLo0P3zRi
sbY0Pvx0nlUNjU/fRoq2S89l8pZBpzZK+wKvu7zOnfYFq6BWI6T3xT5nLVaX
3hd7896qXF56Xx+rZjH6rh4nWgyk9cS9cKwhvd8VIj+hSOQnXBP5CYMH1z+V
vje+Q2GEq/S9cYflR6/R95Yp1kNlsR4uEeuh/o9nftL+yJ6eVTWX9kc26tlC
Q9ofJzrNOULzvVULm+3SfGf5e2r70nwPE/kDfiJ/4I1M/sAWkT+gKPIHZjro
xdB8H2vRy1Ga79x/3sF7NN+nzz/d/qk032Mtj5dcXPuYG5ub/aT5XtB/33Ga
v96/F0ZK85eftC4/QvN3ynmn+anS/L104R97ZqewZ2yWn0mnPPPoIRrHqf3W
al8a2tdeF3/ssWRvrL7sUkHt2842aWhffcnhdbSeHFZvLt/fU7JXm3+6SOtJ
xeUxPuel9WS/sJe2ifbbCL3XnULvVVnovc4R1z3EdQVxPTdd4Zs0buzw2bkr
aNy0NrbvTuN2PdGK6gH+/P62t+9DdQFtctpbS/YVezB0r7lkX7HmCq8ukH2V
c0Wpg7RuM/Z4pynl+50009AyldZtrzU5LaV1mxUabjOS1m22f5bKVFq3B2Q0
rR0Uk8+PXL/7YeP1In7WLfdn9odXbJ/+i3/VI9uIeuTXG/b+yz4fL+zzGqGX
WSP0M88J3cxWQoeyRuhSnhF6lLrtdB5P3/CGV70Y3Lx6dRk3r2jkPOdaBnu7
r9+h5p6cWXyLyLw7OpFZWoy1+iu9itUJuyFO2BHlwn5QHdZP3lza187WD6ir
ktq5WdvqALXTV1mtpKkn5362YRXUzr2y9NXUTmhN2rTehwr4zbU6j7WOv+ed
rELLWvR/z6KFXfdW2HVdhF1nur9M3qu7ZA8pqI5csbuIna6K6/vgVh7bL3RA
Pyz4Rxd0sNADhb2nKuw9RZHnf/XejpHtJmbyeZXFsx+npvLbS0uttt0tZzr+
ecHGhsFsoe6wxm/7PGR7Ytcpf3lczebUD/I2dC9iimp+s0ceyWZ9Xih/bnn6
PTMWdl2dyNu3EXadtZdGUfj5MnbTv/nF1CVZbHGv0qaHwl6zkcJ+05bJkz8s
xtFNjGutGM9HZ18mS+1wnjE3UmqHR5/2HkrtLBJ22m9hp5UIO21Uj3xbqZ+8
WffXVlI/efte9/WUpX4m7u29eaRhMLc+u1n1TZ+H/KTxWG36u7KK+m5tPzGT
XXj9qFloaiqTU576w1Yah1FCz9FL6Dk2FXqOi0yt90vvixUZfEuV3her3e/g
Su9r8pKjKi2k72TR5xepHqMTeZLbsMv0fh+5DpxP31XmjckG0nfFDuuMGUTf
wwDrmS2l98gHLwqrX767iFcq9txK7/EqGzlXSfpOaofvzaZ2vHsn3aF2zNdY
35DaYeznKm1qx/qwSy9q56ywx34Je6xc2GPVQsfQUegYjhM6hoOFjuE0oWP4
QugYehmHZdP8ylqnbyHNL+ZwLCqN5pfusZR/+VN9hT/FK+/86/6D4v73PYLK
qb7+x++ucVQntTNSJ4LqpNaPPvFhbItwHno1jvJy+Rs5r262g4PZq66Txhr5
hPNTz03uBe+r5h/zzl/8sSSMuQwy0i7VimA7zydU6c2o5vf6qaaohkaxwc0+
OlN+8pDT99y2XqnkpnedWr468ZrlPlDbVPDjMTs2c/zNMqti3sy3zejzpwr/
2Dm3hZ1jKuycTltN3Ckfu3za/uUlPSrpHO4vysd29jj2/l71M97h8qIbT7Sr
2NK0rn1eK6WwDfPbeJWtTmPP2rytfW+cz3vdKNlK8ep9bo5Wc/oW8r7HOz7v
cr6Y6+XdMJl7IYIdvH6lU1K/Il6/KnrtSZMC7jvLR2l4i9dMIfgfv8xU+GXn
hV92Qeh8BAndj3yh93FRRl/vg7juJnN/qbgex0s/FQfmMtP5gc9t+6WzNnOj
LemcxUjYP4XC/jES9k/aycgIqkc4kRrd/OjBFP5j9DxVqkfYWTxVpY91Fb+c
YRdkp5HEc5UGpa5d94xtip0dFDm7ii9v/0xJdU4yd7e4qN1nSDT7IOyi8zJ2
0Y6IobpUr/HiwzZ7y6AIvtvs0kSq1+hveatluVw1H/Z0vYXvmGCuUXg7f2yr
F+zJ8MRkilOdF/G6aSJe5/rduOFc+5E4184T59oPf9z50mtrKZ/ulvtZ3fQV
yxn96/zoYbmsxWrLAqpDmTFf0b9vSjgfmdirFdWhaCnuzKf7Kz4sXdnR9JW0
/rU5QfcXDJ2lL/WTlWbrj6d+qj6+UK0h9fNq5ac2Uj+Z4tMvctTPHUbnd1A/
f9ooNNTRnCiUG7O2uwszcenQUEdzU/votAOtqnniiJ7+Oxx82D6L25XdHrxg
UfM6Ot+Rrr9O2VjTbdJN9rD+7KjjwxNZfMX87/X1+8Lwu7+e/lWzARfMHtPf
O1GcRxeK8+hD/h3NpOcy1x8tK9dIz/0ZbOyWKj135+ozs6XnstLdpr3ouQ/O
trCj57qFNG6I+x0Vcb/zIu43Q9uu4Rz2mziHHSLOYZ2EfXhR2If1wj60ELos
XOi0pAh9FlyPENcfyVyHrkuEuH5A+MuThL+8TvjLOcKuayXsukXCrksT/uxA
4c8qCH923tHDyj7SPNWcOvWSNE+5Zvdl42ieOg13GUPzdIb6rXN0rvTOoEVT
mqeawj/9JfzTVcI/1XgbGZQvrRtjnQfplFsVs516Xv7npHXjbcmuPVRfVF98
UI++i/x1FZX0PUTGOf8skdalG68mf5LWJRbbX+4qrUsThB11SdhRTYUdFSY4
/g8F13+d4Pk/kbm+SlyXG5c3Q1oPmY11CK2H7Mfu0YtoPfztOfMLnbOE1j+7
SpyZga7bn9A5S4nIV64XeebvRd7ygPOP1UqeZLMKR2ejueaveLv57Y67Hi5j
2WzRVatt0vo4I3H+wNkF/LVjmFpRbiI75mi+i/LEnIq0PejcNlD99kvKE8tU
PRND+edvF2w9RPnCD3SO7aI84djzWn7kN93cPCT9uuQXKJmN9ia/wO+1bkDR
k2zu/q796Xnmr9jXTO9b9Fy5/5FffXfnJn/Kx7Oc1Os0nUv6vvrScC55Mfx7
DuW1fo80mEfnOP7H2rWgc5xDZd0HkL9/TGdrT7IbZ0/NGUB2Y+NFSrN+xhSy
vZOeuSd2K+Ys6YrrptthbFZxmCede75j7dwo388jb9ttan+Z8wYL8l8eqezV
fXw8hXk+aX6Y/JdombyylyKvbP+iLdXkH6k9NftI8ajcI0cNyD+6rrBYnuJU
D4/FBJHfdLG/TUOcytCzSR7FzRb8iBlC/tFfd6xmUfuBMrpm7UQd+rk1nd5R
HmbUsMY9qE58goFaBeVh1id8TCO/O3Bo9Enyg9aXK7uRH/RNJs9WW+TZxot1
dqdYd7eL9Taxx5nv0nfLd29d9oH209I1yqn03TZTVLWS9lMe22ffJdpPX7c8
17Cf1rOzzaX9lI8d8e4W7aeNRqxu2E9N5u5riGM4iTjGcxHHqPH2+pcdbibs
8NzFxxvuPyHujxX36+0/n5Ml+QWKYxrtoXjOordd3lE8Z7n2zhJnyS9Q2qG5
jOI5y6ec0qL3C97RZ8E7WiB4R7L1Mi1F/HZwwjbf6LJCXsEj1vg4FvFNX6zK
i4KeM9OH0Z/qR5OOheqVJlcL+fBZagOGDH/5R/fIR+ggvRD6R6tl6k12i3oT
Gxm9p3mCW5sr5gnmja+YLw7HL94lf3aI3ZT7FD+Z9GP8LnqPE/SKQj3JDjx1
ZTzZ8zUabYeSHWg4ykaT/G5V09g7FJf4uN8wn+aXUcXsL4aSHbtVLqaC7PO9
joe6kx1b3y1iBdm9X3e89yb7XGf2by2yewPD/7b50qKC5bf+PO/473QWedih
t92sVDbtilUi2dX3Xd8nk30+e0jTIWRXNx/UdOTn7QVsx9OTV4jr4tSy9Azx
K4JH7qF1g22yGD9HWjdYiL21Pq0bcREf79J60q+b1yS67pBQ34OuT79rPJ32
wcl210q3O/jwaosVVbQfTQtzbNgHJxhYDZf2QR75WIHRPqg9XCtd2q/ZGuUe
8VQ3et9mgT7t12+S8rKl/Zo5lP9oK+3XLGH5+ge0X/+46Lu4/9WCP79zzGak
UZ2memXtvhEaxcxG43Yzw9u5bNKXF741rd6yl2J/HdT65qf/u88O3Tq3jPbZ
B8KuKBF2xSRb/f1U/1lZ1mIytf9t2p5H1H6V7aiLUvtcf8y4LyOk9qd0KjpK
7dc4Lm9B9kzM8SdPJDuBqTx1yCM7oUL8/4mivXrRzpumN9dQP6vLzAZL/eQH
d411oXZyHukl0ThkOucnkd0ix3sOoHHonR0QT+PwYMzeI2S3tG118A6Nw56I
bi70Xj6adl9F63m9VUovGn9jr+t69B4/FLp4EIfEU8vQgd5j4zurrpA9cFjY
A5eFPXCmm0FD/tt0YW/kCnvjxanyQ/T3XlWq7kL9/HBt4Qbqp7eZVyn5d7OW
7T1Ofhmv1WpO38+ecLZS+t54b+9NB6TvjV82cTSl783IwClasjPZrJt36o8c
TGF7CiqyV0l2pmEv99aSnclMXny9K9mZrKt+4RmyM1smtQ4if/OYm1Mb8uN8
k9bWk795ZVqpuonkn3r+aquVKflx9/3s29P3byVTj5Mm4uchQo8mR+jR7BJ6
NAuPjfsqrQPsd+Lta9I6wDqZv0/Vl9aBbSKuXizi6jNFXN1ny+q55HcPyz37
kfy1uxv0V9M89ex185HkR7BJYzRnUl3nAgODhrrOPvHfMiU/gv3s43yF7BO1
ow/Hk30y3v7UE7fEKPb79J32xOVIVCnyJi7HwMhNjhQvuifiRXYiXuQ2L+Ez
na8dFudrX8T5WnBIr3/df0jcXyGjR/Ne6NFAp+a0uF4oro8PmUL+C9u38nmM
5L+wYSfG9Sb/5Wlc5n1p/WTVZqrrpfWT9dAu9qf1M+/6HkXaL2rznz+k+tDr
12ZcoPpQx+wQE8mO4o91l/UlO2py+IMAsqOyt417Q36fX+cvb6kec4+DZh3V
Y5pk8t7k92n5jPAlO2d5crAV2TkTx9T8RfWbzGp9FvmJz/q7dCU/scBxvTXZ
RRknorzJT9zr1M2N7i+cpLWPxl/NY8UK8uOqsnS70vgr7LwXQuPva9z6Fvlx
P6d31aTxj3U8yWjceou4eh8RV++pof6v89aj4rx1+pRV/8ofmCD8kV9dPvwr
P6FW5Cc4BjhdiLHMY/XbCg5T/f6rzR11qX4/vrI4SFcvl+2NXPb2LxfJju24
okNISBrrHtH5tXSdr9T5kEDX+fKhzem6p9qBjV3ky1mXcr+W2/tsDvvn9z0L
nnQDfkLN/13H7PisBr+gZ9ceq6iu/7D91ga/4ESJ6RzyCxy6/LChddgr3m4/
rcMtc4sdqJ8Lzk6+JPWTmz0c3I76ecXF2oP6uXLPonKpP3x0oW9j6o9CSvJN
4hIsqT96lO7/XrmjMd3vo9H7GfX/+56xWXT/det5NcHS/XIl/9jN6cKOzhL2
87bH8a3Jn9pscnIerZOt179o8Kfgd8EPg/8Vb+3/kuyWNyEJn8ne3j+0ssHe
fmzr1RD/PCrin11F/NPk+e9/xSsGinhFIxm/+4Lwuy2HJzy198hgd45vCSG+
WVcFvQ3EcTKNK/9XPcILUY/wqKOhGl1fKXP9rW/vhu/hgPgePonvwe2EhiHx
uVyFzshooTOy1fDrIpW6Kp7gtLBR5rwwHpTI5xsPT2Cm4rzAUZwXDBfnBQba
fn2I3/5E6IkcEHoiNe5Nc1vPreTtZs05mayWzFoPVXtuVJvyh7eQI8NbWJCq
lE73L+v4K1W6n1cM/h5O94OH/vXCP3z064KLjutN3f59XaW4zUqp/+z8qnbX
M6T+O6ft+DZG6j/ONdSH/ftco6PhgU+k99FZ6H28FHofNmVdz0v2AGO626+S
XzxVzyfxmGQPKIjzjrUy5x3GHR63/i+9D8eSasWSwFzWyX1Yf8ovnWc+1Jri
HjgPHST8RxXhP2rJ+INrhT/Yel7JVqpn/N1xoA7VNcvfmX+X6hlXt/B37328
kFkddp8q/XK7PaOWqJ1OZTnqM1VC8wqZcSebXfsdirjZxOLGckdj2C1Rd/xY
1B3vE3XH6oKL2FFwEVsKLmKpjB+XKfyjOhm95uWCE1gq+A6F4veX4DyYvaza
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
IxXxbKgrNJHrlg3nOmZruH7ZEa6Pi3q5L7hOboZSHcaNvL//XKk+IOppos4c
6s6h3hzq4Pa9m6Ooi4t6uKivhnprqLOGeqWoX1rE+5twTVGXA/U4FnBdm9lc
12YH17XpznVBUCcE9UFQ3wj1jlDnyF3VwJzGsagx82vIndvfN/0ajWOof4N6
OKiDo+z5f1jzr+d/q8Esnca3xg/2p1L/rNzTdg71z947PVqTaxdQX9uaxkmn
uwPO0/lRhwB1CV5yPYKnSvmVqNeQ4b/mDDn1vq+2mJHXfjBn+mRy2mtzZ7Vv
1KdUWrI42Wd7aJFYMU27uiA6XlxY1b/f8vsFYlXJyVDf5eVSwROHQ7fmxIjB
f20P3X69SJq1OXWen2WpFLw2YYx3TrSYN9091NCrUHp1pCbhbX2ZFKznfmXH
qhgRvzzBxKD5Eyk1cm9Wa9MqSV937L6YxZLoH2680nZHoQj129LswrsyaVRY
hLeXzQWxKTbppHx+sbFhuTOdf8OPVXZ0/u4cB1bKcWHLOR5sXlAL/Xb2RaI4
Ib+wg2up1MlBe/wBj3jh4tlr+oddJeJcbdTNWbtLpM9vpbWqLjFiDM+bcJU6
87y5UKk/bOL+4Dtw00XLujKxLnDbzHE+hdI+e73hSQHyOq1X556rIyuE692U
36p986QXH+tso1vEivyZwZM3n60SP3W1cnwR9VBK9DsY1EX3rnjvahh137la
urNt+vXVd9Ok1PelvTx+TxbGTQdMUl9WLQ1RqSk3XHlH6tLpvOT1Jk2oS1fC
37QtFyk5k+OeLCyQKi/8UPDpYLLYbjDptHxcshh8IIaOH+5qnUPH9d1Tf3j3
qUKy1NoZodMpV9o3eOthgz4pX+rLHOT3xJf5/bDB6BPv+vcuETkjH+vGmZRI
aoM7lDbZkyx+nvRj+fv6MnHAvLpa36tQ2EZnHQiQ76PVgNt0XDq5+lmVfFza
7vv5GB1/o+RjzGEfo3tR/4/y+aWaNKvv5fOL0Z7aivNjHz+S9/GjeR/fcF2i
sXz9YmWBx375+oXawdhDdP2ttbqfo3YwjXY5I39fobE4t4y+r8kjxxhqh7F9
c8Po+O4TUxTtk875fXac36fD+X3aaTNnyO0s+tTqBcrtLN6NeRlE7TzJbkS0
fF/EzGYj18r3RRjd0Dal+3JjqWpWh60V0qTvC+ausXoqklQ9Hw8uTxdzJt+b
Ld9fydPbvbd8f8VDA8tDdH+Rl2emlJeHPJ9Atdd2lPeDfJ9v5eVFcn5X+v0B
oZTvVcB5Xt/Kj3PWcego90Ppu3+Mt8r9UKweX2VP/bDl5/WRcr+VDA29F8n9
VnRwC7GhfvuE4w20ON6gC8cbbHVt8av8vEhulzMeyM+LOO93U/G8TLg/xDJo
cpHUfWvdxUS3UvFsecThSW0T/if/awTnfyE/9wDn51pwfm7LhvenaNz4Pf+A
k/xci2Ldu4pxo0fcpYLP3oWSz/EOR1bKz9nVbs+XZsvXaaryrG1v+blqPKzJ
3nPyc7bIs4PjI/l7eW0YZCCPJ6Lh8o0ceTwRm2YETqPxRDnP6y3neY0d4n1K
HpfE6pMTaFwS1z/YRtG4ZGETTOOY6NnzKo1jIiAqVnE9lWGRzXzlcedpK5ex
u+XrvdXrjqO/fDz8Qi83PXl8mTRUI1DTvkjSbhTZKVweZwbEFSZmSJnS2pu7
zLasqBTO7ve9A2ZkCPhHD9hDCmQH6TbHyT/iOPksjpPfzfGZ6hyfeZvjM69x
3MxpjqN5zfEzyOdHfr8X5/VbVUUula9TpNeZB8jXKT4dMnwdJl9n2m+H6XuJ
vVvX0/cSoXmJiu/VU8mn8mSfasvoupT9k9LF+l+E559TqqVC7fF93MQtYdFm
fyt5vJWyqzu9ovG2n9lORxpvg7T8kvvGXxD9U9O0nLbliTOV/uvt4ytEQV/n
sJar7kjB+7xcGsnP30Abl7nO8nM3unpZU7oe61nZ46id45dkKq7HxUj3ZH3H
XKGbmvqjxucKUXLCOtC4d4rA9eF6cZ17eNyB04Px58nODZMT5ef5qMuwLqny
8316v3bjMfJzbcB5pMGcV/qA80lfcX4m8jWRpzlZqY72KY6HCXZea95Mns80
Ym6NsJLnt6LQ24+vyP1w4bzM3xu5FIhdeiEXM+RxKyzKNmv5oWTxxzFd1+Nn
Hwqb4B6LHOX5oc18c5ch8rgRNuZwzH/VWThve3OdfB6pVUX/KDrP0BZ70+g8
iFNx4riVYI5XqeY4cn+OK0c8ucHZhqQszzzp1QT/Az/L69qEzW/MsuX7MobX
W2W8/qrnddfUiX1bPPHME52dLoWOKIyRvEcdycmSP//4z9qpNH5GjRiYRvOU
xZytgTR+jkt1n9/S5qn4XePKjpNbKqS7g9bUh8njZHLFyCXUDnq6z+Pk65e6
5iQqrt/fJnKP3A7S/rmSs9wOUspvZpOpHTK9Pq+i71sZff88fX6h75kk+vxH
7ygLuZ2FT9DwIXI7i8bttY5SO8Ph2sMuVxx7XO5Gvofl+y79FKGvL9936WVN
iQrd94tGfa7K/Uoa1iO7q9yvpLmi7VHqV+t4vPDm8QP5oe3v/L1T7rcisMes
hXK/lfonm2+lfmtUpFX6Xw756+Qr6rQOedH5yGv5uRCOqs0s6LnIGzSpOY0n
vf8+NYaeuwHx7xyon/+zJm+9WfwFKbXn9XSHbXnS1sc7s+l5eaYUp5fL61jM
E8r58mqaEw9Te65MsneifrXRqdqR2vP4OLeZtA6ZNrqpBc1Te/xzT9A81a28
ME2e10S3j6NW0rwW7TS+mOa1E+9+uyjfRyloar8V8n0U+0yNGofLx1/bpE+h
9Unwr7EXaN6M/WPCTbrv9dxf3UcfUfRfbe63D5NqDn7+o1oUGA+NWRLueO1d
QN75JeEPv+RxGyjlcddPvplC82x+cOPD8vVI3a2L7tH17D2vOo3m2eH2AdNo
HWWll7OHrh/PZw0/r534OTUJ3epEz1fBva1LqF85GR+yp3Zo/Khf6Nd503k8
nyL/H+sFXV4n9OP5G/M55nHMu8p50MfURnjJ46TU6bD2VnmcFKZNgz+5yuOk
zuBLb77OL67g/OKgwTlWlEfckfOIH3Ae8dhAO3fqb/OCyhfTOBnd9KEj9bcu
L1/a/We+MPc/B9e2iv6IfljELrzO1K5dyYmfyD483HOPlL9203WNZP9c2VWO
5PeTg17q/0XjtmraTWfq/yljD3jT9TxQ8v2O8rz2xKr5BXn8l+pPVLal8V8z
f4ti/LflvJJdnFcSxXklO/m93zF+7/eW3/tN4flsI89vmNfG8nrdjtfvXXjd
3vO4dXMarzZK867I45WwXHpcMV59x+2roRUwnNo7k9v5hskMxXg4vLjJRnk8
lGINpvaj8bCC8xDCOC+hrtW/+QjF/P5Lld+H1fN7sFbLpvrKz6/wcTPKoOd3
9npzxfN7b4NTN2r3ar4Pdtz+LXhexzyfxPP7bm6XX7mdTnP74HeOCf/uceff
O7gOXNdHvp5gvu58/h6f+Prb833FfT7F9/fIoQ+t/6tuC/Y7xwcW19D+J/Y9
0Y/7376o6Nfoz8r7+Dt4Hz+bf+c/49/9cfx7H+t+/A6I4fW/Hq9Hn/P6VJ/X
pc+V4lEx/+J9Yya/b1zD7xudlOI5Q3h+RL7BKn4vsZnfS4QoxR924fhDXHcW
f49Yvn7Ml5g/MW/CozHn9W9/Xvfid9dJ/h0Wy7+/sG6O4HW0Fa+fcT80wj63
/rr+9Zf5gOcHzAszLW/t/rquwS/8XB9Rqr+MeBLl/It13A7Yr/LieA/sWwXx
uvMMr0PreP2J9kL7od36fKOebN72/Jqv99Pncb+K47qry7juqjXXXUV/0uX+
tYv71bf2i5V9zmu8HvD02mt4T/7dEqI6NNdP/h3ztu0Hsw1aCSKyaKigdcWM
IbYdaf2W8N37EFpXnPhuy65z8t+NsO9V5SWP624Duifqy+O5nVJcx0uO68hW
ep/zid/nzNw1w5Z+pwwy+OMBvfcw/pixg36nZPnP7k3rxhNxTvNpPeOqYvuA
/q6XUr1FtP84Y2sVen8S3WRcAf3e2TBl0yw6z7S4qa8P+z8V91NmWb9ZUyHP
C7YhDn+mi0r9s17y9UvXwwoGbpDX72mjs97Q9essitYM8H8qlTZfL+TPSwdH
Nmynz6uHhjd6J//7T32Xvnss/3/ryvqU2oh0sane09NmWan02GByzKfZReL4
oJehXdX/d/8rhPe//g/hmCVo
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox["\"X axis\"", TraditionalForm], 
    FormBox["\"Y axis\"", TraditionalForm], 
    FormBox["\"Z axis\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->NCache[{{{-1, 0, 0}, {{-1, 
        Rational[-1, 2], 0, 
        Rational[1, 2], 1}, {-2, -1, 0, 1, 2}}}, {{1, 0, 0}, {{-1, 
        Rational[-1, 2], 0, 
        Rational[1, 2], 1}, {-2, -1, 0, 1, 2}}}, {{0, -1, 0}, {{-1, 
        Rational[-1, 2], 0, 
        Rational[1, 2], 1}, {-2, -1, 0, 1, 2}}}, {{0, 1, 0}, {{-1, 
        Rational[-1, 2], 0, 
        Rational[1, 2], 1}, {-2, -1, 0, 1, 2}}}, {{0, 0, -1}, {{-1, 
        Rational[-1, 2], 0, 
        Rational[1, 2], 1}, {-1, 
        Rational[-1, 2], 0, 
        Rational[1, 2], 1}}}, {{0, 0, 1}, {{-1, 
        Rational[-1, 2], 0, 
        Rational[1, 2], 1}, {-1, 
        Rational[-1, 2], 0, 
        Rational[1, 2], 1}}}}, {{{-1, 0, 
      0}, {{-1, -0.5, 0, 0.5, 1}, {-2, -1, 0, 1, 2}}}, {{1, 0, 
      0}, {{-1, -0.5, 0, 0.5, 1}, {-2, -1, 0, 1, 2}}}, {{0, -1, 
      0}, {{-1, -0.5, 0, 0.5, 1}, {-2, -1, 0, 1, 2}}}, {{0, 1, 
      0}, {{-1, -0.5, 0, 0.5, 1}, {-2, -1, 0, 1, 2}}}, {{0, 
      0, -1}, {{-1, -0.5, 0, 0.5, 1}, {-1, -0.5, 0, 0.5, 1}}}, {{0, 0, 
      1}, {{-1, -0.5, 0, 0.5, 1}, {-1, -0.5, 0, 0.5, 1}}}}],
  FaceGridsStyle->Automatic,
  ImageSize->{321.2329573184875, 241.88045987311554`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.8891674975605746`, 0.6954585319475325, 1.6183474909242908`},
  ViewVertical->{0.4649839994841874, -0.11192742889894858`, 
   0.8782153100941478}]], "Output",
 CellChangeTimes->{{3.8604217475914173`*^9, 3.8604217531573877`*^9}},
 CellLabel->
  "Out[127]=",ExpressionUUID->"b19cf301-1ef8-4d50-9f78-4880fe8ada82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"0.9", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "3"}]}], ")"}]}], "]"}], "/", "0.5"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"FaceGrids", "->", "None"}], ",", 
   RowBox[{"ColorFunction", "->", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Hue", "[", 
       RowBox[{"0.5", ",", "1", ",", "0.6", ",", "0.5"}], "]"}], "&"}], 
     ")"}]}], ",", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<My 3D Plot\>\"", ",", "Italic", ",", "\"\<Arial\>\""}], 
     "]"}]}], ",", 
   RowBox[{"Background", "->", "Black"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860421783118477*^9, 3.860421810832797*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"15e2e3ec-9033-4e14-8bbc-0bc22ca79448"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyFfXVYVV3ztoHd3ViY2N3LFrsVAxW7EMVG5TGwuzGwGwMDREU2HgFRDARB
SeEgJSLdIp/Pw7pn/868eH3+c65zM86ede/Za62ZPWtOw9nm4+YVKVSo0I3i
hQoV/fPZMGTkw7y8BAWfrm9b/bjT73Cf+avsTzmaxRFe65nDw3KDQ5VbZaps
NguKInxf4C//e6PilJ+XVs83GKol/PDmpqZBPZKVef/pCSL8zf1d006sTJPy
PoTnWrRo8n13hsQ1hMdsMV+/4EGmUkj+A17l5ZUaRStlQV5wealfcP3SHlGw
PVrB7ZfjFXy8kh/B+ZHfBecT38Fr4V3Zr/smfBP4js9tcVddZjbxFOAZ+IGn
jps8NnoRz8BnX6vrd1eEE8/A8z6NiutaJJZ4Jv1P2u8ZM+on8Qx8jvZR+NW7
icQz8L1R+6aOa5NEPHN58Mz1g+eC7dEKbj945uMFz5wf8Mz5BM/gr0WtMo47
xyWRHHDnkjOu/yuP7/gsttD22z0XbwGegee2M+tTc8194hn46ZeXywx99ol4
Bj5gU6fI5vXCiGfgI59trN9ycwTxDDx5Ut/F8bbfiGcuD565fvBcsD1awe0H
z3y84JnzA545n+AZPLladdx9bk4a8Qx8wvBV8X/8gf4/8K/ty/16PEtLPOOz
q/XngU2qegvwDNzM69zQ21ariWfgzT2/5po08SSegWc8bJdsW9mXeAb+YH/e
96i5fsQzlwfPXD94LtgedRywHzzz8YJnzg945nyCZ/Cxt/1j11U2GcQz8B5V
5zgP9U4inoFXXXx8rXfPGNIL3O9hzdtfRwcTz/jUejw5OOPP8wWegeuluJ5y
sVotwDPwK0/7Fu8X9JR4Bt5n4byFZepriGcuD565fvBcsD1awe0Hz3y84Jnz
A545n7r+7KP0mrcn0fFKJvNnH+Vq82tnXtRLYf7so2z0cfng2SyO+bOPku38
0/CeCGf+7KOcn1jbbetCH6Hrzz7KhxZea/7wI3T92UeJ079w4PEff9P1Zx+l
SIhdw/FWV5k/q/K6/qzq1/Vnbo9WcPt1/Vkdr64/q/zo+rPKpy7PGqXzlE3l
LxbNYjxrFNueezqePM551ihz+7eYWrPrD8azRqk3/GXEv8+XLs8apUulp+Z/
5kPGs0bJtZ5+/I9/Mp41ypGQquvC9C8IXZ41ytShfTOciE/1/0Fel2dVvy7P
3B6t4Pbr8qyOV5dnlR9dnlU+wTPGsaPC/v5/9kvEM/C3+4POHLmm8gy8yb1r
7W+YqDwDn1bqnX34bpVn4AkvPhevV9GPeAa+xyP8y4E3Kl/AH9U50/Dc+0vE
M/8Hnrk8eOb6wXPB9mgJh/3gmY8XPHN+wDPnk/mzmHSjc7Op+v/jz+J+E+Om
2x//jz+LIfEXehla/48/i2cr1zQo+vB//FmstcqrGz3Xj/uzsP39+WKpNS+5
P4tLps9H/ZkfuD8L6c+C+TPJM38m/cyfmT3kz2Q/82caL/Nn4of5M/HJ5mex
ueiGFxssOc8+ovTRRq1atU7l87MwFpMtJxyK5/OzeGa1R/vrYwSfn8XVBKdK
kx0+8/lZrC5ycbK6HtH8LCZO2l3RsskjxrOPkPMz41mVZ/Mz6WfzM7OH5mey
n83PNF42PxM/bH4mPtl+Q2zw6V5r1qJsvt8QxTYe2/Dv/oTtN8TmPp8e72qd
yPcbYtz2lu30PkXx/YYIytZftik5hO83RI57txvqekT7DTHrZi27yPcexDNw
ud8gnrk822+QfrbfYPbQ80f2s/0GjZftN4gftt8gPtn+WVS6s3tIaKlffP8s
7KcYP/p3f8L2z2Lh4KwLTV4l8/2zqG8b3+Tf54vtn8WaNRtm/rufZ/tnUXzf
u4ZHToUyf9aKIQeWRk7642+6/qwVcv/M/FmVZ/tn0s/2z8we2j+T/Wz/TONl
+2fih+2fiU8WDwpTh8vxkxv/5vGgKDPA/nOb59k8HhRZs1rW195KJ56Bj2ik
N3zQlWTiGXhS81W3/t3Pg2cax5Vi5boViSWegR+yvR0Z8ySSeAYu40HimcuD
Z66fxYPMHnU+hv0sHqTxsniQ+GHxIPHJ8huixm3Pyw6+eTy/IeaHbIj+V57l
N8R9ZVjwZ5Mc4hl4/7duX+0GZBLPwNv0HDbz3+cLPAMvseuftf/uP8Ez8CVJ
wdlbbycRz8BlfoN45vLgmetn+Q1mjxrnwX6W36DxsvwG8cPyG8Qny9eJbW2a
eWtaqDwDDx3cIu58Xh7xDHxlrZknBgzNI56BK1eH1kp2zSWegS8vYx26IS+H
eAae3mVLwMbV2cQz8F4/fu9YZZZFPAOX+TrimcuDZ66f5euYPZSvI/tZvo7G
y/J1xA/L1xGfbs3/aRrkGC9GTB6YYnTkm2jxZfthy7Y5wJWSruFljxjEii6G
yzOzM3IFvuPTX3sg3fxNNunh8tCDv3ddO+rZ2tg8yBHe2nHo++rnf5MdwJ2c
3lR/v/AX6eXy+M71s+sq9Yt6e9iaOEuevQj3avdkkGntVLkePCB8253s5bmF
kC99IDgu9Qiuh9lD12X8KC5h9/Iujo7k/CvjVnUZoT8jkcYL/EDvYbt2xkUQ
3uC/+/hVWXn2Qaj98jjSA3xC0HTjBQ4pZAfH8/3Hn/CBYfo5399bEI7Ptb2O
vfz9VUO8Qd6lw2nDjZ00xBtwh1LBc5se8QI/pOfxtvBYX6tBAnxyeeiBfMyy
NQmfLz0gnv9yXfE3eX5d+V38ZbyCj1fKkfxL93rP+z1/Szjks3c2eTl3yWd6
riDfanaVa69upxP/kM9Mifp2bHUaWx/9lR2G7pPrt7pOvOHztoVD+UHn7dm6
6a9UXWoS0PfXI+IN8nUqd0xNWbNF0V1PVf3gjcuDN35d+NXf7If847Uj23tY
HmX7VS9l2ZVH30IaHSF7uDy+YxxXqpYq2+8X4oUHhE/KmToqdc0W8h+Ow36u
h+kXrXobGrYY58D1C+dtSW6vm1pz/YQz/aSH3S/R+mTHk053nwh2X8SkaQ+V
5nvOCPZciFp21Ze2KOcu2H0hefZciFZjPF7um/hYsPvFryv+Js+vy553YTEk
7dOKYF8+Pwi3Zq9GVfwSzP1WVK9es/KlWS58fhD2x8x/PT3ry/1WSL8VbN4Q
Rx+cHtEp5h3bB6r62bxB8mx+oOuy55qPS/xtXMC9clucLPHIm+wHXkdJ6Pjv
PAA7ubzu8xIlrEe9HHrmqLo/x/y988jNT4MbqOs1cM/1CZc3bVTXO/xdL+LN
y6r+pEdwPbgu5FeaOZ7JNFT3S/h7hRTLYU2Xqesj9K3Xmxdp76PuuyAfkpz1
6Euaul5DfsrU3LmPX+fRfYS8Seexk7Z3T6P7xXHwAnxF0zUWt47nkt3cToyT
XxffuZ34/v8Zl7InV3tx4Wd/8lv8vfRb95pNu2fSvAO8zeGTvgezCBcchx9y
PcxOui7zE2VK+WtrzZ6ofoB9a6cxt++GtI8heeChZQt1qGWUTNfj6w6eX+xz
S15u2fSjlSP3c8X8m9HnjAqebN0JUqzjX42s3v2uwvxfkf7P1p0gZfjiIe19
kl0V9lyQft35TZXXncfU6+I55fbjeQO+Ida1yNTrviz+9VeqrSh8M7pHJpv/
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
fsQgUnk9OmxwhY0fic+NMo8bGTP109zEYOLz6Iyv0w2GRimudXsPWzlfS3wm
yPyGA8urFJf2d3toecD9sx/xqS/tf2KUPKrmex/iE/bH+PVx6HLSk/iE/a65
7eocPHuJ+IT96+wOz29V14N4O/qf/wcrhXaYNj48VM2rvPzPz0OUuY3KHV/u
GkvXy/fnUOX9xFOeqy2/Em+0ri54tO9T07ds3g5S+rG8ynF5XXOjgzkv0l1p
vG7yuu0N33bZses+jRfXdbMbeNIt5ibNPzfOBP4yOhKmtNE4XlnZPZjGVfc/
3nyV9dPSzRwfqnmS/Hz8JyX7eiHLnEFqniT/Pvop33qPvNEzNILGZSffczpb
1+rWfrq6j0qUeYaSLB+iL6/7ZlWnqadvnaBxjZTX9fxxTl8Ut6P5dpO8biNj
51V9p7+icQXgOR5yr2N4iQhax/OflwAltPG2Zs+fxdF4h/2n303x7tvScEPX
VLYv8lD0i1tU6uik5jdK/6fntaK17ddrhl0kjXehfM950t0r4s98QuuRx3/3
5Z0Se7bxuyHv3xEPSTJvMIPlN0ZJe8p+t+lskXec1p3b0p5RfR7XvbvsKfEA
eybd+VmpW8p7Wndgz/fV3oOyjgURP+7SnkL3BtqumR5J/OC5vNnzWOdLzdX8
hsaofIMjBh8Vh/KF92wKVPNCYf/Zf0Tp9qrt4k7jeDx4SWnZsIhSqpIady/7
zx47xfXc6Hb+LdW4O1W+B67Rqu0Cjxg1L2T/33gdld/nre6W3ODN8hX4XEj5
Cr3L+fYkluzk7DX3HPGWKe35MiZqxj2j58TbcmlP4w5GY74dVPMVsCel0q2F
O6LVvNBdac/5Q5mFjtRX42iz//Q8U+457Tt85pfKWys5n9U8sdhBb5AaDxpI
e+M0obGPZqeyePCZCFo3/9miLipvV/OvK/T2xBQvPF7lLUa+Jz/lOUJM7KXm
K4zzxyXSjM8nd/RWeYuTcf0sln/A5/KGJjUMTS8Sb7OkPW1szbrq11fzPFek
Pf313vQoE6nyBnvsJ2gvV+qp5h9MpD0+Vr0GPR+i8haaf19Eh+qLnAo1UvMP
mny/EnU/Dt6/d6LKm2u+H4qHadZxY71U3hpIe1u/WJNRSE/NP7jm+7loFzNu
4Puqav5htqwjOBQ37ubd/aHEm17+cyS2ft3fqHLUR+Lth4zr84J18w8u0p4V
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
M8w7lD/oMHz0rEu/xP8DLGHjPg==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
Pm3Pio6DFlY+Y6D4RzyizjwoPhHvukpVW+EwiGv8INvceTxXN9pmLZB9Tubr
tQeVoxc3cjqyZ86XyL4fnfemdGmX6PzL68i2yRyWbNmOyTlO2esdknOf8iXa
JXNYsolrlz4ncI7mJ9kvka9yOH3No/5DZPtkfkr2fbdkPkv2cXfwHaV1b2fw
7aV9jL3k25XWpXuA7yytY8Vvjqj5PMaayecVnqf/PcELSuvknZP5L9lo8Ufi
kZ7W74o+c/IE8ovKOUXpsc8r5xGlP5dVzkFKF4kLWlIzP/pV5TMZ0pmyZU8q
vuI9X1bObUvfrpF89uI5cLvoszFPIlslc4XyW3YC7x2c71Z8MSTHI62TuUj5
M8Oicz1aPy2Tz0nIF2offZbmKdlc6jcKjrXFQYtX0BmSDsk8uPyKXZI5RPke
uyZzi/I9NknOB2tetknOv8qfbJ6cU5ffqLMx4vF6VM4FKz91ArJJck76A55d
NfnsiH5jm8rcizgYnbGJ4P2RzZJ9iMWygdG+xEfSJ8m54U/AmyXnpD/WXk7O
H6uN8tGK2RW7HxadR9Z7myb7DZ9K90Sf8dCzjZPz3++DN07OKb4HXjf5vNHL
4A2T86ZvRefgtqb/fsjtkvP08leV7xPvc7Jsd3IuX75xw3zW583oXJ64jBOR
nZI5XPmN8rWeYB6O1vwk52Xfpn2j5Hz/O+AGyWenXgGvk3x26iXwWsnndV6Q
Tk4+R/UiuEXyGQjFAusnn4vSPt0g+bzUG+D1ks9avRp9zmdNvu20ynk75e/W
5Zu+q3wmQ3pmm+gzQg9Gn9nQ/f55TSn+1vmdx3PMo3iuG/cWlvZVdqP96Jq/
uW7y2SPtqQC+pzQnpnMOl/L8adTtGX3OQeOvPNuybB/l4yn/ojxhot39PPsw
eA/qf645zxWpv7f0d3bNbeQXKQczvOazZBX193H9EG1WAj8gXxXcJdfL1/q7
sm6RXTgp2pfW2vu9cr5cMcKu0Tl0jflvlXPw8q/q08+Tpc9B1Us+d6U9WMs6
SvnNnyvntmUrf6mcR5fNle6QDhGv+G9lPSY79Wflc2nS1f9V1l2yrR2jz5JJ
p/1V+VyO7Ow/lfWkbNkflfPxst2dos8AaM10iD47J/1TJ8/XI9Gxofi/QdS1
Ap8n+4Wcz/WRwTz5DtFn9tR+p+izfBrD7yufgZCd/ajy+Qb5JwOieV3t6xbR
Z8Y0/ttFnzfTPCpmWVxzXm9p5XMb8jPPiI6FtX+/rXyeTPbr68rn5OSjnp5t
qPzGOXxnl+Ccy2daM6XPhCwBn1H6vMe50Tks2ehYmjfVGTnZe9n9yVonpdf8
SfIDo3ly7RedMVNcOJT37BXNsWtvKl4WV3pecrwsP3Eg+KfK50vkk/xY+byI
fJXllc/2yWfWOS5xCQOSuYbl2Zf7tPJZEPnY+h06oyX+Vr9DZ8PE2eocl3gS
8SUfVz6nIv/wh8pnUOT/fFL5zIp8y8bZTxVnoVyA4pch8o+Sz3zIbxQ3LR/g
uuD899Ka87NHJZ8nkN+unJp8vyOCc6byCQ8Pzs2JaxPn2ys5Ny/f8sjkMwfy
VY6pnA9Qflk5WuVqlS9W7KoYVvnoHtmmKC/UuzLnqBxFz+x/Kk8trlzfqXyO
1qb0mOJA6RXlZHVOU8+rH3GbyoHKRzow2K4qJyXuV5yP4lLlLpQ/lc87Mlmn
ibPRva7ZB1OuuUvlXJdy6Fprsl/iBMThiNORTleOTL7bqOR8op7tHpzDFS88
NzhvK47+nmCeTVyRuCr5bOLaL0yOLTVHyrnvQ/m95pyg8v/tCnNZJ2b7ohx9
9+RcnWLPw5LPcChuOiL5nIfiKXFtbbOu7pftmvJRJyafz5B/e3K2a8rpi4s+
tubcwn7JeTLF3ftm/alYdf+cL1RM2iP5DI24IMXjygUoJ7BX5fyfzkUor6rc
nLj145PPfMg3Frf5VM25L/mgml/Ns875yP+RH3RC9jF0HkBnCJS/0bkO5XrE
pcqW9E61Fed15GMfl3zWRD78CcnnUeSrH5h8LkcxvjjnAZm37Jt81kR+e9O8
VrVmm+V1qPXYqbKeuIq2fZLPCclvF1cpjlI+32rJZ2HlT/aNjgvEO+kMgHiV
G5CHRp+vkx+ySWm/+iKtW64vr9kf0NkDnekVRyPOR7mCqcn8i3gYnfNVTkT+
z8XBc6k5VT+yRcoPSY/pjLHWj9ZRz2huRHyU+AflJ8fT5yHR5/HkC3WNPh8o
n6F9Za50Bm32jT4fKL9I57hkf2WHdQZM86t5PiA6ryEfRv6e+OzpyRyU9vjN
yFreR9pP3aLPLspf2jaZBxRPqD2vMVe8INuucxfi+vU9ys0pR6fzA4oZZwdz
NcqHTEzODWmdjA3eM/rt4gb/B1eo3D0=
            "]], Polygon3DBox[CompressedData["
1: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
BwfqKu0=
            "]], Polygon3DBox[CompressedData["
1:eJwt13m8z1Uex/Hfvfd3byQiZQmjxtagKDEqFUP2WzNMkaUpyn5RNNJelIoZ
W8qkSSXSapClZIsispWyXWWrzDxKMQaVyTw/nfnjfb/n/Tqfc77L73w+59zz
ew3pNDg3k8mspnxa50/5vEymL7ibn5DNZJ6hIXwtvCS2wfUi7EKaIf5tfQUF
mUxDvgG9hL2DnYaN0b5T+92cTKa6sVuNrSWmJr2g7624ubi12uX03cbvgv6q
/33sDOxm7DPscWwNVgbrhW3HxmJvZ9M8bcxTW7sOfSjuLHF98GJx47EeWC/P
8QY+kGrw9fF69KL2YrH55litXVJ/D36TsaP0f0Ar41lpiEszfjNt5M+k+7G2
/GPG3suvcp/36Fv+cboPW83XFrfT3BvFfoSVpnux1vzHIf4cGoW155cbmxXf
BbuBfuP5NsT7aZ9Od4n7XcxFa/mSNAJrwU+joXxt40/HNro+hQ3EZnoWzcxa
7AP3KO16C74Ne0LHCiwf64qtxx7A1sV3iN+V7sSujueI3yl+fxqOXcWvj9+J
L0F/xprzNejX9Lx55+OnXKfR69onPMtt4irqn4LNwL7DumNlsKKC9O7xDSZ6
puZiPqJq2k9SM7GTxC3G/iPmMrqcuhm3Lu+X5ZU5z/V82iBmKs3Sf8S4m/SV
jW9Hq7H+YoZhV/LVqCo9J36uvv/G89I27Tr0tLjf65+FLeVL0UisaTat1Viz
pcy3knaJGULD3PMo/Qmrwt9Et/Jz+MFUky9h7A3GPh9rOtYKtp6qaFelz/VN
jPWHtec75KX4GLcdm8BPoh3YOGwT1pZvR22wH13fwLab/wKail0XcbSBL0P3
YW342eLW8efSY1grbD+dbY4W2FvYAf4gVcbGUkPv08y4cbH2c1MeRD40KEjr
OU9MW7wd9caexmZqHxbT03xnmqsC3ar9aqx78VvEfIktiPWOVcC+4pfQQn42
39P4LuKepTewH/g+4itlUz2JulJW3OT4NmL+Ri+L+3f8HvrKRa3DXsOO56T7
x3PcHete++fIa2OLxYzBmohZwS+nndg+7KSY5jRf/Aj+fDqPpuufh//s+kr8
ntpV6HFxLbOpnkRd6W2uW2mbmEuwi2mm9pLIJ9+qOv8r+jv2D+yk63iaGPXQ
81xljsPGL82meta+INXpqNetxbUT86z++vQ9tiibnuuagpSfkaeLsylHWxek
Oh31emE25UCrgvQ+8V7lzfcH88yM+mTeTvxs/CFxi/iqnuULfcfi/rG3YI34
43xnsV35g3Q9VoEvRb+NPQJrjZ0RNYiaYJ9gLSOX+UrURXsv1kFf5agpUcPd
dw/WPvIu3iHWDNY41gfWM94B2883ollYj3h/7AB/Kb2MdcdysMbaH5vvavfK
5afjw8UsxspEX+Qefh2/i1rw2Vh7sQ+IW4nVEncQfw4bhi3ESmNbsDdjXWJr
sLrYt1hZ46/U3oZ15MvxHeM788XUCivBL8im379lQapRUavqZlMORC7cQp+K
K6RO2G66JvaBqFWx0Wt3jntr3hP7J83hD4nrhlXhrxfXnZ8VezBtjfqHjxG3
Aq8p7mv8aKzTvLSuYn21ETeHisXVp4FYvzgn0PFYk3EeMPZ24x7F4gAyR8yb
Mac5FmDfx7vF9xI3QFx97G59c6mfuN75qd4f+38diXpSx7coirqqf1B8O+ys
uJe4H10Labn5hpuvj/6Kse/Eb4vn0fORW/qX4Bfgh6K+GPuDvo60TN8w7B3s
BN+BlmJ3xHzYAOPmGzec6sTZhr7LTfUq6tbAyCPscORR5Ag2CHsN28yfR33M
cXPUSGpunhfy0vqKddYgzhH8POofz86fMv5KfjoVxtqPukEP5qVniWfqm59y
M3L068hT/Gz+iLENtKdFPY71ETWFdnuOC2kQNiBqpLgH4x34Kp75c/Gv4puw
6rlp/4p97E3axdfLTfeNb7Io7hP1JfLG2KLYL+mBqJFizsV2Rw3B7sfmYpWx
YmyCsZOwHZGD2JFYY+Jux+ZhpbBN2CvYw9jbWDVsT+y52LvYT1h/rHGcabKp
jhZaJ420L6W/uMfY3JTnke//NLYl1oZ/RrsufSdua0hcRXpEXEf+0xBfiR7F
CmPPD/GVaQx2Lf+E+UblpvoXdXB/nMOwl7DvsR5Y6agFsWfmploXNe9fsdfj
32ANaQbWl/+CvuUvppewfvzk2Pf4L429DsvBlmfTObxjQdpHYj+ZQgNirpxf
SkBmjT+rsGVxvom8wS4Ln03n+g4F6UwfZ/tW+WmdxHq5iA5j78d3jfMcPtjY
K+IcFfeOvQ4rwi7PpnPxPbkpxyPX65l3IvYMtp8vFHcqznPYC9g3sZdjJY19
DztNXzd8A/YQthIrwG7EPsIexD4JxdmARmMd+ElxzuQPmO9aLA69q+KMZWx3
fCP0cOyndEecZ8SdgW3OS+eXJ7At2GY6xg/MT3kR+fGImKb8zvhN+Bo02dgu
/DbayVejcVjnbMrDyIvIj4eMbRTvio+IvQgvL+4z/EXsrtizsLNjL4jzI7YH
q0lPYl353bSPr01PYd34YtrL16Ip2I38DBrJv2q+c7Dt5nstam/UQ6wG9hU2
BxuPrY1nxA5hU7Ei7JWcdI6O8/RYzz0aWx9nOmxfXjpvx7n74ah9UWeiLuSn
OhX1aijV4p8236DYZ3PS/5sf4r3yU02P2j6S6vF7xB0SdwnNFNc/ngMvihyK
3BJ3Rcyfn/aX2GdGY00ir+LMxr+OVzB2R17a42KvO4Wv5neL24sd5ZtGrL6h
cRagqfxnxl6OnRS7TGyO6x/j22D3ijkR9SPO5nGmwX7gf6Km2Cbs0hjL/w/v
+fVg
            "]], 
           Polygon3DBox[{{1063, 1062, 1490, 860, 861, 1491}, {1277, 826, 464, 
            465, 827, 1278}, {1212, 695, 866, 1494, 1067, 1068}, {1447, 706, 
            530, 529, 871, 1312}}]},
          Annotation[#, "Charting`Private`Tag$52314#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0l1Lk2EcB+C71Xq16Xmw0QcwEHqZ0NRqRqRICJ3MtFqarcCdbkeFyFrZ
SVBbHkbMiPAkZoQHnhh+gHyptNTRF+gThNcDHfx2/f737ufe8zzsdL44PHUg
hPBa3ipRv+Rj9WAIHfo6U/zDM7wWD+G67zP6Df2mPqgnDoUwwiRT8lBPs8ws
q9F+1nmL83zERWac0+Wcmnw1l80v9bQ8kzVrT3hBqjIac1/WpvVuGTNvmG9z
k3f4nXf5g3n+ZNMzRA97z7xlLurj+rY+wV+8z9+c5A4fcJc11/bY/1z2zMvm
it4nL6RlbYa9MiuvPNs3a4/1s1Ixr5hLbLLABnOscYhPeZklnuc5KeinmIv2
OqdNH9Dj+j/3cFH/y062mIzO8P6u+r5dX2KCX3iSn6MzonfBE/zE45xzbb9+
TH+jZ/Wjel2/oi/IkehsfpTD+gf6qfCebis0aHt4x9j//9M+8a5EzA==
        "],
        VertexColors->None]}, 
      {GrayLevel[0.2], 
       Line3DBox[{966, 1259, 617, 965, 1502, 1173, 967, 1503, 1174, 968, 1504,
         1175, 969, 1505, 1176, 970, 1485, 1506, 1177, 971, 804, 1414, 1654, 
        972, 1260, 1507, 1178, 973, 1261, 1508, 1179, 974, 1509, 1180, 975, 
        1510, 1181, 976, 1511, 1182, 977, 1512, 1183, 978, 1655, 1262, 1184, 
        1346},
        VertexColors->None], 
       Line3DBox[{980, 1415, 1578, 979, 630, 981, 1513, 1185, 982, 1514, 1186,
         983, 1515, 1187, 984, 1516, 1188, 985, 1517, 1416, 1579, 986, 1417, 
        1580, 987, 1518, 1189, 988, 1519, 1190, 989, 1520, 1191, 990, 1521, 
        1192, 991, 1522, 1193, 992, 1656, 1263, 1347, 1194, 993},
        VertexColors->None], 
       Line3DBox[{995, 1418, 1581, 994, 1419, 1582, 996, 645, 997, 1523, 1195,
         998, 1524, 1196, 999, 1525, 1197, 1000, 1526, 1420, 1583, 1001, 1421,
         1584, 1002, 1422, 1585, 1003, 653, 1004, 1527, 1198, 1005, 1528, 
        1199, 1006, 1658, 1265, 1348, 1200, 1007, 1657, 1264, 1350, 1201, 
        1008},
        VertexColors->None], 
       Line3DBox[{1022, 1269, 1351, 1268, 1660, 1021, 1267, 1349, 1266, 1659, 
        1020, 1202, 1529, 1019, 1294, 1588, 1487, 1018, 1668, 1292, 1291, 
        1017, 1701, 1286, 1285, 1016, 1696, 1282, 1281, 1015, 1695, 1278, 
        1277, 1664, 1014, 1276, 1275, 1663, 1013, 1273, 1272, 1662, 1012, 659,
         1011, 1587, 1424, 1010, 1586, 1423, 1009, 1661, 1271, 1270, 1352},
        VertexColors->None], 
       Line3DBox[{1036, 1305, 1304, 1673, 1035, 1203, 1530, 1034, 1593, 1428, 
        1033, 1295, 1359, 1697, 1488, 1032, 1486, 1592, 1358, 1293, 1031, 
        1667, 1290, 1357, 1289, 1030, 1672, 1288, 1356, 1287, 1029, 1670, 
        1284, 1355, 1283, 1666, 1028, 1280, 1354, 1279, 1665, 1027, 1274, 
        1353, 822, 1026, 1591, 1427, 1025, 1590, 1426, 1024, 1589, 1425, 1023,
         1669, 1297, 1296, 1360},
        VertexColors->None], 
       Line3DBox[{1038, 1429, 1594, 1037, 1430, 1595, 1039, 1431, 1596, 1040, 
        1432, 1597, 1041, 1433, 1598, 1042, 846, 1361, 1298, 1043, 1671, 1299,
         1362, 1300, 1674, 1044, 1301, 1363, 1302, 1675, 1045, 1303, 1364, 
        1599, 1489, 1046, 1434, 1600, 1047, 1435, 1601, 1048, 1436, 1602, 
        1049, 686, 1050, 1531, 1204, 1051},
        VertexColors->None], 
       Line3DBox[{1055, 1532, 1205, 1053, 1533, 1206, 1057, 1534, 1207, 1059, 
        1535, 1208, 1061, 1536, 1209, 1063, 1491, 1537, 1210, 1365, 1492, 
        1538, 693, 1366, 1309, 1539, 1211, 1367, 1311, 1540, 1212, 1068, 1541,
         1213, 1070, 1542, 1214, 1072, 1543, 1215, 1074, 1544, 1216, 1076, 
        1546, 1218, 1078},
        VertexColors->None], 
       Line3DBox[{1077, 1217, 1545, 1075, 1613, 1445, 1073, 1612, 1444, 1071, 
        1611, 1443, 1069, 1610, 1442, 1067, 1494, 1609, 1393, 1310, 1066, 
        1493, 1608, 1392, 1308, 1065, 1698, 1307, 1391, 862, 1064, 1306, 1390,
         1702, 1490, 1062, 1607, 1441, 1060, 1606, 1440, 1058, 1605, 1439, 
        1056, 1604, 1438, 1052, 1603, 1437, 1054},
        VertexColors->None], 
       Line3DBox[{1080, 1446, 1614, 1079, 1547, 1219, 1081, 1548, 1220, 1082, 
        1549, 1221, 1083, 1550, 1222, 1084, 1495, 1551, 1223, 1368, 1699, 
        1312, 1447, 1676, 1369, 1313, 707, 1370, 1314, 1552, 1224, 1085, 1553,
         1225, 1086, 1554, 1226, 1087, 1555, 1227, 1088, 1556, 1228, 1089, 
        1557, 1229, 1090},
        VertexColors->None], 
       Line3DBox[{1092, 1448, 1615, 1091, 1449, 1616, 1093, 1558, 1230, 1094, 
        1559, 1231, 1095, 1560, 1232, 1096, 1677, 1315, 1372, 1233, 1371, 
        1700, 1316, 1374, 1450, 1678, 1373, 1318, 1376, 1451, 1680, 1375, 
        1320, 1377, 721, 1097, 1561, 1234, 1098, 1562, 1235, 1099, 1563, 1236,
         1100, 1564, 1237, 1101, 1565, 1238, 1102},
        VertexColors->None], 
       Line3DBox[{1104, 1452, 1617, 1103, 1453, 1618, 1105, 729, 1106, 1566, 
        1239, 1107, 1684, 1323, 1378, 1240, 1108, 1679, 1317, 1380, 1241, 
        1326, 1686, 1319, 1382, 1454, 1681, 1329, 1321, 1384, 1455, 1682, 
        1332, 1322, 1386, 1456, 1683, 1109, 1337, 1388, 734, 1110, 1567, 1242,
         1111, 1568, 1243, 1112, 1569, 1244, 1113, 1570, 1245, 1114},
        VertexColors->None], 
       Line3DBox[{1116, 1457, 1619, 1115, 1458, 1620, 1117, 1459, 1621, 1118, 
        742, 1119, 1685, 1324, 1379, 1325, 1120, 1687, 1327, 1381, 1328, 1121,
         1688, 1330, 1383, 1331, 1691, 1122, 1333, 1385, 1334, 1692, 1123, 
        1335, 1387, 1336, 1689, 1124, 1338, 1389, 1339, 1690, 1125, 747, 1126,
         1571, 1246, 1127, 1572, 1247, 1128, 1573, 1248, 1129},
        VertexColors->None], 
       Line3DBox[{1131, 1460, 1622, 1130, 1461, 1623, 1132, 1462, 1624, 1133, 
        1463, 1625, 1134, 755, 1135, 1574, 1249, 1136, 1575, 1464, 1626, 1137,
         1465, 1627, 1138, 1466, 1628, 1139, 1467, 1629, 1140, 1468, 1630, 
        1141, 763, 1142, 1576, 1250, 1143, 1651, 1251, 1252, 1144},
        VertexColors->None], 
       Line3DBox[{1158, 1257, 1340, 1256, 1653, 1157, 1255, 791, 1156, 1640, 
        1476, 1155, 1639, 1475, 1154, 1638, 1474, 1153, 1637, 1473, 1152, 
        1636, 1472, 1151, 1635, 1471, 1577, 1150, 770, 1149, 1634, 1470, 1148,
         1633, 1469, 1147, 1501, 1632, 1410, 1146, 1500, 1631, 1404, 1145, 
        1652, 1254, 1253, 1341},
        VertexColors->None], 
       Line3DBox[{1172, 1395, 1396, 1343, 1394, 954, 1171, 1402, 1403, 1342, 
        1693, 1484, 1170, 1258, 1650, 1483, 1169, 1649, 1482, 1168, 1648, 
        1481, 1167, 1647, 1480, 1166, 1497, 1646, 1345, 1165, 1694, 1344, 
        1645, 1496, 1164, 1644, 1479, 1163, 1643, 1478, 1162, 1642, 1477, 
        1161, 1499, 1641, 1411, 1413, 1412, 1160, 1408, 1704, 1409, 1405, 
        1407, 1406, 1159, 1498, 1703, 1400, 1397, 1399, 1398, 1401},
        VertexColors->None]}, 
      {GrayLevel[0.2], 
       Line3DBox[{417, 799, 617, 418, 1578, 629, 444, 1581, 643, 458, 819, 
        1661, 656, 471, 844, 1669, 665, 482, 1594, 675, 495, 1603, 688, 1532, 
        508, 1614, 701, 523, 1615, 714, 538, 1617, 727, 551, 1619, 739, 563, 
        1622, 751, 578, 790, 1652, 765, 592, 1703, 959, 960, 911, 953, 778, 
        605},
        VertexColors->None], 
       Line3DBox[{419, 618, 1502, 420, 630, 445, 1582, 644, 459, 1586, 657, 
        472, 1589, 666, 483, 1595, 676, 496, 1604, 689, 1533, 509, 702, 1547, 
        524, 1616, 715, 539, 1618, 728, 552, 1620, 740, 564, 1623, 752, 579, 
        1631, 963, 766, 593, 1704, 413, 962, 409, 606},
        VertexColors->None], 
       Line3DBox[{421, 619, 1503, 422, 631, 1513, 446, 645, 460, 1587, 658, 
        473, 1590, 667, 484, 1596, 677, 497, 1605, 690, 1534, 510, 703, 1548, 
        525, 716, 1558, 540, 729, 553, 1621, 741, 565, 1624, 753, 580, 1632, 
        964, 767, 594, 1641, 961, 779, 607},
        VertexColors->None], 
       Line3DBox[{423, 620, 1504, 424, 632, 1514, 447, 646, 1523, 461, 659, 
        474, 1591, 668, 485, 1597, 678, 498, 1606, 691, 1535, 511, 704, 1549, 
        526, 717, 1559, 541, 730, 1566, 554, 742, 566, 1625, 754, 581, 1633, 
        768, 595, 1642, 780, 608},
        VertexColors->None], 
       Line3DBox[{425, 621, 1505, 426, 633, 1515, 448, 647, 1524, 462, 820, 
        1662, 821, 925, 822, 823, 486, 1598, 679, 499, 1607, 692, 1536, 512, 
        705, 1550, 527, 718, 1560, 542, 888, 1684, 889, 945, 890, 1685, 891, 
        567, 755, 582, 1634, 769, 596, 1643, 781, 609},
        VertexColors->None], 
       Line3DBox[{427, 800, 801, 1506, 428, 634, 1516, 449, 648, 1525, 463, 
        824, 1663, 949, 825, 927, 829, 1665, 830, 932, 846, 847, 951, 1702, 
        860, 861, 1537, 513, 867, 868, 1551, 528, 874, 1677, 875, 941, 879, 
        1679, 880, 946, 893, 1687, 894, 568, 756, 1574, 583, 770, 597, 1644, 
        782, 610},
        VertexColors->None], 
       Line3DBox[{429, 802, 804, 430, 635, 1517, 450, 649, 1526, 464, 826, 
        1664, 926, 828, 929, 832, 1666, 845, 834, 933, 849, 1671, 857, 851, 
        952, 862, 934, 864, 1538, 514, 869, 937, 1699, 871, 529, 876, 940, 
        1700, 878, 943, 882, 892, 1686, 884, 947, 896, 1688, 904, 898, 569, 
        757, 1575, 584, 771, 1577, 598, 1645, 912, 914, 948},
        VertexColors->None], 
       Line3DBox[{434, 625, 1509, 435, 639, 1519, 454, 653, 468, 838, 1668, 
        663, 478, 1592, 839, 672, 490, 1600, 683, 503, 1610, 696, 1541, 518, 
        709, 1553, 533, 722, 1561, 546, 902, 734, 558, 903, 1690, 746, 573, 
        1629, 761, 588, 1638, 775, 602, 1648, 786, 614},
        VertexColors->None], 
       Line3DBox[{436, 626, 1510, 437, 640, 1520, 455, 654, 1527, 469, 1588, 
        840, 841, 931, 1697, 842, 843, 491, 1601, 684, 504, 1611, 697, 1542, 
        519, 710, 1554, 534, 723, 1562, 547, 735, 1567, 559, 747, 574, 1630, 
        762, 589, 1639, 776, 603, 1649, 787, 615},
        VertexColors->None], 
       Line3DBox[{438, 627, 1511, 439, 641, 1521, 456, 655, 1528, 470, 664, 
        1529, 479, 1593, 673, 492, 1602, 685, 505, 1612, 698, 1543, 520, 711, 
        1555, 535, 724, 1563, 548, 736, 1568, 560, 748, 1571, 575, 763, 590, 
        1640, 777, 604, 1650, 795, 796, 616},
        VertexColors->None], 
       Line3DBox[{440, 628, 1512, 441, 642, 1522, 457, 813, 1658, 814, 923, 
        815, 1659, 816, 480, 674, 1530, 493, 686, 506, 1613, 699, 1544, 521, 
        712, 1556, 536, 725, 1564, 549, 737, 1569, 561, 749, 1572, 576, 764, 
        1576, 591, 791, 792, 909, 1693, 797, 916, 798, 918},
        VertexColors->None], 
       Line3DBox[{442, 807, 1655, 808, 443, 809, 1656, 810, 922, 811, 1657, 
        812, 924, 817, 1660, 818, 481, 855, 1673, 856, 494, 687, 1531, 507, 
        700, 1545, 1546, 522, 713, 1557, 537, 726, 1565, 550, 738, 1570, 562, 
        750, 1573, 577, 788, 1651, 789, 907, 793, 1653, 908, 794, 910, 954, 
        955, 917, 957, 956, 958},
        VertexColors->None], 
       Line3DBox[{611, 783, 1694, 913, 599, 772, 1635, 585, 758, 1626, 570, 
        743, 905, 1691, 897, 555, 731, 1681, 895, 883, 543, 719, 1678, 942, 
        877, 530, 706, 1676, 938, 870, 515, 693, 935, 1698, 863, 500, 680, 
        858, 1674, 850, 487, 669, 848, 1670, 833, 475, 660, 928, 1695, 827, 
        465, 650, 1583, 451, 636, 1579, 431, 622, 1654, 803, 919},
        VertexColors->None], 
       Line3DBox[{612, 784, 915, 1646, 600, 773, 1636, 586, 759, 1627, 571, 
        744, 906, 1692, 900, 556, 732, 1682, 899, 886, 544, 720, 1680, 944, 
        881, 531, 707, 939, 872, 516, 1539, 694, 936, 865, 1608, 501, 681, 
        859, 1675, 853, 488, 670, 852, 1672, 836, 476, 661, 930, 1696, 831, 
        466, 651, 1584, 452, 637, 1580, 432, 1507, 623, 805, 920},
        VertexColors->None], 
       Line3DBox[{613, 785, 1647, 601, 774, 1637, 587, 760, 1628, 572, 745, 
        1689, 901, 557, 733, 1683, 887, 545, 721, 885, 532, 1552, 708, 873, 
        517, 1540, 695, 866, 1609, 502, 682, 854, 1599, 489, 671, 1667, 837, 
        477, 662, 950, 1701, 835, 467, 652, 1585, 453, 1518, 638, 433, 1508, 
        624, 806, 921},
        VertexColors->None]}, {}, {}}},
    VertexColors->{
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5], 
      Hue[0.5, 1, 0.6, 0.5]},
    VertexNormals->CompressedData["
1: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
CirrsycdK62CDSstzxc/Z+Oxp3ruSw5UwivPtQyJw0VgMBAttT6Xgzot9WaN
kRXwQlHcNi0iA/XtAvqjjXoxRUshPd2nArL5vg5VTCpF8Zv9CtXeHOzqOiT3
bHolvE65zvjRT8P01VW6VjvYGG6i3X5rexU86FpqK3G+AR1TLKJGqHlo3pJh
tbIPNAjP8bcu0m7By+tHRM5d7ELpuzp4NKceZN7xql7ULoLuo5ry5Hsl59TQ
7++VBtw65evcOmV9bp1yCHdfKGRMnXIRCihqlnSjfrrCjPtV1ViTIX+DuaIZ
XnLrcK25dbj53DpcUaPZsbnTmRCSs8hxaG48us34xro6qxMu/ut7k1taOvd7
07kx6/y53HX+a259aya3vrWQW9+ac3HGGwofeWrrbQn+8pCbdIL/c9SvvGsa
E4wGfLTId5a0hggm+c6y5z/q19rG1KOVcevRFnHrUI5x61AmcetQLEwTT1H5
B4ddNZEk/1pJzr/zbzamruQGt65kIElRgvGwFbIUP3vynOnCpFOjt59dp4HM
Q7XcK4tbYfqwet7jTSzcqPtmcHt6PkyM8bStaGyC53lqkqqne9AqPGbR9aRC
uJvyxd+6ohY6Nn+Nn3mNjRw3/pBY3hI4uY55IEupEqptXtUn2HLwFttXQHtt
GWxhNYacPloAxj3fa/bP60UZxi5sWlIOy//ju3ZUkFUS5Y9h52jVxD+8KCad
+PsajZzVsqrEB22DLFkLDqL3a6azVhkMCI+TFP1ei1k9ewROnGejzbyRdFOZ
Eqh56jiRNtiEbt/zrpQd68FQk3uVkrRCmO6soMRc3or2K1bNnLqWhQsid5tq
0vNhRXN5ctLxNvjaEyDFW9GF4Y8iEjc/KAPFy9l+0/a2QMziWN2TtiwcVfi8
jNZdDtcWGB5Wya0Fvvei3r6tPUgtMdRe6FbCYMLa5JEN5cCv5ew6MJWDx1H4
8xvfKrCaMC/nRWomVD7mLcmg5hN9KcmEGDsaWI3pP/nnuzb9fZ2R/JY6lAob
OGef24Nny2jR6uqVEL1drWf7kxbk60uVMzRiYWTj5gNbGeUgsbqT56ZrGzbb
77yqldWFfD9G5917VAYcQ/3T3bEMfKDw6oOjdCfGfVsq7K9VCnr7goO2uLeD
gUre5SNVTNy4at/PJdLVsP1e8bcN9BaIDvkwZfBTFz6PUN0rZFQL59dJN96s
rQbdS03O30tYGGacLht1uh7Y19U2Nc/KgyL3eMsEKTaaXJiTsGV8I+ywVFhy
+HE7XrXW5WnPZaLK9CRmA4MGH8QhM28FEwP79Rc4f2Bg0NHZA3fFq8DJ/eLo
TItutNV3vdU0pwWv7JPfpX+2BiaOr/Hc4MZGptOqY/toZZi33OuL4scaWPz5
4EeOHQePqE9fM6qQinHz4ZiT9Nj+/w5pf+//fzbt7/3/XdL+3v/fPe3v/f89
0v70/zfn9v/n4c4nrWP6//8P5v4//f//9Pn/Y/97n3+3tL/3+b+R9vc+/9fS
/t7n3z3t733+XdP+9Pn/r+/X/+7/75z2p/9/cO8tVe8jHNDo3DDiufoJCrwU
EHywqg54jD0EnSvZoDD/ta6vbgT6nuFbsy2WWn+eOfBdIbIHZn12/0VzeIay
dne1lQTpEHZh/BymaTesfb4kKFg4Ds+9j23dcrwd5scM62TO6wDXhdHxl+jx
iDsrhFz6O2HZpdZ9lB0dHu+NJvZ1EccnEvv1qWv3Gxzqxracl7wHfsbi8UXj
Uvdbt4MTY3v1jcgeHPLN+94U/xTzrNr706lxlzS2OMRVstHWMebCyaxwvPs6
7fQ3iufLaPqvsCMc/Jl2ckd+4WPMve1+Wm11HRyeOm1yoxcHTa/obUvjBCNn
9xI7Df9amDN9qd2aK2wolPWdvP7jB8x8pUz/7tYAzwZqApI39sDxIYn3cPYj
ajXp5YTFtoAgrBF9ROuC9Ye6TtrsLsSBlwd/bRlpA6myUZtPDV34OuhRdmdz
PiqGeradndkOreP8i1+o92C8kd3e20dykG735VlVVguYCL65O8GLjZArG5cy
mol3T6tJLfdpgD5eyRQtGQ4eOseZciUrHYO+3O1/o1gHZon6uZMNODjN6VHx
6nvvUD3kztITSbXQ114ZtaOgG5qLk7Iyh6sx1obpgZLN0DR3F48lvRt7R7xC
+wWrUShA1NfjajO4jwQMqTj2YHKutHlxZQWOX3NwS9znekjNsR7ZrEfNX7Xf
z+VsLkMp71IjL/46iJdOFGkIZmNg0ByeS1uL8EBTb98CTi1kZJZ2XpTtRlWF
x3SVRc3Yt+2VWcwd6ne4V7/r1wkWavQc9Mt3qscDdwXDdG/WwvLa8i+vRqn5
zmFlrpdGDXLcb83y2FoHn8vzniSH1ECRdXnmGz8WJhxTVN2F9WBeYcqXsSkf
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
gkn0TtrEEgZEHpMr/3iEBn25oe+LqPXG+P4dciVCXSDbI99B+eORyldI/Okn
ukuI/+6Ky6MUH3StdeknfMJu1y8ifPReVz7/+ZMNa09PV5seXoQG7++Gf51A
/T/aqND/Vhd85oVLamc5pYccHq6dM1qBggcv90Wze4Bj8+MbxQettO6nED5z
dD4vJnxW0mbGUvh44soHVYKvcy4+jOA/i49u+r/1sIPcelg3Wm0HhY/r32Uq
EPyfo7NYBJ+90F3lb98x//TLih7TL8vr3nPm375Lliik3qM5U+/V5AcTFpxq
wR+fKsy+tTBAeVwIy7a0Fi3O31ixeKQC/YQYn7w5PcBzbaHn/z3/8I17/gH8
l/Z9O0zDj/b3HLrl2vCAw9LkUuEuKD22OYzCR0OHiT/mU/iDm1RMCP407rkO
d+65DgHuuY5DKeEHOxntYFu03t+sux3FUj827rVvBnNhuUIKHwTl3zsR/LPi
L1IJ/hmzGVg0rxm2agWnqlLzatPNc5nGM1phEbf/Ugi3/5Ixt//SSr1r1ZQ/
uobGJBP/uXci3hN/n+BSS2pc1FN640PGPTy7gkbG5RnTr+lPXZUtt1+TBbdf
00luv6aZ5h8tHz1qwaXf3envZbvQNa+06a4/pXNfh+75W13GOG6fH0Nu/f4K
bv2+G7efTw63n88Hbj8f1pjv9Tnc7/VFQ72af6urDRlzjuhPfzbv6FSkni+s
M3RWJM83itdqiDzfh9w+M3xj+szwKMyRotYtMDBRZfJJat1i+YKPRtYt0tx9
s6PcfTNe7r6Zi7o5rbekBRJymYf593XhlXfrFJTf1MP/AyvnMls=
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  Background->GrayLevel[0],
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{357.2402492394818, 189.59100387336875`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotLabel->FormBox[
    StyleBox["\"My 3D Plot\"", Italic, "Arial", StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{Full, Full, All},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.143270795430266, 1.0696644936979154`, 0.6524312818352368},
  ViewVertical->{-0.18253143163794094`, -0.062115994489182216`, 
   0.9812358940096024}]], "Output",
 CellChangeTimes->{{3.8604218017676225`*^9, 3.860421813136611*^9}},
 CellLabel->
  "Out[129]=",ExpressionUUID->"e93b1e91-1d93-4f6f-90f5-931c3bbe53fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListPlot3D", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", 
          RowBox[{"1", ",", "5"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "5"}], "}"}]}], "]"}], ",", 
       RowBox[{"ColorFunction", "->", "\"\<SunsetColors\>\""}], ",", 
       RowBox[{"Ticks", "->", "None"}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"BarLegend", "[", 
         RowBox[{"Automatic", ",", 
          RowBox[{"LegendMarkerSize", "->", "90"}]}], "]"}]}], ",", 
       RowBox[{"ImageSize", "->", "Small"}], ",", 
       RowBox[{"PlotLabel", "->", "\"\<ListPlot3D\>\""}], ",", 
       RowBox[{"Filling", "->", "Bottom"}], ",", 
       RowBox[{"BoxRatios", "->", "Automatic"}]}], "]"}], ",", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", 
          RowBox[{"1", ",", "5"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "5"}], "}"}]}], "]"}], ",", 
       RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"BarLegend", "[", 
         RowBox[{"Automatic", ",", 
          RowBox[{"LegendMarkerSize", "->", "90"}]}], "]"}]}], ",", 
       RowBox[{"ImageSize", "->", "Small"}], ",", 
       RowBox[{"PlotLabel", "->", "\"\<\nListPointPlot3D\>\""}], ",", 
       RowBox[{"Filling", "->", "Bottom"}], ",", 
       RowBox[{"BoxStyle", "->", "Thick"}], ",", 
       RowBox[{"BoxRatios", "->", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Background", "->", 
    RowBox[{"Lighter", "[", 
     RowBox[{"Gray", ",", "0.80"}], "]"}]}], ",", 
   RowBox[{"Frame", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8604218562568455`*^9, 3.8604218647250724`*^9}, {
   3.860421902075173*^9, 3.8604219090655904`*^9}, {3.860421943647023*^9, 
   3.860422008809181*^9}, 3.860422047194047*^9},
 CellLabel->
  "In[131]:=",ExpressionUUID->"8b34fb93-f2b8-4f3b-b218-ba24948b8ea5"],

Cell[BoxData[
 TemplateBox[{TemplateBox[{
     Graphics3DBox[{
       GraphicsComplex3DBox[CompressedData["
1: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
        "], {{{
           RGBColor[0.880722, 0.611041, 0.142051], 
           EdgeForm[None], 
           Specularity[
            GrayLevel[1], 3], 
           StyleBox[
            GraphicsGroup3DBox[{
              Polygon3DBox[CompressedData["
1:eJxFlHmIj1EYhe9FYzfWsRsSJUpERERESqkp+z72Yca+72uUSBElUkSJFFEi
RURERERERERERESe4z3lj6fv9/uW9573vOfeNqVzSyoqpZTWQWUYARmawQff
Xw8ffd1gmkAJvIc1sBbewkpYBe9gtZ89hbkwD57BfFjgbxrDMFgI9WEAvIEV
rvUalsFyeO7v9O4NGAfj4TqMgbGwCGpDT9gMTWE43PS7E+AlLIYlrtsQhvh/
AxjkHopgKLxwXX3zCpZak651oDdMhVrQDe5AKUyRp5g5g+t0+Gado+E3TIZJ
UMA7ZVxnQXV+l3Odk2IQU12nVg7/5ONP96F+vrtv1X0AM13noa9lRjp7pahd
CH3gFky0hnswzTpv+95kUwO6wF1rkaYZ9rkHPIEKa3ts7eWedz3oB49gtp/d
9zqq0TxHDpST+fawe4rcKQ8DYStUhVFwKUX2lMHLnq/mfCVFdkfCJ9gIm+Cg
PPXa+6GaPToGNa37iNfV+p/9nWpeSJFP6dvrd9T7bnsib05YpzJ52N6q96Pu
XR6cSpEr5eukZ6HsnE2RMWXtkO9rVgfsrfzZZf2a9w7r17xPp8it8qu9Uhf6
wh57pVked51F7l91OqfYN9rr7VPktABapsilzoLW9khrdbBH8qqrfVUvg1Ps
b/XYH7alODdGeG1paJsiX1Wgk3uQho6wxWtpzauem+a73dqk8Zz7Un/X/K5y
vs+aS+2FdLaDM9YjXTu9rtY/7xmtg4vWv9HrSWcxtMqRKZ1xX6xHvRTmmK3O
nT8p8q91f6XYI6r/I8VelOYqOfad/KuRY0/Iv6o5sq85NMoxN50hbXJkTZmr
nyMjOme+Wp905Bz7Rb7WzfH83zmXQ5dyW5yjxr/55P/nU9Mce0ueFOU4U+Vn
kxy50/8WOfqWP38B+7GYUQ==
               "]], 
              Polygon3DBox[CompressedData["
1:eJxNlnmUkFMYh99vmmbaJy2MGlPZZSkSY1dkl2QnosheyF6yK2Sn7HvW7CFb
aJGQFmQyRERkKXvJ9nvO++uc+eM595773e/ed39vpwFD+g4uiYg3RKmYIiaL
Q8RU8ZH4UJwo5omZoqvoIt4Ts8T7YqCYLToUEXto3FN01HxN0VPzXUS7Is+s
Fmv5rrlijhgkPhCXit0jz+CsKtFL8934R/NTNe4gthfzfWc3sYVluUjsGvkP
/96r8R7xsaj1HVuJ7r4bHd4VR1u3s30X/38ppot1xTriLXGJ6Cv2Fz+JRZa3
tXhKvCZetR5LxfNigvhOLPGeJ8VX/vc82wp9v/aefcXq/neZOEBUikniFfGy
+EH8KC4U+4ne4nvxjugsNhIzLPM0cbh1wRZ3i5NtkzvFHeIE+xnZnhDnWEbO
eFsc6bO5+yXbeZUMfcQalm2x+EYME9+yLh/srHE18Zxl7G0d0XVoZGwQI5+L
lWJTsZn4W5QWqc/GoqHm4zU+Lr4QC7F7kbFATLTR/HeNncTa4g/sqLWdImVA
loM1thPtxS+GeZX4VfQT64sNxHJxmOjoMzn7TFEjthEti4T5tuhYpGyPeR8y
lheZL5uLRpqP0/igOF18JhaIHrbPQ+I0y4rMn9pP5FpXn8WecfX+5RximZhu
XqRNiP9WkbZ6VDwiPhF13sPerUWLIv1OrHS2rfH7dpE2xbYT7LcLImN4uW2z
oVgh/o3M5w7iP/sEvc+KzJ/5Poszaw1xd4q/EfPEPjm0yDqj+46WlzXi8Fzv
Jd6Iu4sj848Y21vsFRl7SyzniMhYq/XdLSJrAf+Qu318Vp1tM8R3E4M97ZMF
1ruH16hlAyJrV7V1r7OsLW3r4yJrBTWj0P67InOM3KKWnhQZK8QM9bS/2CQy
5on9830eNiB2sWEv+3Shz+Ts9URJkTISC2dY9nk+u8b34fuHxWDrudi2aism
RtZg9CkTV4vhYh/bFNsOtJ74Nooc8XW5uMX6lBVZV7BvZZF5RswQO9TL6iLr
IvWLOkQekZt/eiRXG4jR4givXyOuFYeK38RIMcpz8vQKr3E3dYGahgyNi8yz
+zS/v57MyDpGHOs15mNFM82bFpmT5BVxWe4zOGuY/YBOlb6LWtQ48k76YqnX
y9yf+I+7H4g8h9xvEinTIPsQ3zUoUhdqT4l1wlb0OXoINhvhuKN3tjfMqcHU
Yuo/a8ypv3yjnpL/7CFPqnwmZw+3j/AN/aVTkX369cg3APvof/QzZLjce/j2
Zj2fjbaPsN2W2DHShpdF9m3O5L9/Iuv4jeKmyD670mt8O8Yj326OzMMm9gm+
YR+9oKHPoA9Rg6g9f4mjPF4vbvA6tYm3zHX+tsJz9mB3cqdRZN+jBlILm0fW
7eMj/ULOkru3i9si3zizLC/+pB7P9LdbI+vCqj28RZr6X94Y3W2fsY4/7MWb
ZbZjktikbsyxDsjJm4S3Cf2bekK+jfJaF8cfe0c6buhT0yw/+lDjeetQA2qs
H/pMclzxNuFt8aJ4IbLu0LfJN/Kb+jbVMo+xbHP9z1L7+edIP/N+aRMZQ9SQ
qyLfkFM8vzKy7062DiMtK7qR7/iDmjbduuOr/rYBdY2ehZ8qiuwr9Fx6basi
+2Uz91V6I+vUV+o975gK/4tv6c1DvcZ8vHU4MPKNtcy+J0aIDWKAWOxmnxGT
vDF4a1SIpyPfb2219ozGZz1nD99YIz6pF/RX3k/UNPKGN9UMQ/9tVO8budXP
e8i/gywjsvIu581C3aAW0hdb+862tgk2QHfecrxnWWPO23OifY6v6QX0BeK1
m3X9H4bsctM=
               "]]}], Lighting -> "Neutral"]}, {}, {}, {}, {}, {
           GrayLevel[0], 
           Opacity[0.2], 
           EdgeForm[None], 
           GraphicsGroup3DBox[{
             Polygon3DBox[CompressedData["
1:eJxNlOlLVVEUxe/dmk1mg81lZZPZYPNEEIIEEURUREREVIhEpERERF/6W8wm
n1pPLdNyqtTKbJ7LSptHm+dpLfZ64Icf57133zl7r7XXuakb81bkWhAEe0Ac
uB0GQTk4Ci6Ai6AFnAPN4Dy4C6rACbAAm/OxPgV3QAU4DhrBWdAE9oEDYD84
CArBIVCGvfEgBJVgCBgISvDsCDgc+tkFYC/PxbP+oC+4h+/VoAa0gtPgDLgP
6kA9WGRerwPkmP/OGuvN+++NdZnq/QQr8TmK9R9Ybe4D+9tkXou1I1iLQRHI
M9c5DuslrFfAZVBqfsZvcCv0M0vBzdBrUVemuS+vwBKd+wVsMdcyUr2UaS9/
a5BG9lIr7UnmOqiHvvQzn1cfrIl69gvfv0ljHb7PBTNBT5AAeoDuWjm/anNN
qeYa/sjPJ5ozZ/IcvFBOnoF2PWsL3Qv68EM1qZm99DLPz1rVYb0umj99/ivv
o8pRpbLEORxTLeo8qeyVq+cEzfaU+nyg/DF7tXg2HUwBD5Vj9lAhbxK1vxvo
yosgzewjTn2xfpX5TIapXzOfBXU/1oyuyhtm9Zpyz8zvNL9LsT6mggwwXh7T
67Fa2fc09cw9k7GmgUla08EEMFG/Uc9m9TVc540Bo0FNp31LzTPAzGzV//if
YvPcfQBDdf94R0ZIL3O30Hze9H+essMMzTfXT+1R81mzxhw9Zw4Wm5/9EWTh
8xvNdJR6jnmaov5nyCPqLzK/u9zDmrPBLLBNmujDa2WR9+i9/ss9X6Uppu2T
elijeXPWA8zvDO91oXl+qeez9kWk57t8exT6THi/3qkO3y8vVZ/z3qAzW9TL
W+ldp6wxe4PlMTO7XHljbq/rPL4bd8iHDM1kkPmd2iX/6cMqZZE53C2/6Xuy
NPE9ka393HtDmvju2q7sMB8R8/7p43+adNOa
              "], VertexColors -> None], 
             Polygon3DBox[CompressedData["
1:eJxFlne811MYx3/nKLNkxDVLSGTzsklmRqhUMsuloaSEJKRB9kiXSqX8tO69
0rh1b12Nm7333kRGRhFCxuf9ej5e/ni/zvM953yfc86zzmlW2q/DZblQKNSJ
emJdKhTaq2OimGuQ31V/R7Wr1Z6kdraYKbYXO4nBYkfxlcZbqR0rKsWP+n5E
bRtxgjhQXCMeF3XilxR62opTrBPds9z3ncaPUzsu/6/nLXSKEyVfK67z2oM9
Z5zntLEOdD0qTs2ha6hYk2JenfeyzHouEheLvzReyn9qz1B7Ovuy3E4sT9H3
hNo+anuLpyxfKjZ0Xz/RXzQUGPpqMUiUiIG2CfvkLMeLqdLRWu3RYnoKm7T1
3k8WM1L8w9wKyZWew9hM/3usOMY6XklhI2zzmuSnU+yJvTwr+cUUe2IvL0te
nMIGnH2p5BpxruRzxELJXdV2E2slX5Bj7Dzxc4o5tZ7D2CLJdaKn5B7YWfJZ
aruI7yV3Vntmjrj6Wt8d1D6n9gq1A8QLkuekmMNYlceuFFt4zjzrRFe11+ol
stf8J0UMd/Ral4tRYj9sKf5gDfsU324ibrQv8d8IUV/UE+tZHuGzoH8zcZNt
iU23EiO99wHWhc6NxUaeyz+NxKZimPgzxT5+TzE+STyTQudEr8s5ycFJ1sG/
k62/k3gyxZ47uY+1HjTI+PE9sb7309sx2t7nYQ3W2k7c7FgYaJm+bcU2OXLn
1xR5Sw4hD3Vs4H9qwS2ONWJuN3G7uE3c6jHmNBVNxCrNu8G+62zbYcPGYssc
Y8yhjvwgCvoe7tgstVywn/9OYcthjj1icKXaIY4dYuhhr0vefiSul7xC7Zfi
C8/ln2/FNyLZ5z0cU5Nte+L8fdHA/sT35Hgr75m9UgMn5NgXcfyO+DzFetQO
ash9OfbA2vfnALkoXhdjcuyDuvCG93eYmJviTNiemrYghQ9+sw04+1rXuDWu
E9TE1fYZviJnH3AMEnvjLdP3WAobYt/TxJIUNh/vudTFt1PsZYj3yF7H+uzU
qTftW2wyP4WP8X938WqKGLnQMUZsFcXWjjdir8S2wUazUtTfdY4BfE+NLvpf
6syHKeLnfPF8ihx8yHFEXfsgxdhI9zHGfbXSsUEN4r5Z5VikRt2ldi+xp2hp
Wwy3Tyc4d8ihZSlqAmfhTC+lyKHNHc/UAmoWdYg8xh6sh27WuFPcIQ7IUZ/u
EXeLcnFwjjr+mSiTfJXYR4wWR+WIi2niyBxxXOH+I3LEGz7CNxX+t8w6y903
xjr4h/v5UHGvOChHraZuEF/YY0mOuvlpijrcHNvmuOO4V5qJvmK6+xdb/iTF
HOyIDv6lllNXq7wOdbxWLCL+ctyje9sm2GJf66emUEt2yXHXEWflKe68Sscg
fYyRD/gMX80xyOQiNb+dZfJpufO+0npb+6zcFdyTnLmF4wFf7eGzERfcW5xx
ao56t6uYZpC5dz9O4RPsjK8Ot++x186Ogb7ua2ndxAJ31u6OCd5bl9hGtbYj
+yLeiK8Wnj/Ddib+iEfyZEGOOr4wxx3Z0zI1kVrYy/3I3CfUO/Kxu+cwt7H1
8EbinUD9I6fIpRr3k4fkA/mJLbDJlBx3ALFF/I12jI2yf/e3ncs855AcMcra
1Iwm3kN/xxL53dB7KXpN1uZtQp5Tr6h/3LvzcrxReKtQz7kjuRerHF/kBLmw
1OvyJuQtyLtphe+I2a7Z9PNW3CHHm7Op/UCs9vE50MMb77+3HnlLvSvxWLn7
Bvk/Yn2DHPdxjW3JGbp53/PFTynqNfYk/ps7rrjPzxbVPmcj6+Dfrj4jZyWH
u3hOtXWiu+iYJBanSP4XtXuTgg==
              "], VertexColors -> None]}]}, {
           GrayLevel[0], 
           Opacity[0.2], 
           EdgeForm[None], 
           GraphicsGroup3DBox[
            Polygon3DBox[CompressedData["
1:eJwt02lTE1EQheEJ5R+R1QAJKDEIUYgLRgEJBoNGwbAoqCi4QFSQRQWEYEAU
4wrIP/U9xfnwVHXd2zPTt2/PybGZzHRFEARJnMCTUBBE0YQpDOEnfmEYI/iH
I4w6PsCh1/6iD2ns47fXFP/BNjrQiR1ccY72uvDFOdrbRRlXkcIP11J2rJq+
Yg/f8Q3nvab4Aq75nXrXdedewmU/8xntSKCEO1jCMnJIYgObuIhTKGILYe+t
45NzVlGLOqx5L45W5xT9zZLf8cHPKPcjVnAfebx3LSuOVVO1n1FuDd5hELex
iHmvKV7ALa8pzuINMhjAW9/dXdzzHdb6jGGf4QHGMI6HeIlZzOEV+r2m+Cae
YxozeIFzXlPchhie4hnOOvcMWvyM9jSDU85pdA36dsTf7kaPa3iECUziMZq9
pvi09+rR4BydpRJVPpNmSzOi2Ui5F5r5YfdEs5r03Xe615qRnHuecY+z7mmf
e6JepF1rL264Zs2eZl6zrhnU7GlmNasJ373+Mf1befcm5l6pR3H3VL3UTEV9
Zp21yWfTjNT4jPXuYcQ9KISOZ0B3/9q1FRyrxv/q6mR5
             "], VertexColors -> None]]}, {}, {}}, {{
           GrayLevel[0], 
           
           Line3DBox[{26, 1, 137, 138, 139, 6, 152, 153, 154, 11, 167, 168, 
            169, 16, 182, 183, 184, 21, 74, 75, 76, 22, 77, 78, 79, 23, 80, 
            81, 82, 24, 83, 84, 85, 25, 193, 192, 191, 20, 178, 177, 176, 15, 
            163, 162, 161, 10, 148, 147, 146, 5, 46, 45, 44, 4, 40, 39, 38, 3,
             34, 33, 32, 2, 28, 27, 26}, VertexColors -> None]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{6, 29, 30, 31, 7, 35, 36, 37, 8, 41, 42, 43, 9, 47, 48, 
            49, 10}, VertexColors -> None], 
           
           Line3DBox[{139, 195, 196, 88, 136, 198, 199, 91, 142, 201, 202, 94,
             145, 204, 205, 97, 148}, VertexColors -> None], 
           
           Line3DBox[{146, 252, 251, 95, 143, 249, 248, 92, 140, 246, 245, 89,
             134, 243, 242, 86, 137}, VertexColors -> None], 
           
           Line3DBox[{11, 50, 51, 52, 12, 53, 54, 55, 13, 56, 57, 58, 14, 59, 
            60, 61, 15}, VertexColors -> None], 
           
           Line3DBox[{154, 207, 208, 100, 151, 210, 211, 103, 157, 213, 214, 
            106, 160, 216, 217, 109, 163}, VertexColors -> None], 
           
           Line3DBox[{161, 264, 263, 107, 158, 261, 260, 104, 155, 258, 257, 
            101, 149, 255, 254, 98, 152}, VertexColors -> None], 
           
           Line3DBox[{16, 62, 63, 64, 17, 65, 66, 67, 18, 68, 69, 70, 19, 71, 
            72, 73, 20}, VertexColors -> None], 
           
           Line3DBox[{169, 219, 220, 112, 166, 222, 223, 115, 172, 225, 226, 
            118, 175, 228, 229, 121, 178}, VertexColors -> None], 
           
           Line3DBox[{176, 276, 275, 119, 173, 273, 272, 116, 170, 270, 269, 
            113, 164, 267, 266, 110, 167}, VertexColors -> None], 
           
           Line3DBox[{184, 231, 232, 124, 181, 234, 235, 127, 187, 237, 238, 
            130, 190, 240, 241, 133, 193}, VertexColors -> None], 
           Line3DBox[{191, 288, 287, 131, 188, 285, 284, 128, 185, 282, 281, 
            125, 179, 279, 278, 122, 182}, VertexColors -> None], 
           
           Line3DBox[{138, 194, 87, 244, 135, 197, 90, 247, 141, 200, 93, 250,
             144, 203, 96, 253, 147}, VertexColors -> None], 
           
           Line3DBox[{153, 206, 99, 256, 150, 209, 102, 259, 156, 212, 105, 
            262, 159, 215, 108, 265, 162}, VertexColors -> None], 
           
           Line3DBox[{168, 218, 111, 268, 165, 221, 114, 271, 171, 224, 117, 
            274, 174, 227, 120, 277, 177}, VertexColors -> None], 
           
           Line3DBox[{183, 230, 123, 280, 180, 233, 126, 283, 186, 236, 129, 
            286, 189, 239, 132, 289, 192}, VertexColors -> None]}, {
           GrayLevel[0.2], 
           
           Line3DBox[{26, 86, 194, 195, 29, 98, 206, 207, 50, 110, 218, 219, 
            62, 122, 230, 231, 74}, VertexColors -> None], 
           
           Line3DBox[{2, 134, 135, 136, 7, 149, 150, 151, 12, 164, 165, 166, 
            17, 179, 180, 181, 22}, VertexColors -> None], 
           
           Line3DBox[{32, 89, 197, 198, 35, 101, 209, 210, 53, 113, 221, 222, 
            65, 125, 233, 234, 77}, VertexColors -> None], 
           
           Line3DBox[{3, 140, 141, 142, 8, 155, 156, 157, 13, 170, 171, 172, 
            18, 185, 186, 187, 23}, VertexColors -> None], 
           
           Line3DBox[{38, 92, 200, 201, 41, 104, 212, 213, 56, 116, 224, 225, 
            68, 128, 236, 237, 80}, VertexColors -> None], 
           
           Line3DBox[{4, 143, 144, 145, 9, 158, 159, 160, 14, 173, 174, 175, 
            19, 188, 189, 190, 24}, VertexColors -> None], 
           
           Line3DBox[{44, 95, 203, 204, 47, 107, 215, 216, 59, 119, 227, 228, 
            71, 131, 239, 240, 83}, VertexColors -> None], 
           
           Line3DBox[{76, 124, 280, 279, 64, 112, 268, 267, 52, 100, 256, 255,
             31, 88, 244, 243, 28}, VertexColors -> None], 
           
           Line3DBox[{79, 127, 283, 282, 67, 115, 271, 270, 55, 103, 259, 258,
             37, 91, 247, 246, 34}, VertexColors -> None], 
           
           Line3DBox[{82, 130, 286, 285, 70, 118, 274, 273, 58, 106, 262, 261,
             43, 94, 250, 249, 40}, VertexColors -> None], 
           
           Line3DBox[{85, 133, 289, 288, 73, 121, 277, 276, 61, 109, 265, 264,
             49, 97, 253, 252, 46}, VertexColors -> None], 
           
           Line3DBox[{27, 242, 87, 196, 30, 254, 99, 208, 51, 266, 111, 220, 
            63, 278, 123, 232, 75}, VertexColors -> None], 
           
           Line3DBox[{33, 245, 90, 199, 36, 257, 102, 211, 54, 269, 114, 223, 
            66, 281, 126, 235, 78}, VertexColors -> None], 
           
           Line3DBox[{39, 248, 93, 202, 42, 260, 105, 214, 57, 272, 117, 226, 
            69, 284, 129, 238, 81}, VertexColors -> None], 
           
           Line3DBox[{45, 251, 96, 205, 48, 263, 108, 217, 60, 275, 120, 229, 
            72, 287, 132, 241, 84}, VertexColors -> None]}, {}, {}}}, 
        VertexColors -> CompressedData["
1:eJztmXk0VW3Y/8mQuVJpMpQ5SSUVSV8NSCkpIZmKJhoVSqWopBQZIg2SlEiS
KZRZ5nk6h2M4jmM4po0olep31u9dr9bqeXbP/+/y/cNe514f+9z7Pvd97eu6
vosOnNx1cAoHB0cO+w8X+6q2douP/gomVO0GqpxQggs7Ysy3CVDA8f81iE0u
h1+mSnXhUUppTXFzEbb2H551yaEfi2R3oVKgAYztV2ZpZWZM8Bc59Xc7JPch
YtnRFctL2uBks/tCqC4NUTJyLvOO5eLQmXkG2q4tEDEqN2+hU+CewG/RYZeN
J8+PPaeupONI/eYnHl4NGDSJeVO8PwefXHtMzFxaoS3F13XVnoDnYVkj5ZAW
pPEV0nWrYrGSOLpX3WEAtws+qhQI0mATtGf7K9+kifnw7xGt/OrIwlkl0SBv
87qJ8T+vFblgijsQoIe7MfxftCB99sHMD6Ox4DpsWqRqR8HRB5rX0wSyIfWG
O/pHQevE/3l1Rr8bXzMAiU2a6ge2d8PvlZHsdlsG6jNKvdrnFMFq/6H9l8Ua
oOjqs87zNQG7uUcXt2kywPGj/k6W3Ttknzrx67KGB8belK+X9bGH1H1VgbYc
LwRtqnRY8YrA+nszitIXMRAqz3gbLvEOSzmqOQKNmmEje9V/S0Qe8rpmRvuw
P+t4y9rdGalCz4uXtq8Xp4HrQljMyoPUiXlOeUJ9EHCvH2peTZG3fDtQ/+L+
XlGJbgisDzvI7K+A7RPtt7uDq9ETOtWAP7gPV6W+mUTZUBDvJjxgvzx34j4e
3csuPb5NIID/roSN8ADse9t+zNlUhc6bt8rnKaRCQ0hXdO5ZChL3HFuo29iD
S8+2ungya3BgsCh759ISJMS26Z0oGYBB3p2o3FIaBCR4kr7Mj4fuEgOxzkQC
PyJdrHx9GOjYmXomSScFtsO9DgVbqbCwGI6TjMhGUMmAZ9lsOlID+C/FJVKh
zkPjMWvPxrz2tsprRCtmrlLwCZFswOzYXHM/6RzwLusMOJHQinaxvlpaGwGI
U/dGeDJx4UbsztVP06GiO7Kj+ykBpunaGeGpbYiP9miwmZKM807jhSP7CYgq
aPihoRmVD1/niRXEQNm28Zx3UDusEo14kj2LcXnD2CF6KgW6ynQhsY8s7Ciy
jb6eUgWbO98E6TMrseuEmYhGN/s8tC5lenBRoVhzuFT2fTbajX9eWHSTwJ1n
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
JjWpSU1qUpOa1KQmNalJ/d/W/wMOdAQl
         "], VertexNormals -> CompressedData["
1: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
4SfqrW1zeH3OsNbTf8iBx1INqyIvJGEy/OSgMM4TvRl+dk9ToYx66cj225Ww
mSWJoKqK952GuFG4TxMYV2lMDwhTIK9IPYPtMw2yT/abH5NrgEsaL79zvaqB
GIPzfbatNDiByQn8YumGq7dVZq/yE5D4haMamxZnYQmMbkgxtoDSVl2xRrnX
yEZJwyh8LwbshXoZ8o0dwH6OFBMmgVAD12e+xcs0uH+X/n3wx0KUIzb2SYs/
CVrnhEdn8fXqleA6ccOYjF4rWA4PTb9DxZ5Xhq1wP+n9qDOqQLwepdhkbiix
1Aa+qltpPcYYMB/IHn/NGw2pua23uz7UoAaihZ2cMwaR+33ekmlFkNoS1ziv
Uo3yhu1PlFhhsOxwWEuSrQgOHFTcxcPVioKDuq+rTdBAvBY72ejdDFFXiB6L
OakoeSV3dWUPBnXJ4uKfpdpgZFCJWFEbDxP0tzQ2ztGAcUw3sKG5HT6byL8w
MichmXGLjp5QGtD9H8ccovsPj3/jTQqut2LiPqN/Pf8t/mef+1/j/6/e84/K
5+CvXPfv+L+sH/yV9f13/O8b91+P87+Z/93jj1UVGfFU7ir7s/yvPec/5v/Z
+/4s//Pf+xc6AH+L//fG+f+L/73f9+fv+4s+/Zv8L57zP0Sv/tfy/yH1/L+N
/8Ov63r8/3f+d95//9Hz/6fjWOfrfJ2v83W+ztf5Ol/n63ydr/N1vs7X+Tpf
5+t8na/zdb7O1/k6X+fr/B+S/xOCX0EJ
         "]], {}}, Axes -> True, AxesLabel -> {None, None, None}, 
      DisplayFunction -> Identity, FaceGridsStyle -> Automatic, ImageSize -> 
      Small, Lighting -> "Neutral", 
      Method -> {"DefaultBoundaryStyle" -> Directive[
          GrayLevel[0.3]], 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "RotationControl" -> "Globe"}, PlotLabel -> 
      FormBox["\"ListPlot3D\"", TraditionalForm], 
      PlotRange -> {Full, Full, All}, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {{}, {}, {}}, 
      ViewPoint -> {2.366242371640245, 1.6568953288633446`, 
       1.7622698169818318`}, 
      ViewVertical -> {-0.4266101625120704, -0.2987218866433813, 
       0.8536796844728378}], 
     FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{
               RasterBox[CompressedData["
1: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
                "], {{
                  Rational[-15, 2], -45}, {
                  Rational[15, 2], 45}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -45}, {
                    Rational[-15, 2], -45}, {
                    Rational[-15, 2], 45}, {
                    Rational[15, 2], 45}, {
                    Rational[15, 2], -45}}, {{
                   7.5, -45}, {-7.5, -45}, {-7.5, 45}, {7.5, 45}, {
                   7.5, -45}}]]}, {
                CapForm[None], {}}, 
               StyleBox[{Antialiasing -> False, 
                 StyleBox[
                  
                  LineBox[{{7.5, -44.99999999999999}, {7.5, 
                   44.99999999999999}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -44.99999999999999}, 
                    Offset[{4., 0}, {7.5, -44.99999999999999}]}, {{
                    7.5, -26.613891726251275`}, 
                    Offset[{4., 0}, {7.5, -26.613891726251275`}]}, {{
                    7.5, -8.227783452502553}, 
                    Offset[{4., 0}, {7.5, -8.227783452502553}]}, {{7.5, 
                    10.158324821246168`}, 
                    Offset[{4., 0}, {7.5, 10.158324821246168`}]}, {{7.5, 
                    28.54443309499489}, 
                    Offset[{4., 0}, {7.5, 28.54443309499489}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -40.40347293156282}, 
                    Offset[{2.5, 0.}, {7.5, -40.40347293156282}]}, {{
                    7.5, -35.806945863125634`}, 
                    Offset[{2.5, 0.}, {7.5, -35.806945863125634`}]}, {{
                    7.5, -31.210418794688454`}, 
                    Offset[{2.5, 0.}, {7.5, -31.210418794688454`}]}, {{
                    7.5, -22.017364657814095`}, 
                    Offset[{2.5, 0.}, {7.5, -22.017364657814095`}]}, {{
                    7.5, -17.420837589376912`}, 
                    Offset[{2.5, 0.}, {7.5, -17.420837589376912`}]}, {{
                    7.5, -12.824310520939736`}, 
                    Offset[{2.5, 0.}, {7.5, -12.824310520939736`}]}, {{
                    7.5, -3.6312563840653724`}, 
                    Offset[{2.5, 0.}, {7.5, -3.6312563840653724`}]}, {{7.5, 
                    0.9652706843718082}, 
                    Offset[{2.5, 0.}, {7.5, 0.9652706843718082}]}, {{7.5, 
                    5.561797752808996}, 
                    Offset[{2.5, 0.}, {7.5, 5.561797752808996}]}, {{7.5, 
                    14.75485188968335}, 
                    Offset[{2.5, 0.}, {7.5, 14.75485188968335}]}, {{7.5, 
                    19.351378958120524`}, 
                    Offset[{2.5, 0.}, {7.5, 19.351378958120524`}]}, {{7.5, 
                    23.94790602655771}, 
                    Offset[{2.5, 0.}, {7.5, 23.94790602655771}]}, {{7.5, 
                    33.14096016343207}, 
                    Offset[{2.5, 0.}, {7.5, 33.14096016343207}]}, {{7.5, 
                    37.73748723186925}, 
                    Offset[{2.5, 0.}, {7.5, 37.73748723186925}]}, {{7.5, 
                    42.33401430030643}, 
                    Offset[{2.5, 0.}, {7.5, 42.33401430030643}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -44.99999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -26.613891726251275`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -8.227783452502553}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 10.158324821246168`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 28.54443309499489}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], {
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
                StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
              PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 90}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"SunsetColors\"", ",", "#1"}], "]"}], "&"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"0.`", ",", "0.9791157963893689`"}], "}"}]}], 
               "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "90"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), Editable -> True, 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )],TemplateBox[{
     Graphics3DBox[{{
        RGBColor[0.3315753, 0.4561011, 0.6388182], 
        PointSize[
         NCache[
          Rational[7, 180], 0.03888888888888889]], {
         RGBColor[0.8793198568516976, 0.3010870113978623, 0.1620265029137873], 
         Point3DBox[{1., 1., 0.9260467391925775}]}, {
         RGBColor[
         0.36464844934493845`, 0.11463442655828249`, 0.618533226652553], 
         Point3DBox[{2., 1., 0.07336813848054713}]}, {
         RGBColor[
         0.4075187781382079, 0.11227799147805974`, 0.5817849771538173], 
         Point3DBox[{3., 1., 0.057410005876997516`}]}, {
         RGBColor[
         0.42792759386392476`, 0.7005769060752038, 0.543229262290078], 
         Point3DBox[{4., 1., 0.4498069531418636}]}, {
         RGBColor[
         0.24746364847587654`, 0.38049542342534204`, 0.8140031835999226], 
         Point3DBox[{5., 1., 0.22185839024238918`}]}, {
         RGBColor[
         0.36435095188708116`, 0.11465077897417723`, 0.6187882401109124], 
         Point3DBox[{1., 2., 0.07347887949922693}]}, {
         RGBColor[0.9014845620784685, 0.5498528784363227, 0.2102657919191548], 
         Point3DBox[{2., 2., 0.8248661692016792}]}, {
         RGBColor[0.9024528582350616, 0.4820026449774317, 0.1973509642253453], 
         Point3DBox[{3., 2., 0.8562948473152641}]}, {
         RGBColor[
         0.7709727761906049, 0.7268032190781777, 0.27092681220637227`], 
         Point3DBox[{4., 2., 0.6744917081810657}]}, {
         RGBColor[0.8766962257602413, 0.6398530027069376, 0.229525053592567], 
         Point3DBox[{5., 2., 0.7708876261885509}]}, {
         RGBColor[
         0.44490141158212065`, 0.7069071243496465, 0.5223670100433034], 
         Point3DBox[{1., 3., 0.4622099187067785}]}, {
         RGBColor[
         0.8688905021761529, 0.6581580093893186, 0.23369246326673418`], 
         Point3DBox[{2., 3., 0.7584637139546091}]}, {
         RGBColor[0.2487965915981594, 0.2648555276534987, 0.7827869066057738], 
         Point3DBox[{3., 3., 0.17034708116608188`}]}, {
         RGBColor[0.8848750941015435, 0.3371751759228855, 0.169105355908186], 
         Point3DBox[{4., 3., 0.9126469724347692}]}, {
         RGBColor[
         0.24758124288382316`, 0.3811645517183045, 0.8139308674670982], 
         Point3DBox[{5., 3., 0.22217683588309756`}]}, {
         RGBColor[0.8942676788421096, 0.5986466286126252, 0.2201438036964237], 
         Point3DBox[{1., 4., 0.7988550770674117}]}, {
         RGBColor[
         0.49935955652985586`, 0.7251984146497108, 0.4574414329634663], 
         Point3DBox[{2., 4., 0.5011042307802998}]}, {
         RGBColor[0.474852730523652, 0.7169671120733405, 0.486658730437976], 
         Point3DBox[{3., 4., 0.4836013184146368}]}, {
         RGBColor[
         0.5951347761720893, 0.741885340276572, 0.36949178078961414`], 
         Point3DBox[{4., 4., 0.5629058377808671}]}, {
         RGBColor[0.471412, 0.108766, 0.527016], 
         Point3DBox[{5., 4., 0.033626271633779625`}]}, {
         RGBColor[
         0.31828419021637916`, 0.6014808395217528, 0.7183686193545937], 
         Point3DBox[{1., 5., 0.3456024544980061}]}, {
         RGBColor[0.857359, 0.131106, 0.132128], 
         Point3DBox[{2., 5., 0.9886619996158352}]}, {
         RGBColor[0.3972305049449801, 0.680179154737668, 0.5898626199856191], 
         Point3DBox[{3., 5., 0.42339045648065654`}]}, {
         RGBColor[
         0.26520640927146794`, 0.48145416330850405`, 0.8030920538211257], 
         Point3DBox[{4., 5., 0.26990578406109056`}]}, {
         RGBColor[0.5927329791541677, 0.7415336625885477, 0.3715841585342633], 
         Point3DBox[{5., 5., 0.56138449067985}]}}, {{
         RGBColor[0.3315753, 0.4561011, 0.6388182], 
         Opacity[0.3]}, {
         RGBColor[0.3315753, 0.4561011, 0.6388182], 
         Opacity[0.3], {
          RGBColor[
          0.8793198568516976, 0.3010870113978623, 0.1620265029137873], 
          
          Line3DBox[{{1., 1., 0.9260467391925775}, {1., 1., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.36464844934493845`, 0.11463442655828249`, 0.618533226652553], 
          
          Line3DBox[{{2., 1., 0.07336813848054713}, {2., 1., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.4075187781382079, 0.11227799147805974`, 0.5817849771538173], 
          
          Line3DBox[{{3., 1., 0.057410005876997516`}, {3., 1., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.42792759386392476`, 0.7005769060752038, 0.543229262290078], 
          
          Line3DBox[{{4., 1., 0.4498069531418636}, {4., 1., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.24746364847587654`, 0.38049542342534204`, 0.8140031835999226], 
          Line3DBox[{{5., 1., 0.22185839024238918`}, {5., 1., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.36435095188708116`, 0.11465077897417723`, 0.6187882401109124], 
          
          Line3DBox[{{1., 2., 0.07347887949922693}, {1., 2., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.9014845620784685, 0.5498528784363227, 0.2102657919191548], 
          
          Line3DBox[{{2., 2., 0.8248661692016792}, {2., 2., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.9024528582350616, 0.4820026449774317, 0.1973509642253453], 
          
          Line3DBox[{{3., 2., 0.8562948473152641}, {3., 2., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.7709727761906049, 0.7268032190781777, 0.27092681220637227`], 
          
          Line3DBox[{{4., 2., 0.6744917081810657}, {4., 2., 
           0.033626271633779625`}}]}, {
          RGBColor[0.8766962257602413, 0.6398530027069376, 0.229525053592567], 
          
          Line3DBox[{{5., 2., 0.7708876261885509}, {5., 2., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.44490141158212065`, 0.7069071243496465, 0.5223670100433034], 
          
          Line3DBox[{{1., 3., 0.4622099187067785}, {1., 3., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.8688905021761529, 0.6581580093893186, 0.23369246326673418`], 
          
          Line3DBox[{{2., 3., 0.7584637139546091}, {2., 3., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.2487965915981594, 0.2648555276534987, 0.7827869066057738], 
          
          Line3DBox[{{3., 3., 0.17034708116608188`}, {3., 3., 
           0.033626271633779625`}}]}, {
          RGBColor[0.8848750941015435, 0.3371751759228855, 0.169105355908186], 
          
          Line3DBox[{{4., 3., 0.9126469724347692}, {4., 3., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.24758124288382316`, 0.3811645517183045, 0.8139308674670982], 
          
          Line3DBox[{{5., 3., 0.22217683588309756`}, {5., 3., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.8942676788421096, 0.5986466286126252, 0.2201438036964237], 
          Line3DBox[{{1., 4., 0.7988550770674117}, {1., 4., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.49935955652985586`, 0.7251984146497108, 0.4574414329634663], 
          
          Line3DBox[{{2., 4., 0.5011042307802998}, {2., 4., 
           0.033626271633779625`}}]}, {
          RGBColor[0.474852730523652, 0.7169671120733405, 0.486658730437976], 
          
          Line3DBox[{{3., 4., 0.4836013184146368}, {3., 4., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.5951347761720893, 0.741885340276572, 0.36949178078961414`], 
          
          Line3DBox[{{4., 4., 0.5629058377808671}, {4., 4., 
           0.033626271633779625`}}]}, {
          RGBColor[0.471412, 0.108766, 0.527016], 
          
          Line3DBox[{{5., 4., 0.033626271633779625`}, {5., 4., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.31828419021637916`, 0.6014808395217528, 0.7183686193545937], 
          
          Line3DBox[{{1., 5., 0.3456024544980061}, {1., 5., 
           0.033626271633779625`}}]}, {
          RGBColor[0.857359, 0.131106, 0.132128], 
          
          Line3DBox[{{2., 5., 0.9886619996158352}, {2., 5., 
           0.033626271633779625`}}]}, {
          RGBColor[0.3972305049449801, 0.680179154737668, 0.5898626199856191], 
          
          Line3DBox[{{3., 5., 0.42339045648065654`}, {3., 5., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.26520640927146794`, 0.48145416330850405`, 0.8030920538211257], 
          
          Line3DBox[{{4., 5., 0.26990578406109056`}, {4., 5., 
           0.033626271633779625`}}]}, {
          RGBColor[
          0.5927329791541677, 0.7415336625885477, 0.3715841585342633], 
          
          Line3DBox[{{5., 5., 0.56138449067985}, {5., 5., 
           0.033626271633779625`}}]}}}}, Axes -> True, 
      AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 1}, BoxStyle -> 
      Thickness[Large], DisplayFunction -> Identity, FaceGrids -> None, 
      FaceGridsStyle -> Automatic, ImageSize -> Small, PlotLabel -> 
      FormBox["\"\\nListPointPlot3D\"", TraditionalForm], 
      PlotRange -> {{1., 5.}, {1., 5.}, Automatic}, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic, Automatic}, 
      ViewPoint -> {1.617381003695513, -2.775102616451917, 
       1.0643703101113913`}, 
      ViewVertical -> {0.1543061433991072, -0.2657808535031694, 
       0.951603989073407}], 
     FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{
               RasterBox[CompressedData["
1:eJwVl3c01f8fx1NWIWVVSAkp0lJG6JkRCi20yay0UFo0ZPU1GiSjYUcho0FC
Vva495rXte/6uO6lQkqJ3/398T7nc17nfc7n/X6e5+v5eryVXTwPuS+YN29e
PX8J8Nf/v39Ylhi+1OyHTu5Ithy1GIy5h68P9A2iOYwi6nWsD5feGCdZC5dg
pmjS2113CK+b2O0m93uRnhr3JGBbCWR9jhv4Rg4haPFMkuzHHvS9/BbyyaUE
GzeWCz7iDuHUgaUXh+k0yMaZ+449LoHFsFpL6m46DKLW6hcvocEm6uVF1bIS
OKWEx35KpGNZu4HQw53dCI6YdDo+WoKbJ384NU/TMS57kOJ0gYqSECu7xwql
iJI7okG3ZaDlyOmX2s+6MOmfYlGzpxRZ5JKJqbcMZMb7eQjXdWKD3/SOmeul
+Bq2plRMlIngnsfbu392wO3qgY1b00vRb/ZfyGoXJpxWpgtkq3TguWeG8tn2
UkzNju7fXsKE4ani5jsH29HmMSuTMP8LlhTZrtgrx8KyYvkN/eVtePfG08tu
WxmUjOy/J7uzML75q2KDdxuex/6Lr/5QjjXh4+2GmSw0p1+UKFjTBofjVX+d
SBVY2/2oqGuMhQzFZbPJba1YvTLUYYZTCQ11rYTL2mwERJWPPQhqBX1gX1ms
4FdsvNoQIHGDDQfRcwM3t7ciLUVGWXtVNbZWnTnzuoQN3TvSZHc2BWfcaQEt
+jXQXSpkbSpAQGqypPxgLAUa65KYHna1MDiVsrl/NwGex+l8I0sKeCPu5kKe
dcBbyN4MI1A7IJmyfpqMnLear5NC62H6t3damkQgxb4oSjaTDC+vHwsN0xpg
sce3P0d6GLcaXQIFTpCxVbvwfNeXRljFLqvac3QYR4zFfUbFyPj581bz5e4m
7Gd9yGC+GAZTf2uFzgIypOUi9WKMWqAuVhmaXjwMulue4ryfJGzReZValEzC
vC2k82dpw5ixnymIYpCgnnXy/lgAGdTDvTYa08NYZmF5UK2VhO3FbMN52ynI
v8XZxFvGwRa9aG5hOQlmjV7jSwkKQlOmlubocGC1fjB4by4Jtj1/MlTiW+Fc
t2DS054Dd/kNq/tekuDCDXLYbtWGHWNLOrf4cHBX7MZnzwgSvP8ulrb41wYp
GaVPE1EcxM9U2c33I8FfLL7uaG47uPqazz7mc/BhVPJbtAcJDxVU7pxz7kDV
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
yvE/DJC6qA==
                "], {{
                  Rational[-15, 2], -45}, {
                  Rational[15, 2], 45}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], -45}, {
                    Rational[-15, 2], -45}, {
                    Rational[-15, 2], 45}, {
                    Rational[15, 2], 45}, {
                    Rational[15, 2], -45}}, {{
                   7.5, -45}, {-7.5, -45}, {-7.5, 45}, {7.5, 45}, {
                   7.5, -45}}]]}, {
                CapForm[None], {}}, 
               StyleBox[{Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -45.}, {7.5, 45.}}], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   Opacity[0.3], 
                   GrayLevel[0]], StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -29.35602094240838}, 
                    Offset[{4., 0}, {7.5, -29.35602094240838}]}, {{
                    7.5, -10.507853403141365`}, 
                    Offset[{4., 0}, {7.5, -10.507853403141365`}]}, {{7.5, 
                    8.34031413612565}, 
                    Offset[{4., 0}, {7.5, 8.34031413612565}]}, {{7.5, 
                    27.188481675392666`}, 
                    Offset[{4., 0}, {7.5, 27.188481675392666`}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -43.49214659685864}, 
                    Offset[{2.5, 0.}, {7.5, -43.49214659685864}]}, {{
                    7.5, -38.78010471204189}, 
                    Offset[{2.5, 0.}, {7.5, -38.78010471204189}]}, {{
                    7.5, -34.068062827225134`}, 
                    Offset[{2.5, 0.}, {7.5, -34.068062827225134`}]}, {{
                    7.5, -24.643979057591626`}, 
                    Offset[{2.5, 0.}, {7.5, -24.643979057591626`}]}, {{
                    7.5, -19.931937172774873`}, 
                    Offset[{2.5, 0.}, {7.5, -19.931937172774873`}]}, {{
                    7.5, -15.219895287958122`}, 
                    Offset[{2.5, 0.}, {7.5, -15.219895287958122`}]}, {{
                    7.5, -5.795811518324611}, 
                    Offset[{2.5, 0.}, {7.5, -5.795811518324611}]}, {{
                    7.5, -1.0837696335078573`}, 
                    Offset[{2.5, 0.}, {7.5, -1.0837696335078573`}]}, {{7.5, 
                    3.6282722513089043`}, 
                    Offset[{2.5, 0.}, {7.5, 3.6282722513089043`}]}, {{7.5, 
                    13.052356020942405`}, 
                    Offset[{2.5, 0.}, {7.5, 13.052356020942405`}]}, {{7.5, 
                    17.76439790575915}, 
                    Offset[{2.5, 0.}, {7.5, 17.76439790575915}]}, {{7.5, 
                    22.476439790575913`}, 
                    Offset[{2.5, 0.}, {7.5, 22.476439790575913`}]}, {{7.5, 
                    31.90052356020942}, 
                    Offset[{2.5, 0.}, {7.5, 31.90052356020942}]}, {{7.5, 
                    36.61256544502617}, 
                    Offset[{2.5, 0.}, {7.5, 36.61256544502617}]}, {{7.5, 
                    41.32460732984293}, 
                    Offset[{2.5, 0.}, {7.5, 41.32460732984293}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -29.35602094240838}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -10.507853403141365`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 8.34031413612565}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 27.188481675392666`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                   False], {
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, "GraphicsAxes", 
                StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
              PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 90}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"Rainbow\"", ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.033626271633779625`", ",", "0.9886619996158352`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "90"}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), Editable -> True, 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
  "Row",
  DisplayFunction->(FrameBox[
    RowBox[{
      TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Background -> 
    RGBColor[0.9, 0.9, 0.9], FrameStyle -> Automatic]& ),
  InterpretationFunction->(RowBox[{"Row", "[", 
     RowBox[{
       RowBox[{"{", 
         TemplateSlotSequence[1, ","], "}"}], ",", 
       RowBox[{"Background", "\[Rule]", 
         InterpretationBox[
          ButtonBox[
           TooltipBox[
            GraphicsBox[{{
               GrayLevel[0], 
               RectangleBox[{0, 0}]}, {
               GrayLevel[0], 
               RectangleBox[{1, -1}]}, {
               RGBColor[0.9, 0.9, 0.9], 
               RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
             "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
             FrameStyle -> 
             RGBColor[
              0.6000000000000001, 0.6000000000000001, 0.6000000000000001], 
             FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
             Dynamic[{
               Automatic, 1.35 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            StyleBox[
             RowBox[{"RGBColor", "[", 
               RowBox[{"0.9`", ",", "0.9`", ",", "0.9`"}], "]"}], NumberMarks -> 
             False]], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
           Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
           With[{Typeset`box$ = EvaluationBox[]}, 
             If[
              Not[
               AbsoluteCurrentValue["Deployed"]], 
              SelectionMove[Typeset`box$, All, Expression]; 
              FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
              FrontEnd`Private`$ColorSelectorInitialColor = 
               RGBColor[0.9, 0.9, 0.9]; 
              FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
              MathLink`CallFrontEnd[
                FrontEnd`AttachCell[Typeset`box$, 
                 FrontEndResource["RGBColorValueSelector"], {
                 0, {Left, Bottom}}, {Left, Top}, 
                 "ClosingActions" -> {
                  "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
            BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
           "Preemptive"], 
          RGBColor[0.9, 0.9, 0.9], Editable -> False, Selectable -> False]}], 
       ",", 
       RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.86042201500182*^9, 3.860422050406663*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"4a632009-dc99-40cb-b959-a9d7a2d999ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"2", "x"}], "]"}], "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"3", "y"}], "]"}]}], ")"}], "/", "5"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<SunsetColors\>\""}], ",", 
   RowBox[{"Mesh", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860422108721388*^9, 3.860422121213279*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"e3bcf7cf-06ca-4c31-b198-2b88eca7bd87"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJyFmk9uHLkVxvtPqW1rpFZXd19ggMkVsi1uZ5ZzhABZOrmCzpATZOEzKHMC
A1p6o429EWAQMNBBIEMqjJHBdOwu/R7n+1iFCAKIr0g+vsf3l2R//5e///zX
xWw2++dyNvvW+t+/Xr+/ef3+rlOcA//4jx++/j9Yfx/4T6cBv9n4edJVmqTz
V4H/9g3evAo80LsI/OFb9+urwAP9NvAPpw9bW29vuMg53ubAyKv9fWDk1fHz
pPvYJJ2/Coy8Su8iMPIq/TYw8up6+zSlx3E5S6vyZpM3m7zZ5M0mbzZ5s8mb
Td5s8maTN5u82eSt7XRcj0VOb5EXjLw6bp7UD5qk81eBkVfpXQRGXqXfBkZe
XW9vuPjhuJ3mSi7tL63qtzf99qbf3vTbm357029v+u1Nv73ptzf91nFm3A9z
pTeXC+wt8moca5LOXwVGXqVzERh5lX4bGHl1vX2aiqPjcSZXdul6c7l0fGnV
npm/Cqz2DL2LwGrP0G0Dqz2z3t4wf43FsaaKM+6HbqeuR5fTW81HTdJ81CTN
R03SfNSEvGDNR6yzN1zy4HieyFVccb9zu3S9uVw6v7Tqv6uk/rtK6r+rkBes
/rsKeafy/HgezFXc9Ljifud26XpzucDeIi8YeZV+Gxh5db19mqpjxvN8rvKC
x02PK+53bpeuN5dL6ZVW49VFyAvWeHUR8k7VaeN1TK7ynucFj5seV9zv3C5d
by4X2FvkBSOvrrdPU3XoeJ2Wq7yu/X2VFzxuelxxv3O7dL25XEq/tBqf25BX
camzx+vQXNUtntc973le8LjpccX9zu3S9eZygb1FXsX8eV3tdafXZV63eF73
vOd5weOmxxX3O7dL15vLta/agf6X5/zxtjtN//FlUrwLTDusc/8s12Ng6IEH
/o6GzxKY9cA/ndrvAp+Gv29t/C4w/MAH64OhD4ae9u8CQ8/pgL1FPsVnsa+s
D0Y+MPzo+F2ll0GPi+ATzDgw64FZD8x6On4XmPWQg/VcLjDyKy4t/IDhBww/
On4XGH6YBz++j2DWA3vLejp+F1jtaR3rgdUu1iG/YvZtHfyAVY518KPjd4Hh
x+3W7Ub38RiY9V1usLesD/Y44H7jdsv6rkcw/Pi++7o6vrQeh7T1+48Spxx7
vNK65dipHxyj3+1E8V3negN7/JrJ334i3pJnD8EvmFbriRKP6df64t7OCSUe
M17riRKf6R/Gb2z+Jilf2yp+T8kxxbf6XWnRh/JztPkL46fETY9rGh8PVZxB
f8rX2uhtAqsdPJp99pXdqf31Zm/lHOD8ap2xrvxQ665Dp3niUK3j+Y5+PW99
mcw7Sm81mSf0/FXyo+aRjc3fJNX7djLuTdUd/88uhnFz4+No9rZI3qr/LCy/
Ha2eoe6r84bS21g+vusUv7X7jeLHWl8vLF81tm5j+amxenph+aqx/NRYXChx
BLpq18Xv6Nfz3tnkviq91WSdoee/M8s3L5Pa01lgjXPbqj6h3+MieCqOaD58
WdnFuN2cVXUL87Xu4VwwXWcgn+cpz2N+3+D1lZ6jj53fLziffs/g8vAde1K7
O1RxFzk87nkc1vNW8aspP9Pz1rqyi6l9Vjva2PyN+fE2+jVe1Xl0Km96nPO4
OMxrqzrf7XjKLpjvckzxrX6xs/28C371/FLO//RrHtmGPBrnX1V+qPQuKvno
hz+wxs/yTuh5U+3yN8urq6ALf74PYPbV+dA4uq/qXL4rv9w73Xfj9ead1YXZ
6pAccRascTWbn2XTY7b6+cHquIdYD6z2+RB5SfvPAqs9Plj9/GB+8mB1bW/7
0Vd1MPx5nvQ8pHr3PLWp7Njr7KGdW907N3+dJ92PedL9KPWC9m8Cs57nY41r
j4FZz/Oo2rXn2RIn1R7KOULv5co5wus+1vc87XFW+zfJ6eu912Ngje9XFs+v
LH5fWby+sjh3lVSffo5pTX+t6a81/XncL/d0Gm/Zh48dePCL/z7b46/Pdvuh
4zt4oHOewKdt+/c2MPNpnS7zwcz3eYM+muALPKzzIoHhHwx9MPTBus6lyX0Z
9MHQByv/l0n5v3y225tKLjDr6b69CDqsB2Y9sLen6W92gVmflv6p795iL+Nx
79HifV/FAfX38g6h/V5n+T1xX52fiD8eZ7TuL++7+n2fnC8/h/v7ltfL/g7g
91x+b45fkm/xd9ZnHutD1+OgnlPKuwL9tM6X8lHyusZf8vmL8F/sTzHvq1+q
c5f6y68xXzHvd+V85u+xvp/+7qRy8bdOp+F/3pq/PobdQd/3S/vLd+ipP3Lf
d2P3Sch17Jwv2fc3O8XhV9nuSXKV16Hn77qaJ+47rR+OnZ9T/J3X7y/8XRc9
6/hNxBG1r33ED+xmaD8/7/t82M/X/4k465jxzGeext1ZYO9Xu6vj9Km93ej4
69bk4W9v8TLbveHHDv69DqYfecDYIS30oENLP/T4Dr3xcaUuG+Rbxv7SDz36
oQeGntY51FnroOd1Ef3QA6u8rfL3VQ+i/9uN8nNb6m/3E/YTe1D9LBL92Ifu
/9zkPHYq18zelxfBp9sx9NhfvYdZhr2qfrhnWpr9Lq3+vrK6dh30vA6lH3q6
/3OrC4+xvyqvvdfdbpS/23Ie8HMd+4v/0a/x+mPUfWCP/9BTu31ldnce2H+P
w3z2k/n06/3R0uLDsvpdB/TYT+jRr/dXa6s711X+Ev5uSx2u+jgP7PtD/HW/
kf36Gs/UPsvvO/TeYGl8NHb/8bx/163ZZ2v2uQl5VY4ry+ProKf22VbnFonT
f2iFn1s/35Q8Szt83dv9z8HeQ3Lcu2j83Nl9xVO0g945tz6ZPz1Nvtv7PY/G
i52d/58ijrAeeOp3FH5vpP6ws/P2U/fLCX8X9MHUP+Bhn++tDnlrdXz9Linn
2zc785OnjnVYH+wtdHWfyr2u8PmHc86gz3IeJe6ceqOu+xjnIcbRck6jX8+f
nzWeXbfhv0qv1DWM8xa7Uz3mwM4ncVrfm+e277PgQ/VU9KK/Q1lbvfPW7vnK
vR/7Osz7ZPdc1Ee/Rz/8YkfKf468ynj2DTz1Tq73uB9iXa+D+U4LfTD08Bfo
De2LsD89v6yT+lu5N0BO3ee70AP0T3xuy/23t5qHLhPjmU+cB5Mn2DfNk5+i
fgQzHvsZ1n0MfTCe9RkPH9BXvj4HZjz8YZfKb9E7/WC3C8bTol/GaT1T7j3p
p1V55rGvzAczXuUp/Az79cr4Pw/svx/GvqDLfPr1/Duvzi/yO9ttqR+U//PA
/vtnzdefIm/5PbzId93afk/XhcwX+aJ+uIx8DX/MF3muW9vvNu7LiIN6H/gp
7rG831v8nfF8H9Z5F3kdLP4c40u/yvXOzj3vwg/IT+Qd7BJ/cTsF6z3rIfRB
v+SR+B3mIeRTO92Hv+h+/R792Cf9Hs/03uGDxVHOf+UeRuU9xPla4/qNndtm
M/bB8xf97Ot4PuwtHjzZOfDR1muqc5jrgVbfAeehV7C/zw/0Sl3J/kBP+xe2
f8vgX+2h1IW0Sq98hz/6xQ6/xm3qK8aDidvwx3itmxqrM5eh7/8BSyOYuw==

    "], {{
      {GrayLevel[0.8], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxN3AfULkWRBuCZ+VRQwISkRaKiKCJJgiByAUFJAhIEJQuIZCSJIEGUjEjO
EsQMKph1FcGAigiCYg4I5rAq5rBuPbfe/7Dn3L5dX01NT3dPz9T7VvX8K+xz
2MsOnYZhePAxwzCretVxGPx+UpX1Sl666mdX+UmVMhkWq7J4GS5WZfU6vlTV
S1ZZq+Ql69iCVR5b5amlW7rKuqVfYtb6JVynyuOqLFVl7Tq2UNX/VeUpZfOo
qhclDy0/2rHSL6K9KssMLT++yrLVyXl1/s9LXqPqJ1e9QpUXjN3GilV+oa9V
Vqqy2dhtrOLYrPvyjCq7Vzub1rFflbx+yeuX/FDJP80cLF9l49L9cujx/Tr9
fVaVF5f+N+nXhnXub/WryiUlX1xlqzq+UZWnlW5Nx+q6y8y6zbfU8S3G7vP1
JW8+dt8uLHnDsfv/arZVflW6Y6u8bOzrHl3yNmOPa5Oqn1n1OlVeVPLKVa9b
5bKy2XbsMb6w6p9lXq8u/Y5j39MbSt6kys71+4VVbz12P19e9e+qXq3K+aV/
a5UtS3dc9eV1VX5Tv19Sv59Txzeo8j9V1tKXKruVfocq67kXZfvSkp9X8rw6
Z/ux+/n79HHzKleW/ooq29Wx55b90aV7U5VrS3dNlZ1K/9gqR5Xu1CrHm4v6
vXPJ+1T9J/enysPGWWUb97ds9q1jfy55v6pfVPUOVf7ung197l+qbFrlZea5
bP5qjVTZu859Tf3+W8m7un9Vv7TKXiXPq3rbKnuU/BLzVOWgkreoepcqryp5
u6r3rPLMGsszZt2fd1abh43dzoGle1aVP5TuI1WOG7udF5fuyLH7c0DVO2qv
yiEl/6PqLd3fsv9n1VtV+WDJ+489rgOr3qnqfat8svQHj92fQ6veVXtVTiz5
YPNX5f1lc1OVI0p3fF339VUert8n1O9/uYdVPl6/P1bl9aV7T9XvrnJ4yZtV
/e+M8T+55pFVTqpj/2ueqnyobG6pcnTpXlz1MWOPZYu6zlEl713yH7J2jOvU
0g1V9qvqj9ZNxnha6Q6p+oQqU8mvqfp12qk2Z/X7IKeNPb5jq3y69P9d5fjS
nVHlUVUOLf3KpTuv5AU9DyWfVfWjq5xd5Yg6fnKVc0teoMprS35M1YcbU5X3
lf3eY9/386s+puo3V/lmlS9U+WKVz5fN6WP3c8uSFxq7n4fUeJ9T5a+lu6vK
28Ze22dW/Yaqz7H+6vhlY1/rS2Vzztj9eUvVp1T9VqXkN7p+lVu9W8a+j28o
+aqxn4t7S75g7L69u+onVrlA/zwLVS51zbrWCVX+Xr+vq98LVzmzbC6q+rSq
LzYPQ/ftRPeg7BYZu5/vrPoJY/fh7VU/fmzbO8vmK57h+r1N1VeO3ecd6zqX
l/yWkp9W+t3Hfv7uKfluz7Y5rfpJY1/3yVVfUvU7qhzGEVVZ1Joqm8uNyb2o
31dU/Z4qS5V8neegyvPK9vqqb66yeOmvrvpGx0p+W9U3VbmFH6pyTcnPrTY/
zF9VuanKU6pcWfrbS39blUvq90ervN15nqkq73X9KtvX8aXH7ucRdd01q/yn
dK+o+pNj9/P++n3j2P38hue0yrXWadUfr/q/quxR9p8eu5/fLf3NY/fzQ1W/
31qu8pGSP1D1ZzyzY/fhE1UuLPlxY6/5E/V57Hl4yDM7dp/XLvl+/qLKt0s+
0LPh2lV/seoPl80OJS8zdpt7VX+WK/lTJX+16uXHvu6Xq1527Dn4Qdl/v8qt
3jdVf3bsft5R9VPNmXdHtfOpkj9W8teqXqHKrSX/pOwfqPJ596Rsrq5yfpWn
1e/PWb9Vnj72M/WNKveVvFKVL5X82rJboMqz6/da1cY3PMdVri3dNVUurPIz
770qX/A+rXrFqm+vc59Z9Veq/o5ntuSVq3zVM17n3F31D6t8u3TfqnJPya+Y
2vcvNzS+gQHgoUPqv+/U71WqrFfyd6t+ztgYBpaBaVYbGz89cWh8BNPAJbAP
7ABzwDX8MIwCM8FTcBUMBSfBKz+JDfzzo7rW58Ze2w+mHfjqE6X70NBjhH+W
H7qv8BE8Aus8FBlegsVgKXgOJoNhYC94aYWh+wnjPCP9hBdWTD/hLFjq6UNj
J7hDPx83a2wBg8FIMBQsAk/BSbAIDAmzuN66s8ZAcA/ctEr6udCssRT8dEVw
Ap/9/FnjJHgIBoJNYCmYCP6BOd44NR6CdWAeeGjtoXHWc3Mf4aJ10jcYat30
7dTgKnjo+mCa9YfGN3wTfAMHbTh0W3ARHARnwGmw3RpD46P5WK/ks+q6Z84a
+2w0a7wF28FXcNLGQ2MiWEn/Lw7umjc0RoKN4BAYCj7SV5gKDoJdrglegz9g
N34U/uA3+VL93mNqPLT10LgGRjCfcA5cA1vATXya6y4yaywFL8FNsNH2Q2Mn
eAROgoVgGWOHPWCUfYbGSt7r8MeLZo11+Eu4CK7RT/hll/QTnoFh4BL46JXp
JwzzqvQNvoLRjJf/hav2GBozwR0w1rOCl/ZyjVnjJ3hok1ljL3gLZoO53BeY
cd/0k0/mQ/k+eOfAIf2YNSaDn+Ao+OnVQ+ME/hkmgJHgINjjpmAhGAUugn/g
DVgIzjms5HOrzXNmjX1grAMy9luCi+APGAmWgj3gIHhKXz8WLAMTwzWwDvwx
5d2vrX2ChY4bGqPBdHAejATzvX5ovAPT8OmwFkwHT8NHJ6T/8BJMxPfDXfCF
dmCik4fuJ4wEQ50yNJ6Cy+ESuB0G0SaMBOPoMx8Fj+gznwUXwRk7zBr3wDow
D6xznvU4a3wDS8FUcNLZQ/cJ1oBDYCWyscBVZww99rfWuefNGnfASzCIfsI5
/Pllxjg1ZoLDXj5rTAYzwU4w0EVDYyN4RD9Pm5pvwOhwFuxjvLcFT8El+wYj
wSXwElwES8BI8M9VQ+OsS4fuKx6Ke3kPfyV4CUaBr2C2a4fGBfwtvAEjwUY3
DI3r4KbrPMtT46N3Do2L4A79+cDYGMi5MBT89K6hMQ48op8wz2Jj44m7g03g
p/2Dx+Ae2Ak2gaXgJthEP+GXpeN74C64Q3/gJT5KO/DQR4bu256zxjrwzZrB
SHACjATTfHxobAaLwT1wGWwH97xy1rjqxvTVnMAq8BKc9N9DYyQYxLkPxP/z
67AQH3nb0PgIltHmWVNjJj4V5oFl4INXzdrXwk/wEb9qjDAS/AOHwDifH3ps
cA48Bf8fGBx1x9BYCP6BY+A8WMx8wlHw1ZeHxivwiOseHKwCe8Bd8NJdQ2Mn
WOlrQ2MteAxu+X5w151D4xz46etD4yWY6Fslb1D6e8fGUzAWrqKfMBdMdf/Q
/aOHteApOOnbQ+MpGOm7Q+N5mB9mhpFgnx8NjSthse8PjctgqR+UvFzZrzO2
74enYCv3Am6ClX5c8vPHxiUwCdwD68A58BN8A9u8cmoZrlpzbBs4ic/WNjyx
QdoRb+HjYbblq/x4bOwCJywz9fnwyf7Vx19PLT9vbDyjzcfCCWOff9TUevhm
6ZJ/MjamgcW0CQs9MDZOgiV2m7qvbOAyetjpOVM/h54x+AvWgXNWwBPG9rO7
jI0t+NPlpx4P/HNA9ee3U8t7ju3XcWGxGPZwCNwAS8BDfCoMwPdrmx622DNY
AobYIDawDTxBDw89NHbf4Byc+4+xhZPxhu+V/Jrqzx+n7vNGU+OGedobW+aL
+W94Az5YeNZj8/uVY2MJ/Xmqc8fGH8dNrYctHh4bo/D7e03dbzYbT61/UdbS
t7P2VonsefnL2NiCP+UP+Dh++g1j+3U++ulTzyPM8dqx/TUssdfQ/hqeeOPY
/pff/TO8Fr9+8tg2/Dh/zAZGOajG+Kep2xQrcS344XVlz3+zfVNkPvHgsv9b
/LQYBv/Nd795bFmswDX5Y774JVP7XT53iJ4PVPhoY3U+PACfHBMZJlhp6n6z
O2XsOdH/KW2eYu1OPWa+/D1j+x3vcOfz2dqbTX2cv3vW1OPh7/lePo4vdoyO
73/01Ofym0+o8b4qfvHZU4+T74e3+EJ+8PqxZX750LL/x9Q2j5/1/TNX/4SN
084qVd+QZ+qJZbNffNW7xn5HXVvtXJ2x8NMKPRzgPH3mi/9d522Xc7XNL/KJ
Yg/8LN//pFn3j389vOQxsYj3jm2D+/9gbN6Fcz0+7bw3erwRn1q0zjso7/dV
p+4rP8c389H865Om1vFNCt/Hp64+9fX42tWmvk+O6Tu/wqcsGpmfeunUfpqP
fmJkPnGCtaZuh9/lw/ivz4ztj/jUGdwUH+Y3f8fP3hkbfurRnuuMhS/lj/jd
28f2WXRfGrt9vuXJZf+atHnX2Pb82t2x59fwfv6Lr71nbFkcYN2pf/MZfBWf
xa+tMfU1+LWvp+a/vKe8r/gj42DPF69Z8lfG9ov8Gb/GVlt0/J3C9/HHO09t
c2fGTs9fu6+L5b49b+rxuN47xr6P1tULSv+99Nk8eU95R829s35c9YI1J7tO
7TvXmXouyM8v+ftjxw4Om3r9VDXfL62aNfbT/CZL2DhnLt5AL+ZgrMumz0dO
vT5XKPmUqbkrHyLmwP/xfcvGP5IPn/oYn/zDsXk7zs4fssf3+fa1o1f7zUf/
Osfoj5g6vrBQzlsr52qTHu49Zur24eCfj82j+TL+9QV5dvh2uZhlI/OPfOlr
p87TPD/X0A/Y4Udjn7vi0Bhgo8j0G2Ye+HDxijlsQObbLyr5Z7HjR/kUfhVm
EPsQ9+DbxTjm/D6Zz4cHxBzETX4VmW+FH8RBYJa38+djxwH4W7EOPncuZ8Mn
wwebZX4eHFteJfLmmavl0qY5/23mxPzADy/O/Kw/67GIR/D3Yhp8+nKzXhNi
L+dV/dOx5VMii2u41/OyHmCDl6QP+LP25uV+iVeIe/xuakzg9wqzxk/iMr9L
e86D3dbMPP9i7OPyQbCBOIjYgtrvTTKH4j9iOJdXe78cO7bzP1NjAsd+PXYc
R45ppVmvJzEcuPBlmXM2O2Rud48snnBk2W8463YvEQeockaVt1Ubvxm7nTdF
FnOBueAZMaDfm/+p4y/0nin47eHYkP+SsRmXedg1ergMPtuYnLbFRubNem1o
83VT24tZrBisaE70fbf0X992y9j1e79c6/VTx01eHntjhv3+nvE7F/7c5//1
YY/o4b49s/ZvhL/GjuH8M3r48/djx1O2jbx3+mlN7JV7/YvcU/gUNnQt+PDp
4ryzvo9/HLvPYlKwpXjT9pm3fTNeOE3MBzb7Q2TXda4YD9z4z7FjUPDYzdXn
f+QYDCnOJYb2cGxcC5akhzNhUXErsaCnRTZX8OmBsfkUDDh2LMg9Pyj3689j
y+JZf5kaq4njeGeIbcGicOmhsYHPyPDayrO+x2JT74Jvx5b/nOu4d2+OXozp
f1OLw2w26/tyRObDHMGx/858matnzxpbi4v9fex676Ex8CG5v/RiU3tlDvV9
n6GvoW3486hqZ8tZz+llVV9a5exZ40nnioOJzx2bOYR7yftF5zcMPESmX2XW
a1Qs5aNV/2ts+fTIYlIwH+wHtxv7iZHFksTB4FJY+4TozRV5DoM7VywP5tae
8+BT2JXuhKnbFNuC5WFgMTdjOml8hBPAz+J4zwiWPiw2p0SG2WHaY2N/UvQr
B1cfmbGfmusa46mZhyH9YfOYtGk+t5n1ejPOhdI+XnDirONXYjt4gDgdHvCf
seN0J0Q+PeN61NQxLTE4XOCMjAUeF0+D23EDMcE5znRW+u8en53+fAFfmLrd
cWr9yUPL4nZ41pdLfmx+4xTnZj5xjbfE/nGR4XB8QtwQbxjSH/3HL87LnOi/
GKK4Ib6izVOGR/KgcL11cH7uL57y1tjcV/LCGT8uIuaIj+AgF+Z+4SkXpf39
IsP8q856fYgLf7bqx0RecOo4Ht4D75HFxLab9fzMxQHVeIR5uSxz61yyHKj2
3EccaJdZ91Pc7eiSd5r1POIuOMwFmTexQXHRf02N7/3Gta7KHLK9Kvae29Py
rrii2rtc7qTK6lVWm3XM82vVxkJTy2dGnosnqq9P21dnnr1bD8yz7Jj+4h3G
cV3GgpeJJ4p5mpu3Z65wOxxK3BP3uuH/2ZhHmNl435lriZncEP3isTHPT4jN
tUPnhbV5Wdp8e+zZ4FZzud13xR7nwaHekWu9J/qlIhu3e/a+3EM8TkxSnHSR
qfXkb5W82NRxSO28O+eaw3dn/hfJcXFYXNCc4A2vSZv4FA4hLoRH/LT0S00d
b3zC1PHRGzP2D2Rc7t8HMw94olgnTseeXkz2eyUvnvPxSPFTPBL/uyX2+OCH
Yr9EZNwNJ70l8/bkzJU4M7754czVMdWH3Wc9flxT/BfffPLUMd9bIhuH+K/1
8dGspbkcNm6Iz3487T9l6hgpPorDfiLtrFXXWSMxYjZqeeSDYnP70NzSueKZ
V5btBYnDLpw1aW0cW7q9Zz0veK54ury22u85jismiystFz2bq+q8ixIXFje+
Pf03b+KuYs74+W2Z59tjJ8f9qFlzSHbLpX3XWiHtsPlxHV9y6vjzybOO8YqR
7jvr9TAXv1bjj7j7FzPn65TN2rM+11zQ49B4MF5sbs5O+9o1T3eMj/B+Np+P
fEfs+W8YcefMCQ4p1o0fiwt/O/3/aubBuO7MvD0zsviAnDjOjr8vH/u7IuPL
Ytfy+Dgv7m9/wl2x0eevZX5c6+7o58cJYi/v/5VcV5zAtcS9b8x9fV/6843Y
iAGIieP64gD3ZVxiCPdmHk6aOlYuloD3i3uKD4hbizni7vj+N9N/nP3+9O2e
2LhXYgH04g9ixjgdnoj3i33/eGiuKV+Oe+KmeBQOheuLGeH1J08dR7C3YI3o
cWFcGX/GDXFY/HbFofk0Pd6N++K6KwzNY38UG/GI76UPYgXiDFP6oB39wW3x
WBwWP8X98D7jMB58Ch/FRfFQvJANDrt1xoK/rzfrHD8+ucGs8/e4KE78QObk
V5kj8gVT7y9kf+nU+ybZ44i4BB7x0sg4I06BD+ACeCCuiEPbA/DL2Fw19Z5C
v3EpHAw32ST2eCWOiB/ihu+Yeh8kDrZD9LjVdVPvQcQDN551Lp/NC2e9b4B+
88yJudoy18L1YHmYfm5PoD7jQXgS7oQ37R15bj8hPoZf7BQZL8OTcB58hx/G
Tzyv+0eP1+A3eA7OIm7+p8j4zsOx4Rf4D77goPQN1+AHnhg9jAa3nVLyB6be
I4hvbDrrnDpOMscr9ho6544f7D00h8Al4IWjYkP/4an3ArI7IDa4xnun3lOo
zc1nvW/Atbaadc4VH/jE1HsQyTAojAsrzvEi+P/EyDAPbGxhs4EzZxnLmdHP
3283Nn492bqadb4f5v7M1HsHyWfHBo5bIHPC/q1pE+6CPeFUGPubU+/xWjh4
Ec6Diy6IDZwJiz46snmG7eC6i6KHUT839f4z5+8QPAg3bj/rvPgCwZIwJXx1
eWQ2d0y9z48NHvqXrL2vTr0/T1s4KD1+CtfAK7DK16fekwcL7jrrvLix7Dzr
fPlCwZ36DIPfmHPhoiWyfuAKmOfx0cMmMIp3882R2bw/NnDRabmnOMtHsj75
U+918V/v9jkcwH/BF3AGnACHLBp5n1nndJcMpmAPM3xn6n1vcMuewQL8+w+n
3se2eHAQv86nfyJt8rOfjR5+eXDqvWvaF+MUg1sq7zAxPu/Gn0+9/2yp+Gp7
7Pjl/WadV6Z/ZTCUvok3iEF4XsXGxGF/nmeXfqf4i2WinxebxWJPL57mubBf
whxumr6JxYoFigmKEYohiftsPHQ8hjy3z0eMaZPYrBg9Loj34oMnR8YXxYHE
EcQQDon8z9jgmTjmGZHZizmJrWyevpkr7378GFfEE3Ey3Azfxf/w5yNjQ/Yc
48rPiv68yDj9BhmjmOe5aZM9DoGT4Bo3RZ7D3TgGXH1DZPo3pw+44UezxuBY
HAI+ho1hYbzi2qHjzuLPYtLwLFyLZ+ATq8UGzoIzYAyYBf74UmQ4Bra6Nzaw
232xmcNcbL6c62oTX3lvrgU/w01wCUzyzcgwyHfy7PD5MBS8AqvcH1muAbaA
1eC0X0yNf+7Lc7dezpVXkF+AF5y7dtq5K7JrnTO1jdfruVPPyROGxlIbZFyu
9YK0KU5ij5Q4lVio/XAwwy+ntnlg6Ny37yhWHTpfbX+bGLY48wuzhuENMed5
8XFiwmJ9sMFGsZHftpcONoAT2MgjiyHPi/0tub98o7iua22R+/7c6MXW5GVx
azlf++9fMXSOeLOsef5005y7c+SXxB9tHhv5X/ux7MUSM3xx1j+/KX54RHzN
S6IXm2Lzqvg45/J38qT2l58+dG50q6xz/NdeDe9nuVJ5zSvyTt46NvJ28lJw
q/e5eIJcoXzotllXOCB5fg507FwjPmff8naxEYvYJs+F3KL90PYSewZwFe/P
L0amxynsocF/5QLl5+TmVorsucCbdsp6XiJ90z7uQO89DPPb73L70PnKHXIu
3L5zzpWjZPP1vMPp5fLs3d0les+AHBysbu+H/b5yZw8OvZdDTsc3QeSlotst
ejmf3fIeE0sWa/5b3ud7511n/4P9lxtmHe45PfJdyZ6xUe8VvXfj7rmWOTbX
/BubvdO+e7Ff7gs8I5Z3du41WUxP/Gnf3Hf5931jw+eKQdhnJbduv6AYqVjO
/rm/8ulk+9/kvu0tuzTvtwNy3y9KHy7KnOyeeVgm7bu/Ykf214mH4K8HZ73J
BR+YPvCz+PxtQ8e+xcPhYbnyg6N3r9yzVfIeOjTvGd+dyY9WNf+7MznLBbK2
D8ra8N2ZHOTCQ7+TXpv3Ej4l/7X80HkuuSp5PVyDvFJke4nxCDmLo6P3Xj0k
6wcXk2+Sa9o1/bfvZYu0v8LQ/MK+4rn81LGx3zHn4lDyHWL1ch9wNRnOxwXE
yfHx4yLD6uLq9iLOxdKPj433wwl5t3iP4pDepbiY3J6crxig+yJ2KFZh/xuu
LZ5AFs/wzsaH+YKL0yZcIW4tfi2eLt+lTVwHLxB/F3vHtXCwbTPuUzN2HIls
3HjTm6K/MuvBe8AcvzFzLpavzcMz1tMyXhyAbD5whNOjlwfTJs4kHrhVngVj
PSPrEI49M7K91jgm3g03np15EMNjIwYq3kAvfmL9zPdtY+9DlzfdImuS/8Ol
6RxbfWje/ZasAfN6VtpfMrK4zQVph715tHccP5WDvjB9w4fPzzyzdQ4dzs5m
xaF5srFsFZ3zXd9v45w3dC74rbmW+vzIl8betbaO/Rrpg2NzbV8avT3nuPDz
h+bX8rJz+dnLIuPXZDEEvPjqrPPLYm9tyLXa388X4+hX5Vw++orI8rOO+R7w
8tj8MsevjM35mRNjkbe9On3Dz3F5ftjauzZrQzGGuXzrNbHH8d8W+erI1qra
MW2ID8jfwyHXRs9eDMQ3A7j/9bExbvX1sYcpbohMry19XCjrUxweF5YL3H3o
+p2RxQfI3o14tBznPkPr2Hl3ek7s+cZ/8en35ly5wndHxrHfk2fqXbH5a857
T2zk9+xHh0Pkf+25l1tU+60vcoP2u8NCcNFNsVG/PzIOT57LUTp/27QppuD4
BzMWMYwPpH3n0n0wYzwgdmIX78+5e8TP4hTilbDTLbHH3+Vr5VrlFu3h33/o
PKb4g+8QtW8exSLYiC94r3woeu2I2zjX+9be+4+nHTrnzH8fj31M7knO7mOx
+URsyPr1obTpGtp5fdbmO7Ie5Pns6ZfLws19b4CzfzJj0Rf1JzOuj6fP2h9z
Lr1cFQ541tC6T0fvXPMipvHpyPRzv13fXl/fUMFIeAM/x8fJ79jjLiciZ2Sf
/IW5ljiFGIX812257u3Rk+ETe/fFYWAQcQk4RD7x85HVfuOvd0Sm197taecx
kfVlgbQD47B1Dp0clz30cKy4im8JTh66lpsU74F12Yi3iMkYi7gN3Z3RsxUr
eWyuc0f6Q/+l2MjTsfed452xp9eeOfIsfz2yubK/Xd7oxjzvYiz8i2LP/fVD
5wHvjr2YizjStTl+T/Ta0642xJrkOGGwe6JnA5v5hkF86d7YGKv63th/NXOi
z/vnWvTiIXJIYiDfSZ/hNPX9kWFI8tz3jN/MufdF1nf+/NuxF1exR1/MR/6I
Xo5G/Z3YuOZ3c91vRS8+Yg+AvbK+6fhu+iaGZM+o7z3E1uAcvFFcWyznh2nH
3vgfRJZnsZ//s0PXfvO/8iwPRC+m5Nj8b+tiQ8/3sxHbl0vSpnzQ93ItsSPH
fxL7JSM7TyxIbu+2oeuHIsO9ZDErOPdn0duT7ts2cfilooed1T+PjX7p39x1
Hsx1fxob58Fv+Ly4Al6tTfFzOYdfp317UHyDZA+yb+7sMxfDf3Vs4GG630Rv
37dvrsSu7SGjt0/8uJy7anwc/jz3NwRw9fnfs03Nt+f4Nxnf2Sg2Gw+da3PP
vH82TTt4NO72/dxHMSZ7rcUtfTuvT9tH93D0i0Q/9+29Pu819Lft7HB2a+qv
WVe4Ow7Pj+HZOPkcFyfj4JvHBn9/KPfUevFNt7bgbXvxfWcIY8OeODlOhqf5
jsieYrEte5vFeO0j9m2M72K2jj1uju/i1Tgv/o2Tz/FvMv510qz3gviex3fc
2hQHWCM6sVz7erUvXopD4cPe5zg6ro6jaweBkie1p1mf9Ofw6H0rtE364935
spyLy788beJb+Dcejv/h6Dj8HOcm4+M7xgZP5x/4D+/2U2ad+/TdiD2xviH5
QfRk+b4FcmyOry8YG3td8XacHc/Gt+2/E9u0DrbLM2Xdi52KhVrrz8nanr/u
h96v51w8XQxAm/bY+qZ7zDxYU9oUF7XvADfGi3FoXNq7Cv/Gt8+OvyNbA7gy
Xu09qd/GKq9oj5JzcXA8W5vuAw6NJ3s3HhjZ3OK1uPFteW9r80lZU3/Pujo4
Nu6LfKHvju2lxWvty/Rcvxn/mvU3xqfO+vtkt9zeXLolYuM7ZJz69KpPm/U3
w/P/tsusbdVLxQb/XirHtbd42sTRyXKbcpbasL91/v7fWes8N8vm2cHX8XbH
l88x3/QsFxs63/waC46OZy8XvfecY2ulz9rH/dVPjawN9vP/3sqs7c2JMa+Y
cdmfSMZfcG4cG7/GT8UC8BfH2YkJ+P202Pve1N6+w6J7emxwffwf93ecnVjB
sdHjGr4b8R3sbqmfGXmb/PZtjfv1xlnfV/GGldPO6pl39/z49BlGFUuwF9B7
0neyZDEG9bOi944ke096L/omlm+1V8j3nDCSPVH03nVqv8UGYF82c3vqVo0N
nfNPHRoPrZZ21KtHb4/Hmnm+vLfWiCzXQ/Yesz/X99PPy/ttrdhcP/Q3h9cN
vQ+CfHN0fotj8PFrR+9d6Fofjf06scHNyWytjXWzDtXrRRbnIOPdOL1cNr6J
G5Nx7TXTN32X714/NnLW+r/p0Oevm7XnvA1is35k7eHmfuPuuO6GGbtvycm4
sDiKGIr4yZsi46d4q9z0HP8l46Fy1vOiF1MRr8H78Ef5VrzPcXbOs+42ydpj
t0nWs3rT6PFm5/D1vmu2RxS3wuu0iSf6DltueO+hOSYuekSObz57hJ+SnXdk
zmEvxiO+I7bj+Gaxx9m0iTPKL/uW2h5F198i57LZMvL+aVM8baOM0TycnvZx
MnuafMMpHycPLB+MW+FHfuNfdNtELzcKr8Pb28T+3+Em8rO4jFwtXsTH4TJk
nMXx7aPHF52Pf20X/Vxu1zfR8rnnRJaDxknkg+nkfH3fbD+YPYM7xp7NTpFv
TX9cyzfR9DgLjC63e0Ha3iH24l5iZPjFXbExxjOiFzfDR4wdN3F819jsElnb
noFXZD5vjOxZVr8yevie7LhvguVl5WThaTKcz2b32Ls/ZNzh0zmH/c2R5Zfl
fNnZDyZP6psNft8+Jd/32psEH8vDwm+utXfacZwM24vPiQmK150dGd7G/bfO
GmC7V86V28UlPjs0FyDD7a6zX/T7Rnb9H6UP9OKT3ofekbCKPvNHZFicTxPr
EgvzPoBD7JX33pYfm/+NaN7tB0YvNyVHBS/Dp3JO3snOZeN9/6fYwMNbxAaG
+W3ahOflhV3rz3nnH5J2tEnmK+AjeNE7mcO3LxOehJHIi+bdeERsPJdH5V0x
Ru/dLEdpTxiMJ68lvzWHl8nwLRzI5mvxC+bE+1B8RZuee2v86KxzGPmk9Mf9
Ojb3F2dn89isr2OyrmAofxMJVsdP6a1BnM+51ou/j3V85g0H8jfQ8CDzhgvR
PRy7+X+jatb6VTM/h2dOzL922MJc8NiCsdFn/vCSjOGy+EeyOMw/gvvn+vuG
zA/OeXLmB0aAFerffLxJf3fmELamgyHY+Ts0J0fv3MVy7lPSL1gQxoOVXp31
6e+a+OZk06ExHXzo782oYS9Yy5xekOdx6ejZ2svkXLFffw/DXnPvcH7yzLSp
Piv3d8PIjl8SG3p/O0j7cgf26mhH3NJ3CudkjVlv/BPf4G9C2EfrnWlfClm8
aMcco98i5+rPFdFbS76P9/38/enzuWnfevNu3TF9OT/jPS96594avgMv2U/q
m3/vIrz2qqxJ83Fx5uTW2LERkyPjxfp7efosBn5x5uHizAtZ3y7LnJ4Z/Rn5
fWnm59LY6L/45KWRffeob76PFBO7PP1fMmtgifTlqvQHN7ly9sh9vjL3Yv6c
zR7p7xVpx9xcnTmUq70m7cj/Xp1ztfO2zKO+XJP+XB09G324Nsf/D/BRvWA=

         "]]]}, {}, {}, {}, {}}, {{}, 
      {GrayLevel[0], Opacity[0.3], 
       LineBox[{1, 652, 476, 2, 623, 3, 898, 4, 5, 6, 624, 7, 900, 8, 9, 10, 
        11, 625, 12, 902, 13, 14, 313, 626, 15},
        VertexColors->None], 
       LineBox[{16, 302, 17, 477, 18, 19, 20, 306, 21, 308, 22, 23, 24, 603, 
        25, 310, 26, 478, 27, 28, 29, 315, 30},
        VertexColors->None], 
       LineBox[{31, 32, 627, 33, 479, 34, 480, 35, 747, 36, 628, 37, 803, 38, 
        481, 39, 482, 40, 41, 630, 42, 483, 43, 484, 44, 749, 45},
        VertexColors->None], 
       LineBox[{46, 47, 824, 485, 658, 48, 827, 486, 663, 49, 487, 50, 51, 
        488, 52, 489, 668, 53, 490, 54, 55, 491, 56, 830, 492, 673, 57, 833, 
        493, 677, 58, 59, 60},
        VertexColors->None], 
       LineBox[{61, 344, 62, 494, 63, 64, 575, 65, 346, 66, 347, 67, 904, 68, 
        577, 69, 607, 70, 349, 71, 495, 72, 579, 73, 74, 351, 75},
        VertexColors->None], 
       LineBox[{76, 77, 632, 78, 496, 79, 497, 80, 754, 81, 633, 82, 498, 83, 
        499, 84, 500, 85, 86, 634, 87, 501, 88, 502, 89, 756, 90},
        VertexColors->None], 
       LineBox[{91, 92, 835, 503, 682, 93, 838, 504, 687, 94, 370, 95, 96, 
        505, 97, 506, 692, 98, 507, 99, 100, 376, 101, 843, 508, 697, 102, 
        846, 509, 702, 103, 104, 105},
        VertexColors->None], 
       LineBox[{106, 381, 107, 510, 108, 109, 582, 110, 384, 111, 385, 112, 
        907, 113, 584, 114, 386, 115, 388, 116, 117, 118, 119, 389, 120},
        VertexColors->None], 
       LineBox[{121, 760, 122, 636, 123, 511, 124, 512, 125, 126, 127, 513, 
        128, 514, 129, 515, 130, 131, 815, 132, 516, 133, 517, 134, 762, 135},
        VertexColors->None], 
       LineBox[{136, 137, 518, 707, 138, 849, 519, 711, 139, 611, 140, 141, 
        520, 142, 521, 716, 143, 522, 144, 145, 413, 146, 854, 523, 721, 147, 
        857, 524, 725, 148, 613, 149, 150},
        VertexColors->None], 
       LineBox[{151, 418, 152, 894, 153, 154, 588, 155, 420, 156, 421, 157, 
        910, 158, 590, 159, 423, 160, 425, 161, 162, 163, 592, 164, 426, 165},
        VertexColors->None], 
       LineBox[{166, 769, 167, 817, 168, 525, 169, 526, 170, 171, 172, 527, 
        173, 528, 174, 529, 175, 176, 821, 177, 530, 178, 531, 179, 594, 180},
        VertexColors->None], 
       LineBox[{181, 182, 532, 183, 533, 729, 184, 617, 185, 186, 446, 187, 
        534, 734, 188, 535, 189, 190, 450, 191, 866, 536, 739, 192, 869, 537, 
        743, 193, 619, 194, 195},
        VertexColors->None], 
       LineBox[{196, 456, 197, 198, 914, 199, 596, 200, 458, 201, 459, 202, 
        916, 203, 598, 204, 461, 205, 463, 206, 896, 207, 208, 600, 209, 464, 
        210},
        VertexColors->None], 
       LineBox[{465, 212, 213, 214, 215, 216, 217, 218, 219, 220, 601, 221, 
        222, 223, 224, 475, 745, 225},
        VertexColors->None], LineBox[{465, 639, 211},
        VertexColors->None]}, 
      {GrayLevel[0], Opacity[0.3], 
       LineBox[{1, 622, 303, 16, 602, 31, 46, 61, 606, 76, 91, 106, 610, 121, 
        136, 151, 615, 166, 181, 196, 466, 744, 211},
        VertexColors->None], 
       LineBox[{2, 17, 32, 798, 47, 343, 62, 77, 807, 92, 380, 107, 585, 122, 
        812, 137, 417, 152, 768, 167, 818, 182, 455, 197, 212},
        VertexColors->None], 
       LineBox[{3, 789, 18, 33, 654, 48, 656, 63, 78, 678, 93, 680, 108, 123, 
        703, 138, 705, 153, 168, 858, 183, 860, 198, 213},
        VertexColors->None], 
       LineBox[{4, 19, 34, 659, 49, 661, 64, 79, 683, 94, 685, 109, 124, 708, 
        139, 612, 154, 169, 726, 184, 618, 199, 925, 214},
        VertexColors->None], 
       LineBox[{5, 20, 318, 35, 50, 574, 65, 354, 80, 95, 581, 110, 392, 125, 
        140, 587, 155, 429, 170, 185, 595, 200, 467, 215},
        VertexColors->None], 
       LineBox[{6, 21, 320, 36, 800, 51, 66, 356, 81, 809, 96, 383, 111, 394, 
        126, 141, 419, 156, 431, 171, 186, 457, 201, 468, 216},
        VertexColors->None], 
       LineBox[{7, 792, 22, 37, 629, 52, 828, 67, 82, 839, 97, 841, 112, 127, 
        850, 142, 852, 157, 172, 862, 187, 864, 202, 217},
        VertexColors->None], 
       LineBox[{8, 23, 38, 664, 53, 666, 68, 83, 688, 98, 690, 113, 128, 712, 
        143, 714, 158, 173, 730, 188, 732, 203, 927, 218},
        VertexColors->None], 
       LineBox[{9, 24, 321, 39, 54, 576, 69, 359, 84, 99, 583, 114, 397, 129, 
        144, 589, 159, 434, 174, 189, 597, 204, 469, 219},
        VertexColors->None], 
       LineBox[{10, 25, 323, 40, 55, 70, 361, 85, 100, 115, 399, 130, 145, 
        422, 160, 436, 175, 190, 460, 205, 470, 220},
        VertexColors->None], 
       LineBox[{11, 26, 41, 631, 56, 348, 71, 86, 635, 101, 387, 116, 131, 
        637, 146, 424, 161, 176, 638, 191, 462, 206, 775, 221},
        VertexColors->None], 
       LineBox[{12, 795, 27, 42, 669, 57, 671, 72, 87, 693, 102, 695, 117, 
        132, 717, 147, 719, 162, 177, 735, 192, 737, 207, 222},
        VertexColors->None], 
       LineBox[{13, 28, 43, 674, 58, 578, 73, 88, 698, 103, 700, 118, 133, 
        722, 148, 614, 163, 178, 740, 193, 620, 208, 472, 223},
        VertexColors->None], 
       LineBox[{14, 29, 327, 44, 59, 74, 365, 89, 104, 119, 403, 134, 149, 
        591, 164, 440, 179, 194, 599, 209, 473, 224},
        VertexColors->None], 
       LineBox[{15, 653, 314, 30, 573, 45, 888, 60, 75, 580, 90, 890, 105, 
        120, 586, 135, 892, 150, 165, 593, 180, 538, 195, 210, 474, 640, 225},
        VertexColors->None]}, {}, {}}},
    VertexColors->CompressedData["
1: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
H1UcKkVjwSM9ftlkrH3ILHyfPRBjt6bcgwSzMK2v4eYSWoUA18/eEkbJKFN9
tSaZtwm/HJ8nJybmwmXRwxXhX5Co8C6OT6QE+3ZcfvDOLw6dHGopjq99QZo/
8TqOLwUhEfPnmIIa0bCX+c+26Ez034zWkae2Q6Zg0j3/ZhaIJw3C9sc+YYOL
uRMXuRD832SN721oA7+TXtBm3gLMpqlLVS/1YEJfLlPjbBE6t1JtlcOjIdb7
NiOmtQIHLC98ubkmDd+IZPkk7lDsdu354z1Ln0ML0KnSdjOg4qOc2oXO1XR7
xrKtXbMrg0CfnXqUbSWdfy1ciuP39KOAWfKHX867kWV5F9uw5L1zBNLEQ1Zx
TNF5rqZCpK4kjZePa1Srd/oQWFyff6swLBcPc0iV4X5fsH0Tb/mZnSX4o35E
u9A0HF8k2mx1219gsiW4ae+KKFxgkBzNN6/Eo+bnHsPuSehX22+npdiIYM79
JlxcKegzYHqpJRWEv22D10gnsvGvNHloq6E34pl0UhNqHVD6cYWVwL8PMMo5
dur94XZIaJkVlo4XgJJ7LSLavQ8V24+IGuiWgV2DbeyvcgIOmv5ZOmtQhznm
FoayTdWoiB8Rb8xNxrnSA8aGt5tgqJ34qPMaDUe0VD+Wjo4Dw6Okw2JRdDz2
6wfzD24OAt96l5je9ND5VNjTqA/hNBy65Hzgmtle+py2srEiM1WfgldftqyP
S6H3SdVfKx1ocKXxIe2wczf96ffCTkqVPK5GIMaiLn49C32f4rx2O9+HFJj4
rLQ8up1+L36pen981hAQ8FyxNodM10dUwdrhw+wURhrYOBbs6PWBvQfCXxif
pMLd64TuBhv6+53aMCJjyEbbB5c8rlVOgbz6gkDMSD7KpNs0BWS/4gdPp75U
TCl4iL+HbC6/QFNIRtCzg5aQP9JSlDb0Fizna20TBZqg7ri9b/xuFswnjhkN
f+rA0o7jwiqCmcDs0g8b9XBwptyozFxfCPmZjDqVr15Y9/Z31MbTdniRuO2H
aagfva5Sck19yx5anu/9zW54ke5vK7vXbBTPI6C8cXQxbIjut2fP25p+puGU
juF9j5p56fa5vpKb3ZK27tH1xqta4nT7ZNmvKbJNJeAxb+sxmUvfx3HyzKaU
t7R43HdX1U2EHvc2JffrkC5S8eNodviTQrrdxrQEH8ZGT6L65NPdl4vpcfjv
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
46XmGvCUin8B1V85bw==
     "]], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{{0, 5}, {0, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8604221114401207`*^9, 3.860422124281019*^9}},
 CellLabel->
  "Out[133]=",ExpressionUUID->"5ffd9e35-c7f6-44e0-a5b3-f6de1b5850aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  "\:8fd9\:4e2a\:56fe\:6709\:91cf\:5b50\:529b\:5b66\:90a3\:79cd\:611f\:89c9\
\:4e86", "*)"}]], "Input",
 CellChangeTimes->{{3.860422132534323*^9, 
  3.860422153910403*^9}},ExpressionUUID->"1df53046-e864-4ddd-8749-\
f322595a1642"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "\:4e0e\:5176\:5b83\:6587\:4ef6\:8054\:52a8\:4ee5\:53ca\:4eba\:5de5\:667a\
\:80fd\:76f8\:5173\:7684\:5c31\:7b97\:4e86", "  ", 
   "\:6bd5\:7adf\:641e\:4eba\:5de5\:667a\:80fd\:4f7f\:7528wolfram\:4e0d\:5408\
\:7406"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8604226608574033`*^9, 
  3.8604227179770184`*^9}},ExpressionUUID->"3756326e-a709-4a56-865a-\
761f1556e6b8"]
},
WindowSize->{959, 1109},
WindowMargins->{{Automatic, -1810}, {74, Automatic}},
Magnification:>1.4 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (2019\:5e744\:67088\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 242, 3, 39, "Input",ExpressionUUID->"752a49b9-e8d5-4391-a21c-25f8e025aa7e"],
Cell[825, 27, 166, 2, 44, "Output",ExpressionUUID->"74fd93e0-5393-4ff2-89d7-e3c8ce5e65a6"]
}, Open  ]],
Cell[1006, 32, 207, 4, 39, "Input",ExpressionUUID->"56db7a6d-b462-4a3f-ae0f-e57fa187f64b"],
Cell[CellGroupData[{
Cell[1238, 40, 289, 7, 39, "Input",ExpressionUUID->"a282ba32-09e5-4fde-8063-44a45e79b34c"],
Cell[1530, 49, 150, 2, 44, "Output",ExpressionUUID->"d62f63e8-7023-4bf9-b09a-3684bd59b7f5"]
}, Open  ]],
Cell[1695, 54, 185, 4, 62, "Input",ExpressionUUID->"1b058403-9a0d-491b-81dc-453555e79d2e"],
Cell[CellGroupData[{
Cell[1905, 62, 363, 10, 70, "Input",ExpressionUUID->"a70ebc52-ac14-4c43-b874-dd9077d7838e"],
Cell[2271, 74, 152, 2, 44, "Output",ExpressionUUID->"39160335-061c-4b2f-aa74-ba0c07ab5d95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2460, 81, 304, 7, 107, "Input",ExpressionUUID->"e48adcf4-407b-494d-aa51-3d3271461fb8"],
Cell[2767, 90, 205, 4, 49, "Output",ExpressionUUID->"40474aa1-3491-405c-aad9-bbeba38d3d1e"],
Cell[2975, 96, 191, 2, 44, "Output",ExpressionUUID->"5c7287a8-cdc0-45e3-9fe4-4d6b94b9f0ef"]
}, Open  ]],
Cell[3181, 101, 154, 3, 39, "Input",ExpressionUUID->"b625bb98-70c8-408e-b83c-378f88925efc"],
Cell[CellGroupData[{
Cell[3360, 108, 238, 5, 75, "Input",ExpressionUUID->"9584e3cc-7442-423f-bf60-0baae13b294f"],
Cell[3601, 115, 300, 4, 71, "Output",ExpressionUUID->"8025145e-4a7b-4dcf-b160-5e2b9fb77415"]
}, Open  ]],
Cell[3916, 122, 358, 8, 62, "Input",ExpressionUUID->"8c573f5e-190f-4cb3-8e88-8a56ae433858"],
Cell[CellGroupData[{
Cell[4299, 134, 127, 2, 39, "Input",ExpressionUUID->"f31f5f83-b451-4353-b2d6-932e8e87dd92"],
Cell[4429, 138, 149, 2, 44, "Output",ExpressionUUID->"1060609b-a15b-4910-ace2-cae182c0be2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4615, 145, 212, 3, 62, "Input",ExpressionUUID->"f5535a2e-ebda-4f30-8d27-24e6d3f1a1be"],
Cell[4830, 150, 259, 6, 44, "Output",ExpressionUUID->"ce456d44-52e3-4ee7-952f-16b0ed0d4296"]
}, Open  ]],
Cell[5104, 159, 462, 13, 75, "Input",ExpressionUUID->"bff56526-bb42-4231-acb8-f7055c9013bb"],
Cell[5569, 174, 324, 7, 96, "Input",ExpressionUUID->"9b1021da-5556-49a1-afcb-6a70ad462235"],
Cell[5896, 183, 251, 7, 75, "Input",ExpressionUUID->"fb177f80-bf5a-4614-93d9-f568732f810b"],
Cell[CellGroupData[{
Cell[6172, 194, 206, 3, 62, "Input",ExpressionUUID->"6811dc72-c22f-495c-9674-d254d7c198e8"],
Cell[6381, 199, 154, 2, 44, "Output",ExpressionUUID->"b99b27ad-31d5-47da-858a-4ba87b070d41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6572, 206, 195, 4, 62, "Input",ExpressionUUID->"38a26267-0cf8-49d8-9830-f2f516ba6790"],
Cell[6770, 212, 12434, 299, 128, "Output",ExpressionUUID->"130e7c16-def9-45cf-9a19-65318586e8b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19241, 516, 207, 3, 62, "Input",ExpressionUUID->"54322028-9bf0-46d3-8a20-0ff7bd5a2baf"],
Cell[19451, 521, 149, 2, 44, "Output",ExpressionUUID->"60267099-1acf-415e-9fce-dd3562ec1a49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19637, 528, 214, 3, 62, "Input",ExpressionUUID->"33cdb961-fa03-43ec-a5e9-dcb35b45551e"],
Cell[19854, 533, 149, 2, 44, "Output",ExpressionUUID->"95040c33-a28d-4865-aea7-09768d54777e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20040, 540, 214, 3, 62, "Input",ExpressionUUID->"5b020a08-eaf0-46be-be9e-68e166769562"],
Cell[20257, 545, 152, 2, 44, "Output",ExpressionUUID->"8c7edddb-4a7f-43d5-8751-404c81188fce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20446, 552, 325, 7, 62, "Input",ExpressionUUID->"1f82e860-51df-4feb-a353-dea698893b53"],
Cell[20774, 561, 151, 2, 44, "Output",ExpressionUUID->"a2a444e9-0c1f-4e15-88fc-c806ccfee377"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20962, 568, 230, 4, 62, "Input",ExpressionUUID->"5065ad4b-ecb8-4183-9e94-19948f6cd450"],
Cell[21195, 574, 151, 2, 44, "Output",ExpressionUUID->"830a1766-52aa-45ba-9035-636c94e007fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21383, 581, 253, 5, 62, "Input",ExpressionUUID->"14caaa5e-2e84-4bcb-a35d-1d5382a19ed6"],
Cell[21639, 588, 154, 2, 44, "Output",ExpressionUUID->"d45fa7c6-648d-4448-be87-2a1f5a1fc51a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21830, 595, 394, 8, 62, "Input",ExpressionUUID->"66fc9ffc-b9a5-4ad8-8ea6-70d3cc066687"],
Cell[22227, 605, 166, 3, 44, "Output",ExpressionUUID->"2b5f9472-7188-4bc1-afc0-d4cabc23dcab"]
}, Open  ]],
Cell[22408, 611, 226, 4, 62, "Input",ExpressionUUID->"191a189d-bf4c-42ea-a992-3f2e7e9ce099"],
Cell[22637, 617, 216, 3, 62, "Input",ExpressionUUID->"83f9ba57-5520-49a3-abb8-e148fe47baf7"],
Cell[22856, 622, 296, 7, 62, InheritFromParent,ExpressionUUID->"9e373dfa-b2c4-4e11-99c3-283eca391e70"],
Cell[CellGroupData[{
Cell[23177, 633, 391, 6, 143, "Input",ExpressionUUID->"72029d45-3f29-40f7-a945-f7c9242e1779"],
Cell[23571, 641, 297, 4, 44, "Output",ExpressionUUID->"6a3b6370-9449-46d7-aa00-9315a7ce6bbf"]
}, Open  ]],
Cell[23883, 648, 180, 3, 62, "Input",ExpressionUUID->"ba164cf7-833d-49d3-a53c-f2d5365b99ba"],
Cell[CellGroupData[{
Cell[24088, 655, 226, 3, 62, "Input",ExpressionUUID->"addadf9f-404b-413e-ba52-45f26f4853b0"],
Cell[24317, 660, 11939, 289, 243, "Output",ExpressionUUID->"b085d098-2b99-4b9b-a85a-b63121d1986f"]
}, Open  ]],
Cell[36271, 952, 154, 3, 40, "Input",ExpressionUUID->"f9e9c9bd-0fd8-4d6b-a259-59f4cf33cfd2"],
Cell[36428, 957, 204, 4, 61, "Input",ExpressionUUID->"fd0d4016-709d-4541-a5d1-b60609b135d6"],
Cell[CellGroupData[{
Cell[36657, 965, 271, 5, 88, "Input",ExpressionUUID->"ba1e883e-a22f-402d-8ff7-dc7c81202293"],
Cell[36931, 972, 757, 16, 58, "Output",ExpressionUUID->"831d2d98-0a19-4218-874b-3cd64a975058"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37725, 993, 183, 2, 61, "Input",ExpressionUUID->"ac83d929-2448-4e18-a786-56e0a03bdf9e"],
Cell[37911, 997, 500, 11, 58, "Output",ExpressionUUID->"27e5a6e2-d118-4bd5-bec5-7dea7c4e3fbe"]
}, Open  ]],
Cell[38426, 1011, 270, 5, 61, "Input",ExpressionUUID->"8a959609-1da5-454b-88fa-544b35750c53"],
Cell[CellGroupData[{
Cell[38721, 1020, 812, 17, 132, "Input",ExpressionUUID->"5398e5ce-5433-424c-a1b0-6bf77876ba32"],
Cell[39536, 1039, 573, 13, 58, "Output",ExpressionUUID->"62f35b1d-c936-4cac-890d-c257564ef15d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40146, 1057, 904, 22, 105, "Input",ExpressionUUID->"93d02f34-1de4-44d5-b88d-6e9af8a21c75"],
Cell[41053, 1081, 678, 16, 58, "Output",ExpressionUUID->"f7afef8e-c965-4e71-9677-7a78e241f4c0"],
Cell[41734, 1099, 169, 2, 44, "Output",ExpressionUUID->"1bae644e-864e-4915-a465-41498f3bd059"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41940, 1106, 205, 4, 62, "Input",ExpressionUUID->"a2c06701-03a0-4b5c-9849-a18dc6b79550"],
Cell[42148, 1112, 291, 9, 62, "Output",ExpressionUUID->"548d5d17-dfcd-4283-9266-f5081950df6d"]
}, Open  ]],
Cell[42454, 1124, 526, 11, 112, "Input",ExpressionUUID->"657f5f79-3771-4b29-8e0c-8164e7f3fbfe"],
Cell[CellGroupData[{
Cell[43005, 1139, 366, 8, 88, "Text",ExpressionUUID->"5dbcd8a4-1e01-47c8-a9b4-d19f4328bc79"],
Cell[43374, 1149, 13633, 243, 322, "Output",ExpressionUUID->"187f8113-f2d4-4183-bc85-76f4392daa9d"]
}, Open  ]],
Cell[57022, 1395, 144, 2, 39, "Input",ExpressionUUID->"3c5467e4-63f1-4b27-a508-e0bf48aa8162"],
Cell[57169, 1399, 156, 3, 39, "Input",ExpressionUUID->"2cad8878-7722-4dd3-b181-5b0a862c74cc"],
Cell[CellGroupData[{
Cell[57350, 1406, 397, 10, 62, "Input",ExpressionUUID->"6f93b94e-181e-41db-b002-104ed48ddbcd"],
Cell[57750, 1418, 18939, 336, 324, "Output",ExpressionUUID->"9fa8c0f9-dac4-4652-82f3-48c68d0a77e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76726, 1759, 714, 18, 139, "Input",ExpressionUUID->"aad602e0-7859-46ff-921b-696a8d3d12f0"],
Cell[77443, 1779, 8632, 163, 332, "Output",ExpressionUUID->"aec69e4f-b34f-4b0f-886a-c2107af3342b"]
}, Open  ]],
Cell[86090, 1945, 154, 3, 39, "Input",ExpressionUUID->"3e82c79f-a9d3-46a8-99f1-045c6deb3238"],
Cell[CellGroupData[{
Cell[86269, 1952, 256, 5, 39, "Input",ExpressionUUID->"a8b54b3f-aa2f-4fdc-bed4-a571d5049566"],
Cell[86528, 1959, 153, 2, 44, "Output",ExpressionUUID->"a9a44db4-8873-406f-abb8-e9beff5a2b85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86718, 1966, 265, 5, 66, "Input",ExpressionUUID->"de1c35f3-c464-4316-a754-14acc0f377bf"],
Cell[86986, 1973, 154, 2, 44, "Output",ExpressionUUID->"6774364e-bac4-41ff-a1f5-fe7b7e58f17f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87177, 1980, 284, 5, 39, "Input",ExpressionUUID->"ea057ef9-c68d-40c1-8b25-8db6e170e85f"],
Cell[87464, 1987, 154, 2, 44, "Output",ExpressionUUID->"e8db7868-5e17-4fbe-beed-0148e7b995b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87655, 1994, 432, 12, 62, "Input",ExpressionUUID->"4977de80-d5e9-4f21-ab81-45133f12d395"],
Cell[88090, 2008, 337, 9, 44, "Output",ExpressionUUID->"10759147-db85-4cd2-bb5c-d510f87e1178"]
}, Open  ]],
Cell[88442, 2020, 154, 3, 39, "Input",ExpressionUUID->"022475fe-e21c-474e-b6de-0472c2e4b7b7"],
Cell[CellGroupData[{
Cell[88621, 2027, 399, 10, 62, "Input",ExpressionUUID->"5756b0df-2ae0-414b-8ddf-f4d7c0751829"],
Cell[89023, 2039, 337, 9, 44, "Output",ExpressionUUID->"5bc8034e-0cde-4368-b4cf-8f84db41e262"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89397, 2053, 401, 10, 62, "Input",ExpressionUUID->"d1b8313c-7948-472e-bfb1-d2e66040ae99"],
Cell[89801, 2065, 319, 9, 49, "Output",ExpressionUUID->"5b4d1090-e256-4100-92cf-bf570d62b3ce"]
}, Open  ]],
Cell[90135, 2077, 407, 11, 84, "Input",ExpressionUUID->"dc3938c5-0849-426b-9d7b-2611713d9d54"],
Cell[90545, 2090, 430, 13, 101, "Input",ExpressionUUID->"9550b0af-bfbf-4c93-8e98-5644953ec566"],
Cell[CellGroupData[{
Cell[91000, 2107, 447, 12, 91, "Input",ExpressionUUID->"e62bf9c9-1ae4-4509-946a-3cdc4ac64156"],
Cell[91450, 2121, 294, 8, 64, "Output",ExpressionUUID->"1a092261-1ee8-4c17-892b-a89ca994629d"]
}, Open  ]],
Cell[91759, 2132, 341, 9, 61, "Input",ExpressionUUID->"25d41bbc-6cf9-44a4-867c-16ef8f4c7dc1"],
Cell[92103, 2143, 323, 10, 40, InheritFromParent,ExpressionUUID->"cbe00c50-88a9-48fa-b9f3-1e18790c4156"],
Cell[CellGroupData[{
Cell[92451, 2157, 374, 10, 61, "Input",ExpressionUUID->"e524635e-be2c-44b6-9df4-611058ce2afe"],
Cell[92828, 2169, 196, 4, 45, "Output",ExpressionUUID->"828b7879-dbe1-4bc9-9006-43ac488ede2c"]
}, Open  ]],
Cell[93039, 2176, 216, 3, 61, "Input",ExpressionUUID->"cecb42d9-1ee8-427d-b121-ddb2acc3c565"],
Cell[93258, 2181, 667, 19, 61, "Input",ExpressionUUID->"a1c6a5dc-7957-402d-8ead-290e0d028589"],
Cell[93928, 2202, 384, 12, 65, InheritFromParent,ExpressionUUID->"219f35d3-eaee-465c-816f-be2fb4515042"],
Cell[94315, 2216, 803, 23, 88, "Input",ExpressionUUID->"a6679450-2064-4961-9ecb-2c9a98d5234d"],
Cell[95121, 2241, 386, 12, 65, InheritFromParent,ExpressionUUID->"2675709c-9e60-4a83-b987-6b01d8a0f8a8"],
Cell[95510, 2255, 669, 19, 61, "Input",ExpressionUUID->"26e66b04-ff91-494a-8ccd-40dd9e8a7654"],
Cell[CellGroupData[{
Cell[96204, 2278, 713, 23, 65, InheritFromParent,ExpressionUUID->"7a722afb-3718-4342-84df-45e33b272462"],
Cell[96920, 2303, 730, 15, 60, "Message",ExpressionUUID->"667072ba-bdc0-4af7-ab19-05e82a6f0d46"],
Cell[97653, 2320, 533, 13, 60, "Message",ExpressionUUID->"09dc8869-008b-45b9-a92a-814becccefa2"],
Cell[98189, 2335, 542, 12, 60, "Message",ExpressionUUID->"4aae6db7-5d8f-48e9-af2e-51e6a2d938af"]
}, Open  ]],
Cell[98746, 2350, 334, 8, 61, "Input",ExpressionUUID->"8e261140-19de-40d1-99db-049ac5d03306"],
Cell[99083, 2360, 467, 15, 65, InheritFromParent,ExpressionUUID->"7cb6f09a-5048-4981-b4ff-d6182385dd27"],
Cell[99553, 2377, 447, 12, 61, "Input",ExpressionUUID->"ee2e731e-162a-4eea-b477-d926adc4ccbe"],
Cell[100003, 2391, 511, 16, 40, InheritFromParent,ExpressionUUID->"1790ee16-6724-4bac-9b52-667dc7b543ae"],
Cell[100517, 2409, 390, 10, 61, "Input",ExpressionUUID->"951dd206-7904-4cab-abf7-161d2677f37f"],
Cell[100910, 2421, 245, 7, 40, InheritFromParent,ExpressionUUID->"5a731fe7-87d8-4a51-ae97-73b4d7644c18"],
Cell[CellGroupData[{
Cell[101180, 2432, 310, 7, 61, "Input",ExpressionUUID->"17386bfe-00aa-457c-943f-5c17dc19d7eb"],
Cell[101493, 2441, 612, 21, 45, "Output",ExpressionUUID->"2c72a4b6-763b-4040-aa25-10769d5ddb07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102142, 2467, 364, 9, 61, "Input",ExpressionUUID->"e6fbf733-836d-4f03-b012-8cbd3c813890"],
Cell[102509, 2478, 988, 28, 80, "Output",ExpressionUUID->"40cfd0ed-2ecf-4b49-b0ba-9893511cb3df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103534, 2511, 1548, 36, 108, "Input",ExpressionUUID->"193e6703-f1a9-4a70-b4e9-beb9f3e22458"],
Cell[105085, 2549, 5575, 110, 117, "Output",ExpressionUUID->"26827e00-0392-487c-9599-b6b4cfe8536b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110697, 2664, 387, 9, 88, "Input",ExpressionUUID->"c2035459-fb39-40bc-b5ef-8eb46dd2f47a"],
Cell[111087, 2675, 169, 2, 45, "Output",ExpressionUUID->"68f23170-4a84-4b2e-8449-ea63e1ad3905"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111293, 2682, 229, 4, 40, "Input",ExpressionUUID->"de9bc9f9-0707-478e-822b-ce049219d379"],
Cell[111525, 2688, 155, 2, 45, "Output",ExpressionUUID->"187bbad6-8d81-4bf4-8a86-102e67b98b4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111717, 2695, 268, 6, 61, "Input",ExpressionUUID->"e009b156-1f26-4894-88e9-e2113dce7e97"],
Cell[111988, 2703, 167, 2, 45, "Output",ExpressionUUID->"3d5a9659-b81d-4576-b3c7-f82aba514e1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112192, 2710, 203, 3, 40, "Input",ExpressionUUID->"ac3f7ebf-104c-471e-9b46-5453ec7dfd95"],
Cell[112398, 2715, 152, 2, 45, "Output",ExpressionUUID->"bfd2682a-8ecf-4a92-a51e-40e5ffd4ec14"]
}, Open  ]],
Cell[112565, 2720, 330, 8, 40, "Input",ExpressionUUID->"0eec145b-23f7-4317-bf39-0107a594cf94"],
Cell[CellGroupData[{
Cell[112920, 2732, 289, 6, 61, "Input",ExpressionUUID->"0e254f16-5429-4453-8e2d-012a639a4c36"],
Cell[113212, 2740, 207, 4, 45, "Output",ExpressionUUID->"a8e88e41-b3ae-4cb4-9468-ab01468de500"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113456, 2749, 259, 5, 61, "Input",ExpressionUUID->"97e9df96-b4d0-42c5-95bf-c755173d5fdd"],
Cell[113718, 2756, 205, 4, 45, "Output",ExpressionUUID->"8e833c51-e94a-4b07-babc-6ce63a76d40a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113960, 2765, 263, 5, 61, "Input",ExpressionUUID->"6d93541e-0507-4a07-8cb1-0951cda56997"],
Cell[114226, 2772, 206, 4, 44, "Output",ExpressionUUID->"55ddf4cc-8e2c-4ba2-9fd9-8c7c094c1493"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114469, 2781, 252, 6, 62, "Input",ExpressionUUID->"ccbc3f70-90a7-4f41-ad77-2d709b6f67b6"],
Cell[114724, 2789, 180, 2, 44, "Output",ExpressionUUID->"3953cc95-dd3e-4817-922c-d98151569b36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114941, 2796, 291, 5, 39, "Input",ExpressionUUID->"2c2c5ea0-3535-4c40-95dc-8d898cc29ca0"],
Cell[115235, 2803, 169, 2, 44, "Output",ExpressionUUID->"c801ecf4-6439-4f96-ac40-46cb62b2fc8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115441, 2810, 218, 3, 62, "Input",ExpressionUUID->"477e74fd-24e2-4741-b59b-7c634bba5f8d"],
Cell[115662, 2815, 163, 2, 44, "Output",ExpressionUUID->"b55ac80c-ca76-486c-8ea6-4010e4f44aaa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115862, 2822, 368, 7, 62, "Input",ExpressionUUID->"e06caa5f-8d0d-4f1e-bdbf-ec306eb464be"],
Cell[116233, 2831, 154, 2, 44, "Output",ExpressionUUID->"75c8e632-1b56-4af5-8ebd-2f9cce72c3d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116424, 2838, 205, 3, 39, "Input",ExpressionUUID->"0560ed31-7e50-41ca-bff1-e2f871fef41f"],
Cell[116632, 2843, 184, 3, 44, "Output",ExpressionUUID->"c979038e-69e6-4c1a-839a-a3721dd4692b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116853, 2851, 269, 5, 62, "Input",ExpressionUUID->"94971fef-e649-4abd-bcaa-fa3787814f34"],
Cell[117125, 2858, 158, 3, 44, "Output",ExpressionUUID->"bb11f1ff-151a-4cf5-8a63-bb3e9e9d5118"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117320, 2866, 278, 5, 62, "Input",ExpressionUUID->"e2de2e67-ba85-4604-859c-bfb169d62042"],
Cell[117601, 2873, 205, 4, 44, "Output",ExpressionUUID->"4560da00-0c6c-4b2f-a753-4913354db88d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117843, 2882, 227, 4, 62, "Input",ExpressionUUID->"269aab5c-5064-44c0-b7e2-fe95b402365f"],
Cell[118073, 2888, 158, 3, 44, "Output",ExpressionUUID->"7b706de2-7fb3-4fb8-be5e-c40e0d337f6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118268, 2896, 407, 9, 91, "Input",ExpressionUUID->"d82b1877-d898-4095-baed-03c5e231233d"],
Cell[118678, 2907, 386, 7, 44, "Output",ExpressionUUID->"1a07ab37-5ea3-4867-a2ec-efbe18187443"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119101, 2919, 707, 17, 145, "Input",ExpressionUUID->"0d397122-ff54-450b-b264-959104e7effa"],
Cell[119811, 2938, 199, 3, 45, "Output",ExpressionUUID->"4521bfeb-b9d0-4cf1-a0e6-a6f25a62c32c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120047, 2946, 324, 7, 61, "Input",ExpressionUUID->"2b9b843d-b291-437a-94a6-04ee77814768"],
Cell[120374, 2955, 179, 3, 45, "Output",ExpressionUUID->"08c8de41-27d7-4600-bac9-bd2eebe0ed71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120590, 2963, 291, 5, 40, "Input",ExpressionUUID->"2a4e3bb0-de52-4a01-85aa-0ca39e1a5010"],
Cell[120884, 2970, 179, 3, 45, "Output",ExpressionUUID->"02b6421d-3875-45cc-8136-398b3f50b8d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121100, 2978, 289, 7, 61, "Input",ExpressionUUID->"bfb112ab-ac04-452a-b24f-9c9bcddc1884"],
Cell[121392, 2987, 236, 7, 82, "Output",ExpressionUUID->"618072be-a900-4923-bc45-4e3c61d279d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121665, 2999, 337, 11, 85, "Input",ExpressionUUID->"35732628-fe57-4591-80cf-4bac2e7ffd77"],
Cell[122005, 3012, 9543, 178, 336, "Output",ExpressionUUID->"31746bb5-84da-4760-b879-32a22d803335"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131585, 3195, 235, 5, 61, "Input",ExpressionUUID->"f65636b3-7bbc-4084-905e-2746687b14a5"],
Cell[131823, 3202, 176, 4, 45, "Output",ExpressionUUID->"e8088e7a-ce06-4c40-a8f1-2817ac4fbd54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132036, 3211, 394, 11, 61, "Input",ExpressionUUID->"2036b965-eac5-4bc5-b89b-a2b99eb7763d"],
Cell[132433, 3224, 598, 23, 64, "Output",ExpressionUUID->"1f3ab7ef-ffbd-46d6-8e19-c2a162d1aba1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133068, 3252, 213, 3, 61, "Input",ExpressionUUID->"98d3a757-a59d-4fe3-ac29-0c52d8aaa7cc"],
Cell[133284, 3257, 18894, 427, 389, "Output",ExpressionUUID->"3ba61536-44c6-4c17-a035-975a8869fa94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152215, 3689, 428, 11, 61, "Input",ExpressionUUID->"28e1cd43-afe9-43aa-930d-53954c4e1362"],
Cell[152646, 3702, 1139, 35, 118, "Output",ExpressionUUID->"d4d5ba83-300e-4de6-af80-60135329c30c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153822, 3742, 245, 4, 91, "Input",ExpressionUUID->"1d56ebb2-a0da-48cf-8d6e-9d10622bfb6f"],
Cell[154070, 3748, 7412, 154, 162, "Output",ExpressionUUID->"cd2a2bd1-e372-47fb-8207-7c87e9e3f53b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161519, 3907, 220, 3, 61, "Input",ExpressionUUID->"a850215a-5229-44e4-bcf0-174ce1ef9518"],
Cell[161742, 3912, 19645, 438, 426, "Output",ExpressionUUID->"d4a558c2-5440-49ff-9db0-92811abb5541"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181424, 4355, 191, 3, 40, "Input",ExpressionUUID->"fc2f4406-8418-4e2e-990a-4e5520d25358"],
Cell[181618, 4360, 12128, 294, 243, "Output",ExpressionUUID->"7a6fb627-53a0-4336-a7b8-feaffc3e98e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193783, 4659, 229, 4, 68, "Input",ExpressionUUID->"e7bfbde0-cb1b-4088-9f6b-2e0a0815e8ce"],
Cell[194015, 4665, 6604, 159, 202, "Output",ExpressionUUID->"3a2cc8fc-cdc6-4644-9607-7096b755865c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200656, 4829, 268, 5, 61, "Input",ExpressionUUID->"863999d5-c7c6-451e-b415-95009c632196"],
Cell[200927, 4836, 442, 10, 32, "Message",ExpressionUUID->"b4d56e2e-cf15-416e-bddb-9446708bdb36"],
Cell[201372, 4848, 193, 3, 45, "Output",ExpressionUUID->"d4ddfe75-c617-4105-bbce-a9e909a80c09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201602, 4856, 251, 5, 62, "Input",ExpressionUUID->"bf58f57e-2f7f-4e85-b8bf-3ddf4c579175"],
Cell[201856, 4863, 363, 9, 51, "Message",ExpressionUUID->"8ebd9e62-3874-409f-9344-0c31f7804aaf"],
Cell[202222, 4874, 164, 2, 44, "Output",ExpressionUUID->"26df0d52-0abe-40ec-ab09-1696c7337bfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202423, 4881, 184, 2, 62, "Input",ExpressionUUID->"bff723f5-2ed7-45cb-b286-eb64b65f6823"],
Cell[202610, 4885, 187, 2, 44, "Output",ExpressionUUID->"cba2436f-6648-459d-ada3-8fb7f0de0256"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202834, 4892, 193, 2, 62, "Input",ExpressionUUID->"70581cd9-e339-471f-b0ca-4890d059984a"],
Cell[203030, 4896, 223, 3, 44, "Output",ExpressionUUID->"5014ee22-f50e-4dec-97f4-2cd553278232"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203290, 4904, 188, 2, 62, "Input",ExpressionUUID->"5dc00e41-9c5a-4b32-a3f5-729d1c7cdc82"],
Cell[203481, 4908, 199, 2, 44, "Output",ExpressionUUID->"0e401c7c-47c3-4dc9-b557-f936655b8a20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203717, 4915, 202, 3, 39, "Input",ExpressionUUID->"c7925af0-d36d-4a2f-a862-f758efd44965"],
Cell[203922, 4920, 3954, 98, 125, "Output",ExpressionUUID->"386f10ac-088f-4094-884d-9e6c327f0cda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207913, 5023, 198, 3, 39, "Input",ExpressionUUID->"351b6bcd-8be1-4123-b26d-1cb592f1ddc8"],
Cell[208114, 5028, 23056, 555, 784, "Output",ExpressionUUID->"48c71eda-b23a-4172-9871-944058890f9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231207, 5588, 195, 3, 40, "Input",ExpressionUUID->"307e09a0-4cec-4c9d-bd92-a1e3d7f6018d"],
Cell[231405, 5593, 12430, 299, 243, "Output",ExpressionUUID->"43af613d-0d99-4b4a-a105-a975230d5bed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243872, 5897, 260, 5, 61, "Input",ExpressionUUID->"21794c5b-242b-4aaf-8385-1f2fa674c8d5"],
Cell[244135, 5904, 352, 11, 45, "Output",ExpressionUUID->"a6b90e0e-10d7-44b0-b565-3dcc1c136c53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244524, 5920, 329, 8, 61, "Input",ExpressionUUID->"091effe7-2403-4cbc-a2e5-0c7683ef2714"],
Cell[244856, 5930, 216, 4, 45, "Output",ExpressionUUID->"231cc3dc-32e7-42c1-8aec-114cc977c6a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245109, 5939, 294, 6, 61, "Input",ExpressionUUID->"4d789fd9-64f7-46a0-bbf2-a22c7a976909"],
Cell[245406, 5947, 370, 11, 45, "Output",ExpressionUUID->"e722689c-728d-4d2a-99aa-dcda452fc2b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245813, 5963, 339, 6, 112, "Input",ExpressionUUID->"af0ef815-a923-4925-9105-6e072f658ee9"],
Cell[246155, 5971, 392, 11, 45, "Output",ExpressionUUID->"fdc4095f-a889-489b-a77d-cf6c8f37250c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246584, 5987, 211, 3, 61, "Input",ExpressionUUID->"e6f0f084-080c-417d-be33-8af034c74c68"],
Cell[246798, 5992, 192, 2, 45, "Output",ExpressionUUID->"7e0e1dc7-bf7b-4389-8635-567a71d82f3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247027, 5999, 154, 3, 61, "Input",ExpressionUUID->"c953088e-9b29-4093-9492-f14fe477a109"],
Cell[247184, 6004, 167, 2, 45, "Output",ExpressionUUID->"abe2787f-d8ac-47b7-a357-a74966538184"]
}, Open  ]],
Cell[247366, 6009, 156, 3, 40, "Input",ExpressionUUID->"2a1cf2ef-1ee7-4183-98ec-ffbd85b5acbd"],
Cell[247525, 6014, 153, 3, 40, "Input",ExpressionUUID->"589b1802-9c74-4a17-86e7-28dab17c8d1c"],
Cell[CellGroupData[{
Cell[247703, 6021, 171, 3, 61, "Input",ExpressionUUID->"784a9b76-298c-4c0c-bf51-ba403712af18"],
Cell[247877, 6026, 12191, 293, 279, "Output",ExpressionUUID->"2daf21c1-7926-4f3b-86d5-9fe502c9ae13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260105, 6324, 361, 8, 61, "Input",ExpressionUUID->"135d756c-2688-4340-b90f-84d6f272bb3d"],
Cell[260469, 6334, 216, 4, 45, "Output",ExpressionUUID->"96d88ba4-4212-4cb7-a88b-ee6471ebe0ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260722, 6343, 301, 6, 61, "Input",ExpressionUUID->"127ffcf5-3e55-4ec6-a16f-137c8b60d83a"],
Cell[261026, 6351, 256, 5, 45, "Output",ExpressionUUID->"26861819-07e3-4a36-961d-21d46bb23354"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261319, 6361, 212, 3, 61, "Input",ExpressionUUID->"78708d01-bd1f-47c8-97fb-0994320f9e3a"],
Cell[261534, 6366, 173, 3, 64, "Output",ExpressionUUID->"d0d109a8-e6cf-429c-af8c-ca3ccc06f0bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261744, 6374, 235, 4, 61, "Input",ExpressionUUID->"2ea2ea7b-e0f0-495d-a82c-df585d056b57"],
Cell[261982, 6380, 168, 2, 45, "Output",ExpressionUUID->"47c71b9f-d9e7-4424-bfc2-71597530b735"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262187, 6387, 208, 3, 61, "Input",ExpressionUUID->"9c025bfc-4930-4fb9-9b2c-c3caefdd49ea"],
Cell[262398, 6392, 179, 2, 45, "Output",ExpressionUUID->"cc2c04de-1be3-47a3-9706-7a852b4b85ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262614, 6399, 203, 3, 61, "Input",ExpressionUUID->"590e3ebe-aeb5-4b68-95a1-3d3a0c082a67"],
Cell[262820, 6404, 153, 2, 45, "Output",ExpressionUUID->"53154485-abcd-4e43-ab22-baca0623f459"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263010, 6411, 385, 10, 61, "Input",ExpressionUUID->"113aa206-4222-4d63-bcf2-d7ae2a6115c8"],
Cell[263398, 6423, 151, 2, 45, "Output",ExpressionUUID->"4f868276-91b1-487c-9f8c-766de517b2d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263586, 6430, 206, 3, 61, "Input",ExpressionUUID->"a76e4154-ccd1-41a9-98a2-d86016c46ad7"],
Cell[263795, 6435, 189, 2, 45, "Output",ExpressionUUID->"8e3438f1-eacc-410e-b459-10af4860abe0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264021, 6442, 214, 3, 61, "Input",ExpressionUUID->"ce438a7e-e24d-4595-96b2-087f2149b04b"],
Cell[264238, 6447, 167, 2, 45, "Output",ExpressionUUID->"f92497cc-ab25-4d4c-8137-0e59ad3480cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264442, 6454, 247, 4, 61, "Input",ExpressionUUID->"86c5bc1a-e427-4bba-afc5-6db933cf051d"],
Cell[264692, 6460, 168, 2, 45, "Output",ExpressionUUID->"60862a8a-a803-43ce-ba52-b18d055882a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264897, 6467, 219, 3, 61, "Input",ExpressionUUID->"8bc3f5f6-9ebc-4a45-99d2-3196338971fe"],
Cell[265119, 6472, 170, 2, 45, "Output",ExpressionUUID->"aa35ecbf-7e8f-4ae4-8442-68a59c7b15b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265326, 6479, 472, 11, 91, "Input",ExpressionUUID->"3119a145-7c3f-448d-8c01-cce1939355b8"],
Cell[265801, 6492, 167, 2, 45, "Output",ExpressionUUID->"38ca569a-b051-433b-a98c-d5b05d3282b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266005, 6499, 240, 4, 61, "Input",ExpressionUUID->"1f445fa9-198a-486f-abb8-19f2d5933f77"],
Cell[266248, 6505, 215, 2, 45, "Output",ExpressionUUID->"419a5762-c734-4c24-890b-90ccf745d557"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266500, 6512, 250, 4, 61, "Input",ExpressionUUID->"5118ffd3-5987-462b-bfef-2d8c1a635743"],
Cell[266753, 6518, 191, 2, 45, "Output",ExpressionUUID->"399cc04a-1661-41ce-b116-ede6fca0f515"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266981, 6525, 198, 3, 40, "Input",ExpressionUUID->"baf06674-7751-4e3b-b518-14b2886c6ffb"],
Cell[267182, 6530, 195, 2, 45, "Output",ExpressionUUID->"35958cbb-d9f4-45e6-81c7-fb255259f096"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267414, 6537, 223, 3, 61, "Input",ExpressionUUID->"da94fae2-9430-454f-a61c-b2c535ff2abc"],
Cell[267640, 6542, 271, 6, 45, "Output",ExpressionUUID->"4b4872a1-b41f-4242-b9eb-7e41e56b5de7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267948, 6553, 289, 7, 61, "Input",ExpressionUUID->"4e4ff942-b99a-400a-8ef3-17eadbfd940d"],
Cell[268240, 6562, 157, 2, 45, "Output",ExpressionUUID->"30df5ab7-d2b7-4608-a014-95ff50f4fba1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268434, 6569, 174, 3, 61, "Input",ExpressionUUID->"1c665bfd-4a23-4cdb-8e4d-75413e3ee750"],
Cell[268611, 6574, 299, 8, 45, "Output",ExpressionUUID->"ac9b23b7-e2e5-4fea-9b10-4749cfc6ce31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268947, 6587, 330, 7, 61, "Input",ExpressionUUID->"b916cb0b-6ac1-41b2-a407-6b311c9918f3"],
Cell[269280, 6596, 726, 18, 73, "Output",ExpressionUUID->"57c8810c-c52f-4e41-a37f-c3a9ea299688"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270043, 6619, 290, 6, 61, "Input",ExpressionUUID->"15cbc721-0e04-45ea-bb2c-10e1d5f7dcf8"],
Cell[270336, 6627, 724, 18, 73, "Output",ExpressionUUID->"9f38bcd8-5916-44c9-afb8-0a2b63bd967b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271097, 6650, 335, 9, 61, "Input",ExpressionUUID->"5ed35261-60bc-47aa-9d68-5ca017a8baee"],
Cell[271435, 6661, 802, 14, 100, "Output",ExpressionUUID->"b7565886-245b-46af-8cc2-3cc442afed03"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272274, 6680, 270, 5, 61, "Input",ExpressionUUID->"2f734f06-6582-4548-9cb6-11026deccbaa"],
Cell[272547, 6687, 253, 6, 45, "Output",ExpressionUUID->"761b6724-892c-4c9e-b9d7-a3ed365e8dc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272837, 6698, 357, 9, 61, "Input",ExpressionUUID->"acaff844-854d-4867-a71a-8ab81e7b35c9"],
Cell[273197, 6709, 154, 2, 45, "Output",ExpressionUUID->"0850224d-4a5e-4a4d-b5d9-b3397d978216"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273388, 6716, 361, 9, 61, "Input",ExpressionUUID->"eb645a27-76c4-4bc6-b4ab-8c8cccbe9476"],
Cell[273752, 6727, 156, 2, 45, "Output",ExpressionUUID->"3a499f2c-412c-4ea3-af4e-98af34bdd419"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273945, 6734, 202, 3, 61, "Input",ExpressionUUID->"3b88afbf-961d-48d6-8a7e-0eee7cfbb202"],
Cell[274150, 6739, 168, 3, 45, "Output",ExpressionUUID->"95fcafdc-088c-492f-a8b6-1113a45a8245"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274355, 6747, 319, 7, 61, "Input",ExpressionUUID->"f38bd71f-5070-4e9b-a697-40d86ecc551b"],
Cell[274677, 6756, 152, 2, 45, "Output",ExpressionUUID->"ed611274-9c65-4aba-801f-263e72d516c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274866, 6763, 235, 4, 61, "Input",ExpressionUUID->"e49f9621-7606-4b03-9216-7398f05dac2e"],
Cell[275104, 6769, 167, 2, 45, "Output",ExpressionUUID->"d3863e38-28b0-48af-97e3-a8c5b61b7f8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275308, 6776, 353, 8, 61, "Input",ExpressionUUID->"1e09e072-b97e-446a-b2c3-49febe941dc5"],
Cell[275664, 6786, 169, 2, 45, "Output",ExpressionUUID->"8daf4bd2-b6f8-476d-ba9f-fcc0a9cda122"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275870, 6793, 205, 3, 61, "Input",ExpressionUUID->"faabf98b-af34-4a24-aa2c-cbbeaadbeda2"],
Cell[276078, 6798, 149, 2, 45, "Output",ExpressionUUID->"0522ce34-7498-4408-aa6a-44e80610a1be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276264, 6805, 212, 3, 61, "Input",ExpressionUUID->"1652f140-4bbc-4acf-80ed-38f7483f86e8"],
Cell[276479, 6810, 159, 2, 45, "Output",ExpressionUUID->"6618580c-7d46-456d-85d9-65f58700a5c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276675, 6817, 477, 11, 91, "Input",ExpressionUUID->"cbec3df4-db8b-40a6-8d49-5189a54a7e71"],
Cell[277155, 6830, 149, 2, 45, "Output",ExpressionUUID->"69631fb1-6fae-4ead-a24e-278ca17b9e58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277341, 6837, 208, 3, 61, "Input",ExpressionUUID->"df3fbca0-65bf-44d4-853d-4e43c699c059"],
Cell[277552, 6842, 151, 2, 45, "Output",ExpressionUUID->"e47f12eb-04bf-4468-ac0c-cd985b06e151"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277740, 6849, 206, 3, 61, "Input",ExpressionUUID->"b49cbdcd-751d-41a4-934f-2a200118271b"],
Cell[277949, 6854, 151, 2, 45, "Output",ExpressionUUID->"e3692d4a-7c9c-428e-8b11-032b649a6fa6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278137, 6861, 222, 3, 61, "Input",ExpressionUUID->"91a75c0a-735c-409a-a75d-4beba799763a"],
Cell[278362, 6866, 149, 2, 45, "Output",ExpressionUUID->"05513d5e-5135-4f40-b5a9-3f7d1a829e6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278548, 6873, 226, 3, 61, "Input",ExpressionUUID->"ed54466c-0a6a-4596-9ec0-ac02304be0f9"],
Cell[278777, 6878, 151, 2, 44, "Output",ExpressionUUID->"6fb20a63-9639-4a63-a854-94243b999b7d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278965, 6885, 261, 5, 62, "Input",ExpressionUUID->"475b00a0-1109-41ae-971a-55e3c687cec4"],
Cell[279229, 6892, 187, 3, 62, "Output",ExpressionUUID->"77fb20a0-5903-4b94-9eaa-9fcc3a6cea3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279453, 6900, 272, 5, 62, "Input",ExpressionUUID->"5fd0695a-839f-40ec-ab6c-e9c0d0b91ddf"],
Cell[279728, 6907, 152, 2, 44, "Output",ExpressionUUID->"67e0a7a2-1585-419c-84d6-6352669cac6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279917, 6914, 684, 18, 117, "Input",ExpressionUUID->"56803d28-e24e-4d07-ad70-63a16b50bd97"],
Cell[280604, 6934, 295, 7, 49, "Output",ExpressionUUID->"0385da06-b505-4f17-93aa-8345bf1d084d"],
Cell[280902, 6943, 228, 4, 44, "Output",ExpressionUUID->"49e848c9-3121-400c-8919-7190234c3c8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281167, 6952, 425, 9, 62, "Input",ExpressionUUID->"84ae3304-a292-418a-8143-ab1719c4c5df"],
Cell[281595, 6963, 303, 5, 44, "Output",ExpressionUUID->"cd238934-8243-4400-a9a3-2df40030831e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281935, 6973, 312, 5, 66, "Input",ExpressionUUID->"61310af2-9a9a-4b06-933f-c4f5b9c711cc"],
Cell[282250, 6980, 235, 4, 32, "Echo",ExpressionUUID->"d70b2e64-4d7b-49f2-ae0b-b138412d1808"],
Cell[282488, 6986, 258, 3, 44, "Output",ExpressionUUID->"d87ecbe2-3d5c-4b35-99b0-d0acf657b0a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282783, 6994, 527, 11, 91, "Input",ExpressionUUID->"56cbf116-219c-4f80-b727-daba3e16bb07"],
Cell[283313, 7007, 512, 11, 44, "Output",ExpressionUUID->"db3f77be-5f83-45af-9d79-b76c71530f78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283862, 7023, 200, 3, 62, "Input",ExpressionUUID->"5d0502af-7bdc-4bfd-adfb-0c28c61d2262"],
Cell[284065, 7028, 152, 2, 44, "Output",ExpressionUUID->"8e6c52bf-e9e3-4191-a2eb-5cc292d199ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284254, 7035, 299, 6, 62, "Input",ExpressionUUID->"0ae68c58-bcf6-490b-822b-def93c45153e"],
Cell[284556, 7043, 540, 9, 73, "Output",ExpressionUUID->"633f0106-3800-488b-b121-86d46a975ceb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285133, 7057, 309, 7, 61, "Input",ExpressionUUID->"e10fafb0-356c-4110-aea1-885d117bc41b"],
Cell[285445, 7066, 259, 5, 45, "Output",ExpressionUUID->"6b6c8126-2b93-43d1-b59d-83b1307a58a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285741, 7076, 394, 10, 61, "Input",ExpressionUUID->"edb543df-74de-418b-aa93-5d51d874cbf1"],
Cell[286138, 7088, 521, 15, 45, "Output",ExpressionUUID->"c09789e5-ee1a-4ac3-876c-fac43897a86a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286696, 7108, 457, 11, 61, "Input",ExpressionUUID->"73a6216a-4ae4-4487-b6a9-5a329defa2e3"],
Cell[287156, 7121, 1673, 45, 124, "Output",ExpressionUUID->"164c0af0-eb3d-4f33-b44a-b5bbf52dd815"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288866, 7171, 416, 11, 62, "Input",ExpressionUUID->"252e40a1-2eb9-4c12-9926-44a21fa0976e"],
Cell[289285, 7184, 358, 10, 63, "Output",ExpressionUUID->"f4cd1db4-020c-44f1-94b1-e24ce002ce4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289680, 7199, 419, 11, 62, "Input",ExpressionUUID->"6321ae32-64a5-49ef-afbf-92e0ad8bb018"],
Cell[290102, 7212, 582, 18, 81, "Output",ExpressionUUID->"7b5ed0d9-4a30-4f35-ba75-efbae6fc0f81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290721, 7235, 397, 10, 62, "Input",ExpressionUUID->"3a770e57-09f3-4e56-99d8-8dbe96edce2d"],
Cell[291121, 7247, 654, 21, 44, "Output",ExpressionUUID->"d23a2738-1e61-401b-b4c8-1fe77226e460"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291812, 7273, 439, 12, 62, "Input",ExpressionUUID->"d474bc4a-091f-4a0a-99d7-29f258ff41db"],
Cell[292254, 7287, 2762, 85, 156, "Output",ExpressionUUID->"6adbba34-c37d-4f03-870c-dd02cfe421a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295053, 7377, 414, 11, 62, "Input",ExpressionUUID->"df3755b2-2f79-4511-9d24-d9524345a410"],
Cell[295470, 7390, 424, 13, 44, "Output",ExpressionUUID->"005ffc0e-3215-48fa-9f74-9ad6aa829496"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295931, 7408, 456, 10, 119, "Input",ExpressionUUID->"5e61e155-de60-48ff-b3fa-f738421f1ab5"],
Cell[296390, 7420, 151, 2, 44, "Output",ExpressionUUID->"c778fcab-0635-4fb8-a394-35147ea7cadc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296578, 7427, 483, 11, 117, "Input",ExpressionUUID->"28af21e4-0cc7-479e-a417-d24d1fdb334b"],
Cell[297064, 7440, 166, 3, 45, "Output",ExpressionUUID->"af7be722-df69-4903-8595-7fee9fc9a151"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297267, 7448, 441, 10, 68, "Input",ExpressionUUID->"b50ba649-6740-4e8b-b5a4-0bc5853a0a3f"],
Cell[297711, 7460, 166, 3, 45, "Output",ExpressionUUID->"e3516a5a-cb0a-440f-a2f7-a885ade2ddbd"]
}, Open  ]],
Cell[297892, 7466, 384, 10, 61, "Input",ExpressionUUID->"57f12e49-c28f-465e-afe0-f324820d9189"],
Cell[298279, 7478, 341, 9, 40, InheritFromParent,ExpressionUUID->"ee561616-f3e3-4965-9aef-0083df037de7"],
Cell[CellGroupData[{
Cell[298645, 7491, 373, 9, 61, "Input",ExpressionUUID->"50d9eb17-5596-4953-9cd5-ab0a2a3bbf46"],
Cell[299021, 7502, 862, 28, 91, "Output",ExpressionUUID->"69ab3a2a-ad19-4476-a0ca-05ccd7de5227"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299920, 7535, 309, 7, 61, "Input",ExpressionUUID->"645cb522-9483-49c3-8fd0-8b21be93c790"],
Cell[300232, 7544, 543, 17, 67, "Output",ExpressionUUID->"15e31f83-d940-400b-a734-5dac9585941d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300812, 7566, 238, 4, 61, "Input",ExpressionUUID->"c14ba3eb-a807-4f65-be91-379646fdfef6"],
Cell[301053, 7572, 249, 5, 45, "Output",ExpressionUUID->"86e917c0-7807-43a6-953a-c72d4acca901"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301339, 7582, 291, 6, 61, "Input",ExpressionUUID->"afed55df-8b0d-4e71-911d-347f006cb5be"],
Cell[301633, 7590, 559, 13, 45, "Output",ExpressionUUID->"edd4e00b-e409-4e78-8339-90152f42e501"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302229, 7608, 327, 7, 62, "Input",ExpressionUUID->"48c784a7-e430-422a-8999-e7ce78de4ee0"],
Cell[302559, 7617, 760, 21, 126, "Output",ExpressionUUID->"62451cc1-00e0-488e-a35b-fe535eab0eb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303356, 7643, 494, 13, 62, "Input",ExpressionUUID->"76d7cf3d-496c-4afe-a59b-eff433377666"],
Cell[303853, 7658, 8766, 182, 214, "Output",ExpressionUUID->"1503b56c-a8f4-4c9f-a942-26cc216cc267"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312656, 7845, 208, 3, 62, "Input",ExpressionUUID->"906c2b85-c64e-48e5-afff-110b1c727c76"],
Cell[312867, 7850, 690, 21, 81, "Output",ExpressionUUID->"7e5c86bf-11ee-41b7-b172-ce5568467e1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313594, 7876, 764, 22, 117, "Input",ExpressionUUID->"6a79d44e-351e-4ac9-8c14-205471537d4a"],
Cell[314361, 7900, 9565, 203, 92, "Output",ExpressionUUID->"84e72bfa-4263-4b22-b61d-c238752446f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323963, 8108, 212, 4, 62, "Input",ExpressionUUID->"e87dd7db-28ed-4c2e-86ee-e8db9287dabc"],
Cell[324178, 8114, 842, 25, 126, "Output",ExpressionUUID->"c188a319-1b1c-4f3b-88b5-668c8b61e4cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325057, 8144, 218, 4, 61, "Input",ExpressionUUID->"2ef74f46-d624-4283-a601-c9ffef667802"],
Cell[325278, 8150, 529, 14, 45, "Output",ExpressionUUID->"179d9cea-3f50-493e-97d3-2c1fba277f8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325844, 8169, 210, 4, 61, "Input",ExpressionUUID->"32fe38aa-4952-4459-bf2f-612145f491a5"],
Cell[326057, 8175, 158, 3, 45, "Output",ExpressionUUID->"2efa6c74-587f-4c46-a98d-5c7626402c35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326252, 8183, 408, 10, 40, "Input",ExpressionUUID->"9668ab08-39c3-4728-ab00-04073c1aaa01"],
Cell[326663, 8195, 383, 10, 45, "Output",ExpressionUUID->"58674de5-e40b-40e7-9063-35c91cecb428"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327083, 8210, 454, 12, 61, "Input",ExpressionUUID->"5f59d14b-6460-4318-94ce-1fc3c53c8818"],
Cell[327540, 8224, 388, 11, 45, "Output",ExpressionUUID->"97cd9e5b-638c-488e-9b08-94af7c07d118"]
}, Open  ]],
Cell[327943, 8238, 521, 14, 61, "Input",ExpressionUUID->"893dddbe-e27a-4ce4-a4b0-dde8603594a8"],
Cell[CellGroupData[{
Cell[328489, 8256, 212, 4, 61, "Input",ExpressionUUID->"e374cc27-1722-4048-b36a-048610027c7e"],
Cell[328704, 8262, 153, 3, 45, "Output",ExpressionUUID->"c7a013f3-7b8b-464a-b186-5335b73612e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328894, 8270, 216, 4, 61, "Input",ExpressionUUID->"2a57e0cc-50b6-4694-abdd-e1473b44e0ec"],
Cell[329113, 8276, 198, 5, 45, "Output",ExpressionUUID->"16f25dcf-2a7a-418c-9dd6-9ca8aa5bc08e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329348, 8286, 252, 5, 40, "Input",ExpressionUUID->"2cd279b3-272d-4e50-9f09-4c0f6f04d4c3"],
Cell[329603, 8293, 205, 4, 44, "Output",ExpressionUUID->"ec06a113-7063-4b59-a90a-6ac762d3e729"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329845, 8302, 416, 10, 62, "Input",ExpressionUUID->"1827379f-4e43-45dd-ac58-17a591656f8e"],
Cell[CellGroupData[{
Cell[330286, 8316, 348, 8, 29, "Print",ExpressionUUID->"8509e96c-8e70-4924-b046-35e3eb7a05dc"],
Cell[330637, 8326, 275, 6, 55, "Print",ExpressionUUID->"86e92db2-80aa-4bc7-8ae6-cd264551dca4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[330961, 8338, 184, 4, 39, "Input",ExpressionUUID->"eb3c69bd-48f0-4be3-8391-386206e7eb78"],
Cell[331148, 8344, 205, 4, 44, "Output",ExpressionUUID->"a4409327-8222-4d94-9ec0-cb3e9de23172"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331390, 8353, 207, 3, 62, "Input",ExpressionUUID->"760af5ba-fb8c-4598-94fd-6e364705c0f2"],
Cell[331600, 8358, 672, 22, 104, "Output",ExpressionUUID->"af495c23-f6c9-41a6-80f7-0dd5923e53d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332309, 8385, 346, 9, 62, "Input",ExpressionUUID->"cd074b0c-52ad-47ef-8728-c44161d78271"],
Cell[332658, 8396, 210, 4, 29, "Print",ExpressionUUID->"cca1d426-48e1-445b-aa86-dc5e4a9600a9"]
}, Open  ]],
Cell[332883, 8403, 156, 3, 39, InheritFromParent,ExpressionUUID->"e6dbfd10-4c5e-4fee-90d2-529350867eaf"],
Cell[CellGroupData[{
Cell[333064, 8410, 379, 10, 62, "Input",ExpressionUUID->"b51f9d86-a7cb-4f40-9e12-3f94c5e7c41f"],
Cell[333446, 8422, 629, 19, 81, "Output",ExpressionUUID->"1439c1bb-e995-4b93-9af0-71241d646d62"]
}, Open  ]],
Cell[334090, 8444, 170, 2, 39, "Input",ExpressionUUID->"c13b75a4-0d5a-45f4-8990-c2fe6a692e5c"],
Cell[CellGroupData[{
Cell[334285, 8450, 491, 13, 62, "Input",ExpressionUUID->"4cce0e20-b6ff-4197-8de6-329210bef2b6"],
Cell[334779, 8465, 652, 20, 104, "Output",ExpressionUUID->"5e18f7e5-337b-4956-a88c-1c94f6b5d1d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335468, 8490, 268, 4, 62, InheritFromParent,ExpressionUUID->"d2545b2c-d272-4714-9be2-51d0b233c9f1"],
Cell[335739, 8496, 12752, 307, 266, "Output",ExpressionUUID->"aaaf5008-d252-4119-ba1b-8a2d8017222f"]
}, Open  ]],
Cell[348506, 8806, 160, 3, 79, "Text",ExpressionUUID->"6ec3e0cf-86d7-471c-94e8-3dca60586fb1"],
Cell[348669, 8811, 319, 7, 62, "Input",ExpressionUUID->"32638d38-f3d0-478d-af81-2fd99c784a99"],
Cell[CellGroupData[{
Cell[349013, 8822, 374, 9, 62, "Input",ExpressionUUID->"8a6285d2-f38b-4bbe-b519-328749bb4e1b"],
Cell[349390, 8833, 218, 4, 44, "Output",ExpressionUUID->"39a08630-8cf1-4b8b-8963-d1c96f863218"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349645, 8842, 277, 5, 62, "Input",ExpressionUUID->"7b05bc12-9b4f-4c52-a20e-39e8113ed9ba"],
Cell[349925, 8849, 304, 6, 44, "Output",ExpressionUUID->"b93e3624-1ee0-4c1a-ba05-3616e7cc7f1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350266, 8860, 331, 7, 62, "Input",ExpressionUUID->"a24ddf28-2b04-4007-9650-e8cb01c8284a"],
Cell[350600, 8869, 292, 6, 44, "Output",ExpressionUUID->"d05d03b7-f6b8-4368-b80f-f603ff2e32ef"]
}, Open  ]],
Cell[350907, 8878, 154, 3, 39, "Input",ExpressionUUID->"d1341abd-0c77-4b11-b809-97420e76d3d2"],
Cell[CellGroupData[{
Cell[351086, 8885, 219, 3, 62, "Input",ExpressionUUID->"5bfa9631-b553-40c0-bf7f-b93c366908c6"],
Cell[351308, 8890, 27523, 505, 727, "Output",ExpressionUUID->"3f140215-aff9-4dfc-8ab6-2a316fed6950"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378868, 9400, 343, 7, 62, "Input",ExpressionUUID->"c5cfcf46-1972-4d49-90cd-454179ebbc87"],
Cell[379214, 9409, 459, 12, 44, "Output",ExpressionUUID->"766e6bef-0be5-4143-94c3-c11f1d42aa9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379710, 9426, 700, 19, 112, "Input",ExpressionUUID->"b4bf0550-fb6c-4a97-9ca6-bcdaa4e15474"],
Cell[380413, 9447, 4145, 109, 219, "Output",ExpressionUUID->"93aa4ed9-4f12-4d54-b1e3-b5f068709eb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384595, 9561, 325, 7, 62, "Input",ExpressionUUID->"0b6b4ed0-6d81-4fe6-86c8-53c47c2d52da"],
Cell[384923, 9570, 1619, 37, 124, "Output",ExpressionUUID->"21d4cf9a-6fc7-4873-8abf-1ac2e9a4ba8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386579, 9612, 309, 7, 62, "Input",ExpressionUUID->"4ebb66e0-0ff1-4c0c-9306-14df57b7046c"],
Cell[386891, 9621, 268, 5, 44, "Output",ExpressionUUID->"6dddda7d-ccfb-497a-84b8-b18e22d09c6f"]
}, Open  ]],
Cell[387174, 9629, 8560, 145, 285, "Input",ExpressionUUID->"b42b8ca5-5f3c-4a5d-89d8-2321be5f5036"],
Cell[395737, 9776, 154, 3, 39, InheritFromParent,ExpressionUUID->"7c83d2cc-b3a8-49ef-9406-cf09ea562ce5"],
Cell[395894, 9781, 154, 3, 39, InheritFromParent,ExpressionUUID->"2cbf2e65-a3e5-4a8a-b039-0155732a27da"],
Cell[396051, 9786, 397, 12, 62, "Input",ExpressionUUID->"10a2341f-f2fa-49c9-baf8-ed521bc7adaa"],
Cell[396451, 9800, 154, 3, 39, "Input",ExpressionUUID->"158ce869-e5fb-4aa5-bdaa-a2d637f5240b"],
Cell[CellGroupData[{
Cell[396630, 9807, 361, 9, 62, InheritFromParent,ExpressionUUID->"67a3d5b1-cd94-4529-95e5-6fbe4218515e"],
Cell[396994, 9818, 253, 6, 44, "Output",ExpressionUUID->"098bcd27-f798-4442-9396-2e8e1baba477"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397284, 9829, 335, 8, 62, "Input",ExpressionUUID->"2c38390b-23f7-4db1-a5b0-cd97fdc7f976"],
Cell[397622, 9839, 239, 5, 54, "Output",ExpressionUUID->"7c8c760b-4fa4-4946-8db9-494fd6578095"]
}, Open  ]],
Cell[397876, 9847, 510, 13, 39, "Input",ExpressionUUID->"0d608651-a1b8-4357-a3b7-a50890860f7b"],
Cell[CellGroupData[{
Cell[398411, 9864, 212, 3, 62, "Input",ExpressionUUID->"aa6f1a90-cb86-407f-9d60-132560af6041"],
Cell[398626, 9869, 658, 19, 105, "Output",ExpressionUUID->"51bc3be9-8500-44ff-b73f-8d9ebc042917"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399321, 9893, 566, 15, 141, "Input",ExpressionUUID->"a37af675-5740-4004-be0d-dec626fc29e3"],
Cell[399890, 9910, 1290, 40, 129, "Output",ExpressionUUID->"3da90ecc-3feb-4f02-b94b-750c7ef5b596"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401217, 9955, 670, 18, 112, "Input",ExpressionUUID->"b2624674-dcf9-4a90-8847-da8d3cf6f22d"],
Cell[401890, 9975, 733, 20, 81, "Output",ExpressionUUID->"4baafa59-d055-4a24-aed5-3e0bab17499e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402660, 10000, 404, 8, 112, "Input",ExpressionUUID->"5dca44f4-f619-4ea5-bfbb-8509c2803213"],
Cell[403067, 10010, 801, 27, 263, "Output",ExpressionUUID->"1190002b-804a-48b6-ab1f-bd302eaa2fe1"]
}, Open  ]],
Cell[403883, 10040, 152, 3, 39, InheritFromParent,ExpressionUUID->"4cd75308-a8ad-4a6d-bab2-e1ae4298d451"],
Cell[404038, 10045, 152, 3, 39, "Input",ExpressionUUID->"aabd2a0a-a6b5-42b9-b01f-79baa694e215"],
Cell[CellGroupData[{
Cell[404215, 10052, 1022, 29, 169, "Input",ExpressionUUID->"7d3d23a5-8522-4670-98ec-569f666568b9"],
Cell[405240, 10083, 16923, 318, 254, "Output",ExpressionUUID->"04669f4f-8d06-4fc5-84af-221c275845e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422200, 10406, 243, 4, 62, "Input",ExpressionUUID->"305d7b19-4a70-4bf4-956e-0b3607764780"],
Cell[422446, 10412, 763, 15, 115, "Output",ExpressionUUID->"ff660842-a8eb-48d1-889f-db5508463d7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423246, 10432, 351, 7, 168, "Input",ExpressionUUID->"860e6c56-63e4-4bc8-93a4-8d16e3265172"],
Cell[423600, 10441, 184, 5, 62, "Output",ExpressionUUID->"1b645a20-1e71-49ca-9663-010326aba66f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423821, 10451, 243, 4, 62, "Input",ExpressionUUID->"81ee4e67-5e63-494e-ac95-8ec8d763bd3d"],
Cell[424067, 10457, 843, 16, 115, "Output",ExpressionUUID->"50bf6e1e-7217-402f-a20c-9b06951b803e"],
Cell[424913, 10475, 957, 19, 216, "Message",ExpressionUUID->"778505ac-77ad-4d8e-8667-a52501d0b9a9"],
Cell[425873, 10496, 882, 17, 111, "Message",ExpressionUUID->"70b11de0-3e79-4248-a8da-2dc56c15979b"],
Cell[426758, 10515, 889, 17, 137, "Message",ExpressionUUID->"9b1f0680-8095-49f7-b3bb-fb6ec90c725f"],
Cell[427650, 10534, 372, 10, 31, "Message",ExpressionUUID->"0194d155-2248-4e18-add1-3741c5a8f22e"]
}, Open  ]],
Cell[428037, 10547, 154, 3, 39, InheritFromParent,ExpressionUUID->"2bd892a0-0911-4988-8e17-813cd4811d7a"],
Cell[CellGroupData[{
Cell[428216, 10554, 410, 9, 62, "Input",ExpressionUUID->"056805eb-a88a-4ceb-b1cd-37cc490c73c9"],
Cell[428629, 10565, 11461, 223, 356, "Output",ExpressionUUID->"6e71ea1f-216d-400d-834b-3aee816c3468"]
}, Open  ]],
Cell[CellGroupData[{
Cell[440127, 10793, 521, 13, 112, "Input",ExpressionUUID->"dfab2be9-2e46-4e0e-8122-6f655be36901"],
Cell[440651, 10808, 8873, 174, 385, "Output",ExpressionUUID->"e7cbcf1e-f6d1-4265-9c92-4509e9f6bc66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[449561, 10987, 432, 11, 62, "Input",ExpressionUUID->"b65e1fd1-7285-41bb-99d8-9e0db5feb61d"],
Cell[449996, 11000, 3331, 74, 336, "Output",ExpressionUUID->"1e089cb1-f55b-4d94-80a2-9c4d0a3e878c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[453364, 11079, 938, 25, 141, "Input",ExpressionUUID->"0890c72e-fec9-4933-a5a1-e60f3365b7d9"],
Cell[454305, 11106, 20812, 377, 281, "Output",ExpressionUUID->"3d17b101-3ddd-445c-9fbd-825c2055bcd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475154, 11488, 390, 9, 62, "Input",ExpressionUUID->"72de6922-4491-4185-9e11-756759acca2a"],
Cell[475547, 11499, 1850, 46, 327, "Output",ExpressionUUID->"37e2df1a-3d30-41a3-bb9d-ca3f557fd935"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477434, 11550, 691, 19, 189, "Input",ExpressionUUID->"8a8ac251-9af6-4414-94d4-928741262055"],
Cell[478128, 11571, 1558, 40, 343, "Output",ExpressionUUID->"fb59eb2c-7470-4a4e-a5d0-0b937b789a56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479723, 11616, 274, 5, 62, "Input",ExpressionUUID->"3ea51ee0-898d-4c38-8623-7710f967c2c5"],
Cell[480000, 11623, 2427, 57, 343, "Output",ExpressionUUID->"05249ac8-6e22-4305-8a72-b7d1932de9b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[482464, 11685, 934, 25, 163, "Input",ExpressionUUID->"ee20c4ae-bc6f-4bb7-a20c-44d5f2fc3250"],
Cell[483401, 11712, 4609, 107, 322, "Output",ExpressionUUID->"e93c3dff-25a6-467c-99e0-d8fa1efab7c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488047, 11824, 414, 10, 62, "Input",ExpressionUUID->"5d44abe7-760d-4d3e-b834-4cb9d7f01a3e"],
Cell[488464, 11836, 7818, 150, 207, "Output",ExpressionUUID->"9a0c9d73-de91-41e9-abf9-485b0d6776b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[496319, 11991, 452, 11, 62, "Input",ExpressionUUID->"0bc8f8c1-3293-4b53-8e58-e8329fc9a655"],
Cell[496774, 12004, 2150, 54, 341, "Output",ExpressionUUID->"d5eac337-9d9a-43e5-a22a-d2997c8a49e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[498961, 12063, 1096, 29, 214, "Input",ExpressionUUID->"13d28d35-8bd7-40eb-b45d-98882f8288ed"],
Cell[500060, 12094, 16316, 290, 329, "Output",ExpressionUUID->"6f794f64-782e-41cf-81e6-3612344c1170"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516413, 12389, 686, 17, 163, "Input",ExpressionUUID->"a452c4cd-faae-414d-bddc-551183a421f5"],
Cell[517102, 12408, 26491, 457, 322, "Output",ExpressionUUID->"2dfb812f-ccb8-46bf-a691-e2f04166f53b"]
}, Open  ]],
Cell[543608, 12868, 2778, 75, 646, "Input",ExpressionUUID->"99402fad-4f5a-4688-9a4a-e1db7b127c26"],
Cell[CellGroupData[{
Cell[546411, 12947, 134, 3, 39, "Input",ExpressionUUID->"906e9e83-2596-4233-bace-94d34b908d69"],
Cell[546548, 12952, 2754, 66, 353, "Output",ExpressionUUID->"20d742e3-3252-47b9-8634-70952b9d79bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549339, 13023, 129, 2, 39, "Input",ExpressionUUID->"cf3b44fe-5d08-4cbe-a583-46dd7e78e961"],
Cell[549471, 13027, 2747, 65, 353, "Output",ExpressionUUID->"eafa2a12-c09f-4f33-abf5-07e3d8da2bb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552255, 13097, 832, 21, 214, "Input",ExpressionUUID->"7c48ed10-ab33-4a6b-8939-79eb4c0bdc2b"],
Cell[553090, 13120, 194152, 2913, 592, "Output",ExpressionUUID->"6b5b6538-7c72-4ee9-aea2-260b2455a945"]
}, Open  ]],
Cell[CellGroupData[{
Cell[747279, 16038, 882, 22, 214, "Input",ExpressionUUID->"f7bb0216-b41b-4232-bd0d-dc78da4724a6"],
Cell[748164, 16062, 194101, 2913, 592, "Output",ExpressionUUID->"255af3b2-a15e-4061-bd15-3f0aee037ead"]
}, Open  ]],
Cell[CellGroupData[{
Cell[942302, 18980, 231, 4, 62, "Input",ExpressionUUID->"ec9daecf-93d4-4bc7-beb0-72060a2cbda1"],
Cell[942536, 18986, 12422, 298, 237, "Output",ExpressionUUID->"9b79fa7c-8bd3-4943-9fa7-bd9661ae348c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[954995, 19289, 398, 10, 62, "Input",ExpressionUUID->"675b2645-4fa3-40d0-b0fb-b02379fd6b2a"],
Cell[955396, 19301, 5680, 115, 334, "Output",ExpressionUUID->"bf13439f-7c08-44e2-9a29-bf128b7fb1d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[961113, 19421, 605, 17, 112, "Input",ExpressionUUID->"d741eb2c-bec4-4139-86bd-cc6b80779da3"],
Cell[961721, 19440, 407244, 6721, 467, "Output",ExpressionUUID->"0c7ba6be-6acf-44d8-9fd4-8569c43f265e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1369002, 26166, 858, 24, 163, "Input",ExpressionUUID->"fe13a84a-4663-48d0-b81c-ffd36b4b630b"],
Cell[1369863, 26192, 192846, 3220, 362, "Output",ExpressionUUID->"b19cf301-1ef8-4d50-9f78-4880fe8ada82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1562746, 29417, 1029, 30, 214, "Input",ExpressionUUID->"15e2e3ec-9033-4e14-8bbc-0bc22ca79448"],
Cell[1563778, 29449, 151771, 3370, 288, "Output",ExpressionUUID->"e93b1e91-1d93-4f6f-90f5-931c3bbe53fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1715586, 32824, 2165, 51, 620, "Input",ExpressionUUID->"8b34fb93-f2b8-4f3b-b218-ba24948b8ea5"],
Cell[1717754, 32877, 79821, 1495, 340, "Output",ExpressionUUID->"4a632009-dc99-40cb-b959-a9d7a2d999ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1797612, 34377, 660, 18, 112, "Input",ExpressionUUID->"e3bcf7cf-06ca-4c31-b198-2b88eca7bd87"],
Cell[1798275, 34397, 49081, 831, 536, "Output",ExpressionUUID->"5ffd9e35-c7f6-44e0-a5b3-f6de1b5850aa"]
}, Open  ]],
Cell[1847371, 35231, 259, 6, 40, "Input",ExpressionUUID->"1df53046-e864-4ddd-8749-f322595a1642"],
Cell[1847633, 35239, 407, 9, 40, "Input",ExpressionUUID->"3756326e-a709-4a56-865a-761f1556e6b8"]
}
]
*)

